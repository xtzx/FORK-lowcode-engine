/**
 * @Author  : zhouming
 * @Date    : 2025-09-06 17:59:19
 * @页面名称    :
 * @页面描述    :
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["AliLowCodeEngine"] = factory();
	else
		root["AliLowCodeEngine"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 65);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return __extends; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __assign; });
/* unused harmony export __rest */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __decorate; });
/* unused harmony export __param */
/* unused harmony export __esDecorate */
/* unused harmony export __runInitializers */
/* unused harmony export __propKey */
/* unused harmony export __setFunctionName */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return __metadata; });
/* unused harmony export __awaiter */
/* unused harmony export __generator */
/* unused harmony export __createBinding */
/* unused harmony export __exportStar */
/* unused harmony export __values */
/* unused harmony export __read */
/* unused harmony export __spread */
/* unused harmony export __spreadArrays */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return __spreadArray; });
/* unused harmony export __await */
/* unused harmony export __asyncGenerator */
/* unused harmony export __asyncDelegator */
/* unused harmony export __asyncValues */
/* unused harmony export __makeTemplateObject */
/* unused harmony export __importStar */
/* unused harmony export __importDefault */
/* unused harmony export __classPrivateFieldGet */
/* unused harmony export __classPrivateFieldSet */
/* unused harmony export __classPrivateFieldIn */
/* unused harmony export __addDisposableResource */
/* unused harmony export __disposeResources */
/* unused harmony export __rewriteRelativeImportExtension */
/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise, SuppressedError, Symbol, Iterator */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    if (typeof b !== "function" && b !== null)
        throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};

function __runInitializers(thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};

function __propKey(x) {
    return typeof x === "symbol" ? x : "".concat(x);
};

function __setFunctionName(f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

var __createBinding = Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});

function __exportStar(m, o) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

/** @deprecated */
function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

/** @deprecated */
function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
}

function __spreadArray(to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
}

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = Object.create((typeof AsyncIterator === "function" ? AsyncIterator : Object).prototype), verb("next"), verb("throw"), verb("return", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;
    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }
    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

var __setModuleDefault = Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
};

var ownKeys = function(o) {
    ownKeys = Object.getOwnPropertyNames || function (o) {
        var ar = [];
        for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
        return ar;
    };
    return ownKeys(o);
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
    __setModuleDefault(result, mod);
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
}

function __classPrivateFieldSet(receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
}

function __classPrivateFieldIn(state, receiver) {
    if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function")) throw new TypeError("Cannot use 'in' operator on non-object");
    return typeof state === "function" ? receiver === state : state.has(receiver);
}

function __addDisposableResource(env, value, async) {
    if (value !== null && value !== void 0) {
        if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
        var dispose, inner;
        if (async) {
            if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
            dispose = value[Symbol.asyncDispose];
        }
        if (dispose === void 0) {
            if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
            dispose = value[Symbol.dispose];
            if (async) inner = dispose;
        }
        if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
        if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };
        env.stack.push({ value: value, dispose: dispose, async: async });
    }
    else if (async) {
        env.stack.push({ async: true });
    }
    return value;

}

var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
    var e = new Error(message);
    return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
};

function __disposeResources(env) {
    function fail(e) {
        env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
        env.hasError = true;
    }
    var r, s = 0;
    function next() {
        while (r = env.stack.pop()) {
            try {
                if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);
                if (r.dispose) {
                    var result = r.dispose.call(r.value);
                    if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });
                }
                else s |= 1;
            }
            catch (e) {
                fail(e);
            }
        }
        if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();
        if (env.hasError) throw env.error;
    }
    return next();
}

function __rewriteRelativeImportExtension(path, preserveJsx) {
    if (typeof path === "string" && /^\.\.?\//.test(path)) {
        return path.replace(/\.(tsx)$|((?:\.d)?)((?:\.[^./]+?)?)\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {
            return tsx ? preserveJsx ? ".jsx" : ".js" : d && (!ext || !cm) ? m : (d + ext + "." + cm.toLowerCase() + "js");
        });
    }
    return path;
}

/* unused harmony default export */ var _unused_webpack_default_export = ({
    __extends: __extends,
    __assign: __assign,
    __rest: __rest,
    __decorate: __decorate,
    __param: __param,
    __esDecorate: __esDecorate,
    __runInitializers: __runInitializers,
    __propKey: __propKey,
    __setFunctionName: __setFunctionName,
    __metadata: __metadata,
    __awaiter: __awaiter,
    __generator: __generator,
    __createBinding: __createBinding,
    __exportStar: __exportStar,
    __values: __values,
    __read: __read,
    __spread: __spread,
    __spreadArrays: __spreadArrays,
    __spreadArray: __spreadArray,
    __await: __await,
    __asyncGenerator: __asyncGenerator,
    __asyncDelegator: __asyncDelegator,
    __asyncValues: __asyncValues,
    __makeTemplateObject: __makeTemplateObject,
    __importStar: __importStar,
    __importDefault: __importDefault,
    __classPrivateFieldGet: __classPrivateFieldGet,
    __classPrivateFieldSet: __classPrivateFieldSet,
    __classPrivateFieldIn: __classPrivateFieldIn,
    __addDisposableResource: __addDisposableResource,
    __disposeResources: __disposeResources,
    __rewriteRelativeImportExtension: __rewriteRelativeImportExtension,
});


/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _intl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createIntl", function() { return _intl__WEBPACK_IMPORTED_MODULE_0__["a"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "globalLocale", function() { return _intl__WEBPACK_IMPORTED_MODULE_0__["b"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "intl", function() { return _intl__WEBPACK_IMPORTED_MODULE_0__["c"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "shallowIntl", function() { return _intl__WEBPACK_IMPORTED_MODULE_0__["d"]; });

/* harmony import */ var _editor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(57);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Editor", function() { return _editor__WEBPACK_IMPORTED_MODULE_1__["a"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "commonEvent", function() { return _editor__WEBPACK_IMPORTED_MODULE_1__["b"]; });

/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(18);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FocusTracker", function() { return _utils__WEBPACK_IMPORTED_MODULE_2__["a"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "action", function() { return _utils__WEBPACK_IMPORTED_MODULE_2__["b"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "autorun", function() { return _utils__WEBPACK_IMPORTED_MODULE_2__["c"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "computed", function() { return _utils__WEBPACK_IMPORTED_MODULE_2__["d"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getPublicPath", function() { return _utils__WEBPACK_IMPORTED_MODULE_2__["e"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "makeObservable", function() { return _utils__WEBPACK_IMPORTED_MODULE_2__["f"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mobx", function() { return _utils__WEBPACK_IMPORTED_MODULE_2__["g"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "observable", function() { return _utils__WEBPACK_IMPORTED_MODULE_2__["h"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "observer", function() { return _utils__WEBPACK_IMPORTED_MODULE_2__["i"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "obx", function() { return _utils__WEBPACK_IMPORTED_MODULE_2__["j"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reaction", function() { return _utils__WEBPACK_IMPORTED_MODULE_2__["k"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "runInAction", function() { return _utils__WEBPACK_IMPORTED_MODULE_2__["l"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "runWithGlobalEventOff", function() { return _utils__WEBPACK_IMPORTED_MODULE_2__["m"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "untracked", function() { return _utils__WEBPACK_IMPORTED_MODULE_2__["n"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "wrapWithEventSwitch", function() { return _utils__WEBPACK_IMPORTED_MODULE_2__["o"]; });

/* harmony import */ var _di__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(21);
/* harmony reexport (checked) */ if(__webpack_require__.o(_di__WEBPACK_IMPORTED_MODULE_3__, "Command")) __webpack_require__.d(__webpack_exports__, "Command", function() { return _di__WEBPACK_IMPORTED_MODULE_3__["Command"]; });

/* harmony reexport (checked) */ if(__webpack_require__.o(_di__WEBPACK_IMPORTED_MODULE_3__, "HelpTip")) __webpack_require__.d(__webpack_exports__, "HelpTip", function() { return _di__WEBPACK_IMPORTED_MODULE_3__["HelpTip"]; });

/* harmony reexport (checked) */ if(__webpack_require__.o(_di__WEBPACK_IMPORTED_MODULE_3__, "Hotkey")) __webpack_require__.d(__webpack_exports__, "Hotkey", function() { return _di__WEBPACK_IMPORTED_MODULE_3__["Hotkey"]; });

/* harmony reexport (checked) */ if(__webpack_require__.o(_di__WEBPACK_IMPORTED_MODULE_3__, "Setters")) __webpack_require__.d(__webpack_exports__, "Setters", function() { return _di__WEBPACK_IMPORTED_MODULE_3__["Setters"]; });

/* harmony reexport (checked) */ if(__webpack_require__.o(_di__WEBPACK_IMPORTED_MODULE_3__, "Tip")) __webpack_require__.d(__webpack_exports__, "Tip", function() { return _di__WEBPACK_IMPORTED_MODULE_3__["Tip"]; });

/* harmony reexport (checked) */ if(__webpack_require__.o(_di__WEBPACK_IMPORTED_MODULE_3__, "TipContainer")) __webpack_require__.d(__webpack_exports__, "TipContainer", function() { return _di__WEBPACK_IMPORTED_MODULE_3__["TipContainer"]; });

/* harmony reexport (checked) */ if(__webpack_require__.o(_di__WEBPACK_IMPORTED_MODULE_3__, "Title")) __webpack_require__.d(__webpack_exports__, "Title", function() { return _di__WEBPACK_IMPORTED_MODULE_3__["Title"]; });

/* harmony reexport (checked) */ if(__webpack_require__.o(_di__WEBPACK_IMPORTED_MODULE_3__, "createModuleEventBus")) __webpack_require__.d(__webpack_exports__, "createModuleEventBus", function() { return _di__WEBPACK_IMPORTED_MODULE_3__["createModuleEventBus"]; });

/* harmony reexport (checked) */ if(__webpack_require__.o(_di__WEBPACK_IMPORTED_MODULE_3__, "engineConfig")) __webpack_require__.d(__webpack_exports__, "engineConfig", function() { return _di__WEBPACK_IMPORTED_MODULE_3__["engineConfig"]; });

/* harmony reexport (checked) */ if(__webpack_require__.o(_di__WEBPACK_IMPORTED_MODULE_3__, "globalContext")) __webpack_require__.d(__webpack_exports__, "globalContext", function() { return _di__WEBPACK_IMPORTED_MODULE_3__["globalContext"]; });

/* harmony import */ var _hotkey__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(49);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Hotkey", function() { return _hotkey__WEBPACK_IMPORTED_MODULE_4__["a"]; });

/* harmony import */ var _widgets__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(56);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HelpTip", function() { return _widgets__WEBPACK_IMPORTED_MODULE_5__["a"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tip", function() { return _widgets__WEBPACK_IMPORTED_MODULE_5__["b"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TipContainer", function() { return _widgets__WEBPACK_IMPORTED_MODULE_5__["c"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Title", function() { return _widgets__WEBPACK_IMPORTED_MODULE_5__["d"]; });

/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(28);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "engineConfig", function() { return _config__WEBPACK_IMPORTED_MODULE_6__["a"]; });

/* harmony import */ var _event_bus__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(14);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createModuleEventBus", function() { return _event_bus__WEBPACK_IMPORTED_MODULE_7__["b"]; });

/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(50);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Command", function() { return _command__WEBPACK_IMPORTED_MODULE_8__["a"]; });











/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = window.React;

/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "d", function() { return /* reexport */ types_src["d" /* AssetType */]; });
__webpack_require__.d(__webpack_exports__, "b", function() { return /* reexport */ types_src["c" /* AssetLevels */]; });
__webpack_require__.d(__webpack_exports__, "a", function() { return /* reexport */ types_src["b" /* AssetLevel */]; });
__webpack_require__.d(__webpack_exports__, "y", function() { return /* reexport */ isAssetItem; });
__webpack_require__.d(__webpack_exports__, "x", function() { return /* reexport */ isAssetBundle; });
__webpack_require__.d(__webpack_exports__, "g", function() { return /* reexport */ assetBundle; });
__webpack_require__.d(__webpack_exports__, "h", function() { return /* reexport */ assetItem; });
__webpack_require__.d(__webpack_exports__, "bb", function() { return /* reexport */ mergeAssets; });
__webpack_require__.d(__webpack_exports__, "c", function() { return /* reexport */ asset_AssetLoader; });
__webpack_require__.d(__webpack_exports__, "k", function() { return /* reexport */ cloneDeep; });
__webpack_require__.d(__webpack_exports__, "n", function() { return /* reexport */ createContent; });
__webpack_require__.d(__webpack_exports__, "p", function() { return /* reexport */ createIcon; });
__webpack_require__.d(__webpack_exports__, "q", function() { return /* reexport */ cursor_cursor; });
__webpack_require__.d(__webpack_exports__, "v", function() { return /* reexport */ has_own_property_hasOwnProperty; });
__webpack_require__.d(__webpack_exports__, "z", function() { return /* reexport */ isCSSUrl; });
__webpack_require__.d(__webpack_exports__, "G", function() { return /* reexport */ isElement; });
__webpack_require__.d(__webpack_exports__, "H", function() { return /* reexport */ isFormEvent; });
__webpack_require__.d(__webpack_exports__, "R", function() { return /* reexport */ isPlainObject; });
__webpack_require__.d(__webpack_exports__, "V", function() { return /* reexport */ isReactComponent; });
__webpack_require__.d(__webpack_exports__, "eb", function() { return /* reexport */ setNativeSelection; });
__webpack_require__.d(__webpack_exports__, "fb", function() { return /* reexport */ shallowEqual; });
__webpack_require__.d(__webpack_exports__, "f", function() { return /* reexport */ SVGIcon; });
__webpack_require__.d(__webpack_exports__, "ib", function() { return /* reexport */ uniqueId; });
__webpack_require__.d(__webpack_exports__, "l", function() { return /* reexport */ compatStage; });
__webpack_require__.d(__webpack_exports__, "r", function() { return /* reexport */ deprecate; });
__webpack_require__.d(__webpack_exports__, "W", function() { return /* reexport */ isRegExp; });
__webpack_require__.d(__webpack_exports__, "gb", function() { return /* reexport */ shouldUseVariableSetter; });
__webpack_require__.d(__webpack_exports__, "m", function() { return /* reexport */ compatibleLegaoSchema; });
__webpack_require__.d(__webpack_exports__, "u", function() { return /* reexport */ getNodeSchemaById; });
__webpack_require__.d(__webpack_exports__, "s", function() { return /* reexport */ _getClosestNode; });
__webpack_require__.d(__webpack_exports__, "i", function() { return /* reexport */ canClickNode; });
__webpack_require__.d(__webpack_exports__, "e", function() { return /* reexport */ Logger; });
__webpack_require__.d(__webpack_exports__, "t", function() { return /* reexport */ getLogger; });
__webpack_require__.d(__webpack_exports__, "Z", function() { return /* reexport */ isShaken; });
__webpack_require__.d(__webpack_exports__, "S", function() { return /* reexport */ isPluginEventName; });
__webpack_require__.d(__webpack_exports__, "hb", function() { return /* reexport */ transactionManager; });
__webpack_require__.d(__webpack_exports__, "w", function() { return /* reexport */ isActionContentObject; });
__webpack_require__.d(__webpack_exports__, "A", function() { return /* reexport */ isCustomView; });
__webpack_require__.d(__webpack_exports__, "B", function() { return /* reexport */ isDOMText; });
__webpack_require__.d(__webpack_exports__, "F", function() { return /* reexport */ isDynamicSetter; });
__webpack_require__.d(__webpack_exports__, "I", function() { return /* reexport */ isI18nData; });
__webpack_require__.d(__webpack_exports__, "J", function() { return /* reexport */ isJSExpression; });
__webpack_require__.d(__webpack_exports__, "K", function() { return /* reexport */ isJSFunction; });
__webpack_require__.d(__webpack_exports__, "L", function() { return /* reexport */ isJSSlot; });
__webpack_require__.d(__webpack_exports__, "O", function() { return /* reexport */ isLowCodeComponentType; });
__webpack_require__.d(__webpack_exports__, "Q", function() { return /* reexport */ isNodeSchema; });
__webpack_require__.d(__webpack_exports__, "T", function() { return /* reexport */ isProCodeComponentType; });
__webpack_require__.d(__webpack_exports__, "U", function() { return /* reexport */ isProjectSchema; });
__webpack_require__.d(__webpack_exports__, "X", function() { return /* reexport */ isSetterConfig; });
__webpack_require__.d(__webpack_exports__, "ab", function() { return /* reexport */ isTitleConfig; });
__webpack_require__.d(__webpack_exports__, "D", function() { return /* reexport */ isDragNodeDataObject; });
__webpack_require__.d(__webpack_exports__, "E", function() { return /* reexport */ isDragNodeObject; });
__webpack_require__.d(__webpack_exports__, "C", function() { return /* reexport */ isDragAnyObject; });
__webpack_require__.d(__webpack_exports__, "M", function() { return /* reexport */ isLocationChildrenDetail; });
__webpack_require__.d(__webpack_exports__, "P", function() { return /* reexport */ isNode; });
__webpack_require__.d(__webpack_exports__, "N", function() { return /* reexport */ isLocationData; });
__webpack_require__.d(__webpack_exports__, "Y", function() { return /* reexport */ isSettingField; });
__webpack_require__.d(__webpack_exports__, "cb", function() { return /* reexport */ parseContextMenuAsReactNode; });
__webpack_require__.d(__webpack_exports__, "db", function() { return /* reexport */ parseContextMenuProperties; });
__webpack_require__.d(__webpack_exports__, "o", function() { return /* reexport */ createContextMenu; });
__webpack_require__.d(__webpack_exports__, "j", function() { return /* reexport */ checkPropTypes; });

// UNUSED EXPORTS: StylePoint, Cursor, getPrototypeOf, isESModule, isFunction, isObject, isI18NObject, REACT_FORWARD_REF_TYPE, REACT_MEMO_TYPE, isReactClass, acceptsRef, isForwardRefType, isMemoType, isForwardOrMemoForward, wrapReactClass, nativeSelectionEnabled, setPrototypeOf, accessLibrary, generateHtmlComp, getSubComponent, buildComponents, getProjectUtils, AppHelper, isVariable, isUseI18NSetter, convertToI18NObject, isString, waitForThing, arrShallowEquals, isFromVC, executePendingFn, invariant, applyActivities, cloneEnumerableProperty, css, isJSBlock, isInnerJsFunction, isLowcodeProjectSchema, isComponentSchema, isBasicPropType, isRequiredPropType, ProvideViewPluginContext

// EXTERNAL MODULE: ../types/src/index.ts + 187 modules
var types_src = __webpack_require__(4);

// CONCATENATED MODULE: ../utils/src/is-css-url.ts
function isCSSUrl(url) {
  return /\.css(\?.*)?$/.test(url);
}
// CONCATENATED MODULE: ../utils/src/create-defer.ts
function createDefer() {
  var r = {};
  var promise = new Promise(function (resolve, reject) {
    r.resolve = resolve;
    r.reject = reject;
  });
  r.promise = function () {
    return promise;
  };
  return r;
}
// CONCATENATED MODULE: ../utils/src/is-object.ts
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function isObject(value) {
  return value !== null && _typeof(value) === 'object';
}
function isI18NObject(value) {
  return isObject(value) && value.type === 'i18n';
}
// CONCATENATED MODULE: ../utils/src/logger.ts
function logger_typeof(o) { "@babel/helpers - typeof"; return logger_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, logger_typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == logger_typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != logger_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != logger_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/* eslint-disable no-console */
/* eslint-disable no-param-reassign */

var levels = {
  debug: -1,
  log: 0,
  info: 0,
  warn: 1,
  error: 2
};
var bizNameColors = ['#daa569', '#00ffff', '#385e0f', '#7fffd4', '#00c957', '#b0e0e6', '#4169e1', '#6a5acd', '#87ceeb', '#ffff00', '#e3cf57', '#ff9912', '#eb8e55', '#ffe384', '#40e0d0', '#a39480', '#d2691e', '#ff7d40', '#f0e68c', '#bc8f8f', '#c76114', '#734a12', '#5e2612', '#0000ff', '#3d59ab', '#1e90ff', '#03a89e', '#33a1c9', '#a020f0', '#a066d3', '#da70d6', '#dda0dd', '#688e23', '#2e8b57'];
var bodyColors = {
  debug: '#fadb14',
  log: '#8c8c8c',
  info: '#52c41a',
  warn: '#fa8c16',
  error: '#ff4d4f'
};
var levelMarks = {
  debug: 'debug',
  log: 'log',
  info: 'info',
  warn: 'warn',
  error: 'error'
};
var outputFunction = {
  debug: console.log,
  log: console.log,
  info: console.log,
  warn: console.warn,
  error: console.error
};
var bizNameColorConfig = {};
var shouldOutput = function shouldOutput(logLevel) {
  var targetLevel = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'warn';
  var bizName = arguments.length > 2 ? arguments[2] : undefined;
  var targetBizName = arguments.length > 3 ? arguments[3] : undefined;
  var isLevelFit = levels[targetLevel] <= levels[logLevel];
  var isBizNameFit = targetBizName === '*' || bizName.indexOf(targetBizName) > -1;
  return isLevelFit && isBizNameFit;
};
var output = function output(logLevel, bizName) {
  return function () {
    var _outputFunction$logLe;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return (_outputFunction$logLe = outputFunction[logLevel]) === null || _outputFunction$logLe === void 0 ? void 0 : _outputFunction$logLe.apply(console, logger_getLogArgs(args, bizName, logLevel));
  };
};
var getColor = function getColor(bizName) {
  if (!bizNameColorConfig[bizName]) {
    var color = bizNameColors[Object.keys(bizNameColorConfig).length % bizNameColors.length];
    bizNameColorConfig[bizName] = color;
  }
  return bizNameColorConfig[bizName];
};
var logger_getLogArgs = function getLogArgs(args, bizName, logLevel) {
  var color = getColor(bizName);
  var bodyColor = bodyColors[logLevel];
  var argsArray = args[0];
  var prefix = "%c[".concat(bizName, "]%c[").concat(levelMarks[logLevel], "]:");
  argsArray.forEach(function (arg) {
    if (isObject(arg)) {
      prefix += '%o';
    } else {
      prefix += '%s';
    }
  });
  var processedArgs = [prefix, "color: ".concat(color), "color: ".concat(bodyColor)];
  processedArgs = processedArgs.concat(argsArray);
  return processedArgs;
};
var parseLogConf = function parseLogConf(logConf, options) {
  if (!logConf) {
    return {
      level: options.level,
      bizName: options.bizName
    };
  }
  if (logConf.indexOf(':') > -1) {
    var pair = logConf.split(':');
    return {
      level: pair[0],
      bizName: pair[1] || '*'
    };
  }
  return {
    level: logConf,
    bizName: '*'
  };
};
var defaultOptions = {
  level: 'warn',
  bizName: '*'
};
var Logger = /*#__PURE__*/function () {
  function Logger(options) {
    _classCallCheck(this, Logger);
    this.bizName = void 0;
    this.targetBizName = void 0;
    this.targetLevel = void 0;
    options = _objectSpread(_objectSpread({}, defaultOptions), options);
    var _location = location || {};
    // __logConf__ 格式为 logLevel[:bizName], bizName is used as: targetBizName like '%bizName%'
    //   1. __logConf__=log  or __logConf__=warn,  etc.
    //   2. __logConf__=log:*  or __logConf__=warn:*,  etc.
    //   2. __logConf__=log:bizName  or __logConf__=warn:partOfBizName,  etc.
    var logConf = (/__(?:logConf|logLevel)__=([^#/&]*)/.exec(_location.href) || [])[1];
    var targetOptions = parseLogConf(logConf, options);
    this.bizName = options.bizName;
    this.targetBizName = targetOptions.bizName;
    this.targetLevel = targetOptions.level;
  }
  return _createClass(Logger, [{
    key: "debug",
    value: function debug() {
      if (!shouldOutput('debug', this.targetLevel, this.bizName, this.targetBizName)) {
        return;
      }
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      return output('debug', this.bizName)(args);
    }
  }, {
    key: "log",
    value: function log() {
      if (!shouldOutput('log', this.targetLevel, this.bizName, this.targetBizName)) {
        return;
      }
      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }
      return output('log', this.bizName)(args);
    }
  }, {
    key: "info",
    value: function info() {
      if (!shouldOutput('info', this.targetLevel, this.bizName, this.targetBizName)) {
        return;
      }
      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }
      return output('info', this.bizName)(args);
    }
  }, {
    key: "warn",
    value: function warn() {
      if (!shouldOutput('warn', this.targetLevel, this.bizName, this.targetBizName)) {
        return;
      }
      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }
      return output('warn', this.bizName)(args);
    }
  }, {
    key: "error",
    value: function error() {
      if (!shouldOutput('error', this.targetLevel, this.bizName, this.targetBizName)) {
        return;
      }
      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        args[_key6] = arguments[_key6];
      }
      return output('error', this.bizName)(args);
    }
  }]);
}();

function getLogger(config) {
  return new Logger(config);
}
// CONCATENATED MODULE: ../utils/src/script.ts


var logger = new Logger({
  level: 'warn',
  bizName: 'utils'
});
function evaluate(script, scriptType) {
  var scriptEl = document.createElement('script');
  scriptType && (scriptEl.type = scriptType);
  scriptEl.text = script;
  document.head.appendChild(scriptEl);
  document.head.removeChild(scriptEl);
}
function script_load(url, scriptType) {
  var node = document.createElement('script');
  // node.setAttribute('crossorigin', 'anonymous');
  node.onload = onload;
  node.onerror = onload;
  var i = createDefer();
  function onload(e) {
    node.onload = null;
    node.onerror = null;
    if (e.type === 'load') {
      i.resolve();
    } else {
      i.reject();
    }
    // document.head.removeChild(node);
    // node = null;
  }
  node.src = url;
  // `async=false` is required to make sure all js resources execute sequentially.
  node.async = false;
  scriptType && (node.type = scriptType);
  document.head.appendChild(node);
  return i.promise();
}
function evaluateExpression(expr) {
  // eslint-disable-next-line no-new-func
  var fn = new Function(expr);
  return fn();
}
function newFunction(args, code) {
  try {
    // eslint-disable-next-line no-new-func
    return new Function(args, code);
  } catch (e) {
    logger.warn('Caught error, Cant init func');
    return null;
  }
}
// CONCATENATED MODULE: ../utils/src/asset.ts
function asset_typeof(o) { "@babel/helpers - typeof"; return asset_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, asset_typeof(o); }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i.return) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t.return || t.return(); } finally { if (u) throw o; } } }; }
function asset_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function asset_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, asset_toPropertyKey(o.key), o); } }
function asset_createClass(e, r, t) { return r && asset_defineProperties(e.prototype, r), t && asset_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function asset_toPropertyKey(t) { var i = asset_toPrimitive(t, "string"); return "symbol" == asset_typeof(i) ? i : i + ""; }
function asset_toPrimitive(t, r) { if ("object" != asset_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != asset_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }




// API 向下兼容

function isAssetItem(obj) {
  return obj && obj.type;
}
function isAssetBundle(obj) {
  return obj && obj.type === types_src["d" /* AssetType */].Bundle;
}
function assetBundle(assets, level) {
  if (!assets) {
    return null;
  }
  return {
    type: types_src["d" /* AssetType */].Bundle,
    assets: assets,
    level: level
  };
}
/*
urls: "view.js,view2 <device selector>, view3 <device selector>",
urls: [
  "view.js",
  "view.js *",
  "view1.js mobile|pc",
  "view2.js <device selector>"
] */
function assetItem(type, content, level, id) {
  if (!content) {
    return null;
  }
  return {
    type: type,
    content: content,
    level: level,
    id: id
  };
}
function mergeAssets(assets, incrementalAssets) {
  if (incrementalAssets.packages) {
    assets.packages = [].concat(_toConsumableArray(assets.packages || []), _toConsumableArray(incrementalAssets.packages));
  }
  if (incrementalAssets.components) {
    assets.components = [].concat(_toConsumableArray(assets.components || []), _toConsumableArray(incrementalAssets.components));
  }
  mergeAssetsComponentList(assets, incrementalAssets, 'componentList');
  mergeAssetsComponentList(assets, incrementalAssets, 'bizComponentList');
  return assets;
}
function mergeAssetsComponentList(assets, incrementalAssets, listName) {
  if (incrementalAssets[listName]) {
    if (assets[listName]) {
      var _incrementalAssets$li;
      // 根据title进行合并
      (_incrementalAssets$li = incrementalAssets[listName]) === null || _incrementalAssets$li === void 0 ? void 0 : _incrementalAssets$li.map(function (item) {
        var _assets$listName, _assets$listName2;
        var matchFlag = false;
        (_assets$listName = assets[listName]) === null || _assets$listName === void 0 ? void 0 : _assets$listName.map(function (assetItem) {
          if (assetItem.title === item.title) {
            assetItem.children = assetItem.children.concat(item.children);
            matchFlag = true;
          }
          return assetItem;
        });
        !matchFlag && ((_assets$listName2 = assets[listName]) === null || _assets$listName2 === void 0 ? void 0 : _assets$listName2.push(item));
        return item;
      });
    }
  }
}
var asset_StylePoint = /*#__PURE__*/function () {
  function StylePoint(level, id) {
    asset_classCallCheck(this, StylePoint);
    this.lastContent = void 0;
    this.lastUrl = void 0;
    this.placeholder = void 0;
    this.level = void 0;
    this.id = void 0;
    this.level = level;
    if (id) {
      this.id = id;
    }
    var placeholder;
    if (id) {
      placeholder = document.head.querySelector("style[data-id=\"".concat(id, "\"]"));
    }
    if (!placeholder) {
      placeholder = document.createTextNode('');
      var meta = document.head.querySelector("meta[level=\"".concat(level, "\"]"));
      if (meta) {
        document.head.insertBefore(placeholder, meta);
      } else {
        document.head.appendChild(placeholder);
      }
    }
    this.placeholder = placeholder;
  }
  return asset_createClass(StylePoint, [{
    key: "applyText",
    value: function applyText(content) {
      if (this.lastContent === content) {
        return;
      }
      this.lastContent = content;
      this.lastUrl = undefined;
      var element = document.createElement('style');
      element.setAttribute('type', 'text/css');
      if (this.id) {
        element.setAttribute('data-id', this.id);
      }
      element.appendChild(document.createTextNode(content));
      document.head.insertBefore(element, this.placeholder.parentNode === document.head ? this.placeholder.nextSibling : null);
      document.head.removeChild(this.placeholder);
      this.placeholder = element;
    }
  }, {
    key: "applyUrl",
    value: function applyUrl(url) {
      if (this.lastUrl === url) {
        return;
      }
      this.lastContent = undefined;
      this.lastUrl = url;
      var element = document.createElement('link');
      element.onload = onload;
      element.onerror = onload;
      var i = createDefer();
      function onload(e) {
        element.onload = null;
        element.onerror = null;
        if (e.type === 'load') {
          i.resolve();
        } else {
          i.reject();
        }
      }
      element.href = url;
      element.rel = 'stylesheet';
      if (this.id) {
        element.setAttribute('data-id', this.id);
      }
      document.head.insertBefore(element, this.placeholder.parentNode === document.head ? this.placeholder.nextSibling : null);
      document.head.removeChild(this.placeholder);
      this.placeholder = element;
      return i.promise();
    }
  }]);
}();
function parseAssetList(scripts, styles, assets, level) {
  var _iterator = _createForOfIteratorHelper(assets),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var asset = _step.value;
      parseAsset(scripts, styles, asset, level);
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
}
function parseAsset(scripts, styles, asset, level) {
  if (!asset) {
    return;
  }
  if (Array.isArray(asset)) {
    return parseAssetList(scripts, styles, asset, level);
  }
  if (isAssetBundle(asset)) {
    if (asset.assets) {
      if (Array.isArray(asset.assets)) {
        parseAssetList(scripts, styles, asset.assets, asset.level || level);
      } else {
        parseAsset(scripts, styles, asset.assets, asset.level || level);
      }
      return;
    }
    return;
  }
  if (!isAssetItem(asset)) {
    asset = assetItem(isCSSUrl(asset) ? types_src["d" /* AssetType */].CSSUrl : types_src["d" /* AssetType */].JSUrl, asset, level);
  }
  var lv = asset.level || level;
  if (!lv || types_src["b" /* AssetLevel */][lv] == null) {
    lv = types_src["b" /* AssetLevel */].App;
  }
  asset.level = lv;
  if (asset.type === types_src["d" /* AssetType */].CSSUrl || asset.type == types_src["d" /* AssetType */].CSSText) {
    styles[lv].push(asset);
  } else {
    scripts[lv].push(asset);
  }
}
var asset_AssetLoader = /*#__PURE__*/function () {
  function AssetLoader() {
    asset_classCallCheck(this, AssetLoader);
    this.stylePoints = new Map();
  }
  return asset_createClass(AssetLoader, [{
    key: "load",
    value: function () {
      var _load = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee(asset) {
        var _this = this;
        var styles, scripts, styleQueue, scriptQueue;
        return _regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              styles = {};
              scripts = {};
              types_src["c" /* AssetLevels */].forEach(function (lv) {
                styles[lv] = [];
                scripts[lv] = [];
              });
              parseAsset(scripts, styles, asset);
              styleQueue = styles[types_src["b" /* AssetLevel */].Environment].concat(styles[types_src["b" /* AssetLevel */].Library], styles[types_src["b" /* AssetLevel */].Theme], styles[types_src["b" /* AssetLevel */].Runtime], styles[types_src["b" /* AssetLevel */].App]);
              scriptQueue = scripts[types_src["b" /* AssetLevel */].Environment].concat(scripts[types_src["b" /* AssetLevel */].Library], scripts[types_src["b" /* AssetLevel */].Theme], scripts[types_src["b" /* AssetLevel */].Runtime], scripts[types_src["b" /* AssetLevel */].App]);
              _context.n = 1;
              return Promise.all(styleQueue.map(function (_ref) {
                var content = _ref.content,
                  level = _ref.level,
                  type = _ref.type,
                  id = _ref.id;
                return _this.loadStyle(content, level, type === types_src["d" /* AssetType */].CSSUrl, id);
              }));
            case 1:
              _context.n = 2;
              return Promise.all(scriptQueue.map(function (_ref2) {
                var content = _ref2.content,
                  type = _ref2.type,
                  scriptType = _ref2.scriptType;
                return _this.loadScript(content, type === types_src["d" /* AssetType */].JSUrl, scriptType);
              }));
            case 2:
              return _context.a(2);
          }
        }, _callee);
      }));
      function load(_x) {
        return _load.apply(this, arguments);
      }
      return load;
    }()
  }, {
    key: "loadStyle",
    value: function loadStyle(content, level, isUrl, id) {
      if (!content) {
        return;
      }
      var point;
      if (id) {
        point = this.stylePoints.get(id);
        if (!point) {
          point = new asset_StylePoint(level, id);
          this.stylePoints.set(id, point);
        }
      } else {
        point = new asset_StylePoint(level);
      }
      return isUrl ? point.applyUrl(content) : point.applyText(content);
    }
  }, {
    key: "loadScript",
    value: function loadScript(content, isUrl, scriptType) {
      if (!content) {
        return;
      }
      return isUrl ? script_load(content, scriptType) : evaluate(content, scriptType);
    }
    // todo 补充类型
  }, {
    key: "loadAsyncLibrary",
    value: function () {
      var _loadAsyncLibrary = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2(asyncLibraryMap) {
        var promiseList, libraryKeyList, pkgs, key;
        return _regenerator().w(function (_context2) {
          while (1) switch (_context2.n) {
            case 0:
              promiseList = [];
              libraryKeyList = [];
              pkgs = [];
              for (key in asyncLibraryMap) {
                // 需要异步加载
                if (asyncLibraryMap[key].async) {
                  promiseList.push(window[asyncLibraryMap[key].library]);
                  libraryKeyList.push(asyncLibraryMap[key].library);
                  pkgs.push(asyncLibraryMap[key]);
                }
              }
              _context2.n = 1;
              return Promise.all(promiseList).then(function (mods) {
                if (mods.length > 0) {
                  mods.map(function (item, index) {
                    var _pkgs$index = pkgs[index],
                      exportMode = _pkgs$index.exportMode,
                      exportSourceLibrary = _pkgs$index.exportSourceLibrary,
                      library = _pkgs$index.library;
                    window[libraryKeyList[index]] = exportMode === 'functionCall' && (exportSourceLibrary == null || exportSourceLibrary === library) ? item() : item;
                    return item;
                  });
                }
              });
            case 1:
              return _context2.a(2);
          }
        }, _callee2);
      }));
      function loadAsyncLibrary(_x2) {
        return _loadAsyncLibrary.apply(this, arguments);
      }
      return loadAsyncLibrary;
    }()
  }]);
}();
// CONCATENATED MODULE: ../utils/src/is-plain-object.ts

function isPlainObject(value) {
  if (!isObject(value)) {
    return false;
  }
  var proto = Object.getPrototypeOf(value);
  return proto === Object.prototype || proto === null || Object.getPrototypeOf(proto) === null;
}
// CONCATENATED MODULE: ../utils/src/clone-deep.ts
function clone_deep_typeof(o) { "@babel/helpers - typeof"; return clone_deep_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, clone_deep_typeof(o); }

function cloneDeep(src) {
  var type = clone_deep_typeof(src);
  var data;
  if (src === null || src === undefined) {
    data = src;
  } else if (Array.isArray(src)) {
    data = src.map(function (item) {
      return cloneDeep(item);
    });
  } else if (type === 'object' && isPlainObject(src)) {
    data = {};
    for (var key in src) {
      // eslint-disable-next-line no-prototype-builtins
      if (src.hasOwnProperty(key)) {
        data[key] = cloneDeep(src[key]);
      }
    }
  } else {
    data = src;
  }
  return data;
}
// EXTERNAL MODULE: external "window.React"
var external_window_React_ = __webpack_require__(2);
var external_window_React_default = /*#__PURE__*/__webpack_require__.n(external_window_React_);

// CONCATENATED MODULE: ../utils/src/clone-enumerable-property.ts
var excludePropertyNames = ['$$typeof', 'render', 'defaultProps', 'props', 'length', 'prototype', 'name', 'caller', 'callee', 'arguments'];
function cloneEnumerableProperty(target, origin) {
  var excludes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : excludePropertyNames;
  var compExtraPropertyNames = Object.keys(origin).filter(function (d) {
    return !excludes.includes(d);
  });
  compExtraPropertyNames.forEach(function (d) {
    target[d] = origin[d];
  });
  return target;
}
// CONCATENATED MODULE: ../utils/src/is-react.ts
function is_react_typeof(o) { "@babel/helpers - typeof"; return is_react_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, is_react_typeof(o); }
var _excluded = ["children"];
function _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }
function _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }
function is_react_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function is_react_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, is_react_toPropertyKey(o.key), o); } }
function is_react_createClass(e, r, t) { return r && is_react_defineProperties(e.prototype, r), t && is_react_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function is_react_toPropertyKey(t) { var i = is_react_toPrimitive(t, "string"); return "symbol" == is_react_typeof(i) ? i : i + ""; }
function is_react_toPrimitive(t, r) { if ("object" != is_react_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != is_react_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _possibleConstructorReturn(t, e) { if (e && ("object" == is_react_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return _assertThisInitialized(t); }
function _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }
function _inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && _setPrototypeOf(t, e); }
function _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }


var hasSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
function isReactClass(obj) {
  if (!obj) {
    return false;
  }
  if (obj.prototype && (obj.prototype.isReactComponent || obj.prototype instanceof external_window_React_["Component"])) {
    return true;
  }
  return false;
}
function acceptsRef(obj) {
  var _obj$prototype;
  if (!obj) {
    return false;
  }
  if (obj !== null && obj !== void 0 && (_obj$prototype = obj.prototype) !== null && _obj$prototype !== void 0 && _obj$prototype.isReactComponent || isForwardOrMemoForward(obj)) {
    return true;
  }
  return false;
}
function isForwardRefType(obj) {
  if (!obj || !(obj !== null && obj !== void 0 && obj.$$typeof)) {
    return false;
  }
  return (obj === null || obj === void 0 ? void 0 : obj.$$typeof) === REACT_FORWARD_REF_TYPE;
}
function isMemoType(obj) {
  if (!obj || !(obj !== null && obj !== void 0 && obj.$$typeof)) {
    return false;
  }
  return obj.$$typeof === REACT_MEMO_TYPE;
}
function isForwardOrMemoForward(obj) {
  if (!obj || !(obj !== null && obj !== void 0 && obj.$$typeof)) {
    return false;
  }
  return (
    // React.forwardRef(..)
    isForwardRefType(obj) ||
    // React.memo(React.forwardRef(..))
    isMemoType(obj) && isForwardRefType(obj.type)
  );
}
function isReactComponent(obj) {
  if (!obj) {
    return false;
  }
  return Boolean(isReactClass(obj) || typeof obj === 'function' || isForwardRefType(obj) || isMemoType(obj));
}
function wrapReactClass(view) {
  var ViewComponentClass = /*#__PURE__*/function (_Component) {
    function ViewComponentClass() {
      is_react_classCallCheck(this, ViewComponentClass);
      return _callSuper(this, ViewComponentClass, arguments);
    }
    _inherits(ViewComponentClass, _Component);
    return is_react_createClass(ViewComponentClass, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
          children = _this$props.children,
          other = _objectWithoutProperties(_this$props, _excluded);
        return /*#__PURE__*/Object(external_window_React_["createElement"])(view, other, children);
      }
    }]);
  }(external_window_React_["Component"]);
  ViewComponentClass = cloneEnumerableProperty(ViewComponentClass, view);
  ViewComponentClass.displayName = view.displayName;
  return ViewComponentClass;
}
// CONCATENATED MODULE: ../utils/src/create-content.ts


function createContent(content, props) {
  if (/*#__PURE__*/Object(external_window_React_["isValidElement"])(content)) {
    return props ? /*#__PURE__*/Object(external_window_React_["cloneElement"])(content, props) : content;
  }
  if (isReactComponent(content)) {
    return /*#__PURE__*/Object(external_window_React_["createElement"])(content, props);
  }
  return content;
}
// EXTERNAL MODULE: external "Next"
var external_Next_ = __webpack_require__(5);

// CONCATENATED MODULE: ../utils/src/is-es-module.ts
function isESModule(obj) {
  return obj && obj.__esModule;
}
// CONCATENATED MODULE: ../utils/src/create-icon.tsx
function create_icon_typeof(o) { "@babel/helpers - typeof"; return create_icon_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, create_icon_typeof(o); }
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
function create_icon_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function create_icon_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? create_icon_ownKeys(Object(t), !0).forEach(function (r) { create_icon_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : create_icon_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function create_icon_defineProperty(e, r, t) { return (r = create_icon_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function create_icon_toPropertyKey(t) { var i = create_icon_toPrimitive(t, "string"); return "symbol" == create_icon_typeof(i) ? i : i + ""; }
function create_icon_toPrimitive(t, r) { if ("object" != create_icon_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != create_icon_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }




var URL_RE = /^(https?:)\/\//i;
function createIcon(icon, props) {
  if (!icon) {
    return null;
  }
  if (isESModule(icon)) {
    icon = icon.default;
  }
  if (typeof icon === 'string') {
    if (URL_RE.test(icon)) {
      return /*#__PURE__*/Object(external_window_React_["createElement"])('img', create_icon_objectSpread({
        src: icon,
        class: props === null || props === void 0 ? void 0 : props.className
      }, props));
    }
    return /*#__PURE__*/React.createElement(external_Next_["Icon"], _extends({
      type: icon
    }, props));
  }
  if (/*#__PURE__*/Object(external_window_React_["isValidElement"])(icon)) {
    return /*#__PURE__*/Object(external_window_React_["cloneElement"])(icon, create_icon_objectSpread({}, props));
  }
  if (isReactComponent(icon)) {
    return /*#__PURE__*/Object(external_window_React_["createElement"])(icon, create_icon_objectSpread({
      class: props === null || props === void 0 ? void 0 : props.className
    }, props));
  }
  return /*#__PURE__*/React.createElement(external_Next_["Icon"], _extends({}, icon, props));
}
// EXTERNAL MODULE: ../utils/src/cursor.css
var cursor = __webpack_require__(66);

// CONCATENATED MODULE: ../utils/src/cursor.ts
function cursor_typeof(o) { "@babel/helpers - typeof"; return cursor_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, cursor_typeof(o); }
function cursor_createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = cursor_unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t.return || t.return(); } finally { if (u) throw o; } } }; }
function cursor_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return cursor_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? cursor_arrayLikeToArray(r, a) : void 0; } }
function cursor_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function cursor_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function cursor_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, cursor_toPropertyKey(o.key), o); } }
function cursor_createClass(e, r, t) { return r && cursor_defineProperties(e.prototype, r), t && cursor_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function cursor_toPropertyKey(t) { var i = cursor_toPrimitive(t, "string"); return "symbol" == cursor_typeof(i) ? i : i + ""; }
function cursor_toPrimitive(t, r) { if ("object" != cursor_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != cursor_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

var Cursor = /*#__PURE__*/function () {
  function Cursor() {
    cursor_classCallCheck(this, Cursor);
    this.states = new Set();
  }
  return cursor_createClass(Cursor, [{
    key: "setDragging",
    value: function setDragging(flag) {
      if (flag) {
        this.addState('dragging');
      } else {
        this.removeState('dragging');
      }
    }
  }, {
    key: "setXResizing",
    value: function setXResizing(flag) {
      if (flag) {
        this.addState('x-resizing');
      } else {
        this.removeState('x-resizing');
      }
    }
  }, {
    key: "setYResizing",
    value: function setYResizing(flag) {
      if (flag) {
        this.addState('y-resizing');
      } else {
        this.removeState('y-resizing');
      }
    }
  }, {
    key: "setCopy",
    value: function setCopy(flag) {
      if (flag) {
        this.addState('copy');
      } else {
        this.removeState('copy');
      }
    }
  }, {
    key: "isCopy",
    value: function isCopy() {
      return this.states.has('copy');
    }
  }, {
    key: "release",
    value: function release() {
      var _iterator = cursor_createForOfIteratorHelper(this.states),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var state = _step.value;
          this.removeState(state);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
  }, {
    key: "addState",
    value: function addState(state) {
      if (!this.states.has(state)) {
        this.states.add(state);
        document.documentElement.classList.add("lc-cursor-".concat(state));
      }
    }
  }, {
    key: "removeState",
    value: function removeState(state) {
      if (this.states.has(state)) {
        this.states.delete(state);
        document.documentElement.classList.remove("lc-cursor-".concat(state));
      }
    }
  }]);
}();
var cursor_cursor = new Cursor();
// CONCATENATED MODULE: ../utils/src/get-prototype-of.ts
function getPrototypeOf(target) {
  if (typeof Object.getPrototypeOf !== 'undefined') {
    return Object.getPrototypeOf(target);
  }
  // eslint-disable-next-line no-proto
  return target.__proto__;
}
// CONCATENATED MODULE: ../utils/src/has-own-property.ts
var prototypeHasOwnProperty = Object.prototype.hasOwnProperty;
function has_own_property_hasOwnProperty(obj, key) {
  return obj && prototypeHasOwnProperty.call(obj, key);
}
// CONCATENATED MODULE: ../utils/src/is-element.ts
function isElement(node) {
  if (!node) return false;
  return node.nodeType === Node.ELEMENT_NODE;
}
// CONCATENATED MODULE: ../utils/src/is-form-event.ts
function isFormEvent(e) {
  var t = e.target;
  if (!t) {
    return false;
  }
  if (t.form || /^(INPUT|SELECT|TEXTAREA)$/.test(t.tagName)) {
    return true;
  }
  if (t instanceof HTMLElement && /write/.test(window.getComputedStyle(t).getPropertyValue('-webkit-user-modify'))) {
    return true;
  }
  return false;
}
// CONCATENATED MODULE: ../utils/src/is-function.ts
function isFunction(fn) {
  return typeof fn === 'function';
}
// CONCATENATED MODULE: ../utils/src/navtive-selection.ts
var nativeSelectionEnabled = true;
var preventSelection = function preventSelection(e) {
  if (nativeSelectionEnabled) {
    return null;
  }
  e.preventDefault();
  e.stopPropagation();
  return false;
};
document.addEventListener('selectstart', preventSelection, true);
document.addEventListener('dragstart', preventSelection, true);
function setNativeSelection(enableFlag) {
  nativeSelectionEnabled = enableFlag;
}
// CONCATENATED MODULE: ../utils/src/set-prototype-of.ts
function setPrototypeOf(target, proto) {
  if (typeof Object.setPrototypeOf !== 'undefined') {
    Object.setPrototypeOf(target, proto);
  } else {
    // eslint-disable-next-line no-proto
    target.__proto__ = proto;
  }
}
// CONCATENATED MODULE: ../utils/src/shallow-equal.ts
function shallow_equal_typeof(o) { "@babel/helpers - typeof"; return shallow_equal_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, shallow_equal_typeof(o); }

function shallowEqual(objA, objB) {
  if (objA === objB) {
    return true;
  }
  if (shallow_equal_typeof(objA) !== 'object' || objA === null || shallow_equal_typeof(objB) !== 'object' || objB === null) {
    return false;
  }
  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);
  if (keysA.length !== keysB.length) {
    return false;
  }
  // Test for A's keys different from B.
  for (var i = 0; i < keysA.length; i++) {
    if (!has_own_property_hasOwnProperty(objB, keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {
      return false;
    }
  }
  return true;
}
// CONCATENATED MODULE: ../utils/src/svg-icon.tsx
function svg_icon_typeof(o) { "@babel/helpers - typeof"; return svg_icon_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, svg_icon_typeof(o); }
var svg_icon_excluded = ["fill", "size", "viewBox", "style", "children"];
function svg_icon_extends() { return svg_icon_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, svg_icon_extends.apply(null, arguments); }
function svg_icon_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function svg_icon_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? svg_icon_ownKeys(Object(t), !0).forEach(function (r) { svg_icon_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : svg_icon_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function svg_icon_defineProperty(e, r, t) { return (r = svg_icon_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function svg_icon_toPropertyKey(t) { var i = svg_icon_toPrimitive(t, "string"); return "symbol" == svg_icon_typeof(i) ? i : i + ""; }
function svg_icon_toPrimitive(t, r) { if ("object" != svg_icon_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != svg_icon_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function svg_icon_objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = svg_icon_objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }
function svg_icon_objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }

var SizePresets = {
  xsmall: 8,
  small: 12,
  medium: 16,
  large: 20,
  xlarge: 30
};
function SVGIcon(_ref) {
  var fill = _ref.fill,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? 'medium' : _ref$size,
    viewBox = _ref.viewBox,
    style = _ref.style,
    children = _ref.children,
    props = svg_icon_objectWithoutProperties(_ref, svg_icon_excluded);
  // eslint-disable-next-line no-prototype-builtins
  if (SizePresets.hasOwnProperty(size)) {
    size = SizePresets[size];
  }
  return /*#__PURE__*/external_window_React_default.a.createElement("svg", svg_icon_extends({
    fill: "currentColor",
    preserveAspectRatio: "xMidYMid meet",
    width: size,
    height: size,
    viewBox: viewBox
  }, props, {
    style: svg_icon_objectSpread({
      color: fill
    }, style)
  }), children);
}
// CONCATENATED MODULE: ../utils/src/unique-id.ts
var guid = Date.now();
function uniqueId() {
  var prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  return "".concat(prefix).concat((guid++).toString(36).toLowerCase());
}
// CONCATENATED MODULE: ../utils/src/check-types/is-action-content-object.ts

function isActionContentObject(obj) {
  return isObject(obj);
}
// CONCATENATED MODULE: ../utils/src/check-types/is-custom-view.ts


function isCustomView(obj) {
  if (!obj) {
    return false;
  }
  return /*#__PURE__*/Object(external_window_React_["isValidElement"])(obj) || isReactComponent(obj);
}
// CONCATENATED MODULE: ../utils/src/check-types/is-dom-text.ts
function isDOMText(data) {
  return typeof data === 'string';
}
// CONCATENATED MODULE: ../utils/src/check-types/is-dynamic-setter.ts


function isDynamicSetter(obj) {
  if (!isFunction(obj)) {
    return false;
  }
  return !isReactClass(obj);
}
// CONCATENATED MODULE: ../utils/src/check-types/is-i18n-data.ts

function isI18nData(obj) {
  if (!isObject(obj)) {
    return false;
  }
  return obj.type === 'i18n';
}
// CONCATENATED MODULE: ../utils/src/check-types/is-jsblock.ts

function isJSBlock(data) {
  if (!isObject(data)) {
    return false;
  }
  return data.type === 'JSBlock';
}
// CONCATENATED MODULE: ../utils/src/check-types/is-jsexpression.ts

/**
 * 为了避免把 { type: 'JSExpression', extType: 'function' } 误判为表达式，故增加如下逻辑。
 *
 * 引擎中关于函数的表达：
 *  开源版本：{ type: 'JSFunction', source: '', value: '' }
 *  内部版本：{ type: 'JSExpression', source: '', value: '', extType: 'function' }
 *  能力是对标的，不过开源的 react-renderer 只认识第一种，而内部只识别第二种（包括 Java 代码、RE）。
 * @param data
 * @returns
 */
function isJSExpression(data) {
  if (!isObject(data)) {
    return false;
  }
  return data.type === 'JSExpression' && data.extType !== 'function';
}
// CONCATENATED MODULE: ../utils/src/check-types/is-isfunction.ts

/**
 *  内部版本 的 { type: 'JSExpression', source: '', value: '', extType: 'function' } 能力上等同于 JSFunction
 */
function isInnerJsFunction(data) {
  if (!isObject(data)) {
    return false;
  }
  return data.type === 'JSExpression' && data.extType === 'function';
}
function isJSFunction(data) {
  if (!isObject(data)) {
    return false;
  }
  return data.type === 'JSFunction' || isInnerJsFunction(data);
}
// CONCATENATED MODULE: ../utils/src/check-types/is-jsslot.ts

function isJSSlot(data) {
  if (!isObject(data)) {
    return false;
  }
  return data.type === 'JSSlot';
}
// CONCATENATED MODULE: ../utils/src/check-types/is-procode-component-type.ts

function isProCodeComponentType(desc) {
  if (!isObject(desc)) {
    return false;
  }
  return 'package' in desc;
}
// CONCATENATED MODULE: ../utils/src/check-types/is-lowcode-component-type.ts

function isLowCodeComponentType(desc) {
  return !isProCodeComponentType(desc);
}
// CONCATENATED MODULE: ../utils/src/check-types/is-node-schema.ts

function isNodeSchema(data) {
  if (!isObject(data)) {
    return false;
  }
  return 'componentName' in data && !data.isNode;
}
// CONCATENATED MODULE: ../utils/src/check-types/is-project-schema.ts

function isProjectSchema(data) {
  if (!isObject(data)) {
    return false;
  }
  return 'componentsTree' in data;
}
// CONCATENATED MODULE: ../utils/src/check-types/is-setter-config.ts


function isSetterConfig(obj) {
  if (!isObject(obj)) {
    return false;
  }
  return 'componentName' in obj && !isCustomView(obj);
}
// CONCATENATED MODULE: ../utils/src/check-types/is-title-config.ts


function isTitleConfig(obj) {
  return isPlainObject(obj) && !isI18nData(obj);
}
// CONCATENATED MODULE: ../utils/src/check-types/is-drag-node-data-object.ts


function isDragNodeDataObject(obj) {
  if (!isObject(obj)) {
    return false;
  }
  return obj.type === types_src["g" /* IPublicEnumDragObjectType */].NodeData;
}
// CONCATENATED MODULE: ../utils/src/check-types/is-drag-node-object.ts


function isDragNodeObject(obj) {
  if (!isObject(obj)) {
    return false;
  }
  return obj.type === types_src["g" /* IPublicEnumDragObjectType */].Node;
}
// CONCATENATED MODULE: ../utils/src/check-types/is-drag-any-object.ts


function isDragAnyObject(obj) {
  if (!isObject(obj)) {
    return false;
  }
  return obj.type !== types_src["g" /* IPublicEnumDragObjectType */].NodeData && obj.type !== types_src["g" /* IPublicEnumDragObjectType */].Node;
}
// CONCATENATED MODULE: ../utils/src/check-types/is-location-children-detail.ts


function isLocationChildrenDetail(obj) {
  if (!isObject(obj)) {
    return false;
  }
  return obj.type === types_src["k" /* IPublicTypeLocationDetailType */].Children;
}
// CONCATENATED MODULE: ../utils/src/check-types/is-node.ts

function isNode(node) {
  if (!isObject(node)) {
    return false;
  }
  return node.isNode;
}
// CONCATENATED MODULE: ../utils/src/check-types/is-location-data.ts

function isLocationData(obj) {
  if (!isObject(obj)) {
    return false;
  }
  return 'target' in obj && 'detail' in obj;
}
// CONCATENATED MODULE: ../utils/src/check-types/is-setting-field.ts

function isSettingField(obj) {
  if (!isObject(obj)) {
    return false;
  }
  return 'isSettingField' in obj && obj.isSettingField;
}
// CONCATENATED MODULE: ../utils/src/check-types/is-component-schema.ts
function is_component_schema_typeof(o) { "@babel/helpers - typeof"; return is_component_schema_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, is_component_schema_typeof(o); }
function isComponentSchema(schema) {
  if (is_component_schema_typeof(schema) === 'object') {
    return schema.componentName === 'Component';
  }
  return false;
}
// CONCATENATED MODULE: ../utils/src/check-types/is-lowcode-project-schema.ts


function isLowcodeProjectSchema(data) {
  if (!isObject(data)) {
    return false;
  }
  if (!('componentsTree' in data) || data.componentsTree.length === 0) {
    return false;
  }
  return isComponentSchema(data.componentsTree[0]);
}
// CONCATENATED MODULE: ../utils/src/check-types/is-basic-prop-type.ts
function isBasicPropType(propType) {
  if (!propType) {
    return false;
  }
  return typeof propType === 'string';
}
// CONCATENATED MODULE: ../utils/src/check-types/is-required-prop-type.ts
function is_required_prop_type_typeof(o) { "@babel/helpers - typeof"; return is_required_prop_type_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, is_required_prop_type_typeof(o); }
function isRequiredPropType(propType) {
  if (!propType) {
    return false;
  }
  return is_required_prop_type_typeof(propType) === 'object' && propType.type && ['array', 'bool', 'func', 'number', 'object', 'string', 'node', 'element', 'any'].includes(propType.type);
}
// CONCATENATED MODULE: ../utils/src/check-types/index.ts
// 此模块存放 @alilc/lowcode-types 中类型相关判断工具



























// CONCATENATED MODULE: ../utils/src/build-components.ts
function build_components_typeof(o) { "@babel/helpers - typeof"; return build_components_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, build_components_typeof(o); }
function build_components_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function build_components_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? build_components_ownKeys(Object(t), !0).forEach(function (r) { build_components_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : build_components_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function build_components_defineProperty(e, r, t) { return (r = build_components_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function build_components_toPropertyKey(t) { var i = build_components_toPrimitive(t, "string"); return "symbol" == build_components_typeof(i) ? i : i + ""; }
function build_components_toPrimitive(t, r) { if ("object" != build_components_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != build_components_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }






function accessLibrary(library) {
  if (typeof library !== 'string') {
    return library;
  }
  return window[library] || generateHtmlComp(library);
}
function generateHtmlComp(library) {
  if (['a', 'img', 'div', 'span', 'svg'].includes(library)) {
    return /*#__PURE__*/Object(external_window_React_["forwardRef"])(function (props, ref) {
      return /*#__PURE__*/Object(external_window_React_["createElement"])(library, build_components_objectSpread({
        ref: ref
      }, props), props.children);
    });
  }
}
function getSubComponent(library, paths) {
  var l = paths.length;
  if (l < 1 || !library) {
    return library;
  }
  var i = 0;
  var component;
  while (i < l) {
    var key = paths[i];
    var ex = void 0;
    try {
      component = library[key] || component;
    } catch (e) {
      ex = e;
      component = null;
    }
    if (i === 0 && component == null && key === 'default') {
      if (ex) {
        return l === 1 ? library : null;
      }
      component = library;
    } else if (component == null) {
      return null;
    }
    library = component;
    i++;
  }
  return component;
}
function findComponent(libraryMap, componentName, npm) {
  if (!npm) {
    return accessLibrary(componentName);
  }
  // libraryName the key access to global
  // export { exportName } from xxx exportName === global.libraryName.exportName
  // export exportName from xxx   exportName === global.libraryName.default || global.libraryName
  // export { exportName as componentName } from package
  // if exportName == null exportName === componentName;
  // const componentName = exportName.subName, if exportName empty subName donot use
  var exportName = npm.exportName || npm.componentName || componentName;
  var libraryName = libraryMap[npm.package] || exportName;
  var library = accessLibrary(libraryName);
  var paths = npm.exportName && npm.subName ? npm.subName.split('.') : [];
  if (npm.destructuring) {
    paths.unshift(exportName);
  } else if (isESModule(library)) {
    paths.unshift('default');
  }
  return getSubComponent(library, paths);
}
/**
 * 判断是否是一个混合组件，即 components 是一个对象，对象值是 React 组件
 * 示例：
 * {
 *    Button: ReactNode,
 *    Text: ReactNode,
 * }
 */
function isMixinComponent(components) {
  if (!isObject(components)) {
    return false;
  }
  return Object.keys(components).some(function (componentName) {
    return isReactComponent(components[componentName]);
  });
}
function buildComponents(libraryMap, componentsMap, createComponent) {
  var components = {};
  Object.keys(componentsMap).forEach(function (componentName) {
    var component = componentsMap[componentName];
    if (component && (isLowcodeProjectSchema(component) || isComponentSchema(component))) {
      if (isComponentSchema(component)) {
        components[componentName] = createComponent({
          version: '',
          componentsMap: [],
          componentsTree: [component]
        });
      } else {
        components[componentName] = createComponent(component);
      }
    } else if (isReactComponent(component)) {
      if (!acceptsRef(component)) {
        component = wrapReactClass(component);
      }
      components[componentName] = component;
    } else if (isMixinComponent(component)) {
      components[componentName] = component;
    } else {
      component = findComponent(libraryMap, componentName, component);
      if (component) {
        if (!acceptsRef(component) && isReactComponent(component)) {
          component = wrapReactClass(component);
        }
        components[componentName] = component;
      }
    }
  });
  return components;
}
function getProjectUtils(librayMap, utilsMetadata) {
  var projectUtils = {};
  if (utilsMetadata) {
    utilsMetadata.forEach(function (meta) {
      var _meta$npm;
      if (librayMap[meta === null || meta === void 0 ? void 0 : (_meta$npm = meta.npm) === null || _meta$npm === void 0 ? void 0 : _meta$npm.package]) {
        var lib = accessLibrary(librayMap[meta === null || meta === void 0 ? void 0 : meta.npm.package]);
        if (lib !== null && lib !== void 0 && lib.destructuring) {
          Object.keys(lib).forEach(function (name) {
            if (name === 'destructuring') return;
            projectUtils[name] = lib[name];
          });
        } else if (meta.name) {
          projectUtils[meta.name] = lib;
        }
      }
    });
  }
  return projectUtils;
}
// EXTERNAL MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/events/events.js
var events = __webpack_require__(9);
var events_default = /*#__PURE__*/__webpack_require__.n(events);

// CONCATENATED MODULE: ../utils/src/app-helper.ts
var _AppHelper;
function app_helper_typeof(o) { "@babel/helpers - typeof"; return app_helper_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, app_helper_typeof(o); }
function app_helper_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function app_helper_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, app_helper_toPropertyKey(o.key), o); } }
function app_helper_createClass(e, r, t) { return r && app_helper_defineProperties(e.prototype, r), t && app_helper_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function app_helper_toPropertyKey(t) { var i = app_helper_toPrimitive(t, "string"); return "symbol" == app_helper_typeof(i) ? i : i + ""; }
function app_helper_toPrimitive(t, r) { if ("object" != app_helper_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != app_helper_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function app_helper_callSuper(t, o, e) { return o = app_helper_getPrototypeOf(o), app_helper_possibleConstructorReturn(t, app_helper_isNativeReflectConstruct() ? Reflect.construct(o, e || [], app_helper_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function app_helper_possibleConstructorReturn(t, e) { if (e && ("object" == app_helper_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return app_helper_assertThisInitialized(t); }
function app_helper_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function app_helper_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (app_helper_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function app_helper_getPrototypeOf(t) { return app_helper_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, app_helper_getPrototypeOf(t); }
function app_helper_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && app_helper_setPrototypeOf(t, e); }
function app_helper_setPrototypeOf(t, e) { return app_helper_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, app_helper_setPrototypeOf(t, e); }

var instance = null;
events_default.a.defaultMaxListeners = 100;
var AppHelper = /*#__PURE__*/function (_EventEmitter) {
  function AppHelper(config) {
    var _this;
    app_helper_classCallCheck(this, AppHelper);
    _this = app_helper_callSuper(this, AppHelper);
    instance = _this;
    Object.assign(_this, config);
    return _this;
  }
  app_helper_inherits(AppHelper, _EventEmitter);
  return app_helper_createClass(AppHelper, [{
    key: "get",
    value: function get(key) {
      return this[key];
    }
  }, {
    key: "set",
    value: function set(key, val) {
      var _this2 = this;
      if (typeof key === 'string') {
        this[key] = val;
      } else if (app_helper_typeof(key) === 'object') {
        Object.keys(key).forEach(function (item) {
          _this2[item] = key[item];
        });
      }
    }
  }, {
    key: "batchOn",
    value: function batchOn(events, listener) {
      var _this3 = this;
      if (!Array.isArray(events)) return;
      events.forEach(function (event) {
        return _this3.on(event, listener);
      });
    }
  }, {
    key: "batchOnce",
    value: function batchOnce(events, listener) {
      var _this4 = this;
      if (!Array.isArray(events)) return;
      events.forEach(function (event) {
        return _this4.once(event, listener);
      });
    }
  }, {
    key: "batchOff",
    value: function batchOff(events, listener) {
      var _this5 = this;
      if (!Array.isArray(events)) return;
      events.forEach(function (event) {
        return _this5.off(event, listener);
      });
    }
  }]);
}(events_default.a);
_AppHelper = AppHelper;
AppHelper.getInstance = function () {
  if (!instance) {
    instance = new _AppHelper();
  }
  return instance;
};
// EXTERNAL MODULE: external "_"
var external_ = __webpack_require__(8);

// CONCATENATED MODULE: ../utils/src/misc.ts
function misc_defineProperty(e, r, t) { return (r = misc_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function misc_toPropertyKey(t) { var i = misc_toPrimitive(t, "string"); return "symbol" == misc_typeof(i) ? i : i + ""; }
function misc_toPrimitive(t, r) { if ("object" != misc_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != misc_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function misc_typeof(o) { "@babel/helpers - typeof"; return misc_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, misc_typeof(o); }



var misc_logger = new Logger({
  level: 'warn',
  bizName: 'utils'
});
function isVariable(obj) {
  if (!obj || misc_typeof(obj) !== 'object') {
    return false;
  }
  return obj.type === 'variable';
}
function isUseI18NSetter(prototype, propName) {
  var _prototype$options;
  var configure = prototype === null || prototype === void 0 ? void 0 : (_prototype$options = prototype.options) === null || _prototype$options === void 0 ? void 0 : _prototype$options.configure;
  if (Array.isArray(configure)) {
    return configure.some(function (c) {
      var _c$setter, _c$setter$type;
      return c.name === propName && (c === null || c === void 0 ? void 0 : (_c$setter = c.setter) === null || _c$setter === void 0 ? void 0 : (_c$setter$type = _c$setter.type) === null || _c$setter$type === void 0 ? void 0 : _c$setter$type.displayName) === 'I18nSetter';
    });
  }
  return false;
}
function convertToI18NObject(v) {
  var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'zh-CN';
  if (isI18NObject(v)) return v;
  return misc_defineProperty({
    type: 'i18n',
    use: locale
  }, locale, v);
}
function isString(v) {
  return typeof v === 'string';
}
function _innerWaitForThing(obj, path) {
  var timeGap = 200;
  return new Promise(function (resolve, reject) {
    setTimeout(function () {
      var thing = Object(external_["get"])(obj, path);
      if (thing) {
        return resolve(thing);
      }
      reject();
    }, timeGap);
  }).catch(function () {
    return _innerWaitForThing(obj, path);
  });
}
function waitForThing(obj, path) {
  var thing = Object(external_["get"])(obj, path);
  if (thing) {
    return Promise.resolve(thing);
  }
  return _innerWaitForThing(obj, path);
}
function arrShallowEquals(arr1, arr2) {
  if (!Array.isArray(arr1) || !Array.isArray(arr2)) return false;
  if (arr1.length !== arr2.length) return false;
  return arr1.every(function (item) {
    return arr2.includes(item);
  });
}
/**
 * 判断当前 meta 是否从 vc prototype 转换而来
 * @param meta
 */
function isFromVC(meta) {
  var _meta$getMetadata$con;
  return !!(meta !== null && meta !== void 0 && (_meta$getMetadata$con = meta.getMetadata().configure) !== null && _meta$getMetadata$con !== void 0 && _meta$getMetadata$con.advanced);
}
function executePendingFn(fn) {
  var timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2000;
  return setTimeout(fn, timeout);
}
var stageList = ['render', 'serilize', 'save', 'clone', 'init', 'upgrade'];
/**
 * 兼容原来的数字版本的枚举对象
 * @param stage
 * @returns
 */
function compatStage(stage) {
  if (typeof stage === 'number') {
    console.warn('stage 直接指定为数字的使用方式已经过时，将在下一版本移除，请直接使用 IPublicEnumTransformStage.Render|Serilize|Save|Clone|Init|Upgrade');
    return stageList[stage - 1];
  }
  return stage;
}
function invariant(check, message, thing) {
  if (!check) {
    throw new Error("Invariant failed: ".concat(message).concat(thing ? " in '".concat(thing, "'") : ''));
  }
}
function deprecate(fail, message, alterative) {
  if (fail) {
    misc_logger.warn("Deprecation: ".concat(message) + (alterative ? ", use ".concat(alterative, " instead.") : ''));
  }
}
function isRegExp(obj) {
  if (!obj || misc_typeof(obj) !== 'object') {
    return false;
  }
  return 'test' in obj && 'exec' in obj && 'compile' in obj;
}
/**
 * The prop supportVariable SHOULD take precedence over default global supportVariable.
 * @param propSupportVariable prop supportVariable
 * @param globalSupportVariable global supportVariable
 * @returns
 */
function shouldUseVariableSetter(propSupportVariable, globalSupportVariable) {
  if (propSupportVariable === false) return false;
  return propSupportVariable || globalSupportVariable;
}
// CONCATENATED MODULE: ../utils/src/schema.ts
function schema_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function schema_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? schema_ownKeys(Object(t), !0).forEach(function (r) { schema_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : schema_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function schema_defineProperty(e, r, t) { return (r = schema_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function schema_toPropertyKey(t) { var i = schema_toPrimitive(t, "string"); return "symbol" == schema_typeof(i) ? i : i + ""; }
function schema_toPrimitive(t, r) { if ("object" != schema_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != schema_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || schema_unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function schema_createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = schema_unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t.return || t.return(); } finally { if (u) throw o; } } }; }
function schema_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return schema_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? schema_arrayLikeToArray(r, a) : void 0; } }
function schema_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function schema_typeof(o) { "@babel/helpers - typeof"; return schema_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, schema_typeof(o); }




function isJsObject(props) {
  if (schema_typeof(props) === 'object' && props !== null) {
    return props.type && props.source && props.compiled;
  }
}
function isActionRef(props) {
  return props.type && props.type === 'actionRef';
}
/**
 * 将「乐高版本」协议升级成 JSExpression / JSSlot 等标准协议的结构
 * @param props
 * @returns
 */
function compatibleLegaoSchema(props) {
  if (!props) {
    return props;
  }
  if (Array.isArray(props)) {
    return props.map(function (k) {
      return compatibleLegaoSchema(k);
    });
  }
  if (!isPlainObject(props)) {
    return props;
  }
  if (isJSBlock(props)) {
    if (props.value.componentName === 'Slot') {
      var _props$value$props, _props$value$props2, _props$value$props3;
      return {
        type: 'JSSlot',
        title: (_props$value$props = props.value.props) === null || _props$value$props === void 0 ? void 0 : _props$value$props.slotTitle,
        name: (_props$value$props2 = props.value.props) === null || _props$value$props2 === void 0 ? void 0 : _props$value$props2.slotName,
        value: compatibleLegaoSchema(props.value.children),
        params: (_props$value$props3 = props.value.props) === null || _props$value$props3 === void 0 ? void 0 : _props$value$props3.slotParams
      };
    } else {
      return props.value;
    }
  }
  if (isVariable(props)) {
    return {
      type: 'JSExpression',
      value: props.variable,
      mock: props.value
    };
  }
  if (isJsObject(props)) {
    return {
      type: 'JSExpression',
      value: props.compiled,
      extType: 'function'
    };
  }
  if (isActionRef(props)) {
    return {
      type: 'JSExpression',
      value: "".concat(props.id, ".bind(this)")
    };
  }
  var newProps = {};
  Object.keys(props).forEach(function (key) {
    if (/^__slot__/.test(key) && props[key] === true) {
      return;
    }
    // TODO: 先移除，目前没有业务使用
    // if (key === 'dataSource') {
    //   newProps[key] = props[key];
    //   return;
    // }
    newProps[key] = compatibleLegaoSchema(props[key]);
  });
  return newProps;
}
function getNodeSchemaById(schema, nodeId) {
  var found;
  if (schema.id === nodeId) {
    return schema;
  }
  var children = schema.children,
    props = schema.props;
  // 查找 children
  if (Array.isArray(children)) {
    var _iterator = schema_createForOfIteratorHelper(children),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var child = _step.value;
        found = getNodeSchemaById(child, nodeId);
        if (found) return found;
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }
  if (isPlainObject(props)) {
    // 查找 props，主要是 slot 类型
    found = getNodeSchemaFromPropsById(props, nodeId);
    if (found) return found;
  }
}
function getNodeSchemaFromPropsById(props, nodeId) {
  var found;
  for (var _i = 0, _Object$entries = Object.entries(props); _i < _Object$entries.length; _i++) {
    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),
      _key = _Object$entries$_i[0],
      value = _Object$entries$_i[1];
    if (isJSSlot(value)) {
      // value 是数组类型 { type: 'JSSlot', value: IPublicTypeNodeSchema[] }
      if (Array.isArray(value.value)) {
        var _iterator2 = schema_createForOfIteratorHelper(value.value),
          _step2;
        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var child = _step2.value;
            found = getNodeSchemaById(child, nodeId);
            if (found) return found;
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      }
      // value 是对象类型 { type: 'JSSlot', value: IPublicTypeNodeSchema }
      found = getNodeSchemaById(value.value, nodeId);
      if (found) return found;
    } else if (isPlainObject(value)) {
      found = getNodeSchemaFromPropsById(value, nodeId);
      if (found) return found;
    }
  }
}
/**
 * TODO: not sure if this is used anywhere
 * @deprecated
 */
function applyActivities(pivotSchema, activities) {
  var schema = schema_objectSpread({}, pivotSchema);
  if (!Array.isArray(activities)) {
    activities = [activities];
  }
  return activities.reduce(function (accSchema, activity) {
    if (activity.type === types_src["a" /* ActivityType */].MODIFIED) {
      var found = getNodeSchemaById(accSchema, activity.payload.schema.id);
      if (!found) return accSchema;
      Object.assign(found, activity.payload.schema);
    } else if (activity.type === types_src["a" /* ActivityType */].ADDED) {
      var payload = activity.payload;
      var location = payload.location,
        _schema = payload.schema;
      var parent = location.parent;
      var _found = getNodeSchemaById(accSchema, parent.nodeId);
      if (_found) {
        if (Array.isArray(_found.children)) {
          _found.children.splice(parent.index, 0, _schema);
        } else if (!_found.children) {
          _found.children = [_schema];
        }
        // TODO: 是 JSExpression / DOMText
      }
    } else if (activity.type === types_src["a" /* ActivityType */].DELETED) {
      var _payload = activity.payload;
      var _location = _payload.location;
      var _parent = _location.parent;
      var _found2 = getNodeSchemaById(accSchema, _parent.nodeId);
      if (_found2 && Array.isArray(_found2.children)) {
        _found2.children.splice(_parent.index, 1);
      }
    }
    return accSchema;
  }, schema);
}
// CONCATENATED MODULE: ../utils/src/node-helper.ts
var _getClosestNode = function getClosestNode(node, until) {
  if (!node) {
    return undefined;
  }
  if (until(node)) {
    return node;
  } else {
    // @ts-ignore
    return _getClosestNode(node.parent, until);
  }
};
/**
 * 判断节点是否可被点击
 * @param {Node} node 节点
 * @param {unknown} e 点击事件
 * @returns {boolean} 是否可点击，true表示可点击
 */

function canClickNode(node, e) {
  var _node$componentMeta, _node$componentMeta$a, _node$componentMeta$a2;
  var onClickHook = (_node$componentMeta = node.componentMeta) === null || _node$componentMeta === void 0 ? void 0 : (_node$componentMeta$a = _node$componentMeta.advanced) === null || _node$componentMeta$a === void 0 ? void 0 : (_node$componentMeta$a2 = _node$componentMeta$a.callbacks) === null || _node$componentMeta$a2 === void 0 ? void 0 : _node$componentMeta$a2.onClickHook;
  var canClick = typeof onClickHook === 'function' ? onClickHook(e, node) : true;
  return canClick;
}
// CONCATENATED MODULE: ../utils/src/is-shaken.ts
var SHAKE_DISTANCE = 4;
/**
 * mouse shake check
 */
function isShaken(e1, e2) {
  if (e1.shaken) {
    return true;
  }
  if (e1.target !== e2.target) {
    return true;
  }
  return Math.pow(e1.clientY - e2.clientY, 2) + Math.pow(e1.clientX - e2.clientX, 2) > SHAKE_DISTANCE;
}
// CONCATENATED MODULE: ../utils/src/is-plugin-event-name.ts
function isPluginEventName(eventName) {
  if (!eventName) {
    return false;
  }
  var eventSegments = eventName.split(':');
  return eventSegments.length > 1 && eventSegments[0].length > 0;
}
// CONCATENATED MODULE: ../utils/src/css-helper.ts
/**
 * just for legao
 * @author: jiushen
 */
// 需要通过 Env 来判断是否需要

var pseudoMap = ['hover', 'focus', 'active', 'visited'];
var RE_CAMEL = /[A-Z]/g;
var RE_HYPHEN = /[-\s]+(.)?/g;
var PROPS_REG = /([^:]*):\s?(.*)/i;
// 给 css 分组
function groupingCss(css) {
  var stackLength = 0;
  var startIndex = 0;
  var group = [];
  css.split('').forEach(function (_char, index) {
    if (_char === '{') {
      stackLength++;
    }
    if (_char === '}') {
      if (stackLength === 1) {
        group.push(css.substring(startIndex, index + 1));
        startIndex = index + 1;
      }
      stackLength--;
    }
  });
  return group;
}
function css_helper_isString(str) {
  return {}.toString.call(str) === '[object String]';
}
function hyphenate(str) {
  return str.replace(RE_CAMEL, function (w) {
    return "-".concat(w);
  }).toLowerCase();
}
function camelize(str) {
  return str.replace(RE_HYPHEN, function (m, w) {
    return w ? w.toUpperCase() : '';
  });
}
/**
 * convert
 * {background-color: "red"}
 * to
 * background-color: red;
 */
function runtimeToCss(runtime) {
  var css = [];
  Object.keys(runtime).forEach(function (key) {
    css.push("  ".concat(key, ": ").concat(runtime[key], ";"));
  });
  return css.join('\n');
}
function toNativeStyle(runtime) {
  if (!runtime) {
    return {};
  }
  if (runtime.default) {
    var _normalized = {};
    Object.keys(runtime).forEach(function (pseudo) {
      if (pseudo === 'extra') {
        _normalized[pseudo] = runtime[pseudo];
        return;
      }
      _normalized[pseudo] = toNativeStyle(runtime[pseudo]);
    });
    return _normalized;
  }
  var normalized = {};
  Object.keys(runtime).forEach(function (key) {
    normalized[camelize(key)] = runtime[key];
  });
  return normalized;
}
function normalizeStyle(style) {
  if (!style) {
    return {};
  }
  if (style.default) {
    var _normalized2 = {};
    Object.keys(style).forEach(function (pseudo) {
      if (pseudo === 'extra') {
        _normalized2[pseudo] = style[pseudo];
        return;
      }
      _normalized2[pseudo] = normalizeStyle(style[pseudo]);
    });
    return _normalized2;
  }
  var normalized = {};
  Object.keys(style).forEach(function (key) {
    normalized[hyphenate(key)] = style[key];
  });
  return normalized;
}
function toCss(runtime) {
  if (!runtime) {
    return ":root {\n\n}";
  }
  if (runtime.default) {
    var css = [];
    Object.keys(runtime).forEach(function (pseudo) {
      if (pseudo === 'extra') {
        Array.isArray(runtime.extra) && css.push(runtime.extra.join('\n'));
        return;
      }
      // 只需要对这四种做兼容
      var prefix = pseudoMap.indexOf(pseudo) > -1 ? ':' : '';
      css.push(":root".concat(pseudo === 'default' ? '' : "".concat(prefix).concat(pseudo), " {\n").concat(runtimeToCss(normalizeStyle(runtime[pseudo])), "\n}\n"));
    });
    return css.join('\n');
  }
  return ":root {\n".concat(runtimeToCss(normalizeStyle(runtime)), "\n}\n");
}
function cssToRuntime(css) {
  if (!css) {
    return {};
  }
  var runtime = {};
  var groups = groupingCss(css);
  groups.forEach(function (cssItem) {
    if (!cssItem.startsWith(':root')) {
      runtime.extra = runtime.extra || [];
      runtime.extra.push(cssItem.trim());
    } else {
      var res = /:root:?(.*)?{(.*)/ig.exec(cssItem.replace(/[\r\n]+/ig, '').trim());
      if (res) {
        var pseudo;
        if (res[1] && res[1].trim() && Object(external_["some"])(pseudoMap, function (pse) {
          return res[1].indexOf(pse) === 0;
        })) {
          pseudo = res[1].trim();
        } else if (res[1] && res[1].trim()) {
          pseudo = res[1];
        }
        var s = {};
        res[2].split(';').reduce(function (prev, next) {
          if (next.indexOf('base64') > -1) {
            prev[prev.length - 1] += ";".concat(next);
          } else {
            prev.push(next);
          }
          return prev;
        }, []).forEach(function (item) {
          if (item) {
            if (PROPS_REG.test(item)) {
              var props = item.match(PROPS_REG);
              var key = props === null || props === void 0 ? void 0 : props[1];
              var value = props === null || props === void 0 ? void 0 : props[2];
              if (key && value) {
                s[key.trim()] = value.trim();
              }
            }
          }
        });
        runtime[pseudo || 'default'] = s;
      }
    }
  });
  return runtime;
}
function cssToStyle(css) {
  try {
    if (css_helper_isString(css)) {
      return toNativeStyle(cssToRuntime(css).default);
    }
    if (css.default) {
      return toNativeStyle(normalizeStyle(css.default));
    }
    return toNativeStyle(normalizeStyle(css));
  } catch (e) {
    // do nothing
  }
  return {};
}

// EXTERNAL MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/mobx/dist/mobx.esm.js
var mobx_esm = __webpack_require__(7);

// CONCATENATED MODULE: ../utils/src/transaction-manager.ts
function transaction_manager_typeof(o) { "@babel/helpers - typeof"; return transaction_manager_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, transaction_manager_typeof(o); }
function transaction_manager_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, transaction_manager_toPropertyKey(o.key), o); } }
function transaction_manager_createClass(e, r, t) { return r && transaction_manager_defineProperties(e.prototype, r), t && transaction_manager_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function transaction_manager_toPropertyKey(t) { var i = transaction_manager_toPrimitive(t, "string"); return "symbol" == transaction_manager_typeof(i) ? i : i + ""; }
function transaction_manager_toPrimitive(t, r) { if ("object" != transaction_manager_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != transaction_manager_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function transaction_manager_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }



var transaction_manager_TransactionManager = /*#__PURE__*/transaction_manager_createClass(function TransactionManager() {
  var _this = this;
  transaction_manager_classCallCheck(this, TransactionManager);
  this.emitter = new events_default.a();
  this.executeTransaction = function (fn) {
    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : types_src["j" /* IPublicEnumTransitionType */].REPAINT;
    _this.emitter.emit("[".concat(type, "]startTransaction"));
    Object(mobx_esm["runInAction"])(fn);
    _this.emitter.emit("[".concat(type, "]endTransaction"));
  };
  this.onStartTransaction = function (fn) {
    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : types_src["j" /* IPublicEnumTransitionType */].REPAINT;
    _this.emitter.on("[".concat(type, "]startTransaction"), fn);
    return function () {
      _this.emitter.off("[".concat(type, "]startTransaction"), fn);
    };
  };
  this.onEndTransaction = function (fn) {
    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : types_src["j" /* IPublicEnumTransitionType */].REPAINT;
    _this.emitter.on("[".concat(type, "]endTransaction"), fn);
    return function () {
      _this.emitter.off("[".concat(type, "]endTransaction"), fn);
    };
  };
});
var transactionManager = new transaction_manager_TransactionManager();
// CONCATENATED MODULE: ../utils/src/workspace.tsx
function workspace_extends() { return workspace_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, workspace_extends.apply(null, arguments); }
function workspace_slicedToArray(r, e) { return workspace_arrayWithHoles(r) || workspace_iterableToArrayLimit(r, e) || workspace_unsupportedIterableToArray(r, e) || workspace_nonIterableRest(); }
function workspace_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function workspace_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return workspace_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? workspace_arrayLikeToArray(r, a) : void 0; } }
function workspace_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function workspace_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function workspace_arrayWithHoles(r) { if (Array.isArray(r)) return r; }


/**
 * 高阶组件（HOC）：为组件提供 view 插件上下文。
 *
 * @param {React.ComponentType} Component - 需要被封装的组件。
 * @param {string|string[]} viewName - 视图名称或视图名称数组，用于过滤特定的视图插件上下文。
 * @returns {React.ComponentType} 返回封装后的组件。
 *
 * @example
 * // 用法示例（函数组件）:
 * const EnhancedComponent = ProvideViewPluginContext(MyComponent, "viewName");
 */
var workspace_ProvideViewPluginContext = function ProvideViewPluginContext(Component, viewName) {
  // 创建一个新的函数组件，以便在其中使用 Hooks
  return function WithPluginContext(props) {
    var _props$pluginContext;
    var getPluginContextFun = Object(external_window_React_["useCallback"])(function (editorWindow) {
      if (!(editorWindow !== null && editorWindow !== void 0 && editorWindow.currentEditorView)) {
        return null;
      }
      if (viewName) {
        var items = editorWindow === null || editorWindow === void 0 ? void 0 : editorWindow.editorViews.filter(function (d) {
          return d.viewName === viewName || Array.isArray(viewName) && viewName.includes(d.viewName);
        });
        return items[0];
      } else {
        return editorWindow.currentEditorView;
      }
    }, []);
    var _ref = props.pluginContext || {},
      workspace = _ref.workspace;
    var _useState = Object(external_window_React_["useState"])(getPluginContextFun(workspace === null || workspace === void 0 ? void 0 : workspace.window)),
      _useState2 = workspace_slicedToArray(_useState, 2),
      pluginContext = _useState2[0],
      setPluginContext = _useState2[1];
    Object(external_window_React_["useEffect"])(function () {
      if (workspace !== null && workspace !== void 0 && workspace.window) {
        var ctx = getPluginContextFun(workspace.window);
        ctx && setPluginContext(ctx);
      }
      return workspace === null || workspace === void 0 ? void 0 : workspace.onChangeActiveEditorView(function () {
        var ctx = getPluginContextFun(workspace.window);
        ctx && setPluginContext(ctx);
      });
    }, [workspace, getPluginContextFun]);
    if (((_props$pluginContext = props.pluginContext) === null || _props$pluginContext === void 0 ? void 0 : _props$pluginContext.registerLevel) !== types_src["h" /* IPublicEnumPluginRegisterLevel */].Workspace || !props.pluginContext) {
      return /*#__PURE__*/external_window_React_default.a.createElement(Component, props);
    }
    return /*#__PURE__*/external_window_React_default.a.createElement(Component, workspace_extends({}, props, {
      pluginContext: pluginContext
    }));
  };
};
// EXTERNAL MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/classnames/index.js
var classnames = __webpack_require__(6);
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);

// EXTERNAL MODULE: ../utils/src/context-menu.scss
var context_menu = __webpack_require__(67);

// CONCATENATED MODULE: ../utils/src/context-menu.tsx
function context_menu_extends() { return context_menu_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, context_menu_extends.apply(null, arguments); }






var context_menu_logger = new Logger({
  level: 'warn',
  bizName: 'utils'
});
var Item = external_Next_["Menu"].Item,
  Divider = external_Next_["Menu"].Divider,
  PopupItem = external_Next_["Menu"].PopupItem;
var MAX_LEVEL = 2;
var _Tree = function Tree(props) {
  var _props$options$nodes;
  var node = props.node;
  if (!node) {
    return /*#__PURE__*/external_window_React_default.a.createElement("div", {
      className: "engine-context-menu-tree-wrap"
    }, props.children);
  }
  var _ref = props.options.pluginContext || {},
    common = _ref.common;
  var _ref2 = (common === null || common === void 0 ? void 0 : common.utils) || {},
    intl = _ref2.intl;
  var indent = node.zLevel * 8 + 32;
  var style = {
    paddingLeft: indent,
    marginLeft: -indent,
    marginRight: -10,
    paddingRight: 10
  };
  return /*#__PURE__*/external_window_React_default.a.createElement(_Tree, context_menu_extends({}, props, {
    node: node.parent
  }), /*#__PURE__*/external_window_React_default.a.createElement("div", {
    className: "engine-context-menu-title",
    onClick: function onClick() {
      var _props$options$destro, _props$options;
      (_props$options$destro = (_props$options = props.options).destroy) === null || _props$options$destro === void 0 ? void 0 : _props$options$destro.call(_props$options);
      node.select();
    },
    style: style
  }, ((_props$options$nodes = props.options.nodes) === null || _props$options$nodes === void 0 ? void 0 : _props$options$nodes[0].id) === node.id ? /*#__PURE__*/external_window_React_default.a.createElement(external_Next_["Icon"], {
    className: "engine-context-menu-tree-selecte-icon",
    size: "small",
    type: "success"
  }) : null, intl(node.title)), /*#__PURE__*/external_window_React_default.a.createElement("div", {
    className: "engine-context-menu-tree-children"
  }, props.children));
};
var destroyFn;
function parseContextMenuAsReactNode(menus, options) {
  var _ref3 = options.pluginContext || {},
    common = _ref3.common,
    commonUI = _ref3.commonUI;
  var _ref4 = (common === null || common === void 0 ? void 0 : common.utils) || {},
    _ref4$intl = _ref4.intl,
    intl = _ref4$intl === void 0 ? function (title) {
      return title;
    } : _ref4$intl;
  var _ref5 = commonUI || {},
    HelpTip = _ref5.HelpTip;
  var children = [];
  menus.forEach(function (menu, index) {
    if (menu.type === types_src["f" /* IPublicEnumContextMenuType */].SEPARATOR) {
      children.push(/*#__PURE__*/external_window_React_default.a.createElement(Divider, {
        key: menu.name || index
      }));
      return;
    }
    if (menu.type === types_src["f" /* IPublicEnumContextMenuType */].MENU_ITEM) {
      if (menu.items && menu.items.length) {
        children.push(/*#__PURE__*/external_window_React_default.a.createElement(PopupItem, {
          className: classnames_default()('engine-context-menu-item', {
            disabled: menu.disabled
          }),
          key: menu.name,
          label: /*#__PURE__*/external_window_React_default.a.createElement("div", {
            className: "engine-context-menu-text"
          }, intl(menu.title))
        }, /*#__PURE__*/external_window_React_default.a.createElement(external_Next_["Menu"], {
          className: "next-context engine-context-menu"
        }, parseContextMenuAsReactNode(menu.items, options))));
      } else {
        children.push(/*#__PURE__*/external_window_React_default.a.createElement(Item, {
          className: classnames_default()('engine-context-menu-item', {
            disabled: menu.disabled
          }),
          disabled: menu.disabled,
          onClick: function onClick() {
            var _menu$action;
            (_menu$action = menu.action) === null || _menu$action === void 0 ? void 0 : _menu$action.call(menu);
          },
          key: menu.name
        }, /*#__PURE__*/external_window_React_default.a.createElement("div", {
          className: "engine-context-menu-text"
        }, menu.title ? intl(menu.title) : null, menu.help ? /*#__PURE__*/external_window_React_default.a.createElement(HelpTip, {
          size: "xs",
          help: menu.help,
          direction: "right"
        }) : null)));
      }
    }
    if (menu.type === types_src["f" /* IPublicEnumContextMenuType */].NODE_TREE) {
      var _options$nodes;
      children.push(/*#__PURE__*/external_window_React_default.a.createElement(_Tree, {
        node: (_options$nodes = options.nodes) === null || _options$nodes === void 0 ? void 0 : _options$nodes[0],
        options: options
      }));
    }
  });
  return children;
}
function parseContextMenuProperties(menus, options) {
  var _destroyFn;
  var level = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
  (_destroyFn = destroyFn) === null || _destroyFn === void 0 ? void 0 : _destroyFn();
  var nodes = options.nodes,
    destroy = options.destroy;
  if (level > MAX_LEVEL) {
    context_menu_logger.warn('context menu level is too deep, please check your context menu config');
    return [];
  }
  return menus.filter(function (menu) {
    return !menu.condition || menu.condition && menu.condition(nodes || []);
  }).map(function (menu) {
    var name = menu.name,
      title = menu.title,
      _menu$type = menu.type,
      type = _menu$type === void 0 ? types_src["f" /* IPublicEnumContextMenuType */].MENU_ITEM : _menu$type,
      help = menu.help;
    var result = {
      name: name,
      title: title,
      type: type,
      help: help,
      action: function action() {
        var _menu$action2;
        destroy === null || destroy === void 0 ? void 0 : destroy();
        (_menu$action2 = menu.action) === null || _menu$action2 === void 0 ? void 0 : _menu$action2.call(menu, nodes || [], options.event);
      },
      disabled: menu.disabled && menu.disabled(nodes || []) || false
    };
    if ('items' in menu && menu.items) {
      result.items = parseContextMenuProperties(typeof menu.items === 'function' ? menu.items(nodes || []) : menu.items, options, level + 1);
    }
    return result;
  }).reduce(function (menus, currentMenu) {
    if (!currentMenu.name) {
      return menus.concat([currentMenu]);
    }
    var index = menus.find(function (item) {
      return item.name === currentMenu.name;
    });
    if (!index) {
      return menus.concat([currentMenu]);
    } else {
      return menus;
    }
  }, []);
}
var cachedMenuItemHeight;
function getMenuItemHeight() {
  if (cachedMenuItemHeight) {
    return cachedMenuItemHeight;
  }
  var root = document.documentElement;
  var styles = getComputedStyle(root);
  var menuItemHeight = styles.getPropertyValue('--context-menu-item-height').trim();
  cachedMenuItemHeight = menuItemHeight;
  return menuItemHeight;
}
function createContextMenu(children, _ref6) {
  var event = _ref6.event,
    _ref6$offset = _ref6.offset,
    offset = _ref6$offset === void 0 ? [0, 0] : _ref6$offset;
  event.preventDefault();
  event.stopPropagation();
  var viewportWidth = window.innerWidth;
  var viewportHeight = window.innerHeight;
  var dividerCount = external_window_React_default.a.Children.count(children.filter(function (child) {
    return /*#__PURE__*/external_window_React_default.a.isValidElement(child) && child.type === Divider;
  }));
  var popupItemCount = external_window_React_default.a.Children.count(children.filter(function (child) {
    return /*#__PURE__*/external_window_React_default.a.isValidElement(child) && (child.type === PopupItem || child.type === Item);
  }));
  var menuHeight = popupItemCount * parseInt(getMenuItemHeight(), 10) + dividerCount * 8 + 16;
  var menuWidthLimit = 200;
  var x = event.clientX + offset[0];
  var y = event.clientY + offset[1];
  if (x + menuWidthLimit > viewportWidth) {
    x = x - menuWidthLimit;
  }
  if (y + menuHeight > viewportHeight) {
    y = y - menuHeight;
  }
  var menuInstance = external_Next_["Menu"].create({
    target: document.body,
    offset: [x, y],
    children: children,
    className: 'engine-context-menu'
  });
  destroyFn = menuInstance.destroy;
  return destroyFn;
}
// EXTERNAL MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/react-is/index.js
var react_is = __webpack_require__(39);

// EXTERNAL MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/prop-types/lib/ReactPropTypesSecret.js
var ReactPropTypesSecret = __webpack_require__(40);
var ReactPropTypesSecret_default = /*#__PURE__*/__webpack_require__.n(ReactPropTypesSecret);

// EXTERNAL MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/prop-types/factoryWithTypeCheckers.js
var factoryWithTypeCheckers = __webpack_require__(58);
var factoryWithTypeCheckers_default = /*#__PURE__*/__webpack_require__.n(factoryWithTypeCheckers);

// CONCATENATED MODULE: ../utils/src/check-prop-types.ts
function check_prop_types_defineProperty(e, r, t) { return (r = check_prop_types_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function check_prop_types_toPropertyKey(t) { var i = check_prop_types_toPrimitive(t, "string"); return "symbol" == check_prop_types_typeof(i) ? i : i + ""; }
function check_prop_types_toPrimitive(t, r) { if ("object" != check_prop_types_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != check_prop_types_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function check_prop_types_typeof(o) { "@babel/helpers - typeof"; return check_prop_types_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, check_prop_types_typeof(o); }





var PropTypes2 = factoryWithTypeCheckers_default()(react_is["isElement"], true);
var check_prop_types_logger = new Logger({
  level: 'warn',
  bizName: 'utils'
});
function transformPropTypesRuleToString(rule) {
  if (!rule) {
    return 'PropTypes.any';
  }
  if (typeof rule === 'string') {
    return rule.startsWith('PropTypes.') ? rule : "PropTypes.".concat(rule);
  }
  if (isRequiredPropType(rule)) {
    var _type = rule.type,
      isRequired = rule.isRequired;
    return "PropTypes.".concat(_type).concat(isRequired ? '.isRequired' : '');
  }
  var type = rule.type,
    value = rule.value;
  switch (type) {
    case 'oneOf':
      return "PropTypes.oneOf([".concat(value.map(function (item) {
        return "\"".concat(item, "\"");
      }).join(','), "])");
    case 'oneOfType':
      return "PropTypes.oneOfType([".concat(value.map(function (item) {
        return transformPropTypesRuleToString(item);
      }).join(', '), "])");
    case 'arrayOf':
    case 'objectOf':
      return "PropTypes.".concat(type, "(").concat(transformPropTypesRuleToString(value), ")");
    case 'shape':
    case 'exact':
      return "PropTypes.".concat(type, "({").concat(value.map(function (item) {
        return "".concat(item.name, ": ").concat(transformPropTypesRuleToString(item.propType));
      }).join(','), "})");
    default:
      check_prop_types_logger.error("Unknown prop type: ".concat(type));
  }
  return 'PropTypes.any';
}
function checkPropTypes(value, name, rule, componentName) {
  var ruleFunction = rule;
  if (check_prop_types_typeof(rule) === 'object') {
    // eslint-disable-next-line no-new-func
    ruleFunction = new Function("\"use strict\"; const PropTypes = arguments[0]; return ".concat(transformPropTypesRuleToString(rule)))(PropTypes2);
  }
  if (typeof rule === 'string') {
    // eslint-disable-next-line no-new-func
    ruleFunction = new Function("\"use strict\"; const PropTypes = arguments[0]; return ".concat(transformPropTypesRuleToString(rule)))(PropTypes2);
  }
  if (!ruleFunction || typeof ruleFunction !== 'function') {
    check_prop_types_logger.warn('checkPropTypes should have a function type rule argument');
    return true;
  }
  var err = ruleFunction(check_prop_types_defineProperty({}, name, value), name, componentName, 'prop', null, ReactPropTypesSecret_default.a);
  if (err) {
    check_prop_types_logger.warn(err);
  }
  return !err;
}
// CONCATENATED MODULE: ../utils/src/index.ts





































/***/ }),
/* 4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "a", function() { return /* reexport */ ActivityType; });
__webpack_require__.d(__webpack_exports__, "b", function() { return /* reexport */ AssetLevel; });
__webpack_require__.d(__webpack_exports__, "c", function() { return /* reexport */ AssetLevels; });
__webpack_require__.d(__webpack_exports__, "d", function() { return /* reexport */ AssetType; });
__webpack_require__.d(__webpack_exports__, "e", function() { return /* reexport */ event_namespaceObject; });
__webpack_require__.d(__webpack_exports__, "k", function() { return /* reexport */ IPublicTypeLocationDetailType; });
__webpack_require__.d(__webpack_exports__, "j", function() { return /* reexport */ IPublicEnumTransitionType; });
__webpack_require__.d(__webpack_exports__, "i", function() { return /* reexport */ IPublicEnumTransformStage; });
__webpack_require__.d(__webpack_exports__, "g", function() { return /* reexport */ IPublicEnumDragObjectType; });
__webpack_require__.d(__webpack_exports__, "h", function() { return /* reexport */ IPublicEnumPluginRegisterLevel; });
__webpack_require__.d(__webpack_exports__, "f", function() { return /* reexport */ IPublicEnumContextMenuType; });

// UNUSED EXPORTS: RuntimeDataSourceStatus, LocationDetailType, IPublicModelDragObject, IPublicEnumEventNames, TransitionType, TransformStage, DragObjectType, IPublicEnumPropValueChangedType, PROP_VALUE_CHANGED_TYPE, isActionContentObject, isCustomView, isDOMText, isDynamicSetter, isI18nData, isJSBlock, isJSExpression, isJSFunction, isJSSlot, isLowCodeComponentType, isNodeSchema, isPlainObject, isProCodeComponentType, isProjectSchema, isReactClass, isReactComponent, isSetterConfig, isTitleConfig

// NAMESPACE OBJECT: ../types/src/event/prop.ts
var prop_namespaceObject = {};
__webpack_require__.r(prop_namespaceObject);
__webpack_require__.d(prop_namespaceObject, "Change", function() { return Change; });
__webpack_require__.d(prop_namespaceObject, "InnerChange", function() { return InnerChange; });

// NAMESPACE OBJECT: ../types/src/event/node.ts
var node_namespaceObject = {};
__webpack_require__.r(node_namespaceObject);
__webpack_require__.d(node_namespaceObject, "Prop", function() { return prop_namespaceObject; });
__webpack_require__.d(node_namespaceObject, "Rerender", function() { return Rerender; });

// NAMESPACE OBJECT: ../types/src/event/index.ts
var event_namespaceObject = {};
__webpack_require__.r(event_namespaceObject);
__webpack_require__.d(event_namespaceObject, "Node", function() { return node_namespaceObject; });

// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/@alilc/lowcode-datasource-types/es/data-source.js
/** 数据源的状态 */
var RuntimeDataSourceStatus;
(function (RuntimeDataSourceStatus) {
    /** 初始状态，尚未加载 */
    RuntimeDataSourceStatus["Initial"] = "init";
    /** 正在加载 */
    RuntimeDataSourceStatus["Loading"] = "loading";
    /** 已加载(无错误) */
    RuntimeDataSourceStatus["Loaded"] = "loaded";
    /** 加载出错了 */
    RuntimeDataSourceStatus["Error"] = "error";
})(RuntimeDataSourceStatus || (RuntimeDataSourceStatus = {}));
//# sourceMappingURL=data-source.js.map
// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/@alilc/lowcode-datasource-types/es/data-source-handlers.js

//# sourceMappingURL=data-source-handlers.js.map
// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/@alilc/lowcode-datasource-types/es/data-source-interpret.js

//# sourceMappingURL=data-source-interpret.js.map
// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/@alilc/lowcode-datasource-types/es/data-source-runtime.js

//# sourceMappingURL=data-source-runtime.js.map
// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/@alilc/lowcode-datasource-types/es/value-type.js

//# sourceMappingURL=value-type.js.map
// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/@alilc/lowcode-datasource-types/es/ExtraConfig.js

//# sourceMappingURL=ExtraConfig.js.map
// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/@alilc/lowcode-datasource-types/es/index.js






//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../types/src/editor.ts

// CONCATENATED MODULE: ../types/src/activity.ts
var ActivityType;
(function (ActivityType) {
  ActivityType["ADDED"] = "added";
  ActivityType["DELETED"] = "deleted";
  ActivityType["MODIFIED"] = "modified";
  ActivityType["COMPOSITE"] = "composite";
})(ActivityType || (ActivityType = {}));
// CONCATENATED MODULE: ../types/src/code-intermediate.ts

// CONCATENATED MODULE: ../types/src/code-result.ts

// CONCATENATED MODULE: ../types/src/assets.ts
var AssetLevel;
(function (AssetLevel) {
  // 环境依赖库 比如 react, react-dom
  AssetLevel[AssetLevel["Environment"] = 1] = "Environment";
  // 基础类库，比如 lodash deep fusion antd
  AssetLevel[AssetLevel["Library"] = 2] = "Library";
  // 主题
  AssetLevel[AssetLevel["Theme"] = 3] = "Theme";
  // 运行时
  AssetLevel[AssetLevel["Runtime"] = 4] = "Runtime";
  // 业务组件
  AssetLevel[AssetLevel["Components"] = 5] = "Components";
  // 应用 & 页面
  AssetLevel[AssetLevel["App"] = 6] = "App";
})(AssetLevel || (AssetLevel = {}));
var AssetLevels = [AssetLevel.Environment, AssetLevel.Library, AssetLevel.Theme, AssetLevel.Runtime, AssetLevel.Components, AssetLevel.App];
var AssetType;
(function (AssetType) {
  AssetType["JSUrl"] = "jsUrl";
  AssetType["CSSUrl"] = "cssUrl";
  AssetType["CSSText"] = "cssText";
  AssetType["JSText"] = "jsText";
  AssetType["Bundle"] = "bundle";
})(AssetType || (AssetType = {}));
// CONCATENATED MODULE: ../types/src/event/prop.ts
/**
 * Node Prop 变化事件
 * @Deprecated Please Replace With InnerPropChange
 */
var Change = 'node.prop.change';
/** Node Prop 变化事件 */
var InnerChange = 'node.innerProp.change';
// CONCATENATED MODULE: ../types/src/event/node.ts


var Rerender = 'node.edit.rerender.time';
// CONCATENATED MODULE: ../types/src/event/index.ts


// CONCATENATED MODULE: ../types/src/shell/type/location.ts
// eslint-disable-next-line no-shadow
var IPublicTypeLocationDetailType;
(function (IPublicTypeLocationDetailType) {
  IPublicTypeLocationDetailType["Children"] = "Children";
  IPublicTypeLocationDetailType["Prop"] = "Prop";
})(IPublicTypeLocationDetailType || (IPublicTypeLocationDetailType = {}));
/**
 * @deprecated please use IPublicTypeLocationDetailType
 */
var LocationDetailType;
(function (LocationDetailType) {
  LocationDetailType["Children"] = "Children";
  LocationDetailType["Prop"] = "Prop";
})(LocationDetailType || (LocationDetailType = {}));
// CONCATENATED MODULE: ../types/src/shell/type/active-target.ts

// CONCATENATED MODULE: ../types/src/shell/type/component-instance.ts

// CONCATENATED MODULE: ../types/src/shell/type/node-schema.ts

// CONCATENATED MODULE: ../types/src/shell/type/disposable.ts

// CONCATENATED MODULE: ../types/src/shell/type/assets-json.ts

// CONCATENATED MODULE: ../types/src/shell/type/metadata-transducer.ts

// CONCATENATED MODULE: ../types/src/shell/type/component-action.ts

// CONCATENATED MODULE: ../types/src/shell/type/preference-value-type.ts

// CONCATENATED MODULE: ../types/src/shell/type/project-schema.ts

// CONCATENATED MODULE: ../types/src/shell/type/block-schema.ts

// CONCATENATED MODULE: ../types/src/shell/type/component-schema.ts

// CONCATENATED MODULE: ../types/src/shell/type/container-schema.ts

// CONCATENATED MODULE: ../types/src/shell/type/page-schema.ts

// CONCATENATED MODULE: ../types/src/shell/type/root-schema.ts

// CONCATENATED MODULE: ../types/src/shell/type/props-transducer.ts

// CONCATENATED MODULE: ../types/src/shell/type/registered-setter.ts

// CONCATENATED MODULE: ../types/src/shell/type/custom-view.ts

// CONCATENATED MODULE: ../types/src/shell/type/widget-base-config.ts

// CONCATENATED MODULE: ../types/src/shell/type/node-data.ts

// CONCATENATED MODULE: ../types/src/shell/type/icon-type.ts

// CONCATENATED MODULE: ../types/src/shell/type/transformed-component-metadata.ts

// CONCATENATED MODULE: ../types/src/shell/type/i8n-data.ts

// CONCATENATED MODULE: ../types/src/shell/type/npm-info.ts

// CONCATENATED MODULE: ../types/src/shell/type/drag-node-data-object.ts

// CONCATENATED MODULE: ../types/src/shell/type/drag-node-object.ts

// CONCATENATED MODULE: ../types/src/shell/type/prop-change-options.ts

// CONCATENATED MODULE: ../types/src/shell/type/drag-any-object.ts

// CONCATENATED MODULE: ../types/src/shell/type/drag-object.ts

// CONCATENATED MODULE: ../types/src/shell/type/composite-value.ts

// CONCATENATED MODULE: ../types/src/shell/type/props-map.ts

// CONCATENATED MODULE: ../types/src/shell/type/props-list.ts

// CONCATENATED MODULE: ../types/src/shell/type/plugin-config.ts

// CONCATENATED MODULE: ../types/src/shell/type/plugin-declaration-property.ts

// CONCATENATED MODULE: ../types/src/shell/type/plugin-declaration.ts

// CONCATENATED MODULE: ../types/src/shell/type/plugin-meta.ts

// CONCATENATED MODULE: ../types/src/shell/type/plugin-creater.ts

// CONCATENATED MODULE: ../types/src/shell/type/plugin.ts

// CONCATENATED MODULE: ../types/src/shell/type/setter-type.ts

// CONCATENATED MODULE: ../types/src/shell/type/set-value-options.ts

// CONCATENATED MODULE: ../types/src/shell/type/field-config.ts

// CONCATENATED MODULE: ../types/src/shell/type/field-extra-props.ts

// CONCATENATED MODULE: ../types/src/shell/type/component-sort.ts
/**
 * 用于描述组件面板中的 tab 和 category
 */

// CONCATENATED MODULE: ../types/src/shell/type/component-metadata.ts

// CONCATENATED MODULE: ../types/src/shell/type/reference.ts

// CONCATENATED MODULE: ../types/src/shell/type/component-description.ts

// CONCATENATED MODULE: ../types/src/shell/type/remote-component-description.ts

// CONCATENATED MODULE: ../types/src/shell/type/package.ts

// CONCATENATED MODULE: ../types/src/shell/type/action-content-object.ts

// CONCATENATED MODULE: ../types/src/shell/type/title-config.ts

// CONCATENATED MODULE: ../types/src/shell/type/title-content.ts

// CONCATENATED MODULE: ../types/src/shell/type/prop-config.ts

// CONCATENATED MODULE: ../types/src/shell/type/prop-types.ts

// CONCATENATED MODULE: ../types/src/shell/type/snippet.ts

// CONCATENATED MODULE: ../types/src/shell/type/advanced.ts

// CONCATENATED MODULE: ../types/src/shell/type/configure.ts

// CONCATENATED MODULE: ../types/src/shell/type/value-type.ts

// CONCATENATED MODULE: ../types/src/shell/type/tip-content.ts

// CONCATENATED MODULE: ../types/src/shell/type/metadata.ts

// CONCATENATED MODULE: ../types/src/shell/type/dynamic-setter.ts

// CONCATENATED MODULE: ../types/src/shell/type/icon-config.ts

// CONCATENATED MODULE: ../types/src/shell/type/dom-text.ts

// CONCATENATED MODULE: ../types/src/shell/type/i18n-map.ts

// CONCATENATED MODULE: ../types/src/shell/type/app-config.ts

// CONCATENATED MODULE: ../types/src/shell/type/npm.ts

// CONCATENATED MODULE: ../types/src/shell/type/dynamic-props.ts

// CONCATENATED MODULE: ../types/src/shell/type/setter-config.ts

// CONCATENATED MODULE: ../types/src/shell/type/tip-config.ts

// CONCATENATED MODULE: ../types/src/shell/type/widget-config-area.ts

// CONCATENATED MODULE: ../types/src/shell/type/hotkey-callback.ts

// CONCATENATED MODULE: ../types/src/shell/type/plugin-register-options.ts

// CONCATENATED MODULE: ../types/src/shell/type/resource-list.ts

// CONCATENATED MODULE: ../types/src/shell/type/engine-options.ts

// CONCATENATED MODULE: ../types/src/shell/type/on-change-options.ts

// CONCATENATED MODULE: ../types/src/shell/type/slot-schema.ts

// CONCATENATED MODULE: ../types/src/shell/type/node-data-type.ts

// CONCATENATED MODULE: ../types/src/shell/type/node-instance.ts

// CONCATENATED MODULE: ../types/src/shell/type/editor-value-key.ts

// CONCATENATED MODULE: ../types/src/shell/type/editor-get-options.ts

// CONCATENATED MODULE: ../types/src/shell/type/editor-get-result.ts

// CONCATENATED MODULE: ../types/src/shell/type/editor-register-options.ts

// CONCATENATED MODULE: ../types/src/shell/type/editor-view.ts

// CONCATENATED MODULE: ../types/src/shell/type/resource-type.ts

// CONCATENATED MODULE: ../types/src/shell/type/resource-type-config.ts

// CONCATENATED MODULE: ../types/src/shell/type/editor-view-config.ts

// CONCATENATED MODULE: ../types/src/shell/type/hotkey-callback-config.ts

// CONCATENATED MODULE: ../types/src/shell/type/hotkey-callbacks.ts

// CONCATENATED MODULE: ../types/src/shell/type/scrollable.ts

// CONCATENATED MODULE: ../types/src/shell/type/simulator-renderer.ts

// CONCATENATED MODULE: ../types/src/shell/type/config-transducer.ts

// CONCATENATED MODULE: ../types/src/shell/type/context-menu.ts

// CONCATENATED MODULE: ../types/src/shell/type/command.ts

// CONCATENATED MODULE: ../types/src/shell/type/index.ts
// this folder contains all interfaces/types working as type definition
//   - some exists as type TypeName
//   - some althought exists as interfaces , but there won`t be any class implements them.
// all of above cases will with prefix IPublicType, eg. IPublicTypeSomeName




























































































// CONCATENATED MODULE: ../types/src/shell/api/common.ts

// CONCATENATED MODULE: ../types/src/shell/api/event.ts

// CONCATENATED MODULE: ../types/src/shell/api/hotkey.ts

// CONCATENATED MODULE: ../types/src/shell/api/material.ts

// CONCATENATED MODULE: ../types/src/shell/api/project.ts

// CONCATENATED MODULE: ../types/src/shell/api/setters.ts

// CONCATENATED MODULE: ../types/src/shell/api/simulator-host.ts

// CONCATENATED MODULE: ../types/src/shell/api/skeleton.ts

// CONCATENATED MODULE: ../types/src/shell/api/plugins.ts

// CONCATENATED MODULE: ../types/src/shell/api/logger.ts

// CONCATENATED MODULE: ../types/src/shell/api/canvas.ts

// CONCATENATED MODULE: ../types/src/shell/api/workspace.ts

// CONCATENATED MODULE: ../types/src/shell/api/commonUI.ts

// CONCATENATED MODULE: ../types/src/shell/api/command.ts

// CONCATENATED MODULE: ../types/src/shell/api/index.ts














// CONCATENATED MODULE: ../types/src/shell/model/component-meta.ts

// CONCATENATED MODULE: ../types/src/shell/model/detecting.ts

// CONCATENATED MODULE: ../types/src/shell/model/document-model.ts

// CONCATENATED MODULE: ../types/src/shell/model/drag-object.ts
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
var IPublicModelDragObject = /*#__PURE__*/_createClass(function IPublicModelDragObject() {
  _classCallCheck(this, IPublicModelDragObject);
  this.type = void 0;
  this.data = void 0;
  this.nodes = void 0;
});
// CONCATENATED MODULE: ../types/src/shell/model/dragon.ts

// CONCATENATED MODULE: ../types/src/shell/model/drop-location.ts

// CONCATENATED MODULE: ../types/src/shell/model/history.ts

// CONCATENATED MODULE: ../types/src/shell/model/locate-event.ts

// CONCATENATED MODULE: ../types/src/shell/model/modal-nodes-manager.ts

// CONCATENATED MODULE: ../types/src/shell/model/node-children.ts

// CONCATENATED MODULE: ../types/src/shell/model/node.ts

// CONCATENATED MODULE: ../types/src/shell/model/prop.ts

// CONCATENATED MODULE: ../types/src/shell/model/props.ts
;

// CONCATENATED MODULE: ../types/src/shell/model/selection.ts

// CONCATENATED MODULE: ../types/src/shell/model/setting-prop-entry.ts

// CONCATENATED MODULE: ../types/src/shell/model/setting-top-entry.ts

// CONCATENATED MODULE: ../types/src/shell/model/window.ts

// CONCATENATED MODULE: ../types/src/shell/model/scroll-target.ts

// CONCATENATED MODULE: ../types/src/shell/model/scroller.ts

// CONCATENATED MODULE: ../types/src/shell/model/active-tracker.ts

// CONCATENATED MODULE: ../types/src/shell/model/exclusive-group.ts

// CONCATENATED MODULE: ../types/src/shell/model/plugin-context.ts

// CONCATENATED MODULE: ../types/src/shell/model/setting-target.ts

// CONCATENATED MODULE: ../types/src/shell/model/engine-config.ts

// CONCATENATED MODULE: ../types/src/shell/model/editor.ts

// CONCATENATED MODULE: ../types/src/shell/model/preference.ts

// CONCATENATED MODULE: ../types/src/shell/model/plugin-instance.ts

// CONCATENATED MODULE: ../types/src/shell/model/sensor.ts

// CONCATENATED MODULE: ../types/src/shell/model/resource.ts

// CONCATENATED MODULE: ../types/src/shell/model/clipboard.ts

// CONCATENATED MODULE: ../types/src/shell/model/setting-field.ts

// CONCATENATED MODULE: ../types/src/shell/model/editor-view.ts

// CONCATENATED MODULE: ../types/src/shell/model/skeleton-item.ts

// CONCATENATED MODULE: ../types/src/shell/model/simulator-render.ts

// CONCATENATED MODULE: ../types/src/shell/model/index.ts



































// CONCATENATED MODULE: ../types/src/shell/enum/event-names.ts
/**
 * 所有公开可用的事件名定义
 * All public event names
 * names should be like 'namespace.modelName.whatHappened'
 *
 */
// eslint-disable-next-line no-shadow
var IPublicEnumEventNames;
(function (IPublicEnumEventNames) {})(IPublicEnumEventNames || (IPublicEnumEventNames = {}));
// CONCATENATED MODULE: ../types/src/shell/enum/transition-type.ts
// eslint-disable-next-line no-shadow
var IPublicEnumTransitionType;
(function (IPublicEnumTransitionType) {
  /** 节点更新后重绘处理 */
  IPublicEnumTransitionType[IPublicEnumTransitionType["REPAINT"] = 0] = "REPAINT";
})(IPublicEnumTransitionType || (IPublicEnumTransitionType = {}));
/**
 * @deprecated use IPublicEnumTransitionType instead
 */
var TransitionType;
(function (TransitionType) {
  /** 节点更新后重绘处理 */
  TransitionType[TransitionType["REPAINT"] = 0] = "REPAINT";
})(TransitionType || (TransitionType = {}));
// CONCATENATED MODULE: ../types/src/shell/enum/transform-stage.ts
var IPublicEnumTransformStage;
(function (IPublicEnumTransformStage) {
  IPublicEnumTransformStage["Render"] = "render";
  IPublicEnumTransformStage["Serilize"] = "serilize";
  IPublicEnumTransformStage["Save"] = "save";
  IPublicEnumTransformStage["Clone"] = "clone";
  IPublicEnumTransformStage["Init"] = "init";
  IPublicEnumTransformStage["Upgrade"] = "upgrade";
})(IPublicEnumTransformStage || (IPublicEnumTransformStage = {}));
/**
 * @deprecated use IPublicEnumTransformStage instead
 */
var TransformStage;
(function (TransformStage) {
  TransformStage["Render"] = "render";
  TransformStage["Serilize"] = "serilize";
  TransformStage["Save"] = "save";
  TransformStage["Clone"] = "clone";
  TransformStage["Init"] = "init";
  TransformStage["Upgrade"] = "upgrade";
})(TransformStage || (TransformStage = {}));
// CONCATENATED MODULE: ../types/src/shell/enum/drag-object-type.ts
// eslint-disable-next-line no-shadow
var IPublicEnumDragObjectType;
(function (IPublicEnumDragObjectType) {
  // eslint-disable-next-line no-shadow
  IPublicEnumDragObjectType["Node"] = "node";
  IPublicEnumDragObjectType["NodeData"] = "nodedata";
})(IPublicEnumDragObjectType || (IPublicEnumDragObjectType = {}));
/**
 * @deprecated use IPublicEnumDragObjectType instead
 */
var DragObjectType;
(function (DragObjectType) {
  DragObjectType["Node"] = "node";
  DragObjectType["NodeData"] = "nodedata";
})(DragObjectType || (DragObjectType = {}));
// CONCATENATED MODULE: ../types/src/shell/enum/prop-value-changed-type.ts
// eslint-disable-next-line no-shadow
var IPublicEnumPropValueChangedType;
(function (IPublicEnumPropValueChangedType) {
  /**
   * normal set value
   */
  IPublicEnumPropValueChangedType["SET_VALUE"] = "SET_VALUE";
  /**
   * value changed caused by sub-prop value change
   */
  IPublicEnumPropValueChangedType["SUB_VALUE_CHANGE"] = "SUB_VALUE_CHANGE";
})(IPublicEnumPropValueChangedType || (IPublicEnumPropValueChangedType = {}));
/**
 * @deprecated please use IPublicEnumPropValueChangedType
 */
var PROP_VALUE_CHANGED_TYPE;
(function (PROP_VALUE_CHANGED_TYPE) {
  /**
   * normal set value
   */
  PROP_VALUE_CHANGED_TYPE["SET_VALUE"] = "SET_VALUE";
  /**
   * value changed caused by sub-prop value change
   */
  PROP_VALUE_CHANGED_TYPE["SUB_VALUE_CHANGE"] = "SUB_VALUE_CHANGE";
})(PROP_VALUE_CHANGED_TYPE || (PROP_VALUE_CHANGED_TYPE = {}));
// CONCATENATED MODULE: ../types/src/shell/enum/plugin-register-level.ts
var IPublicEnumPluginRegisterLevel;
(function (IPublicEnumPluginRegisterLevel) {
  IPublicEnumPluginRegisterLevel["Default"] = "default";
  IPublicEnumPluginRegisterLevel["Workspace"] = "workspace";
  IPublicEnumPluginRegisterLevel["Resource"] = "resource";
  IPublicEnumPluginRegisterLevel["EditorView"] = "editorView";
})(IPublicEnumPluginRegisterLevel || (IPublicEnumPluginRegisterLevel = {}));
// CONCATENATED MODULE: ../types/src/shell/enum/context-menu.ts
var IPublicEnumContextMenuType;
(function (IPublicEnumContextMenuType) {
  IPublicEnumContextMenuType["SEPARATOR"] = "separator";
  // 'menuItem'
  IPublicEnumContextMenuType["MENU_ITEM"] = "menuItem";
  // 'nodeTree'
  IPublicEnumContextMenuType["NODE_TREE"] = "nodeTree";
})(IPublicEnumContextMenuType || (IPublicEnumContextMenuType = {}));
// CONCATENATED MODULE: ../types/src/shell/enum/index.ts







// CONCATENATED MODULE: ../types/src/shell/index.ts




// CONCATENATED MODULE: ../types/src/shell-model-factory.ts

// CONCATENATED MODULE: ../types/src/deprecated/isActionContentObject.ts
function isActionContentObject_typeof(o) { "@babel/helpers - typeof"; return isActionContentObject_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, isActionContentObject_typeof(o); }
/**
 * @deprecated use same function from '@alilc/lowcode-utils' instead
 */
function isActionContentObject(obj) {
  return obj && isActionContentObject_typeof(obj) === 'object';
}
// EXTERNAL MODULE: external "window.React"
var external_window_React_ = __webpack_require__(2);

// CONCATENATED MODULE: ../types/src/deprecated/isReactClass.ts

/**
 * @deprecated use same function from '@alilc/lowcode-utils' instead
 */
function isReactClass(obj) {
  return obj && obj.prototype && (obj.prototype.isReactComponent || obj.prototype instanceof external_window_React_["Component"]);
}
// CONCATENATED MODULE: ../types/src/deprecated/isReactComponent.ts

/**
 * @deprecated use same function from '@alilc/lowcode-utils' instead
 */
function isReactComponent(obj) {
  return obj && (isReactClass(obj) || typeof obj === 'function');
}
// CONCATENATED MODULE: ../types/src/deprecated/isCustomView.ts


/**
 * @deprecated use same function from '@alilc/lowcode-utils' instead
 */
function isCustomView(obj) {
  return obj && (/*#__PURE__*/Object(external_window_React_["isValidElement"])(obj) || isReactComponent(obj));
}
// CONCATENATED MODULE: ../types/src/deprecated/isDOMText.ts
/**
 * @deprecated use same function from '@alilc/lowcode-utils' instead
 */
function isDOMText(data) {
  return typeof data === 'string';
}
// CONCATENATED MODULE: ../types/src/deprecated/isDynamicSetter.ts

/**
 * @deprecated use same function from '@alilc/lowcode-utils' instead
 */
function isDynamicSetter(obj) {
  return obj && typeof obj === 'function' && !isReactClass(obj);
}
// CONCATENATED MODULE: ../types/src/deprecated/isI18nData.ts
/**
 * @deprecated use same function from '@alilc/lowcode-utils' instead
 */
function isI18nData(obj) {
  return obj && obj.type === 'i18n';
}
// CONCATENATED MODULE: ../types/src/deprecated/isJSBlock.ts
/**
 * @deprecated use same function from '@alilc/lowcode-utils' instead
 */
function isJSBlock(data) {
  return data && data.type === 'JSBlock';
}
// CONCATENATED MODULE: ../types/src/deprecated/isJSExpression.ts
/**
 * @deprecated use same function from '@alilc/lowcode-utils' instead
 */
function isJSExpression(data) {
  return data && data.type === 'JSExpression' && data.extType !== 'function';
}
// CONCATENATED MODULE: ../types/src/deprecated/isJSFunction.ts
function isJSFunction_typeof(o) { "@babel/helpers - typeof"; return isJSFunction_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, isJSFunction_typeof(o); }
/**
 * @deprecated use same function from '@alilc/lowcode-utils' instead
 */
function isJSFunction(x) {
  return isJSFunction_typeof(x) === 'object' && x && x.type === 'JSFunction';
}
// CONCATENATED MODULE: ../types/src/deprecated/isJSSlot.ts
/**
 * @deprecated use same function from '@alilc/lowcode-utils' instead
 */
function isJSSlot(data) {
  return data && data.type === 'JSSlot';
}
// CONCATENATED MODULE: ../types/src/deprecated/isProCodeComponentType.ts
/**
 * @deprecated use same function from '@alilc/lowcode-utils' instead
 */
function isProCodeComponentType(desc) {
  return 'package' in desc;
}
// CONCATENATED MODULE: ../types/src/deprecated/isLowCodeComponentType.ts

/**
 * @deprecated use same function from '@alilc/lowcode-utils' instead
 */
function isLowCodeComponentType(desc) {
  return !isProCodeComponentType(desc);
}
// CONCATENATED MODULE: ../types/src/deprecated/isNodeSchema.ts
/**
 * @deprecated use same function from '@alilc/lowcode-utils' instead
 */
function isNodeSchema(data) {
  return data && data.componentName;
}
// CONCATENATED MODULE: ../types/src/deprecated/isPlainObject.ts
function isPlainObject_typeof(o) { "@babel/helpers - typeof"; return isPlainObject_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, isPlainObject_typeof(o); }
/**
 * @deprecated use same function from '@alilc/lowcode-utils' instead
 */
function isPlainObject(value) {
  if (isPlainObject_typeof(value) !== 'object') {
    return false;
  }
  var proto = Object.getPrototypeOf(value);
  return proto === Object.prototype || proto === null || Object.getPrototypeOf(proto) === null;
}
// CONCATENATED MODULE: ../types/src/deprecated/isProjectSchema.ts
/**
 * @deprecated use same function from '@alilc/lowcode-utils' instead
 */
function isProjectSchema(data) {
  return data && data.componentsTree;
}
// CONCATENATED MODULE: ../types/src/deprecated/isSetterConfig.ts
function isSetterConfig_typeof(o) { "@babel/helpers - typeof"; return isSetterConfig_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, isSetterConfig_typeof(o); }

/**
 * @deprecated use same function from '@alilc/lowcode-utils' instead
 */
function isSetterConfig(obj) {
  return obj && isSetterConfig_typeof(obj) === 'object' && 'componentName' in obj && !isCustomView(obj);
}
// CONCATENATED MODULE: ../types/src/deprecated/isTitleConfig.ts


/**
 * @deprecated use same function from '@alilc/lowcode-utils' instead
 */
function isTitleConfig(obj) {
  return isPlainObject(obj) && !isI18nData(obj);
}
// CONCATENATED MODULE: ../types/src/deprecated/index.ts


















// CONCATENATED MODULE: ../types/src/index.ts










// TODO: remove this in future versions


/***/ }),
/* 5 */
/***/ (function(module, exports) {

module.exports = Next;

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames () {
		var classes = '';

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (arg) {
				classes = appendClass(classes, parseValue(arg));
			}
		}

		return classes;
	}

	function parseValue (arg) {
		if (typeof arg === 'string' || typeof arg === 'number') {
			return arg;
		}

		if (typeof arg !== 'object') {
			return '';
		}

		if (Array.isArray(arg)) {
			return classNames.apply(null, arg);
		}

		if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {
			return arg.toString();
		}

		var classes = '';

		for (var key in arg) {
			if (hasOwn.call(arg, key) && arg[key]) {
				classes = appendClass(classes, key);
			}
		}

		return classes;
	}

	function appendClass (value, newClass) {
		if (!newClass) {
			return value;
		}

		if (value) {
			return value + ' ' + newClass;
		}

		return value + newClass;
	}

	if ( true && module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else if (true) {
		// register as 'classnames', consistent with npm package name
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
			return classNames;
		}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {}
}());


/***/ }),
/* 7 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "$mobx", function() { return $mobx; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FlowCancellationError", function() { return FlowCancellationError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObservableMap", function() { return ObservableMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObservableSet", function() { return ObservableSet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Reaction", function() { return Reaction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_allowStateChanges", function() { return allowStateChanges; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_allowStateChangesInsideComputed", function() { return runInAction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_allowStateReadsEnd", function() { return allowStateReadsEnd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_allowStateReadsStart", function() { return allowStateReadsStart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_autoAction", function() { return autoAction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_endAction", function() { return _endAction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_getAdministration", function() { return getAdministration; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_getGlobalState", function() { return getGlobalState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_interceptReads", function() { return interceptReads; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_isComputingDerivation", function() { return isComputingDerivation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_resetGlobalState", function() { return resetGlobalState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_startAction", function() { return _startAction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "action", function() { return action; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "autorun", function() { return autorun; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "comparer", function() { return comparer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "computed", function() { return computed; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "configure", function() { return configure; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAtom", function() { return createAtom; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defineProperty", function() { return apiDefineProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "entries", function() { return entries; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extendObservable", function() { return extendObservable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "flow", function() { return flow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "flowResult", function() { return flowResult; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "get", function() { return get; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAtom", function() { return getAtom; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDebugName", function() { return getDebugName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDependencyTree", function() { return getDependencyTree; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getObserverTree", function() { return getObserverTree; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "has", function() { return has; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "intercept", function() { return intercept; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isAction", function() { return isAction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isBoxedObservable", function() { return isObservableValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isComputed", function() { return isComputed; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isComputedProp", function() { return isComputedProp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFlow", function() { return isFlow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFlowCancellationError", function() { return isFlowCancellationError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isObservable", function() { return isObservable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isObservableArray", function() { return isObservableArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isObservableMap", function() { return isObservableMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isObservableObject", function() { return isObservableObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isObservableProp", function() { return isObservableProp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isObservableSet", function() { return isObservableSet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keys", function() { return keys; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "makeAutoObservable", function() { return makeAutoObservable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "makeObservable", function() { return makeObservable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "observable", function() { return observable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "observe", function() { return observe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onBecomeObserved", function() { return onBecomeObserved; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onBecomeUnobserved", function() { return onBecomeUnobserved; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onReactionError", function() { return onReactionError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "override", function() { return override; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ownKeys", function() { return apiOwnKeys; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reaction", function() { return reaction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "remove", function() { return remove; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "runInAction", function() { return runInAction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set", function() { return set; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "spy", function() { return spy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toJS", function() { return toJS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "trace", function() { return trace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transaction", function() { return transaction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "untracked", function() { return untracked; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "values", function() { return values; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "when", function() { return when; });
var niceErrors = {
  0: "Invalid value for configuration 'enforceActions', expected 'never', 'always' or 'observed'",
  1: function _(annotationType, key) {
    return "Cannot apply '" + annotationType + "' to '" + key.toString() + "': Field not found.";
  },
  /*
  2(prop) {
      return `invalid decorator for '${prop.toString()}'`
  },
  3(prop) {
      return `Cannot decorate '${prop.toString()}': action can only be used on properties with a function value.`
  },
  4(prop) {
      return `Cannot decorate '${prop.toString()}': computed can only be used on getter properties.`
  },
  */
  5: "'keys()' can only be used on observable objects, arrays, sets and maps",
  6: "'values()' can only be used on observable objects, arrays, sets and maps",
  7: "'entries()' can only be used on observable objects, arrays and maps",
  8: "'set()' can only be used on observable objects, arrays and maps",
  9: "'remove()' can only be used on observable objects, arrays and maps",
  10: "'has()' can only be used on observable objects, arrays and maps",
  11: "'get()' can only be used on observable objects, arrays and maps",
  12: "Invalid annotation",
  13: "Dynamic observable objects cannot be frozen. If you're passing observables to 3rd party component/function that calls Object.freeze, pass copy instead: toJS(observable)",
  14: "Intercept handlers should return nothing or a change object",
  15: "Observable arrays cannot be frozen. If you're passing observables to 3rd party component/function that calls Object.freeze, pass copy instead: toJS(observable)",
  16: "Modification exception: the internal structure of an observable array was changed.",
  17: function _(index, length) {
    return "[mobx.array] Index out of bounds, " + index + " is larger than " + length;
  },
  18: "mobx.map requires Map polyfill for the current browser. Check babel-polyfill or core-js/es6/map.js",
  19: function _(other) {
    return "Cannot initialize from classes that inherit from Map: " + other.constructor.name;
  },
  20: function _(other) {
    return "Cannot initialize map from " + other;
  },
  21: function _(dataStructure) {
    return "Cannot convert to map from '" + dataStructure + "'";
  },
  22: "mobx.set requires Set polyfill for the current browser. Check babel-polyfill or core-js/es6/set.js",
  23: "It is not possible to get index atoms from arrays",
  24: function _(thing) {
    return "Cannot obtain administration from " + thing;
  },
  25: function _(property, name) {
    return "the entry '" + property + "' does not exist in the observable map '" + name + "'";
  },
  26: "please specify a property",
  27: function _(property, name) {
    return "no observable property '" + property.toString() + "' found on the observable object '" + name + "'";
  },
  28: function _(thing) {
    return "Cannot obtain atom from " + thing;
  },
  29: "Expecting some object",
  30: "invalid action stack. did you forget to finish an action?",
  31: "missing option for computed: get",
  32: function _(name, derivation) {
    return "Cycle detected in computation " + name + ": " + derivation;
  },
  33: function _(name) {
    return "The setter of computed value '" + name + "' is trying to update itself. Did you intend to update an _observable_ value, instead of the computed property?";
  },
  34: function _(name) {
    return "[ComputedValue '" + name + "'] It is not possible to assign a new value to a computed value.";
  },
  35: "There are multiple, different versions of MobX active. Make sure MobX is loaded only once or use `configure({ isolateGlobalState: true })`",
  36: "isolateGlobalState should be called before MobX is running any reactions",
  37: function _(method) {
    return "[mobx] `observableArray." + method + "()` mutates the array in-place, which is not allowed inside a derivation. Use `array.slice()." + method + "()` instead";
  },
  38: "'ownKeys()' can only be used on observable objects",
  39: "'defineProperty()' can only be used on observable objects"
};
var errors =  false ? undefined : {};
function die(error) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }
  if (false) { var e; }
  throw new Error(typeof error === "number" ? "[MobX] minified error nr: " + error + (args.length ? " " + args.map(String).join(",") : "") + ". Find the full error at: https://github.com/mobxjs/mobx/blob/main/packages/mobx/src/errors.ts" : "[MobX] " + error);
}

var mockGlobal = {};
function getGlobal() {
  if (typeof globalThis !== "undefined") {
    return globalThis;
  }
  if (typeof window !== "undefined") {
    return window;
  }
  if (typeof global !== "undefined") {
    return global;
  }
  if (typeof self !== "undefined") {
    return self;
  }
  return mockGlobal;
}

// We shorten anything used > 5 times
var assign = Object.assign;
var getDescriptor = Object.getOwnPropertyDescriptor;
var defineProperty = Object.defineProperty;
var objectPrototype = Object.prototype;
var EMPTY_ARRAY = [];
Object.freeze(EMPTY_ARRAY);
var EMPTY_OBJECT = {};
Object.freeze(EMPTY_OBJECT);
var hasProxy = typeof Proxy !== "undefined";
var plainObjectString = /*#__PURE__*/Object.toString();
function assertProxies() {
  if (!hasProxy) {
    die( false ? undefined : "Proxy not available");
  }
}
function warnAboutProxyRequirement(msg) {
  if (false) {}
}
function getNextId() {
  return ++globalState.mobxGuid;
}
/**
 * Makes sure that the provided function is invoked at most once.
 */
function once(func) {
  var invoked = false;
  return function () {
    if (invoked) {
      return;
    }
    invoked = true;
    return func.apply(this, arguments);
  };
}
var noop = function noop() {};
function isFunction(fn) {
  return typeof fn === "function";
}
function isStringish(value) {
  var t = typeof value;
  switch (t) {
    case "string":
    case "symbol":
    case "number":
      return true;
  }
  return false;
}
function isObject(value) {
  return value !== null && typeof value === "object";
}
function isPlainObject(value) {
  if (!isObject(value)) {
    return false;
  }
  var proto = Object.getPrototypeOf(value);
  if (proto == null) {
    return true;
  }
  var protoConstructor = Object.hasOwnProperty.call(proto, "constructor") && proto.constructor;
  return typeof protoConstructor === "function" && protoConstructor.toString() === plainObjectString;
}
// https://stackoverflow.com/a/37865170
function isGenerator(obj) {
  var constructor = obj == null ? void 0 : obj.constructor;
  if (!constructor) {
    return false;
  }
  if ("GeneratorFunction" === constructor.name || "GeneratorFunction" === constructor.displayName) {
    return true;
  }
  return false;
}
function addHiddenProp(object, propName, value) {
  defineProperty(object, propName, {
    enumerable: false,
    writable: true,
    configurable: true,
    value: value
  });
}
function addHiddenFinalProp(object, propName, value) {
  defineProperty(object, propName, {
    enumerable: false,
    writable: false,
    configurable: true,
    value: value
  });
}
function createInstanceofPredicate(name, theClass) {
  var propName = "isMobX" + name;
  theClass.prototype[propName] = true;
  return function (x) {
    return isObject(x) && x[propName] === true;
  };
}
/**
 * Yields true for both native and observable Map, even across different windows.
 */
function isES6Map(thing) {
  return thing != null && Object.prototype.toString.call(thing) === "[object Map]";
}
/**
 * Makes sure a Map is an instance of non-inherited native or observable Map.
 */
function isPlainES6Map(thing) {
  var mapProto = Object.getPrototypeOf(thing);
  var objectProto = Object.getPrototypeOf(mapProto);
  var nullProto = Object.getPrototypeOf(objectProto);
  return nullProto === null;
}
/**
 * Yields true for both native and observable Set, even across different windows.
 */
function isES6Set(thing) {
  return thing != null && Object.prototype.toString.call(thing) === "[object Set]";
}
var hasGetOwnPropertySymbols = typeof Object.getOwnPropertySymbols !== "undefined";
/**
 * Returns the following: own enumerable keys and symbols.
 */
function getPlainObjectKeys(object) {
  var keys = Object.keys(object);
  // Not supported in IE, so there are not going to be symbol props anyway...
  if (!hasGetOwnPropertySymbols) {
    return keys;
  }
  var symbols = Object.getOwnPropertySymbols(object);
  if (!symbols.length) {
    return keys;
  }
  return [].concat(keys, symbols.filter(function (s) {
    return objectPrototype.propertyIsEnumerable.call(object, s);
  }));
}
// From Immer utils
// Returns all own keys, including non-enumerable and symbolic
var ownKeys = typeof Reflect !== "undefined" && Reflect.ownKeys ? Reflect.ownKeys : hasGetOwnPropertySymbols ? function (obj) {
  return Object.getOwnPropertyNames(obj).concat(Object.getOwnPropertySymbols(obj));
} : /* istanbul ignore next */Object.getOwnPropertyNames;
function stringifyKey(key) {
  if (typeof key === "string") {
    return key;
  }
  if (typeof key === "symbol") {
    return key.toString();
  }
  return new String(key).toString();
}
function toPrimitive(value) {
  return value === null ? null : typeof value === "object" ? "" + value : value;
}
function hasProp(target, prop) {
  return objectPrototype.hasOwnProperty.call(target, prop);
}
// From Immer utils
var getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors || function getOwnPropertyDescriptors(target) {
  // Polyfill needed for Hermes and IE, see https://github.com/facebook/hermes/issues/274
  var res = {};
  // Note: without polyfill for ownKeys, symbols won't be picked up
  ownKeys(target).forEach(function (key) {
    res[key] = getDescriptor(target, key);
  });
  return res;
};
function getFlag(flags, mask) {
  return !!(flags & mask);
}
function setFlag(flags, mask, newValue) {
  if (newValue) {
    flags |= mask;
  } else {
    flags &= ~mask;
  }
  return flags;
}

function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _defineProperties(e, r) {
  for (var t = 0; t < r.length; t++) {
    var o = r[t];
    o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
  }
}
function _createClass(e, r, t) {
  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
    writable: !1
  }), e;
}
function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t) return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function () {
      return o >= r.length ? {
        done: !0
      } : {
        done: !1,
        value: r[o++]
      };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function (n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
function _inheritsLoose(t, o) {
  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, _setPrototypeOf(t, o);
}
function _setPrototypeOf(t, e) {
  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {
    return t.__proto__ = e, t;
  }, _setPrototypeOf(t, e);
}
function _toPrimitive(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _toPropertyKey(t) {
  var i = _toPrimitive(t, "string");
  return "symbol" == typeof i ? i : i + "";
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}

var storedAnnotationsSymbol = /*#__PURE__*/Symbol("mobx-stored-annotations");
/**
 * Creates a function that acts as
 * - decorator
 * - annotation object
 */
function createDecoratorAnnotation(annotation) {
  function decorator(target, property) {
    if (is20223Decorator(property)) {
      return annotation.decorate_20223_(target, property);
    } else {
      storeAnnotation(target, property, annotation);
    }
  }
  return Object.assign(decorator, annotation);
}
/**
 * Stores annotation to prototype,
 * so it can be inspected later by `makeObservable` called from constructor
 */
function storeAnnotation(prototype, key, annotation) {
  if (!hasProp(prototype, storedAnnotationsSymbol)) {
    addHiddenProp(prototype, storedAnnotationsSymbol, _extends({}, prototype[storedAnnotationsSymbol]));
  }
  // @override must override something
  if (false) { var fieldName; }
  // Cannot re-decorate
  assertNotDecorated(prototype, annotation, key);
  // Ignore override
  if (!isOverride(annotation)) {
    prototype[storedAnnotationsSymbol][key] = annotation;
  }
}
function assertNotDecorated(prototype, annotation, key) {
  if (false) { var requestedAnnotationType, currentAnnotationType, fieldName; }
}
/**
 * Collects annotations from prototypes and stores them on target (instance)
 */
function collectStoredAnnotations(target) {
  if (!hasProp(target, storedAnnotationsSymbol)) {
    // if (__DEV__ && !target[storedAnnotationsSymbol]) {
    //     die(
    //         `No annotations were passed to makeObservable, but no decorated members have been found either`
    //     )
    // }
    // We need a copy as we will remove annotation from the list once it's applied.
    addHiddenProp(target, storedAnnotationsSymbol, _extends({}, target[storedAnnotationsSymbol]));
  }
  return target[storedAnnotationsSymbol];
}
function is20223Decorator(context) {
  return typeof context == "object" && typeof context["kind"] == "string";
}
function assert20223DecoratorType(context, types) {
  if (false) {}
}

var $mobx = /*#__PURE__*/Symbol("mobx administration");
var Atom = /*#__PURE__*/function () {
  /**
   * Create a new atom. For debugging purposes it is recommended to give it a name.
   * The onBecomeObserved and onBecomeUnobserved callbacks can be used for resource management.
   */
  function Atom(name_) {
    if (name_ === void 0) {
      name_ =  false ? undefined : "Atom";
    }
    this.name_ = void 0;
    this.flags_ = 0;
    this.observers_ = new Set();
    this.lastAccessedBy_ = 0;
    this.lowestObserverState_ = IDerivationState_.NOT_TRACKING_;
    // onBecomeObservedListeners
    this.onBOL = void 0;
    // onBecomeUnobservedListeners
    this.onBUOL = void 0;
    this.name_ = name_;
  }
  // for effective unobserving. BaseAtom has true, for extra optimization, so its onBecomeUnobserved never gets called, because it's not needed
  var _proto = Atom.prototype;
  _proto.onBO = function onBO() {
    if (this.onBOL) {
      this.onBOL.forEach(function (listener) {
        return listener();
      });
    }
  };
  _proto.onBUO = function onBUO() {
    if (this.onBUOL) {
      this.onBUOL.forEach(function (listener) {
        return listener();
      });
    }
  }
  /**
   * Invoke this method to notify mobx that your atom has been used somehow.
   * Returns true if there is currently a reactive context.
   */;
  _proto.reportObserved = function reportObserved$1() {
    return reportObserved(this);
  }
  /**
   * Invoke this method _after_ this method has changed to signal mobx that all its observers should invalidate.
   */;
  _proto.reportChanged = function reportChanged() {
    startBatch();
    propagateChanged(this);
    endBatch();
  };
  _proto.toString = function toString() {
    return this.name_;
  };
  return _createClass(Atom, [{
    key: "isBeingObserved",
    get: function get() {
      return getFlag(this.flags_, Atom.isBeingObservedMask_);
    },
    set: function set(newValue) {
      this.flags_ = setFlag(this.flags_, Atom.isBeingObservedMask_, newValue);
    }
  }, {
    key: "isPendingUnobservation",
    get: function get() {
      return getFlag(this.flags_, Atom.isPendingUnobservationMask_);
    },
    set: function set(newValue) {
      this.flags_ = setFlag(this.flags_, Atom.isPendingUnobservationMask_, newValue);
    }
  }, {
    key: "diffValue",
    get: function get() {
      return getFlag(this.flags_, Atom.diffValueMask_) ? 1 : 0;
    },
    set: function set(newValue) {
      this.flags_ = setFlag(this.flags_, Atom.diffValueMask_, newValue === 1 ? true : false);
    }
  }]);
}();
Atom.isBeingObservedMask_ = 1;
Atom.isPendingUnobservationMask_ = 2;
Atom.diffValueMask_ = 4;
var isAtom = /*#__PURE__*/createInstanceofPredicate("Atom", Atom);
function createAtom(name, onBecomeObservedHandler, onBecomeUnobservedHandler) {
  if (onBecomeObservedHandler === void 0) {
    onBecomeObservedHandler = noop;
  }
  if (onBecomeUnobservedHandler === void 0) {
    onBecomeUnobservedHandler = noop;
  }
  var atom = new Atom(name);
  // default `noop` listener will not initialize the hook Set
  if (onBecomeObservedHandler !== noop) {
    onBecomeObserved(atom, onBecomeObservedHandler);
  }
  if (onBecomeUnobservedHandler !== noop) {
    onBecomeUnobserved(atom, onBecomeUnobservedHandler);
  }
  return atom;
}

function identityComparer(a, b) {
  return a === b;
}
function structuralComparer(a, b) {
  return deepEqual(a, b);
}
function shallowComparer(a, b) {
  return deepEqual(a, b, 1);
}
function defaultComparer(a, b) {
  if (Object.is) {
    return Object.is(a, b);
  }
  return a === b ? a !== 0 || 1 / a === 1 / b : a !== a && b !== b;
}
var comparer = {
  identity: identityComparer,
  structural: structuralComparer,
  "default": defaultComparer,
  shallow: shallowComparer
};

function deepEnhancer(v, _, name) {
  // it is an observable already, done
  if (isObservable(v)) {
    return v;
  }
  // something that can be converted and mutated?
  if (Array.isArray(v)) {
    return observable.array(v, {
      name: name
    });
  }
  if (isPlainObject(v)) {
    return observable.object(v, undefined, {
      name: name
    });
  }
  if (isES6Map(v)) {
    return observable.map(v, {
      name: name
    });
  }
  if (isES6Set(v)) {
    return observable.set(v, {
      name: name
    });
  }
  if (typeof v === "function" && !isAction(v) && !isFlow(v)) {
    if (isGenerator(v)) {
      return flow(v);
    } else {
      return autoAction(name, v);
    }
  }
  return v;
}
function shallowEnhancer(v, _, name) {
  if (v === undefined || v === null) {
    return v;
  }
  if (isObservableObject(v) || isObservableArray(v) || isObservableMap(v) || isObservableSet(v)) {
    return v;
  }
  if (Array.isArray(v)) {
    return observable.array(v, {
      name: name,
      deep: false
    });
  }
  if (isPlainObject(v)) {
    return observable.object(v, undefined, {
      name: name,
      deep: false
    });
  }
  if (isES6Map(v)) {
    return observable.map(v, {
      name: name,
      deep: false
    });
  }
  if (isES6Set(v)) {
    return observable.set(v, {
      name: name,
      deep: false
    });
  }
  if (false) {}
}
function referenceEnhancer(newValue) {
  // never turn into an observable
  return newValue;
}
function refStructEnhancer(v, oldValue) {
  if (false) {}
  if (deepEqual(v, oldValue)) {
    return oldValue;
  }
  return v;
}

var OVERRIDE = "override";
var override = /*#__PURE__*/createDecoratorAnnotation({
  annotationType_: OVERRIDE,
  make_: make_,
  extend_: extend_,
  decorate_20223_: decorate_20223_
});
function isOverride(annotation) {
  return annotation.annotationType_ === OVERRIDE;
}
function make_(adm, key) {
  // Must not be plain object
  if (false) {}
  // Must override something
  if (false) {}
  return 0 /* MakeResult.Cancel */;
}
function extend_(adm, key, descriptor, proxyTrap) {
  die("'" + this.annotationType_ + "' can only be used with 'makeObservable'");
}
function decorate_20223_(desc, context) {
  console.warn("'" + this.annotationType_ + "' cannot be used with decorators - this is a no-op");
}

function createActionAnnotation(name, options) {
  return {
    annotationType_: name,
    options_: options,
    make_: make_$1,
    extend_: extend_$1,
    decorate_20223_: decorate_20223_$1
  };
}
function make_$1(adm, key, descriptor, source) {
  var _this$options_;
  // bound
  if ((_this$options_ = this.options_) != null && _this$options_.bound) {
    return this.extend_(adm, key, descriptor, false) === null ? 0 /* MakeResult.Cancel */ : 1 /* MakeResult.Break */;
  }
  // own
  if (source === adm.target_) {
    return this.extend_(adm, key, descriptor, false) === null ? 0 /* MakeResult.Cancel */ : 2 /* MakeResult.Continue */;
  }
  // prototype
  if (isAction(descriptor.value)) {
    // A prototype could have been annotated already by other constructor,
    // rest of the proto chain must be annotated already
    return 1 /* MakeResult.Break */;
  }
  var actionDescriptor = createActionDescriptor(adm, this, key, descriptor, false);
  defineProperty(source, key, actionDescriptor);
  return 2 /* MakeResult.Continue */;
}
function extend_$1(adm, key, descriptor, proxyTrap) {
  var actionDescriptor = createActionDescriptor(adm, this, key, descriptor);
  return adm.defineProperty_(key, actionDescriptor, proxyTrap);
}
function decorate_20223_$1(mthd, context) {
  if (false) {}
  var kind = context.kind,
    name = context.name,
    addInitializer = context.addInitializer;
  var ann = this;
  var _createAction = function _createAction(m) {
    var _ann$options_$name, _ann$options_, _ann$options_$autoAct, _ann$options_2;
    return createAction((_ann$options_$name = (_ann$options_ = ann.options_) == null ? void 0 : _ann$options_.name) != null ? _ann$options_$name : name.toString(), m, (_ann$options_$autoAct = (_ann$options_2 = ann.options_) == null ? void 0 : _ann$options_2.autoAction) != null ? _ann$options_$autoAct : false);
  };
  if (kind == "field") {
    return function (initMthd) {
      var _ann$options_3;
      var mthd = initMthd;
      if (!isAction(mthd)) {
        mthd = _createAction(mthd);
      }
      if ((_ann$options_3 = ann.options_) != null && _ann$options_3.bound) {
        mthd = mthd.bind(this);
        mthd.isMobxAction = true;
      }
      return mthd;
    };
  }
  if (kind == "method") {
    var _this$options_2;
    if (!isAction(mthd)) {
      mthd = _createAction(mthd);
    }
    if ((_this$options_2 = this.options_) != null && _this$options_2.bound) {
      addInitializer(function () {
        var self = this;
        var bound = self[name].bind(self);
        bound.isMobxAction = true;
        self[name] = bound;
      });
    }
    return mthd;
  }
  die("Cannot apply '" + ann.annotationType_ + "' to '" + String(name) + "' (kind: " + kind + "):" + ("\n'" + ann.annotationType_ + "' can only be used on properties with a function value."));
}
function assertActionDescriptor(adm, _ref, key, _ref2) {
  var annotationType_ = _ref.annotationType_;
  var value = _ref2.value;
  if (false) {}
}
function createActionDescriptor(adm, annotation, key, descriptor,
// provides ability to disable safeDescriptors for prototypes
safeDescriptors) {
  var _annotation$options_, _annotation$options_$, _annotation$options_2, _annotation$options_$2, _annotation$options_3, _annotation$options_4, _adm$proxy_2;
  if (safeDescriptors === void 0) {
    safeDescriptors = globalState.safeDescriptors;
  }
  assertActionDescriptor(adm, annotation, key, descriptor);
  var value = descriptor.value;
  if ((_annotation$options_ = annotation.options_) != null && _annotation$options_.bound) {
    var _adm$proxy_;
    value = value.bind((_adm$proxy_ = adm.proxy_) != null ? _adm$proxy_ : adm.target_);
  }
  return {
    value: createAction((_annotation$options_$ = (_annotation$options_2 = annotation.options_) == null ? void 0 : _annotation$options_2.name) != null ? _annotation$options_$ : key.toString(), value, (_annotation$options_$2 = (_annotation$options_3 = annotation.options_) == null ? void 0 : _annotation$options_3.autoAction) != null ? _annotation$options_$2 : false,
    // https://github.com/mobxjs/mobx/discussions/3140
    (_annotation$options_4 = annotation.options_) != null && _annotation$options_4.bound ? (_adm$proxy_2 = adm.proxy_) != null ? _adm$proxy_2 : adm.target_ : undefined),
    // Non-configurable for classes
    // prevents accidental field redefinition in subclass
    configurable: safeDescriptors ? adm.isPlainObject_ : true,
    // https://github.com/mobxjs/mobx/pull/2641#issuecomment-737292058
    enumerable: false,
    // Non-obsevable, therefore non-writable
    // Also prevents rewriting in subclass constructor
    writable: safeDescriptors ? false : true
  };
}

function createFlowAnnotation(name, options) {
  return {
    annotationType_: name,
    options_: options,
    make_: make_$2,
    extend_: extend_$2,
    decorate_20223_: decorate_20223_$2
  };
}
function make_$2(adm, key, descriptor, source) {
  var _this$options_;
  // own
  if (source === adm.target_) {
    return this.extend_(adm, key, descriptor, false) === null ? 0 /* MakeResult.Cancel */ : 2 /* MakeResult.Continue */;
  }
  // prototype
  // bound - must annotate protos to support super.flow()
  if ((_this$options_ = this.options_) != null && _this$options_.bound && (!hasProp(adm.target_, key) || !isFlow(adm.target_[key]))) {
    if (this.extend_(adm, key, descriptor, false) === null) {
      return 0 /* MakeResult.Cancel */;
    }
  }
  if (isFlow(descriptor.value)) {
    // A prototype could have been annotated already by other constructor,
    // rest of the proto chain must be annotated already
    return 1 /* MakeResult.Break */;
  }
  var flowDescriptor = createFlowDescriptor(adm, this, key, descriptor, false, false);
  defineProperty(source, key, flowDescriptor);
  return 2 /* MakeResult.Continue */;
}
function extend_$2(adm, key, descriptor, proxyTrap) {
  var _this$options_2;
  var flowDescriptor = createFlowDescriptor(adm, this, key, descriptor, (_this$options_2 = this.options_) == null ? void 0 : _this$options_2.bound);
  return adm.defineProperty_(key, flowDescriptor, proxyTrap);
}
function decorate_20223_$2(mthd, context) {
  var _this$options_3;
  if (false) {}
  var name = context.name,
    addInitializer = context.addInitializer;
  if (!isFlow(mthd)) {
    mthd = flow(mthd);
  }
  if ((_this$options_3 = this.options_) != null && _this$options_3.bound) {
    addInitializer(function () {
      var self = this;
      var bound = self[name].bind(self);
      bound.isMobXFlow = true;
      self[name] = bound;
    });
  }
  return mthd;
}
function assertFlowDescriptor(adm, _ref, key, _ref2) {
  var annotationType_ = _ref.annotationType_;
  var value = _ref2.value;
  if (false) {}
}
function createFlowDescriptor(adm, annotation, key, descriptor, bound,
// provides ability to disable safeDescriptors for prototypes
safeDescriptors) {
  if (safeDescriptors === void 0) {
    safeDescriptors = globalState.safeDescriptors;
  }
  assertFlowDescriptor(adm, annotation, key, descriptor);
  var value = descriptor.value;
  // In case of flow.bound, the descriptor can be from already annotated prototype
  if (!isFlow(value)) {
    value = flow(value);
  }
  if (bound) {
    var _adm$proxy_;
    // We do not keep original function around, so we bind the existing flow
    value = value.bind((_adm$proxy_ = adm.proxy_) != null ? _adm$proxy_ : adm.target_);
    // This is normally set by `flow`, but `bind` returns new function...
    value.isMobXFlow = true;
  }
  return {
    value: value,
    // Non-configurable for classes
    // prevents accidental field redefinition in subclass
    configurable: safeDescriptors ? adm.isPlainObject_ : true,
    // https://github.com/mobxjs/mobx/pull/2641#issuecomment-737292058
    enumerable: false,
    // Non-obsevable, therefore non-writable
    // Also prevents rewriting in subclass constructor
    writable: safeDescriptors ? false : true
  };
}

function createComputedAnnotation(name, options) {
  return {
    annotationType_: name,
    options_: options,
    make_: make_$3,
    extend_: extend_$3,
    decorate_20223_: decorate_20223_$3
  };
}
function make_$3(adm, key, descriptor) {
  return this.extend_(adm, key, descriptor, false) === null ? 0 /* MakeResult.Cancel */ : 1 /* MakeResult.Break */;
}
function extend_$3(adm, key, descriptor, proxyTrap) {
  assertComputedDescriptor(adm, this, key, descriptor);
  return adm.defineComputedProperty_(key, _extends({}, this.options_, {
    get: descriptor.get,
    set: descriptor.set
  }), proxyTrap);
}
function decorate_20223_$3(get, context) {
  if (false) {}
  var ann = this;
  var key = context.name,
    addInitializer = context.addInitializer;
  addInitializer(function () {
    var adm = asObservableObject(this)[$mobx];
    var options = _extends({}, ann.options_, {
      get: get,
      context: this
    });
    options.name || (options.name =  false ? undefined : "ObservableObject." + key.toString());
    adm.values_.set(key, new ComputedValue(options));
  });
  return function () {
    return this[$mobx].getObservablePropValue_(key);
  };
}
function assertComputedDescriptor(adm, _ref, key, _ref2) {
  var annotationType_ = _ref.annotationType_;
  var get = _ref2.get;
  if (false) {}
}

function createObservableAnnotation(name, options) {
  return {
    annotationType_: name,
    options_: options,
    make_: make_$4,
    extend_: extend_$4,
    decorate_20223_: decorate_20223_$4
  };
}
function make_$4(adm, key, descriptor) {
  return this.extend_(adm, key, descriptor, false) === null ? 0 /* MakeResult.Cancel */ : 1 /* MakeResult.Break */;
}
function extend_$4(adm, key, descriptor, proxyTrap) {
  var _this$options_$enhanc, _this$options_;
  assertObservableDescriptor(adm, this, key, descriptor);
  return adm.defineObservableProperty_(key, descriptor.value, (_this$options_$enhanc = (_this$options_ = this.options_) == null ? void 0 : _this$options_.enhancer) != null ? _this$options_$enhanc : deepEnhancer, proxyTrap);
}
function decorate_20223_$4(desc, context) {
  if (false) {}
  var ann = this;
  var kind = context.kind,
    name = context.name;
  // The laziness here is not ideal... It's a workaround to how 2022.3 Decorators are implemented:
  //   `addInitializer` callbacks are executed _before_ any accessors are defined (instead of the ideal-for-us right after each).
  //   This means that, if we were to do our stuff in an `addInitializer`, we'd attempt to read a private slot
  //   before it has been initialized. The runtime doesn't like that and throws a `Cannot read private member
  //   from an object whose class did not declare it` error.
  // TODO: it seems that this will not be required anymore in the final version of the spec
  // See TODO: link
  var initializedObjects = new WeakSet();
  function initializeObservable(target, value) {
    var _ann$options_$enhance, _ann$options_;
    var adm = asObservableObject(target)[$mobx];
    var observable = new ObservableValue(value, (_ann$options_$enhance = (_ann$options_ = ann.options_) == null ? void 0 : _ann$options_.enhancer) != null ? _ann$options_$enhance : deepEnhancer,  false ? undefined : "ObservableObject." + name.toString(), false);
    adm.values_.set(name, observable);
    initializedObjects.add(target);
  }
  if (kind == "accessor") {
    return {
      get: function get() {
        if (!initializedObjects.has(this)) {
          initializeObservable(this, desc.get.call(this));
        }
        return this[$mobx].getObservablePropValue_(name);
      },
      set: function set(value) {
        if (!initializedObjects.has(this)) {
          initializeObservable(this, value);
        }
        return this[$mobx].setObservablePropValue_(name, value);
      },
      init: function init(value) {
        if (!initializedObjects.has(this)) {
          initializeObservable(this, value);
        }
        return value;
      }
    };
  }
  return;
}
function assertObservableDescriptor(adm, _ref, key, descriptor) {
  var annotationType_ = _ref.annotationType_;
  if (false) {}
}

var AUTO = "true";
var autoAnnotation = /*#__PURE__*/createAutoAnnotation();
function createAutoAnnotation(options) {
  return {
    annotationType_: AUTO,
    options_: options,
    make_: make_$5,
    extend_: extend_$5,
    decorate_20223_: decorate_20223_$5
  };
}
function make_$5(adm, key, descriptor, source) {
  var _this$options_3, _this$options_4;
  // getter -> computed
  if (descriptor.get) {
    return computed.make_(adm, key, descriptor, source);
  }
  // lone setter -> action setter
  if (descriptor.set) {
    // TODO make action applicable to setter and delegate to action.make_
    var set = createAction(key.toString(), descriptor.set);
    // own
    if (source === adm.target_) {
      return adm.defineProperty_(key, {
        configurable: globalState.safeDescriptors ? adm.isPlainObject_ : true,
        set: set
      }) === null ? 0 /* MakeResult.Cancel */ : 2 /* MakeResult.Continue */;
    }
    // proto
    defineProperty(source, key, {
      configurable: true,
      set: set
    });
    return 2 /* MakeResult.Continue */;
  }
  // function on proto -> autoAction/flow
  if (source !== adm.target_ && typeof descriptor.value === "function") {
    var _this$options_2;
    if (isGenerator(descriptor.value)) {
      var _this$options_;
      var flowAnnotation = (_this$options_ = this.options_) != null && _this$options_.autoBind ? flow.bound : flow;
      return flowAnnotation.make_(adm, key, descriptor, source);
    }
    var actionAnnotation = (_this$options_2 = this.options_) != null && _this$options_2.autoBind ? autoAction.bound : autoAction;
    return actionAnnotation.make_(adm, key, descriptor, source);
  }
  // other -> observable
  // Copy props from proto as well, see test:
  // "decorate should work with Object.create"
  var observableAnnotation = ((_this$options_3 = this.options_) == null ? void 0 : _this$options_3.deep) === false ? observable.ref : observable;
  // if function respect autoBind option
  if (typeof descriptor.value === "function" && (_this$options_4 = this.options_) != null && _this$options_4.autoBind) {
    var _adm$proxy_;
    descriptor.value = descriptor.value.bind((_adm$proxy_ = adm.proxy_) != null ? _adm$proxy_ : adm.target_);
  }
  return observableAnnotation.make_(adm, key, descriptor, source);
}
function extend_$5(adm, key, descriptor, proxyTrap) {
  var _this$options_5, _this$options_6;
  // getter -> computed
  if (descriptor.get) {
    return computed.extend_(adm, key, descriptor, proxyTrap);
  }
  // lone setter -> action setter
  if (descriptor.set) {
    // TODO make action applicable to setter and delegate to action.extend_
    return adm.defineProperty_(key, {
      configurable: globalState.safeDescriptors ? adm.isPlainObject_ : true,
      set: createAction(key.toString(), descriptor.set)
    }, proxyTrap);
  }
  // other -> observable
  // if function respect autoBind option
  if (typeof descriptor.value === "function" && (_this$options_5 = this.options_) != null && _this$options_5.autoBind) {
    var _adm$proxy_2;
    descriptor.value = descriptor.value.bind((_adm$proxy_2 = adm.proxy_) != null ? _adm$proxy_2 : adm.target_);
  }
  var observableAnnotation = ((_this$options_6 = this.options_) == null ? void 0 : _this$options_6.deep) === false ? observable.ref : observable;
  return observableAnnotation.extend_(adm, key, descriptor, proxyTrap);
}
function decorate_20223_$5(desc, context) {
  die("'" + this.annotationType_ + "' cannot be used as a decorator");
}

var OBSERVABLE = "observable";
var OBSERVABLE_REF = "observable.ref";
var OBSERVABLE_SHALLOW = "observable.shallow";
var OBSERVABLE_STRUCT = "observable.struct";
// Predefined bags of create observable options, to avoid allocating temporarily option objects
// in the majority of cases
var defaultCreateObservableOptions = {
  deep: true,
  name: undefined,
  defaultDecorator: undefined,
  proxy: true
};
Object.freeze(defaultCreateObservableOptions);
function asCreateObservableOptions(thing) {
  return thing || defaultCreateObservableOptions;
}
var observableAnnotation = /*#__PURE__*/createObservableAnnotation(OBSERVABLE);
var observableRefAnnotation = /*#__PURE__*/createObservableAnnotation(OBSERVABLE_REF, {
  enhancer: referenceEnhancer
});
var observableShallowAnnotation = /*#__PURE__*/createObservableAnnotation(OBSERVABLE_SHALLOW, {
  enhancer: shallowEnhancer
});
var observableStructAnnotation = /*#__PURE__*/createObservableAnnotation(OBSERVABLE_STRUCT, {
  enhancer: refStructEnhancer
});
var observableDecoratorAnnotation = /*#__PURE__*/createDecoratorAnnotation(observableAnnotation);
function getEnhancerFromOptions(options) {
  return options.deep === true ? deepEnhancer : options.deep === false ? referenceEnhancer : getEnhancerFromAnnotation(options.defaultDecorator);
}
function getAnnotationFromOptions(options) {
  var _options$defaultDecor;
  return options ? (_options$defaultDecor = options.defaultDecorator) != null ? _options$defaultDecor : createAutoAnnotation(options) : undefined;
}
function getEnhancerFromAnnotation(annotation) {
  var _annotation$options_$, _annotation$options_;
  return !annotation ? deepEnhancer : (_annotation$options_$ = (_annotation$options_ = annotation.options_) == null ? void 0 : _annotation$options_.enhancer) != null ? _annotation$options_$ : deepEnhancer;
}
/**
 * Turns an object, array or function into a reactive structure.
 * @param v the value which should become observable.
 */
function createObservable(v, arg2, arg3) {
  // @observable someProp; (2022.3 Decorators)
  if (is20223Decorator(arg2)) {
    return observableAnnotation.decorate_20223_(v, arg2);
  }
  // @observable someProp;
  if (isStringish(arg2)) {
    storeAnnotation(v, arg2, observableAnnotation);
    return;
  }
  // already observable - ignore
  if (isObservable(v)) {
    return v;
  }
  // plain object
  if (isPlainObject(v)) {
    return observable.object(v, arg2, arg3);
  }
  // Array
  if (Array.isArray(v)) {
    return observable.array(v, arg2);
  }
  // Map
  if (isES6Map(v)) {
    return observable.map(v, arg2);
  }
  // Set
  if (isES6Set(v)) {
    return observable.set(v, arg2);
  }
  // other object - ignore
  if (typeof v === "object" && v !== null) {
    return v;
  }
  // anything else
  return observable.box(v, arg2);
}
assign(createObservable, observableDecoratorAnnotation);
var observableFactories = {
  box: function box(value, options) {
    var o = asCreateObservableOptions(options);
    return new ObservableValue(value, getEnhancerFromOptions(o), o.name, true, o.equals);
  },
  array: function array(initialValues, options) {
    var o = asCreateObservableOptions(options);
    return (globalState.useProxies === false || o.proxy === false ? createLegacyArray : createObservableArray)(initialValues, getEnhancerFromOptions(o), o.name);
  },
  map: function map(initialValues, options) {
    var o = asCreateObservableOptions(options);
    return new ObservableMap(initialValues, getEnhancerFromOptions(o), o.name);
  },
  set: function set(initialValues, options) {
    var o = asCreateObservableOptions(options);
    return new ObservableSet(initialValues, getEnhancerFromOptions(o), o.name);
  },
  object: function object(props, decorators, options) {
    return initObservable(function () {
      return extendObservable(globalState.useProxies === false || (options == null ? void 0 : options.proxy) === false ? asObservableObject({}, options) : asDynamicObservableObject({}, options), props, decorators);
    });
  },
  ref: /*#__PURE__*/createDecoratorAnnotation(observableRefAnnotation),
  shallow: /*#__PURE__*/createDecoratorAnnotation(observableShallowAnnotation),
  deep: observableDecoratorAnnotation,
  struct: /*#__PURE__*/createDecoratorAnnotation(observableStructAnnotation)
};
// eslint-disable-next-line
var observable = /*#__PURE__*/assign(createObservable, observableFactories);

var COMPUTED = "computed";
var COMPUTED_STRUCT = "computed.struct";
var computedAnnotation = /*#__PURE__*/createComputedAnnotation(COMPUTED);
var computedStructAnnotation = /*#__PURE__*/createComputedAnnotation(COMPUTED_STRUCT, {
  equals: comparer.structural
});
/**
 * Decorator for class properties: @computed get value() { return expr; }.
 * For legacy purposes also invokable as ES5 observable created: `computed(() => expr)`;
 */
var computed = function computed(arg1, arg2) {
  if (is20223Decorator(arg2)) {
    // @computed (2022.3 Decorators)
    return computedAnnotation.decorate_20223_(arg1, arg2);
  }
  if (isStringish(arg2)) {
    // @computed
    return storeAnnotation(arg1, arg2, computedAnnotation);
  }
  if (isPlainObject(arg1)) {
    // @computed({ options })
    return createDecoratorAnnotation(createComputedAnnotation(COMPUTED, arg1));
  }
  // computed(expr, options?)
  if (false) {}
  var opts = isPlainObject(arg2) ? arg2 : {};
  opts.get = arg1;
  opts.name || (opts.name = arg1.name || ""); /* for generated name */
  return new ComputedValue(opts);
};
Object.assign(computed, computedAnnotation);
computed.struct = /*#__PURE__*/createDecoratorAnnotation(computedStructAnnotation);

var _getDescriptor$config, _getDescriptor;
// we don't use globalState for these in order to avoid possible issues with multiple
// mobx versions
var currentActionId = 0;
var nextActionId = 1;
var isFunctionNameConfigurable = (_getDescriptor$config = (_getDescriptor = /*#__PURE__*/getDescriptor(function () {}, "name")) == null ? void 0 : _getDescriptor.configurable) != null ? _getDescriptor$config : false;
// we can safely recycle this object
var tmpNameDescriptor = {
  value: "action",
  configurable: true,
  writable: false,
  enumerable: false
};
function createAction(actionName, fn, autoAction, ref) {
  if (autoAction === void 0) {
    autoAction = false;
  }
  if (false) {}
  function res() {
    return executeAction(actionName, autoAction, fn, ref || this, arguments);
  }
  res.isMobxAction = true;
  res.toString = function () {
    return fn.toString();
  };
  if (isFunctionNameConfigurable) {
    tmpNameDescriptor.value = actionName;
    defineProperty(res, "name", tmpNameDescriptor);
  }
  return res;
}
function executeAction(actionName, canRunAsDerivation, fn, scope, args) {
  var runInfo = _startAction(actionName, canRunAsDerivation, scope, args);
  try {
    return fn.apply(scope, args);
  } catch (err) {
    runInfo.error_ = err;
    throw err;
  } finally {
    _endAction(runInfo);
  }
}
function _startAction(actionName, canRunAsDerivation,
// true for autoAction
scope, args) {
  var notifySpy_ =  false && false;
  var startTime_ = 0;
  if (false) { var flattenedArgs; }
  var prevDerivation_ = globalState.trackingDerivation;
  var runAsAction = !canRunAsDerivation || !prevDerivation_;
  startBatch();
  var prevAllowStateChanges_ = globalState.allowStateChanges; // by default preserve previous allow
  if (runAsAction) {
    untrackedStart();
    prevAllowStateChanges_ = allowStateChangesStart(true);
  }
  var prevAllowStateReads_ = allowStateReadsStart(true);
  var runInfo = {
    runAsAction_: runAsAction,
    prevDerivation_: prevDerivation_,
    prevAllowStateChanges_: prevAllowStateChanges_,
    prevAllowStateReads_: prevAllowStateReads_,
    notifySpy_: notifySpy_,
    startTime_: startTime_,
    actionId_: nextActionId++,
    parentActionId_: currentActionId
  };
  currentActionId = runInfo.actionId_;
  return runInfo;
}
function _endAction(runInfo) {
  if (currentActionId !== runInfo.actionId_) {
    die(30);
  }
  currentActionId = runInfo.parentActionId_;
  if (runInfo.error_ !== undefined) {
    globalState.suppressReactionErrors = true;
  }
  allowStateChangesEnd(runInfo.prevAllowStateChanges_);
  allowStateReadsEnd(runInfo.prevAllowStateReads_);
  endBatch();
  if (runInfo.runAsAction_) {
    untrackedEnd(runInfo.prevDerivation_);
  }
  if (false) {}
  globalState.suppressReactionErrors = false;
}
function allowStateChanges(allowStateChanges, func) {
  var prev = allowStateChangesStart(allowStateChanges);
  try {
    return func();
  } finally {
    allowStateChangesEnd(prev);
  }
}
function allowStateChangesStart(allowStateChanges) {
  var prev = globalState.allowStateChanges;
  globalState.allowStateChanges = allowStateChanges;
  return prev;
}
function allowStateChangesEnd(prev) {
  globalState.allowStateChanges = prev;
}

var CREATE = "create";
var ObservableValue = /*#__PURE__*/function (_Atom) {
  function ObservableValue(value, enhancer, name_, notifySpy, equals) {
    var _this;
    if (name_ === void 0) {
      name_ =  false ? undefined : "ObservableValue";
    }
    if (notifySpy === void 0) {
      notifySpy = true;
    }
    if (equals === void 0) {
      equals = comparer["default"];
    }
    _this = _Atom.call(this, name_) || this;
    _this.enhancer = void 0;
    _this.name_ = void 0;
    _this.equals = void 0;
    _this.hasUnreportedChange_ = false;
    _this.interceptors_ = void 0;
    _this.changeListeners_ = void 0;
    _this.value_ = void 0;
    _this.dehancer = void 0;
    _this.enhancer = enhancer;
    _this.name_ = name_;
    _this.equals = equals;
    _this.value_ = enhancer(value, undefined, name_);
    if (false) {}
    return _this;
  }
  _inheritsLoose(ObservableValue, _Atom);
  var _proto = ObservableValue.prototype;
  _proto.dehanceValue = function dehanceValue(value) {
    if (this.dehancer !== undefined) {
      return this.dehancer(value);
    }
    return value;
  };
  _proto.set = function set(newValue) {
    var oldValue = this.value_;
    newValue = this.prepareNewValue_(newValue);
    if (newValue !== globalState.UNCHANGED) {
      var notifySpy = isSpyEnabled();
      if (false) {}
      this.setNewValue_(newValue);
      if (false) {}
    }
  };
  _proto.prepareNewValue_ = function prepareNewValue_(newValue) {
    checkIfStateModificationsAreAllowed(this);
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        object: this,
        type: UPDATE,
        newValue: newValue
      });
      if (!change) {
        return globalState.UNCHANGED;
      }
      newValue = change.newValue;
    }
    // apply modifier
    newValue = this.enhancer(newValue, this.value_, this.name_);
    return this.equals(this.value_, newValue) ? globalState.UNCHANGED : newValue;
  };
  _proto.setNewValue_ = function setNewValue_(newValue) {
    var oldValue = this.value_;
    this.value_ = newValue;
    this.reportChanged();
    if (hasListeners(this)) {
      notifyListeners(this, {
        type: UPDATE,
        object: this,
        newValue: newValue,
        oldValue: oldValue
      });
    }
  };
  _proto.get = function get() {
    this.reportObserved();
    return this.dehanceValue(this.value_);
  };
  _proto.intercept_ = function intercept_(handler) {
    return registerInterceptor(this, handler);
  };
  _proto.observe_ = function observe_(listener, fireImmediately) {
    if (fireImmediately) {
      listener({
        observableKind: "value",
        debugObjectName: this.name_,
        object: this,
        type: UPDATE,
        newValue: this.value_,
        oldValue: undefined
      });
    }
    return registerListener(this, listener);
  };
  _proto.raw = function raw() {
    // used by MST ot get undehanced value
    return this.value_;
  };
  _proto.toJSON = function toJSON() {
    return this.get();
  };
  _proto.toString = function toString() {
    return this.name_ + "[" + this.value_ + "]";
  };
  _proto.valueOf = function valueOf() {
    return toPrimitive(this.get());
  };
  _proto[Symbol.toPrimitive] = function () {
    return this.valueOf();
  };
  return ObservableValue;
}(Atom);
var isObservableValue = /*#__PURE__*/createInstanceofPredicate("ObservableValue", ObservableValue);

/**
 * A node in the state dependency root that observes other nodes, and can be observed itself.
 *
 * ComputedValue will remember the result of the computation for the duration of the batch, or
 * while being observed.
 *
 * During this time it will recompute only when one of its direct dependencies changed,
 * but only when it is being accessed with `ComputedValue.get()`.
 *
 * Implementation description:
 * 1. First time it's being accessed it will compute and remember result
 *    give back remembered result until 2. happens
 * 2. First time any deep dependency change, propagate POSSIBLY_STALE to all observers, wait for 3.
 * 3. When it's being accessed, recompute if any shallow dependency changed.
 *    if result changed: propagate STALE to all observers, that were POSSIBLY_STALE from the last step.
 *    go to step 2. either way
 *
 * If at any point it's outside batch and it isn't observed: reset everything and go to 1.
 */
var ComputedValue = /*#__PURE__*/function () {
  /**
   * Create a new computed value based on a function expression.
   *
   * The `name` property is for debug purposes only.
   *
   * The `equals` property specifies the comparer function to use to determine if a newly produced
   * value differs from the previous value. Two comparers are provided in the library; `defaultComparer`
   * compares based on identity comparison (===), and `structuralComparer` deeply compares the structure.
   * Structural comparison can be convenient if you always produce a new aggregated object and
   * don't want to notify observers if it is structurally the same.
   * This is useful for working with vectors, mouse coordinates etc.
   */
  function ComputedValue(options) {
    this.dependenciesState_ = IDerivationState_.NOT_TRACKING_;
    this.observing_ = [];
    // nodes we are looking at. Our value depends on these nodes
    this.newObserving_ = null;
    // during tracking it's an array with new observed observers
    this.observers_ = new Set();
    this.runId_ = 0;
    this.lastAccessedBy_ = 0;
    this.lowestObserverState_ = IDerivationState_.UP_TO_DATE_;
    this.unboundDepsCount_ = 0;
    this.value_ = new CaughtException(null);
    this.name_ = void 0;
    this.triggeredBy_ = void 0;
    this.flags_ = 0;
    this.derivation = void 0;
    // N.B: unminified as it is used by MST
    this.setter_ = void 0;
    this.isTracing_ = TraceMode.NONE;
    this.scope_ = void 0;
    this.equals_ = void 0;
    this.requiresReaction_ = void 0;
    this.keepAlive_ = void 0;
    this.onBOL = void 0;
    this.onBUOL = void 0;
    if (!options.get) {
      die(31);
    }
    this.derivation = options.get;
    this.name_ = options.name || ( false ? undefined : "ComputedValue");
    if (options.set) {
      this.setter_ = createAction( false ? undefined : "ComputedValue-setter", options.set);
    }
    this.equals_ = options.equals || (options.compareStructural || options.struct ? comparer.structural : comparer["default"]);
    this.scope_ = options.context;
    this.requiresReaction_ = options.requiresReaction;
    this.keepAlive_ = !!options.keepAlive;
  }
  var _proto = ComputedValue.prototype;
  _proto.onBecomeStale_ = function onBecomeStale_() {
    propagateMaybeChanged(this);
  };
  _proto.onBO = function onBO() {
    if (this.onBOL) {
      this.onBOL.forEach(function (listener) {
        return listener();
      });
    }
  };
  _proto.onBUO = function onBUO() {
    if (this.onBUOL) {
      this.onBUOL.forEach(function (listener) {
        return listener();
      });
    }
  }
  // to check for cycles
  ;
  /**
   * Returns the current value of this computed value.
   * Will evaluate its computation first if needed.
   */
  _proto.get = function get() {
    if (this.isComputing) {
      die(32, this.name_, this.derivation);
    }
    if (globalState.inBatch === 0 &&
    // !globalState.trackingDerivatpion &&
    this.observers_.size === 0 && !this.keepAlive_) {
      if (shouldCompute(this)) {
        this.warnAboutUntrackedRead_();
        startBatch(); // See perf test 'computed memoization'
        this.value_ = this.computeValue_(false);
        endBatch();
      }
    } else {
      reportObserved(this);
      if (shouldCompute(this)) {
        var prevTrackingContext = globalState.trackingContext;
        if (this.keepAlive_ && !prevTrackingContext) {
          globalState.trackingContext = this;
        }
        if (this.trackAndCompute()) {
          propagateChangeConfirmed(this);
        }
        globalState.trackingContext = prevTrackingContext;
      }
    }
    var result = this.value_;
    if (isCaughtException(result)) {
      throw result.cause;
    }
    return result;
  };
  _proto.set = function set(value) {
    if (this.setter_) {
      if (this.isRunningSetter) {
        die(33, this.name_);
      }
      this.isRunningSetter = true;
      try {
        this.setter_.call(this.scope_, value);
      } finally {
        this.isRunningSetter = false;
      }
    } else {
      die(34, this.name_);
    }
  };
  _proto.trackAndCompute = function trackAndCompute() {
    // N.B: unminified as it is used by MST
    var oldValue = this.value_;
    var wasSuspended = /* see #1208 */this.dependenciesState_ === IDerivationState_.NOT_TRACKING_;
    var newValue = this.computeValue_(true);
    var changed = wasSuspended || isCaughtException(oldValue) || isCaughtException(newValue) || !this.equals_(oldValue, newValue);
    if (changed) {
      this.value_ = newValue;
      if (false) {}
    }
    return changed;
  };
  _proto.computeValue_ = function computeValue_(track) {
    this.isComputing = true;
    // don't allow state changes during computation
    var prev = allowStateChangesStart(false);
    var res;
    if (track) {
      res = trackDerivedFunction(this, this.derivation, this.scope_);
    } else {
      if (globalState.disableErrorBoundaries === true) {
        res = this.derivation.call(this.scope_);
      } else {
        try {
          res = this.derivation.call(this.scope_);
        } catch (e) {
          res = new CaughtException(e);
        }
      }
    }
    allowStateChangesEnd(prev);
    this.isComputing = false;
    return res;
  };
  _proto.suspend_ = function suspend_() {
    if (!this.keepAlive_) {
      clearObserving(this);
      this.value_ = undefined; // don't hold on to computed value!
      if (false) {}
    }
  };
  _proto.observe_ = function observe_(listener, fireImmediately) {
    var _this = this;
    var firstTime = true;
    var prevValue = undefined;
    return autorun(function () {
      // TODO: why is this in a different place than the spyReport() function? in all other observables it's called in the same place
      var newValue = _this.get();
      if (!firstTime || fireImmediately) {
        var prevU = untrackedStart();
        listener({
          observableKind: "computed",
          debugObjectName: _this.name_,
          type: UPDATE,
          object: _this,
          newValue: newValue,
          oldValue: prevValue
        });
        untrackedEnd(prevU);
      }
      firstTime = false;
      prevValue = newValue;
    });
  };
  _proto.warnAboutUntrackedRead_ = function warnAboutUntrackedRead_() {
    if (true) {
      return;
    }
    if (this.isTracing_ !== TraceMode.NONE) {
      console.log("[mobx.trace] Computed value '" + this.name_ + "' is being read outside a reactive context. Doing a full recompute.");
    }
    if (typeof this.requiresReaction_ === "boolean" ? this.requiresReaction_ : globalState.computedRequiresReaction) {
      console.warn("[mobx] Computed value '" + this.name_ + "' is being read outside a reactive context. Doing a full recompute.");
    }
  };
  _proto.toString = function toString() {
    return this.name_ + "[" + this.derivation.toString() + "]";
  };
  _proto.valueOf = function valueOf() {
    return toPrimitive(this.get());
  };
  _proto[Symbol.toPrimitive] = function () {
    return this.valueOf();
  };
  return _createClass(ComputedValue, [{
    key: "isComputing",
    get: function get() {
      return getFlag(this.flags_, ComputedValue.isComputingMask_);
    },
    set: function set(newValue) {
      this.flags_ = setFlag(this.flags_, ComputedValue.isComputingMask_, newValue);
    }
  }, {
    key: "isRunningSetter",
    get: function get() {
      return getFlag(this.flags_, ComputedValue.isRunningSetterMask_);
    },
    set: function set(newValue) {
      this.flags_ = setFlag(this.flags_, ComputedValue.isRunningSetterMask_, newValue);
    }
  }, {
    key: "isBeingObserved",
    get: function get() {
      return getFlag(this.flags_, ComputedValue.isBeingObservedMask_);
    },
    set: function set(newValue) {
      this.flags_ = setFlag(this.flags_, ComputedValue.isBeingObservedMask_, newValue);
    }
  }, {
    key: "isPendingUnobservation",
    get: function get() {
      return getFlag(this.flags_, ComputedValue.isPendingUnobservationMask_);
    },
    set: function set(newValue) {
      this.flags_ = setFlag(this.flags_, ComputedValue.isPendingUnobservationMask_, newValue);
    }
  }, {
    key: "diffValue",
    get: function get() {
      return getFlag(this.flags_, ComputedValue.diffValueMask_) ? 1 : 0;
    },
    set: function set(newValue) {
      this.flags_ = setFlag(this.flags_, ComputedValue.diffValueMask_, newValue === 1 ? true : false);
    }
  }]);
}();
ComputedValue.isComputingMask_ = 1;
ComputedValue.isRunningSetterMask_ = 2;
ComputedValue.isBeingObservedMask_ = 4;
ComputedValue.isPendingUnobservationMask_ = 8;
ComputedValue.diffValueMask_ = 16;
var isComputedValue = /*#__PURE__*/createInstanceofPredicate("ComputedValue", ComputedValue);

var IDerivationState_;
(function (IDerivationState_) {
  // before being run or (outside batch and not being observed)
  // at this point derivation is not holding any data about dependency tree
  IDerivationState_[IDerivationState_["NOT_TRACKING_"] = -1] = "NOT_TRACKING_";
  // no shallow dependency changed since last computation
  // won't recalculate derivation
  // this is what makes mobx fast
  IDerivationState_[IDerivationState_["UP_TO_DATE_"] = 0] = "UP_TO_DATE_";
  // some deep dependency changed, but don't know if shallow dependency changed
  // will require to check first if UP_TO_DATE or POSSIBLY_STALE
  // currently only ComputedValue will propagate POSSIBLY_STALE
  //
  // having this state is second big optimization:
  // don't have to recompute on every dependency change, but only when it's needed
  IDerivationState_[IDerivationState_["POSSIBLY_STALE_"] = 1] = "POSSIBLY_STALE_";
  // A shallow dependency has changed since last computation and the derivation
  // will need to recompute when it's needed next.
  IDerivationState_[IDerivationState_["STALE_"] = 2] = "STALE_";
})(IDerivationState_ || (IDerivationState_ = {}));
var TraceMode;
(function (TraceMode) {
  TraceMode[TraceMode["NONE"] = 0] = "NONE";
  TraceMode[TraceMode["LOG"] = 1] = "LOG";
  TraceMode[TraceMode["BREAK"] = 2] = "BREAK";
})(TraceMode || (TraceMode = {}));
var CaughtException = function CaughtException(cause) {
  this.cause = void 0;
  this.cause = cause;
  // Empty
};
function isCaughtException(e) {
  return e instanceof CaughtException;
}
/**
 * Finds out whether any dependency of the derivation has actually changed.
 * If dependenciesState is 1 then it will recalculate dependencies,
 * if any dependency changed it will propagate it by changing dependenciesState to 2.
 *
 * By iterating over the dependencies in the same order that they were reported and
 * stopping on the first change, all the recalculations are only called for ComputedValues
 * that will be tracked by derivation. That is because we assume that if the first x
 * dependencies of the derivation doesn't change then the derivation should run the same way
 * up until accessing x-th dependency.
 */
function shouldCompute(derivation) {
  switch (derivation.dependenciesState_) {
    case IDerivationState_.UP_TO_DATE_:
      return false;
    case IDerivationState_.NOT_TRACKING_:
    case IDerivationState_.STALE_:
      return true;
    case IDerivationState_.POSSIBLY_STALE_:
      {
        // state propagation can occur outside of action/reactive context #2195
        var prevAllowStateReads = allowStateReadsStart(true);
        var prevUntracked = untrackedStart(); // no need for those computeds to be reported, they will be picked up in trackDerivedFunction.
        var obs = derivation.observing_,
          l = obs.length;
        for (var i = 0; i < l; i++) {
          var obj = obs[i];
          if (isComputedValue(obj)) {
            if (globalState.disableErrorBoundaries) {
              obj.get();
            } else {
              try {
                obj.get();
              } catch (e) {
                // we are not interested in the value *or* exception at this moment, but if there is one, notify all
                untrackedEnd(prevUntracked);
                allowStateReadsEnd(prevAllowStateReads);
                return true;
              }
            }
            // if ComputedValue `obj` actually changed it will be computed and propagated to its observers.
            // and `derivation` is an observer of `obj`
            // invariantShouldCompute(derivation)
            if (derivation.dependenciesState_ === IDerivationState_.STALE_) {
              untrackedEnd(prevUntracked);
              allowStateReadsEnd(prevAllowStateReads);
              return true;
            }
          }
        }
        changeDependenciesStateTo0(derivation);
        untrackedEnd(prevUntracked);
        allowStateReadsEnd(prevAllowStateReads);
        return false;
      }
  }
}
function isComputingDerivation() {
  return globalState.trackingDerivation !== null; // filter out actions inside computations
}
function checkIfStateModificationsAreAllowed(atom) {
  if (true) {
    return;
  }
  var hasObservers = atom.observers_.size > 0;
  // Should not be possible to change observed state outside strict mode, except during initialization, see #563
  if (!globalState.allowStateChanges && (hasObservers || globalState.enforceActions === "always")) {
    console.warn("[MobX] " + (globalState.enforceActions ? "Since strict-mode is enabled, changing (observed) observable values without using an action is not allowed. Tried to modify: " : "Side effects like changing state are not allowed at this point. Are you trying to modify state from, for example, a computed value or the render function of a React component? You can wrap side effects in 'runInAction' (or decorate functions with 'action') if needed. Tried to modify: ") + atom.name_);
  }
}
function checkIfStateReadsAreAllowed(observable) {
  if (false) {}
}
/**
 * Executes the provided function `f` and tracks which observables are being accessed.
 * The tracking information is stored on the `derivation` object and the derivation is registered
 * as observer of any of the accessed observables.
 */
function trackDerivedFunction(derivation, f, context) {
  var prevAllowStateReads = allowStateReadsStart(true);
  changeDependenciesStateTo0(derivation);
  // Preallocate array; will be trimmed by bindDependencies.
  derivation.newObserving_ = new Array(
  // Reserve constant space for initial dependencies, dynamic space otherwise.
  // See https://github.com/mobxjs/mobx/pull/3833
  derivation.runId_ === 0 ? 100 : derivation.observing_.length);
  derivation.unboundDepsCount_ = 0;
  derivation.runId_ = ++globalState.runId;
  var prevTracking = globalState.trackingDerivation;
  globalState.trackingDerivation = derivation;
  globalState.inBatch++;
  var result;
  if (globalState.disableErrorBoundaries === true) {
    result = f.call(context);
  } else {
    try {
      result = f.call(context);
    } catch (e) {
      result = new CaughtException(e);
    }
  }
  globalState.inBatch--;
  globalState.trackingDerivation = prevTracking;
  bindDependencies(derivation);
  warnAboutDerivationWithoutDependencies(derivation);
  allowStateReadsEnd(prevAllowStateReads);
  return result;
}
function warnAboutDerivationWithoutDependencies(derivation) {
  if (true) {
    return;
  }
  if (derivation.observing_.length !== 0) {
    return;
  }
  if (typeof derivation.requiresObservable_ === "boolean" ? derivation.requiresObservable_ : globalState.reactionRequiresObservable) {
    console.warn("[mobx] Derivation '" + derivation.name_ + "' is created/updated without reading any observable value.");
  }
}
/**
 * diffs newObserving with observing.
 * update observing to be newObserving with unique observables
 * notify observers that become observed/unobserved
 */
function bindDependencies(derivation) {
  // invariant(derivation.dependenciesState !== IDerivationState.NOT_TRACKING, "INTERNAL ERROR bindDependencies expects derivation.dependenciesState !== -1");
  var prevObserving = derivation.observing_;
  var observing = derivation.observing_ = derivation.newObserving_;
  var lowestNewObservingDerivationState = IDerivationState_.UP_TO_DATE_;
  // Go through all new observables and check diffValue: (this list can contain duplicates):
  //   0: first occurrence, change to 1 and keep it
  //   1: extra occurrence, drop it
  var i0 = 0,
    l = derivation.unboundDepsCount_;
  for (var i = 0; i < l; i++) {
    var dep = observing[i];
    if (dep.diffValue === 0) {
      dep.diffValue = 1;
      if (i0 !== i) {
        observing[i0] = dep;
      }
      i0++;
    }
    // Upcast is 'safe' here, because if dep is IObservable, `dependenciesState` will be undefined,
    // not hitting the condition
    if (dep.dependenciesState_ > lowestNewObservingDerivationState) {
      lowestNewObservingDerivationState = dep.dependenciesState_;
    }
  }
  observing.length = i0;
  derivation.newObserving_ = null; // newObserving shouldn't be needed outside tracking (statement moved down to work around FF bug, see #614)
  // Go through all old observables and check diffValue: (it is unique after last bindDependencies)
  //   0: it's not in new observables, unobserve it
  //   1: it keeps being observed, don't want to notify it. change to 0
  l = prevObserving.length;
  while (l--) {
    var _dep = prevObserving[l];
    if (_dep.diffValue === 0) {
      removeObserver(_dep, derivation);
    }
    _dep.diffValue = 0;
  }
  // Go through all new observables and check diffValue: (now it should be unique)
  //   0: it was set to 0 in last loop. don't need to do anything.
  //   1: it wasn't observed, let's observe it. set back to 0
  while (i0--) {
    var _dep2 = observing[i0];
    if (_dep2.diffValue === 1) {
      _dep2.diffValue = 0;
      addObserver(_dep2, derivation);
    }
  }
  // Some new observed derivations may become stale during this derivation computation
  // so they have had no chance to propagate staleness (#916)
  if (lowestNewObservingDerivationState !== IDerivationState_.UP_TO_DATE_) {
    derivation.dependenciesState_ = lowestNewObservingDerivationState;
    derivation.onBecomeStale_();
  }
}
function clearObserving(derivation) {
  // invariant(globalState.inBatch > 0, "INTERNAL ERROR clearObserving should be called only inside batch");
  var obs = derivation.observing_;
  derivation.observing_ = [];
  var i = obs.length;
  while (i--) {
    removeObserver(obs[i], derivation);
  }
  derivation.dependenciesState_ = IDerivationState_.NOT_TRACKING_;
}
function untracked(action) {
  var prev = untrackedStart();
  try {
    return action();
  } finally {
    untrackedEnd(prev);
  }
}
function untrackedStart() {
  var prev = globalState.trackingDerivation;
  globalState.trackingDerivation = null;
  return prev;
}
function untrackedEnd(prev) {
  globalState.trackingDerivation = prev;
}
function allowStateReadsStart(allowStateReads) {
  var prev = globalState.allowStateReads;
  globalState.allowStateReads = allowStateReads;
  return prev;
}
function allowStateReadsEnd(prev) {
  globalState.allowStateReads = prev;
}
/**
 * needed to keep `lowestObserverState` correct. when changing from (2 or 1) to 0
 *
 */
function changeDependenciesStateTo0(derivation) {
  if (derivation.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {
    return;
  }
  derivation.dependenciesState_ = IDerivationState_.UP_TO_DATE_;
  var obs = derivation.observing_;
  var i = obs.length;
  while (i--) {
    obs[i].lowestObserverState_ = IDerivationState_.UP_TO_DATE_;
  }
}

/**
 * These values will persist if global state is reset
 */
var persistentKeys = ["mobxGuid", "spyListeners", "enforceActions", "computedRequiresReaction", "reactionRequiresObservable", "observableRequiresReaction", "allowStateReads", "disableErrorBoundaries", "runId", "UNCHANGED", "useProxies"];
var MobXGlobals = function MobXGlobals() {
  /**
   * MobXGlobals version.
   * MobX compatiblity with other versions loaded in memory as long as this version matches.
   * It indicates that the global state still stores similar information
   *
   * N.B: this version is unrelated to the package version of MobX, and is only the version of the
   * internal state storage of MobX, and can be the same across many different package versions
   */
  this.version = 6;
  /**
   * globally unique token to signal unchanged
   */
  this.UNCHANGED = {};
  /**
   * Currently running derivation
   */
  this.trackingDerivation = null;
  /**
   * Currently running reaction. This determines if we currently have a reactive context.
   * (Tracking derivation is also set for temporal tracking of computed values inside actions,
   * but trackingReaction can only be set by a form of Reaction)
   */
  this.trackingContext = null;
  /**
   * Each time a derivation is tracked, it is assigned a unique run-id
   */
  this.runId = 0;
  /**
   * 'guid' for general purpose. Will be persisted amongst resets.
   */
  this.mobxGuid = 0;
  /**
   * Are we in a batch block? (and how many of them)
   */
  this.inBatch = 0;
  /**
   * Observables that don't have observers anymore, and are about to be
   * suspended, unless somebody else accesses it in the same batch
   *
   * @type {IObservable[]}
   */
  this.pendingUnobservations = [];
  /**
   * List of scheduled, not yet executed, reactions.
   */
  this.pendingReactions = [];
  /**
   * Are we currently processing reactions?
   */
  this.isRunningReactions = false;
  /**
   * Is it allowed to change observables at this point?
   * In general, MobX doesn't allow that when running computations and React.render.
   * To ensure that those functions stay pure.
   */
  this.allowStateChanges = false;
  /**
   * Is it allowed to read observables at this point?
   * Used to hold the state needed for `observableRequiresReaction`
   */
  this.allowStateReads = true;
  /**
   * If strict mode is enabled, state changes are by default not allowed
   */
  this.enforceActions = true;
  /**
   * Spy callbacks
   */
  this.spyListeners = [];
  /**
   * Globally attached error handlers that react specifically to errors in reactions
   */
  this.globalReactionErrorHandlers = [];
  /**
   * Warn if computed values are accessed outside a reactive context
   */
  this.computedRequiresReaction = false;
  /**
   * (Experimental)
   * Warn if you try to create to derivation / reactive context without accessing any observable.
   */
  this.reactionRequiresObservable = false;
  /**
   * (Experimental)
   * Warn if observables are accessed outside a reactive context
   */
  this.observableRequiresReaction = false;
  /*
   * Don't catch and rethrow exceptions. This is useful for inspecting the state of
   * the stack when an exception occurs while debugging.
   */
  this.disableErrorBoundaries = false;
  /*
   * If true, we are already handling an exception in an action. Any errors in reactions should be suppressed, as
   * they are not the cause, see: https://github.com/mobxjs/mobx/issues/1836
   */
  this.suppressReactionErrors = false;
  this.useProxies = true;
  /*
   * print warnings about code that would fail if proxies weren't available
   */
  this.verifyProxies = false;
  /**
   * False forces all object's descriptors to
   * writable: true
   * configurable: true
   */
  this.safeDescriptors = true;
};
var canMergeGlobalState = true;
var isolateCalled = false;
var globalState = /*#__PURE__*/function () {
  var global = /*#__PURE__*/getGlobal();
  if (global.__mobxInstanceCount > 0 && !global.__mobxGlobals) {
    canMergeGlobalState = false;
  }
  if (global.__mobxGlobals && global.__mobxGlobals.version !== new MobXGlobals().version) {
    canMergeGlobalState = false;
  }
  if (!canMergeGlobalState) {
    // Because this is a IIFE we need to let isolateCalled a chance to change
    // so we run it after the event loop completed at least 1 iteration
    setTimeout(function () {
      if (!isolateCalled) {
        die(35);
      }
    }, 1);
    return new MobXGlobals();
  } else if (global.__mobxGlobals) {
    global.__mobxInstanceCount += 1;
    if (!global.__mobxGlobals.UNCHANGED) {
      global.__mobxGlobals.UNCHANGED = {};
    } // make merge backward compatible
    return global.__mobxGlobals;
  } else {
    global.__mobxInstanceCount = 1;
    return global.__mobxGlobals = /*#__PURE__*/new MobXGlobals();
  }
}();
function isolateGlobalState() {
  if (globalState.pendingReactions.length || globalState.inBatch || globalState.isRunningReactions) {
    die(36);
  }
  isolateCalled = true;
  if (canMergeGlobalState) {
    var global = getGlobal();
    if (--global.__mobxInstanceCount === 0) {
      global.__mobxGlobals = undefined;
    }
    globalState = new MobXGlobals();
  }
}
function getGlobalState() {
  return globalState;
}
/**
 * For testing purposes only; this will break the internal state of existing observables,
 * but can be used to get back at a stable state after throwing errors
 */
function resetGlobalState() {
  var defaultGlobals = new MobXGlobals();
  for (var key in defaultGlobals) {
    if (persistentKeys.indexOf(key) === -1) {
      globalState[key] = defaultGlobals[key];
    }
  }
  globalState.allowStateChanges = !globalState.enforceActions;
}

function hasObservers(observable) {
  return observable.observers_ && observable.observers_.size > 0;
}
function getObservers(observable) {
  return observable.observers_;
}
// function invariantObservers(observable: IObservable) {
//     const list = observable.observers
//     const map = observable.observersIndexes
//     const l = list.length
//     for (let i = 0; i < l; i++) {
//         const id = list[i].__mapid
//         if (i) {
//             invariant(map[id] === i, "INTERNAL ERROR maps derivation.__mapid to index in list") // for performance
//         } else {
//             invariant(!(id in map), "INTERNAL ERROR observer on index 0 shouldn't be held in map.") // for performance
//         }
//     }
//     invariant(
//         list.length === 0 || Object.keys(map).length === list.length - 1,
//         "INTERNAL ERROR there is no junk in map"
//     )
// }
function addObserver(observable, node) {
  // invariant(node.dependenciesState !== -1, "INTERNAL ERROR, can add only dependenciesState !== -1");
  // invariant(observable._observers.indexOf(node) === -1, "INTERNAL ERROR add already added node");
  // invariantObservers(observable);
  observable.observers_.add(node);
  if (observable.lowestObserverState_ > node.dependenciesState_) {
    observable.lowestObserverState_ = node.dependenciesState_;
  }
  // invariantObservers(observable);
  // invariant(observable._observers.indexOf(node) !== -1, "INTERNAL ERROR didn't add node");
}
function removeObserver(observable, node) {
  // invariant(globalState.inBatch > 0, "INTERNAL ERROR, remove should be called only inside batch");
  // invariant(observable._observers.indexOf(node) !== -1, "INTERNAL ERROR remove already removed node");
  // invariantObservers(observable);
  observable.observers_["delete"](node);
  if (observable.observers_.size === 0) {
    // deleting last observer
    queueForUnobservation(observable);
  }
  // invariantObservers(observable);
  // invariant(observable._observers.indexOf(node) === -1, "INTERNAL ERROR remove already removed node2");
}
function queueForUnobservation(observable) {
  if (observable.isPendingUnobservation === false) {
    // invariant(observable._observers.length === 0, "INTERNAL ERROR, should only queue for unobservation unobserved observables");
    observable.isPendingUnobservation = true;
    globalState.pendingUnobservations.push(observable);
  }
}
/**
 * Batch starts a transaction, at least for purposes of memoizing ComputedValues when nothing else does.
 * During a batch `onBecomeUnobserved` will be called at most once per observable.
 * Avoids unnecessary recalculations.
 */
function startBatch() {
  globalState.inBatch++;
}
function endBatch() {
  if (--globalState.inBatch === 0) {
    runReactions();
    // the batch is actually about to finish, all unobserving should happen here.
    var list = globalState.pendingUnobservations;
    for (var i = 0; i < list.length; i++) {
      var observable = list[i];
      observable.isPendingUnobservation = false;
      if (observable.observers_.size === 0) {
        if (observable.isBeingObserved) {
          // if this observable had reactive observers, trigger the hooks
          observable.isBeingObserved = false;
          observable.onBUO();
        }
        if (observable instanceof ComputedValue) {
          // computed values are automatically teared down when the last observer leaves
          // this process happens recursively, this computed might be the last observabe of another, etc..
          observable.suspend_();
        }
      }
    }
    globalState.pendingUnobservations = [];
  }
}
function reportObserved(observable) {
  checkIfStateReadsAreAllowed(observable);
  var derivation = globalState.trackingDerivation;
  if (derivation !== null) {
    /**
     * Simple optimization, give each derivation run an unique id (runId)
     * Check if last time this observable was accessed the same runId is used
     * if this is the case, the relation is already known
     */
    if (derivation.runId_ !== observable.lastAccessedBy_) {
      observable.lastAccessedBy_ = derivation.runId_;
      // Tried storing newObserving, or observing, or both as Set, but performance didn't come close...
      derivation.newObserving_[derivation.unboundDepsCount_++] = observable;
      if (!observable.isBeingObserved && globalState.trackingContext) {
        observable.isBeingObserved = true;
        observable.onBO();
      }
    }
    return observable.isBeingObserved;
  } else if (observable.observers_.size === 0 && globalState.inBatch > 0) {
    queueForUnobservation(observable);
  }
  return false;
}
// function invariantLOS(observable: IObservable, msg: string) {
//     // it's expensive so better not run it in produciton. but temporarily helpful for testing
//     const min = getObservers(observable).reduce((a, b) => Math.min(a, b.dependenciesState), 2)
//     if (min >= observable.lowestObserverState) return // <- the only assumption about `lowestObserverState`
//     throw new Error(
//         "lowestObserverState is wrong for " +
//             msg +
//             " because " +
//             min +
//             " < " +
//             observable.lowestObserverState
//     )
// }
/**
 * NOTE: current propagation mechanism will in case of self reruning autoruns behave unexpectedly
 * It will propagate changes to observers from previous run
 * It's hard or maybe impossible (with reasonable perf) to get it right with current approach
 * Hopefully self reruning autoruns aren't a feature people should depend on
 * Also most basic use cases should be ok
 */
// Called by Atom when its value changes
function propagateChanged(observable) {
  // invariantLOS(observable, "changed start");
  if (observable.lowestObserverState_ === IDerivationState_.STALE_) {
    return;
  }
  observable.lowestObserverState_ = IDerivationState_.STALE_;
  // Ideally we use for..of here, but the downcompiled version is really slow...
  observable.observers_.forEach(function (d) {
    if (d.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {
      if (false) {}
      d.onBecomeStale_();
    }
    d.dependenciesState_ = IDerivationState_.STALE_;
  });
  // invariantLOS(observable, "changed end");
}
// Called by ComputedValue when it recalculate and its value changed
function propagateChangeConfirmed(observable) {
  // invariantLOS(observable, "confirmed start");
  if (observable.lowestObserverState_ === IDerivationState_.STALE_) {
    return;
  }
  observable.lowestObserverState_ = IDerivationState_.STALE_;
  observable.observers_.forEach(function (d) {
    if (d.dependenciesState_ === IDerivationState_.POSSIBLY_STALE_) {
      d.dependenciesState_ = IDerivationState_.STALE_;
      if (false) {}
    } else if (d.dependenciesState_ === IDerivationState_.UP_TO_DATE_ // this happens during computing of `d`, just keep lowestObserverState up to date.
    ) {
      observable.lowestObserverState_ = IDerivationState_.UP_TO_DATE_;
    }
  });
  // invariantLOS(observable, "confirmed end");
}
// Used by computed when its dependency changed, but we don't wan't to immediately recompute.
function propagateMaybeChanged(observable) {
  // invariantLOS(observable, "maybe start");
  if (observable.lowestObserverState_ !== IDerivationState_.UP_TO_DATE_) {
    return;
  }
  observable.lowestObserverState_ = IDerivationState_.POSSIBLY_STALE_;
  observable.observers_.forEach(function (d) {
    if (d.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {
      d.dependenciesState_ = IDerivationState_.POSSIBLY_STALE_;
      d.onBecomeStale_();
    }
  });
  // invariantLOS(observable, "maybe end");
}
function logTraceInfo(derivation, observable) {
  console.log("[mobx.trace] '" + derivation.name_ + "' is invalidated due to a change in: '" + observable.name_ + "'");
  if (derivation.isTracing_ === TraceMode.BREAK) {
    var lines = [];
    printDepTree(getDependencyTree(derivation), lines, 1);
    // prettier-ignore
    new Function("debugger;\n/*\nTracing '" + derivation.name_ + "'\n\nYou are entering this break point because derivation '" + derivation.name_ + "' is being traced and '" + observable.name_ + "' is now forcing it to update.\nJust follow the stacktrace you should now see in the devtools to see precisely what piece of your code is causing this update\nThe stackframe you are looking for is at least ~6-8 stack-frames up.\n\n" + (derivation instanceof ComputedValue ? derivation.derivation.toString().replace(/[*]\//g, "/") : "") + "\n\nThe dependencies for this derivation are:\n\n" + lines.join("\n") + "\n*/\n    ")();
  }
}
function printDepTree(tree, lines, depth) {
  if (lines.length >= 1000) {
    lines.push("(and many more)");
    return;
  }
  lines.push("" + "\t".repeat(depth - 1) + tree.name);
  if (tree.dependencies) {
    tree.dependencies.forEach(function (child) {
      return printDepTree(child, lines, depth + 1);
    });
  }
}

var Reaction = /*#__PURE__*/function () {
  function Reaction(name_, onInvalidate_, errorHandler_, requiresObservable_) {
    if (name_ === void 0) {
      name_ =  false ? undefined : "Reaction";
    }
    this.name_ = void 0;
    this.onInvalidate_ = void 0;
    this.errorHandler_ = void 0;
    this.requiresObservable_ = void 0;
    this.observing_ = [];
    // nodes we are looking at. Our value depends on these nodes
    this.newObserving_ = [];
    this.dependenciesState_ = IDerivationState_.NOT_TRACKING_;
    this.runId_ = 0;
    this.unboundDepsCount_ = 0;
    this.flags_ = 0;
    this.isTracing_ = TraceMode.NONE;
    this.name_ = name_;
    this.onInvalidate_ = onInvalidate_;
    this.errorHandler_ = errorHandler_;
    this.requiresObservable_ = requiresObservable_;
  }
  var _proto = Reaction.prototype;
  _proto.onBecomeStale_ = function onBecomeStale_() {
    this.schedule_();
  };
  _proto.schedule_ = function schedule_() {
    if (!this.isScheduled) {
      this.isScheduled = true;
      globalState.pendingReactions.push(this);
      runReactions();
    }
  }
  /**
   * internal, use schedule() if you intend to kick off a reaction
   */;
  _proto.runReaction_ = function runReaction_() {
    if (!this.isDisposed) {
      startBatch();
      this.isScheduled = false;
      var prev = globalState.trackingContext;
      globalState.trackingContext = this;
      if (shouldCompute(this)) {
        this.isTrackPending = true;
        try {
          this.onInvalidate_();
          if (false) {}
        } catch (e) {
          this.reportExceptionInDerivation_(e);
        }
      }
      globalState.trackingContext = prev;
      endBatch();
    }
  };
  _proto.track = function track(fn) {
    if (this.isDisposed) {
      return;
      // console.warn("Reaction already disposed") // Note: Not a warning / error in mobx 4 either
    }
    startBatch();
    var notify = isSpyEnabled();
    var startTime;
    if (false) {}
    this.isRunning = true;
    var prevReaction = globalState.trackingContext; // reactions could create reactions...
    globalState.trackingContext = this;
    var result = trackDerivedFunction(this, fn, undefined);
    globalState.trackingContext = prevReaction;
    this.isRunning = false;
    this.isTrackPending = false;
    if (this.isDisposed) {
      // disposed during last run. Clean up everything that was bound after the dispose call.
      clearObserving(this);
    }
    if (isCaughtException(result)) {
      this.reportExceptionInDerivation_(result.cause);
    }
    if (false) {}
    endBatch();
  };
  _proto.reportExceptionInDerivation_ = function reportExceptionInDerivation_(error) {
    var _this = this;
    if (this.errorHandler_) {
      this.errorHandler_(error, this);
      return;
    }
    if (globalState.disableErrorBoundaries) {
      throw error;
    }
    var message =  false ? undefined : "[mobx] uncaught error in '" + this + "'";
    if (!globalState.suppressReactionErrors) {
      console.error(message, error);
      /** If debugging brought you here, please, read the above message :-). Tnx! */
    } else if (false) {} // prettier-ignore
    if (false) {}
    globalState.globalReactionErrorHandlers.forEach(function (f) {
      return f(error, _this);
    });
  };
  _proto.dispose = function dispose() {
    if (!this.isDisposed) {
      this.isDisposed = true;
      if (!this.isRunning) {
        // if disposed while running, clean up later. Maybe not optimal, but rare case
        startBatch();
        clearObserving(this);
        endBatch();
      }
    }
  };
  _proto.getDisposer_ = function getDisposer_(abortSignal) {
    var _this2 = this;
    var dispose = function dispose() {
      _this2.dispose();
      abortSignal == null || abortSignal.removeEventListener == null || abortSignal.removeEventListener("abort", dispose);
    };
    abortSignal == null || abortSignal.addEventListener == null || abortSignal.addEventListener("abort", dispose);
    dispose[$mobx] = this;
    return dispose;
  };
  _proto.toString = function toString() {
    return "Reaction[" + this.name_ + "]";
  };
  _proto.trace = function trace$1(enterBreakPoint) {
    if (enterBreakPoint === void 0) {
      enterBreakPoint = false;
    }
    trace(this, enterBreakPoint);
  };
  return _createClass(Reaction, [{
    key: "isDisposed",
    get: function get() {
      return getFlag(this.flags_, Reaction.isDisposedMask_);
    },
    set: function set(newValue) {
      this.flags_ = setFlag(this.flags_, Reaction.isDisposedMask_, newValue);
    }
  }, {
    key: "isScheduled",
    get: function get() {
      return getFlag(this.flags_, Reaction.isScheduledMask_);
    },
    set: function set(newValue) {
      this.flags_ = setFlag(this.flags_, Reaction.isScheduledMask_, newValue);
    }
  }, {
    key: "isTrackPending",
    get: function get() {
      return getFlag(this.flags_, Reaction.isTrackPendingMask_);
    },
    set: function set(newValue) {
      this.flags_ = setFlag(this.flags_, Reaction.isTrackPendingMask_, newValue);
    }
  }, {
    key: "isRunning",
    get: function get() {
      return getFlag(this.flags_, Reaction.isRunningMask_);
    },
    set: function set(newValue) {
      this.flags_ = setFlag(this.flags_, Reaction.isRunningMask_, newValue);
    }
  }, {
    key: "diffValue",
    get: function get() {
      return getFlag(this.flags_, Reaction.diffValueMask_) ? 1 : 0;
    },
    set: function set(newValue) {
      this.flags_ = setFlag(this.flags_, Reaction.diffValueMask_, newValue === 1 ? true : false);
    }
  }]);
}();
Reaction.isDisposedMask_ = 1;
Reaction.isScheduledMask_ = 2;
Reaction.isTrackPendingMask_ = 4;
Reaction.isRunningMask_ = 8;
Reaction.diffValueMask_ = 16;
function onReactionError(handler) {
  globalState.globalReactionErrorHandlers.push(handler);
  return function () {
    var idx = globalState.globalReactionErrorHandlers.indexOf(handler);
    if (idx >= 0) {
      globalState.globalReactionErrorHandlers.splice(idx, 1);
    }
  };
}
/**
 * Magic number alert!
 * Defines within how many times a reaction is allowed to re-trigger itself
 * until it is assumed that this is gonna be a never ending loop...
 */
var MAX_REACTION_ITERATIONS = 100;
var reactionScheduler = function reactionScheduler(f) {
  return f();
};
function runReactions() {
  // Trampolining, if runReactions are already running, new reactions will be picked up
  if (globalState.inBatch > 0 || globalState.isRunningReactions) {
    return;
  }
  reactionScheduler(runReactionsHelper);
}
function runReactionsHelper() {
  globalState.isRunningReactions = true;
  var allReactions = globalState.pendingReactions;
  var iterations = 0;
  // While running reactions, new reactions might be triggered.
  // Hence we work with two variables and check whether
  // we converge to no remaining reactions after a while.
  while (allReactions.length > 0) {
    if (++iterations === MAX_REACTION_ITERATIONS) {
      console.error( false ? undefined : "[mobx] cycle in reaction: " + allReactions[0]);
      allReactions.splice(0); // clear reactions
    }
    var remainingReactions = allReactions.splice(0);
    for (var i = 0, l = remainingReactions.length; i < l; i++) {
      remainingReactions[i].runReaction_();
    }
  }
  globalState.isRunningReactions = false;
}
var isReaction = /*#__PURE__*/createInstanceofPredicate("Reaction", Reaction);
function setReactionScheduler(fn) {
  var baseScheduler = reactionScheduler;
  reactionScheduler = function reactionScheduler(f) {
    return fn(function () {
      return baseScheduler(f);
    });
  };
}

function isSpyEnabled() {
  return  false && false;
}
function spyReport(event) {
  if (true) {
    return;
  } // dead code elimination can do the rest
  if (!globalState.spyListeners.length) {
    return;
  }
  var listeners = globalState.spyListeners;
  for (var i = 0, l = listeners.length; i < l; i++) {
    listeners[i](event);
  }
}
function spyReportStart(event) {
  if (true) {
    return;
  }
  var change = _extends({}, event, {
    spyReportStart: true
  });
  spyReport(change);
}
var END_EVENT = {
  type: "report-end",
  spyReportEnd: true
};
function spyReportEnd(change) {
  if (true) {
    return;
  }
  if (change) {
    spyReport(_extends({}, change, {
      type: "report-end",
      spyReportEnd: true
    }));
  } else {
    spyReport(END_EVENT);
  }
}
function spy(listener) {
  if (true) {
    console.warn("[mobx.spy] Is a no-op in production builds");
    return function () {};
  } else {}
}

var ACTION = "action";
var ACTION_BOUND = "action.bound";
var AUTOACTION = "autoAction";
var AUTOACTION_BOUND = "autoAction.bound";
var DEFAULT_ACTION_NAME = "<unnamed action>";
var actionAnnotation = /*#__PURE__*/createActionAnnotation(ACTION);
var actionBoundAnnotation = /*#__PURE__*/createActionAnnotation(ACTION_BOUND, {
  bound: true
});
var autoActionAnnotation = /*#__PURE__*/createActionAnnotation(AUTOACTION, {
  autoAction: true
});
var autoActionBoundAnnotation = /*#__PURE__*/createActionAnnotation(AUTOACTION_BOUND, {
  autoAction: true,
  bound: true
});
function createActionFactory(autoAction) {
  var res = function action(arg1, arg2) {
    // action(fn() {})
    if (isFunction(arg1)) {
      return createAction(arg1.name || DEFAULT_ACTION_NAME, arg1, autoAction);
    }
    // action("name", fn() {})
    if (isFunction(arg2)) {
      return createAction(arg1, arg2, autoAction);
    }
    // @action (2022.3 Decorators)
    if (is20223Decorator(arg2)) {
      return (autoAction ? autoActionAnnotation : actionAnnotation).decorate_20223_(arg1, arg2);
    }
    // @action
    if (isStringish(arg2)) {
      return storeAnnotation(arg1, arg2, autoAction ? autoActionAnnotation : actionAnnotation);
    }
    // action("name") & @action("name")
    if (isStringish(arg1)) {
      return createDecoratorAnnotation(createActionAnnotation(autoAction ? AUTOACTION : ACTION, {
        name: arg1,
        autoAction: autoAction
      }));
    }
    if (false) {}
  };
  return res;
}
var action = /*#__PURE__*/createActionFactory(false);
Object.assign(action, actionAnnotation);
var autoAction = /*#__PURE__*/createActionFactory(true);
Object.assign(autoAction, autoActionAnnotation);
action.bound = /*#__PURE__*/createDecoratorAnnotation(actionBoundAnnotation);
autoAction.bound = /*#__PURE__*/createDecoratorAnnotation(autoActionBoundAnnotation);
function runInAction(fn) {
  return executeAction(fn.name || DEFAULT_ACTION_NAME, false, fn, this, undefined);
}
function isAction(thing) {
  return isFunction(thing) && thing.isMobxAction === true;
}

/**
 * Creates a named reactive view and keeps it alive, so that the view is always
 * updated if one of the dependencies changes, even when the view is not further used by something else.
 * @param view The reactive view
 * @returns disposer function, which can be used to stop the view from being updated in the future.
 */
function autorun(view, opts) {
  var _opts$name, _opts, _opts2, _opts3;
  if (opts === void 0) {
    opts = EMPTY_OBJECT;
  }
  if (false) {}
  var name = (_opts$name = (_opts = opts) == null ? void 0 : _opts.name) != null ? _opts$name :  false ? undefined : "Autorun";
  var runSync = !opts.scheduler && !opts.delay;
  var reaction;
  if (runSync) {
    // normal autorun
    reaction = new Reaction(name, function () {
      this.track(reactionRunner);
    }, opts.onError, opts.requiresObservable);
  } else {
    var scheduler = createSchedulerFromOptions(opts);
    // debounced autorun
    var isScheduled = false;
    reaction = new Reaction(name, function () {
      if (!isScheduled) {
        isScheduled = true;
        scheduler(function () {
          isScheduled = false;
          if (!reaction.isDisposed) {
            reaction.track(reactionRunner);
          }
        });
      }
    }, opts.onError, opts.requiresObservable);
  }
  function reactionRunner() {
    view(reaction);
  }
  if (!((_opts2 = opts) != null && (_opts2 = _opts2.signal) != null && _opts2.aborted)) {
    reaction.schedule_();
  }
  return reaction.getDisposer_((_opts3 = opts) == null ? void 0 : _opts3.signal);
}
var run = function run(f) {
  return f();
};
function createSchedulerFromOptions(opts) {
  return opts.scheduler ? opts.scheduler : opts.delay ? function (f) {
    return setTimeout(f, opts.delay);
  } : run;
}
function reaction(expression, effect, opts) {
  var _opts$name2, _opts4, _opts5;
  if (opts === void 0) {
    opts = EMPTY_OBJECT;
  }
  if (false) {}
  var name = (_opts$name2 = opts.name) != null ? _opts$name2 :  false ? undefined : "Reaction";
  var effectAction = action(name, opts.onError ? wrapErrorHandler(opts.onError, effect) : effect);
  var runSync = !opts.scheduler && !opts.delay;
  var scheduler = createSchedulerFromOptions(opts);
  var firstTime = true;
  var isScheduled = false;
  var value;
  var equals = opts.compareStructural ? comparer.structural : opts.equals || comparer["default"];
  var r = new Reaction(name, function () {
    if (firstTime || runSync) {
      reactionRunner();
    } else if (!isScheduled) {
      isScheduled = true;
      scheduler(reactionRunner);
    }
  }, opts.onError, opts.requiresObservable);
  function reactionRunner() {
    isScheduled = false;
    if (r.isDisposed) {
      return;
    }
    var changed = false;
    var oldValue = value;
    r.track(function () {
      var nextValue = allowStateChanges(false, function () {
        return expression(r);
      });
      changed = firstTime || !equals(value, nextValue);
      value = nextValue;
    });
    if (firstTime && opts.fireImmediately) {
      effectAction(value, oldValue, r);
    } else if (!firstTime && changed) {
      effectAction(value, oldValue, r);
    }
    firstTime = false;
  }
  if (!((_opts4 = opts) != null && (_opts4 = _opts4.signal) != null && _opts4.aborted)) {
    r.schedule_();
  }
  return r.getDisposer_((_opts5 = opts) == null ? void 0 : _opts5.signal);
}
function wrapErrorHandler(errorHandler, baseFn) {
  return function () {
    try {
      return baseFn.apply(this, arguments);
    } catch (e) {
      errorHandler.call(this, e);
    }
  };
}

var ON_BECOME_OBSERVED = "onBO";
var ON_BECOME_UNOBSERVED = "onBUO";
function onBecomeObserved(thing, arg2, arg3) {
  return interceptHook(ON_BECOME_OBSERVED, thing, arg2, arg3);
}
function onBecomeUnobserved(thing, arg2, arg3) {
  return interceptHook(ON_BECOME_UNOBSERVED, thing, arg2, arg3);
}
function interceptHook(hook, thing, arg2, arg3) {
  var atom = typeof arg3 === "function" ? getAtom(thing, arg2) : getAtom(thing);
  var cb = isFunction(arg3) ? arg3 : arg2;
  var listenersKey = hook + "L";
  if (atom[listenersKey]) {
    atom[listenersKey].add(cb);
  } else {
    atom[listenersKey] = new Set([cb]);
  }
  return function () {
    var hookListeners = atom[listenersKey];
    if (hookListeners) {
      hookListeners["delete"](cb);
      if (hookListeners.size === 0) {
        delete atom[listenersKey];
      }
    }
  };
}

var NEVER = "never";
var ALWAYS = "always";
var OBSERVED = "observed";
// const IF_AVAILABLE = "ifavailable"
function configure(options) {
  if (options.isolateGlobalState === true) {
    isolateGlobalState();
  }
  var useProxies = options.useProxies,
    enforceActions = options.enforceActions;
  if (useProxies !== undefined) {
    globalState.useProxies = useProxies === ALWAYS ? true : useProxies === NEVER ? false : typeof Proxy !== "undefined";
  }
  if (useProxies === "ifavailable") {
    globalState.verifyProxies = true;
  }
  if (enforceActions !== undefined) {
    var ea = enforceActions === ALWAYS ? ALWAYS : enforceActions === OBSERVED;
    globalState.enforceActions = ea;
    globalState.allowStateChanges = ea === true || ea === ALWAYS ? false : true;
  }
  ["computedRequiresReaction", "reactionRequiresObservable", "observableRequiresReaction", "disableErrorBoundaries", "safeDescriptors"].forEach(function (key) {
    if (key in options) {
      globalState[key] = !!options[key];
    }
  });
  globalState.allowStateReads = !globalState.observableRequiresReaction;
  if (false) {}
  if (options.reactionScheduler) {
    setReactionScheduler(options.reactionScheduler);
  }
}

function extendObservable(target, properties, annotations, options) {
  if (false) {}
  // Pull descriptors first, so we don't have to deal with props added by administration ($mobx)
  var descriptors = getOwnPropertyDescriptors(properties);
  initObservable(function () {
    var adm = asObservableObject(target, options)[$mobx];
    ownKeys(descriptors).forEach(function (key) {
      adm.extend_(key, descriptors[key],
      // must pass "undefined" for { key: undefined }
      !annotations ? true : key in annotations ? annotations[key] : true);
    });
  });
  return target;
}

function getDependencyTree(thing, property) {
  return nodeToDependencyTree(getAtom(thing, property));
}
function nodeToDependencyTree(node) {
  var result = {
    name: node.name_
  };
  if (node.observing_ && node.observing_.length > 0) {
    result.dependencies = unique(node.observing_).map(nodeToDependencyTree);
  }
  return result;
}
function getObserverTree(thing, property) {
  return nodeToObserverTree(getAtom(thing, property));
}
function nodeToObserverTree(node) {
  var result = {
    name: node.name_
  };
  if (hasObservers(node)) {
    result.observers = Array.from(getObservers(node)).map(nodeToObserverTree);
  }
  return result;
}
function unique(list) {
  return Array.from(new Set(list));
}

var generatorId = 0;
function FlowCancellationError() {
  this.message = "FLOW_CANCELLED";
}
FlowCancellationError.prototype = /*#__PURE__*/Object.create(Error.prototype);
function isFlowCancellationError(error) {
  return error instanceof FlowCancellationError;
}
var flowAnnotation = /*#__PURE__*/createFlowAnnotation("flow");
var flowBoundAnnotation = /*#__PURE__*/createFlowAnnotation("flow.bound", {
  bound: true
});
var flow = /*#__PURE__*/Object.assign(function flow(arg1, arg2) {
  // @flow (2022.3 Decorators)
  if (is20223Decorator(arg2)) {
    return flowAnnotation.decorate_20223_(arg1, arg2);
  }
  // @flow
  if (isStringish(arg2)) {
    return storeAnnotation(arg1, arg2, flowAnnotation);
  }
  // flow(fn)
  if (false) {}
  var generator = arg1;
  var name = generator.name || "<unnamed flow>";
  // Implementation based on https://github.com/tj/co/blob/master/index.js
  var res = function res() {
    var ctx = this;
    var args = arguments;
    var runId = ++generatorId;
    var gen = action(name + " - runid: " + runId + " - init", generator).apply(ctx, args);
    var rejector;
    var pendingPromise = undefined;
    var promise = new Promise(function (resolve, reject) {
      var stepId = 0;
      rejector = reject;
      function onFulfilled(res) {
        pendingPromise = undefined;
        var ret;
        try {
          ret = action(name + " - runid: " + runId + " - yield " + stepId++, gen.next).call(gen, res);
        } catch (e) {
          return reject(e);
        }
        next(ret);
      }
      function onRejected(err) {
        pendingPromise = undefined;
        var ret;
        try {
          ret = action(name + " - runid: " + runId + " - yield " + stepId++, gen["throw"]).call(gen, err);
        } catch (e) {
          return reject(e);
        }
        next(ret);
      }
      function next(ret) {
        if (isFunction(ret == null ? void 0 : ret.then)) {
          // an async iterator
          ret.then(next, reject);
          return;
        }
        if (ret.done) {
          return resolve(ret.value);
        }
        pendingPromise = Promise.resolve(ret.value);
        return pendingPromise.then(onFulfilled, onRejected);
      }
      onFulfilled(undefined); // kick off the process
    });
    promise.cancel = action(name + " - runid: " + runId + " - cancel", function () {
      try {
        if (pendingPromise) {
          cancelPromise(pendingPromise);
        }
        // Finally block can return (or yield) stuff..
        var _res = gen["return"](undefined);
        // eat anything that promise would do, it's cancelled!
        var yieldedPromise = Promise.resolve(_res.value);
        yieldedPromise.then(noop, noop);
        cancelPromise(yieldedPromise); // maybe it can be cancelled :)
        // reject our original promise
        rejector(new FlowCancellationError());
      } catch (e) {
        rejector(e); // there could be a throwing finally block
      }
    });
    return promise;
  };
  res.isMobXFlow = true;
  return res;
}, flowAnnotation);
flow.bound = /*#__PURE__*/createDecoratorAnnotation(flowBoundAnnotation);
function cancelPromise(promise) {
  if (isFunction(promise.cancel)) {
    promise.cancel();
  }
}
function flowResult(result) {
  return result; // just tricking TypeScript :)
}
function isFlow(fn) {
  return (fn == null ? void 0 : fn.isMobXFlow) === true;
}

function interceptReads(thing, propOrHandler, handler) {
  var target;
  if (isObservableMap(thing) || isObservableArray(thing) || isObservableValue(thing)) {
    target = getAdministration(thing);
  } else if (isObservableObject(thing)) {
    if (false) {}
    target = getAdministration(thing, propOrHandler);
  } else if (false) {}
  if (false) {}
  target.dehancer = typeof propOrHandler === "function" ? propOrHandler : handler;
  return function () {
    target.dehancer = undefined;
  };
}

function intercept(thing, propOrHandler, handler) {
  if (isFunction(handler)) {
    return interceptProperty(thing, propOrHandler, handler);
  } else {
    return interceptInterceptable(thing, propOrHandler);
  }
}
function interceptInterceptable(thing, handler) {
  return getAdministration(thing).intercept_(handler);
}
function interceptProperty(thing, property, handler) {
  return getAdministration(thing, property).intercept_(handler);
}

function _isComputed(value, property) {
  if (property === undefined) {
    return isComputedValue(value);
  }
  if (isObservableObject(value) === false) {
    return false;
  }
  if (!value[$mobx].values_.has(property)) {
    return false;
  }
  var atom = getAtom(value, property);
  return isComputedValue(atom);
}
function isComputed(value) {
  if (false) {}
  return _isComputed(value);
}
function isComputedProp(value, propName) {
  if (false) {}
  return _isComputed(value, propName);
}

function _isObservable(value, property) {
  if (!value) {
    return false;
  }
  if (property !== undefined) {
    if (false) {}
    if (isObservableObject(value)) {
      return value[$mobx].values_.has(property);
    }
    return false;
  }
  // For first check, see #701
  return isObservableObject(value) || !!value[$mobx] || isAtom(value) || isReaction(value) || isComputedValue(value);
}
function isObservable(value) {
  if (false) {}
  return _isObservable(value);
}
function isObservableProp(value, propName) {
  if (false) {}
  return _isObservable(value, propName);
}

function keys(obj) {
  if (isObservableObject(obj)) {
    return obj[$mobx].keys_();
  }
  if (isObservableMap(obj) || isObservableSet(obj)) {
    return Array.from(obj.keys());
  }
  if (isObservableArray(obj)) {
    return obj.map(function (_, index) {
      return index;
    });
  }
  die(5);
}
function values(obj) {
  if (isObservableObject(obj)) {
    return keys(obj).map(function (key) {
      return obj[key];
    });
  }
  if (isObservableMap(obj)) {
    return keys(obj).map(function (key) {
      return obj.get(key);
    });
  }
  if (isObservableSet(obj)) {
    return Array.from(obj.values());
  }
  if (isObservableArray(obj)) {
    return obj.slice();
  }
  die(6);
}
function entries(obj) {
  if (isObservableObject(obj)) {
    return keys(obj).map(function (key) {
      return [key, obj[key]];
    });
  }
  if (isObservableMap(obj)) {
    return keys(obj).map(function (key) {
      return [key, obj.get(key)];
    });
  }
  if (isObservableSet(obj)) {
    return Array.from(obj.entries());
  }
  if (isObservableArray(obj)) {
    return obj.map(function (key, index) {
      return [index, key];
    });
  }
  die(7);
}
function set(obj, key, value) {
  if (arguments.length === 2 && !isObservableSet(obj)) {
    startBatch();
    var _values = key;
    try {
      for (var _key in _values) {
        set(obj, _key, _values[_key]);
      }
    } finally {
      endBatch();
    }
    return;
  }
  if (isObservableObject(obj)) {
    obj[$mobx].set_(key, value);
  } else if (isObservableMap(obj)) {
    obj.set(key, value);
  } else if (isObservableSet(obj)) {
    obj.add(key);
  } else if (isObservableArray(obj)) {
    if (typeof key !== "number") {
      key = parseInt(key, 10);
    }
    if (key < 0) {
      die("Invalid index: '" + key + "'");
    }
    startBatch();
    if (key >= obj.length) {
      obj.length = key + 1;
    }
    obj[key] = value;
    endBatch();
  } else {
    die(8);
  }
}
function remove(obj, key) {
  if (isObservableObject(obj)) {
    obj[$mobx].delete_(key);
  } else if (isObservableMap(obj)) {
    obj["delete"](key);
  } else if (isObservableSet(obj)) {
    obj["delete"](key);
  } else if (isObservableArray(obj)) {
    if (typeof key !== "number") {
      key = parseInt(key, 10);
    }
    obj.splice(key, 1);
  } else {
    die(9);
  }
}
function has(obj, key) {
  if (isObservableObject(obj)) {
    return obj[$mobx].has_(key);
  } else if (isObservableMap(obj)) {
    return obj.has(key);
  } else if (isObservableSet(obj)) {
    return obj.has(key);
  } else if (isObservableArray(obj)) {
    return key >= 0 && key < obj.length;
  }
  die(10);
}
function get(obj, key) {
  if (!has(obj, key)) {
    return undefined;
  }
  if (isObservableObject(obj)) {
    return obj[$mobx].get_(key);
  } else if (isObservableMap(obj)) {
    return obj.get(key);
  } else if (isObservableArray(obj)) {
    return obj[key];
  }
  die(11);
}
function apiDefineProperty(obj, key, descriptor) {
  if (isObservableObject(obj)) {
    return obj[$mobx].defineProperty_(key, descriptor);
  }
  die(39);
}
function apiOwnKeys(obj) {
  if (isObservableObject(obj)) {
    return obj[$mobx].ownKeys_();
  }
  die(38);
}

function observe(thing, propOrCb, cbOrFire, fireImmediately) {
  if (isFunction(cbOrFire)) {
    return observeObservableProperty(thing, propOrCb, cbOrFire, fireImmediately);
  } else {
    return observeObservable(thing, propOrCb, cbOrFire);
  }
}
function observeObservable(thing, listener, fireImmediately) {
  return getAdministration(thing).observe_(listener, fireImmediately);
}
function observeObservableProperty(thing, property, listener, fireImmediately) {
  return getAdministration(thing, property).observe_(listener, fireImmediately);
}

function cache(map, key, value) {
  map.set(key, value);
  return value;
}
function toJSHelper(source, __alreadySeen) {
  if (source == null || typeof source !== "object" || source instanceof Date || !isObservable(source)) {
    return source;
  }
  if (isObservableValue(source) || isComputedValue(source)) {
    return toJSHelper(source.get(), __alreadySeen);
  }
  if (__alreadySeen.has(source)) {
    return __alreadySeen.get(source);
  }
  if (isObservableArray(source)) {
    var res = cache(__alreadySeen, source, new Array(source.length));
    source.forEach(function (value, idx) {
      res[idx] = toJSHelper(value, __alreadySeen);
    });
    return res;
  }
  if (isObservableSet(source)) {
    var _res = cache(__alreadySeen, source, new Set());
    source.forEach(function (value) {
      _res.add(toJSHelper(value, __alreadySeen));
    });
    return _res;
  }
  if (isObservableMap(source)) {
    var _res2 = cache(__alreadySeen, source, new Map());
    source.forEach(function (value, key) {
      _res2.set(key, toJSHelper(value, __alreadySeen));
    });
    return _res2;
  } else {
    // must be observable object
    var _res3 = cache(__alreadySeen, source, {});
    apiOwnKeys(source).forEach(function (key) {
      if (objectPrototype.propertyIsEnumerable.call(source, key)) {
        _res3[key] = toJSHelper(source[key], __alreadySeen);
      }
    });
    return _res3;
  }
}
/**
 * Recursively converts an observable to it's non-observable native counterpart.
 * It does NOT recurse into non-observables, these are left as they are, even if they contain observables.
 * Computed and other non-enumerable properties are completely ignored.
 * Complex scenarios require custom solution, eg implementing `toJSON` or using `serializr` lib.
 */
function toJS(source, options) {
  if (false) {}
  return toJSHelper(source, new Map());
}

function trace() {
  if (true) {
    return;
  }
  var enterBreakPoint = false;
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  if (typeof args[args.length - 1] === "boolean") {
    enterBreakPoint = args.pop();
  }
  var derivation = getAtomFromArgs(args);
  if (!derivation) {
    return die("'trace(break?)' can only be used inside a tracked computed value or a Reaction. Consider passing in the computed value or reaction explicitly");
  }
  if (derivation.isTracing_ === TraceMode.NONE) {
    console.log("[mobx.trace] '" + derivation.name_ + "' tracing enabled");
  }
  derivation.isTracing_ = enterBreakPoint ? TraceMode.BREAK : TraceMode.LOG;
}
function getAtomFromArgs(args) {
  switch (args.length) {
    case 0:
      return globalState.trackingDerivation;
    case 1:
      return getAtom(args[0]);
    case 2:
      return getAtom(args[0], args[1]);
  }
}

/**
 * During a transaction no views are updated until the end of the transaction.
 * The transaction will be run synchronously nonetheless.
 *
 * @param action a function that updates some reactive state
 * @returns any value that was returned by the 'action' parameter.
 */
function transaction(action, thisArg) {
  if (thisArg === void 0) {
    thisArg = undefined;
  }
  startBatch();
  try {
    return action.apply(thisArg);
  } finally {
    endBatch();
  }
}

function when(predicate, arg1, arg2) {
  if (arguments.length === 1 || arg1 && typeof arg1 === "object") {
    return whenPromise(predicate, arg1);
  }
  return _when(predicate, arg1, arg2 || {});
}
function _when(predicate, effect, opts) {
  var timeoutHandle;
  if (typeof opts.timeout === "number") {
    var error = new Error("WHEN_TIMEOUT");
    timeoutHandle = setTimeout(function () {
      if (!disposer[$mobx].isDisposed) {
        disposer();
        if (opts.onError) {
          opts.onError(error);
        } else {
          throw error;
        }
      }
    }, opts.timeout);
  }
  opts.name =  false ? undefined : "When";
  var effectAction = createAction( false ? undefined : "When-effect", effect);
  // eslint-disable-next-line
  var disposer = autorun(function (r) {
    // predicate should not change state
    var cond = allowStateChanges(false, predicate);
    if (cond) {
      r.dispose();
      if (timeoutHandle) {
        clearTimeout(timeoutHandle);
      }
      effectAction();
    }
  }, opts);
  return disposer;
}
function whenPromise(predicate, opts) {
  var _opts$signal;
  if (false) {}
  if (opts != null && (_opts$signal = opts.signal) != null && _opts$signal.aborted) {
    return Object.assign(Promise.reject(new Error("WHEN_ABORTED")), {
      cancel: function cancel() {
        return null;
      }
    });
  }
  var cancel;
  var abort;
  var res = new Promise(function (resolve, reject) {
    var _opts$signal2;
    var disposer = _when(predicate, resolve, _extends({}, opts, {
      onError: reject
    }));
    cancel = function cancel() {
      disposer();
      reject(new Error("WHEN_CANCELLED"));
    };
    abort = function abort() {
      disposer();
      reject(new Error("WHEN_ABORTED"));
    };
    opts == null || (_opts$signal2 = opts.signal) == null || _opts$signal2.addEventListener == null || _opts$signal2.addEventListener("abort", abort);
  })["finally"](function () {
    var _opts$signal3;
    return opts == null || (_opts$signal3 = opts.signal) == null || _opts$signal3.removeEventListener == null ? void 0 : _opts$signal3.removeEventListener("abort", abort);
  });
  res.cancel = cancel;
  return res;
}

function getAdm(target) {
  return target[$mobx];
}
// Optimization: we don't need the intermediate objects and could have a completely custom administration for DynamicObjects,
// and skip either the internal values map, or the base object with its property descriptors!
var objectProxyTraps = {
  has: function has(target, name) {
    if (false) {}
    return getAdm(target).has_(name);
  },
  get: function get(target, name) {
    return getAdm(target).get_(name);
  },
  set: function set(target, name, value) {
    var _getAdm$set_;
    if (!isStringish(name)) {
      return false;
    }
    if (false) {}
    // null (intercepted) -> true (success)
    return (_getAdm$set_ = getAdm(target).set_(name, value, true)) != null ? _getAdm$set_ : true;
  },
  deleteProperty: function deleteProperty(target, name) {
    var _getAdm$delete_;
    if (false) {}
    if (!isStringish(name)) {
      return false;
    }
    // null (intercepted) -> true (success)
    return (_getAdm$delete_ = getAdm(target).delete_(name, true)) != null ? _getAdm$delete_ : true;
  },
  defineProperty: function defineProperty(target, name, descriptor) {
    var _getAdm$definePropert;
    if (false) {}
    // null (intercepted) -> true (success)
    return (_getAdm$definePropert = getAdm(target).defineProperty_(name, descriptor)) != null ? _getAdm$definePropert : true;
  },
  ownKeys: function ownKeys(target) {
    if (false) {}
    return getAdm(target).ownKeys_();
  },
  preventExtensions: function preventExtensions(target) {
    die(13);
  }
};
function asDynamicObservableObject(target, options) {
  var _target$$mobx, _target$$mobx$proxy_;
  assertProxies();
  target = asObservableObject(target, options);
  return (_target$$mobx$proxy_ = (_target$$mobx = target[$mobx]).proxy_) != null ? _target$$mobx$proxy_ : _target$$mobx.proxy_ = new Proxy(target, objectProxyTraps);
}

function hasInterceptors(interceptable) {
  return interceptable.interceptors_ !== undefined && interceptable.interceptors_.length > 0;
}
function registerInterceptor(interceptable, handler) {
  var interceptors = interceptable.interceptors_ || (interceptable.interceptors_ = []);
  interceptors.push(handler);
  return once(function () {
    var idx = interceptors.indexOf(handler);
    if (idx !== -1) {
      interceptors.splice(idx, 1);
    }
  });
}
function interceptChange(interceptable, change) {
  var prevU = untrackedStart();
  try {
    // Interceptor can modify the array, copy it to avoid concurrent modification, see #1950
    var interceptors = [].concat(interceptable.interceptors_ || []);
    for (var i = 0, l = interceptors.length; i < l; i++) {
      change = interceptors[i](change);
      if (change && !change.type) {
        die(14);
      }
      if (!change) {
        break;
      }
    }
    return change;
  } finally {
    untrackedEnd(prevU);
  }
}

function hasListeners(listenable) {
  return listenable.changeListeners_ !== undefined && listenable.changeListeners_.length > 0;
}
function registerListener(listenable, handler) {
  var listeners = listenable.changeListeners_ || (listenable.changeListeners_ = []);
  listeners.push(handler);
  return once(function () {
    var idx = listeners.indexOf(handler);
    if (idx !== -1) {
      listeners.splice(idx, 1);
    }
  });
}
function notifyListeners(listenable, change) {
  var prevU = untrackedStart();
  var listeners = listenable.changeListeners_;
  if (!listeners) {
    return;
  }
  listeners = listeners.slice();
  for (var i = 0, l = listeners.length; i < l; i++) {
    listeners[i](change);
  }
  untrackedEnd(prevU);
}

function makeObservable(target, annotations, options) {
  initObservable(function () {
    var _annotations;
    var adm = asObservableObject(target, options)[$mobx];
    if (false) {}
    // Default to decorators
    (_annotations = annotations) != null ? _annotations : annotations = collectStoredAnnotations(target);
    // Annotate
    ownKeys(annotations).forEach(function (key) {
      return adm.make_(key, annotations[key]);
    });
  });
  return target;
}
// proto[keysSymbol] = new Set<PropertyKey>()
var keysSymbol = /*#__PURE__*/Symbol("mobx-keys");
function makeAutoObservable(target, overrides, options) {
  if (false) {}
  // Optimization: avoid visiting protos
  // Assumes that annotation.make_/.extend_ works the same for plain objects
  if (isPlainObject(target)) {
    return extendObservable(target, target, overrides, options);
  }
  initObservable(function () {
    var adm = asObservableObject(target, options)[$mobx];
    // Optimization: cache keys on proto
    // Assumes makeAutoObservable can be called only once per object and can't be used in subclass
    if (!target[keysSymbol]) {
      var proto = Object.getPrototypeOf(target);
      var keys = new Set([].concat(ownKeys(target), ownKeys(proto)));
      keys["delete"]("constructor");
      keys["delete"]($mobx);
      addHiddenProp(proto, keysSymbol, keys);
    }
    target[keysSymbol].forEach(function (key) {
      return adm.make_(key,
      // must pass "undefined" for { key: undefined }
      !overrides ? true : key in overrides ? overrides[key] : true);
    });
  });
  return target;
}

var SPLICE = "splice";
var UPDATE = "update";
var MAX_SPLICE_SIZE = 10000; // See e.g. https://github.com/mobxjs/mobx/issues/859
var arrayTraps = {
  get: function get(target, name) {
    var adm = target[$mobx];
    if (name === $mobx) {
      return adm;
    }
    if (name === "length") {
      return adm.getArrayLength_();
    }
    if (typeof name === "string" && !isNaN(name)) {
      return adm.get_(parseInt(name));
    }
    if (hasProp(arrayExtensions, name)) {
      return arrayExtensions[name];
    }
    return target[name];
  },
  set: function set(target, name, value) {
    var adm = target[$mobx];
    if (name === "length") {
      adm.setArrayLength_(value);
    }
    if (typeof name === "symbol" || isNaN(name)) {
      target[name] = value;
    } else {
      // numeric string
      adm.set_(parseInt(name), value);
    }
    return true;
  },
  preventExtensions: function preventExtensions() {
    die(15);
  }
};
var ObservableArrayAdministration = /*#__PURE__*/function () {
  function ObservableArrayAdministration(name, enhancer, owned_, legacyMode_) {
    if (name === void 0) {
      name =  false ? undefined : "ObservableArray";
    }
    this.owned_ = void 0;
    this.legacyMode_ = void 0;
    this.atom_ = void 0;
    this.values_ = [];
    // this is the prop that gets proxied, so can't replace it!
    this.interceptors_ = void 0;
    this.changeListeners_ = void 0;
    this.enhancer_ = void 0;
    this.dehancer = void 0;
    this.proxy_ = void 0;
    this.lastKnownLength_ = 0;
    this.owned_ = owned_;
    this.legacyMode_ = legacyMode_;
    this.atom_ = new Atom(name);
    this.enhancer_ = function (newV, oldV) {
      return enhancer(newV, oldV,  false ? undefined : "ObservableArray[..]");
    };
  }
  var _proto = ObservableArrayAdministration.prototype;
  _proto.dehanceValue_ = function dehanceValue_(value) {
    if (this.dehancer !== undefined) {
      return this.dehancer(value);
    }
    return value;
  };
  _proto.dehanceValues_ = function dehanceValues_(values) {
    if (this.dehancer !== undefined && values.length > 0) {
      return values.map(this.dehancer);
    }
    return values;
  };
  _proto.intercept_ = function intercept_(handler) {
    return registerInterceptor(this, handler);
  };
  _proto.observe_ = function observe_(listener, fireImmediately) {
    if (fireImmediately === void 0) {
      fireImmediately = false;
    }
    if (fireImmediately) {
      listener({
        observableKind: "array",
        object: this.proxy_,
        debugObjectName: this.atom_.name_,
        type: "splice",
        index: 0,
        added: this.values_.slice(),
        addedCount: this.values_.length,
        removed: [],
        removedCount: 0
      });
    }
    return registerListener(this, listener);
  };
  _proto.getArrayLength_ = function getArrayLength_() {
    this.atom_.reportObserved();
    return this.values_.length;
  };
  _proto.setArrayLength_ = function setArrayLength_(newLength) {
    if (typeof newLength !== "number" || isNaN(newLength) || newLength < 0) {
      die("Out of range: " + newLength);
    }
    var currentLength = this.values_.length;
    if (newLength === currentLength) {
      return;
    } else if (newLength > currentLength) {
      var newItems = new Array(newLength - currentLength);
      for (var i = 0; i < newLength - currentLength; i++) {
        newItems[i] = undefined;
      } // No Array.fill everywhere...
      this.spliceWithArray_(currentLength, 0, newItems);
    } else {
      this.spliceWithArray_(newLength, currentLength - newLength);
    }
  };
  _proto.updateArrayLength_ = function updateArrayLength_(oldLength, delta) {
    if (oldLength !== this.lastKnownLength_) {
      die(16);
    }
    this.lastKnownLength_ += delta;
    if (this.legacyMode_ && delta > 0) {
      reserveArrayBuffer(oldLength + delta + 1);
    }
  };
  _proto.spliceWithArray_ = function spliceWithArray_(index, deleteCount, newItems) {
    var _this = this;
    checkIfStateModificationsAreAllowed(this.atom_);
    var length = this.values_.length;
    if (index === undefined) {
      index = 0;
    } else if (index > length) {
      index = length;
    } else if (index < 0) {
      index = Math.max(0, length + index);
    }
    if (arguments.length === 1) {
      deleteCount = length - index;
    } else if (deleteCount === undefined || deleteCount === null) {
      deleteCount = 0;
    } else {
      deleteCount = Math.max(0, Math.min(deleteCount, length - index));
    }
    if (newItems === undefined) {
      newItems = EMPTY_ARRAY;
    }
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        object: this.proxy_,
        type: SPLICE,
        index: index,
        removedCount: deleteCount,
        added: newItems
      });
      if (!change) {
        return EMPTY_ARRAY;
      }
      deleteCount = change.removedCount;
      newItems = change.added;
    }
    newItems = newItems.length === 0 ? newItems : newItems.map(function (v) {
      return _this.enhancer_(v, undefined);
    });
    if (this.legacyMode_ || "production" !== "production") {
      var lengthDelta = newItems.length - deleteCount;
      this.updateArrayLength_(length, lengthDelta); // checks if internal array wasn't modified
    }
    var res = this.spliceItemsIntoValues_(index, deleteCount, newItems);
    if (deleteCount !== 0 || newItems.length !== 0) {
      this.notifyArraySplice_(index, newItems, res);
    }
    return this.dehanceValues_(res);
  };
  _proto.spliceItemsIntoValues_ = function spliceItemsIntoValues_(index, deleteCount, newItems) {
    if (newItems.length < MAX_SPLICE_SIZE) {
      var _this$values_;
      return (_this$values_ = this.values_).splice.apply(_this$values_, [index, deleteCount].concat(newItems));
    } else {
      // The items removed by the splice
      var res = this.values_.slice(index, index + deleteCount);
      // The items that that should remain at the end of the array
      var oldItems = this.values_.slice(index + deleteCount);
      // New length is the previous length + addition count - deletion count
      this.values_.length += newItems.length - deleteCount;
      for (var i = 0; i < newItems.length; i++) {
        this.values_[index + i] = newItems[i];
      }
      for (var _i = 0; _i < oldItems.length; _i++) {
        this.values_[index + newItems.length + _i] = oldItems[_i];
      }
      return res;
    }
  };
  _proto.notifyArrayChildUpdate_ = function notifyArrayChildUpdate_(index, newValue, oldValue) {
    var notifySpy = !this.owned_ && isSpyEnabled();
    var notify = hasListeners(this);
    var change = notify || notifySpy ? {
      observableKind: "array",
      object: this.proxy_,
      type: UPDATE,
      debugObjectName: this.atom_.name_,
      index: index,
      newValue: newValue,
      oldValue: oldValue
    } : null;
    // The reason why this is on right hand side here (and not above), is this way the uglifier will drop it, but it won't
    // cause any runtime overhead in development mode without NODE_ENV set, unless spying is enabled
    if (false) {}
    this.atom_.reportChanged();
    if (notify) {
      notifyListeners(this, change);
    }
    if (false) {}
  };
  _proto.notifyArraySplice_ = function notifyArraySplice_(index, added, removed) {
    var notifySpy = !this.owned_ && isSpyEnabled();
    var notify = hasListeners(this);
    var change = notify || notifySpy ? {
      observableKind: "array",
      object: this.proxy_,
      debugObjectName: this.atom_.name_,
      type: SPLICE,
      index: index,
      removed: removed,
      added: added,
      removedCount: removed.length,
      addedCount: added.length
    } : null;
    if (false) {}
    this.atom_.reportChanged();
    // conform: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/observe
    if (notify) {
      notifyListeners(this, change);
    }
    if (false) {}
  };
  _proto.get_ = function get_(index) {
    if (this.legacyMode_ && index >= this.values_.length) {
      console.warn( false ? undefined : "[mobx] Out of bounds read: " + index);
      return undefined;
    }
    this.atom_.reportObserved();
    return this.dehanceValue_(this.values_[index]);
  };
  _proto.set_ = function set_(index, newValue) {
    var values = this.values_;
    if (this.legacyMode_ && index > values.length) {
      // out of bounds
      die(17, index, values.length);
    }
    if (index < values.length) {
      // update at index in range
      checkIfStateModificationsAreAllowed(this.atom_);
      var oldValue = values[index];
      if (hasInterceptors(this)) {
        var change = interceptChange(this, {
          type: UPDATE,
          object: this.proxy_,
          // since "this" is the real array we need to pass its proxy
          index: index,
          newValue: newValue
        });
        if (!change) {
          return;
        }
        newValue = change.newValue;
      }
      newValue = this.enhancer_(newValue, oldValue);
      var changed = newValue !== oldValue;
      if (changed) {
        values[index] = newValue;
        this.notifyArrayChildUpdate_(index, newValue, oldValue);
      }
    } else {
      // For out of bound index, we don't create an actual sparse array,
      // but rather fill the holes with undefined (same as setArrayLength_).
      // This could be considered a bug.
      var newItems = new Array(index + 1 - values.length);
      for (var i = 0; i < newItems.length - 1; i++) {
        newItems[i] = undefined;
      } // No Array.fill everywhere...
      newItems[newItems.length - 1] = newValue;
      this.spliceWithArray_(values.length, 0, newItems);
    }
  };
  return ObservableArrayAdministration;
}();
function createObservableArray(initialValues, enhancer, name, owned) {
  if (name === void 0) {
    name =  false ? undefined : "ObservableArray";
  }
  if (owned === void 0) {
    owned = false;
  }
  assertProxies();
  return initObservable(function () {
    var adm = new ObservableArrayAdministration(name, enhancer, owned, false);
    addHiddenFinalProp(adm.values_, $mobx, adm);
    var proxy = new Proxy(adm.values_, arrayTraps);
    adm.proxy_ = proxy;
    if (initialValues && initialValues.length) {
      adm.spliceWithArray_(0, 0, initialValues);
    }
    return proxy;
  });
}
// eslint-disable-next-line
var arrayExtensions = {
  clear: function clear() {
    return this.splice(0);
  },
  replace: function replace(newItems) {
    var adm = this[$mobx];
    return adm.spliceWithArray_(0, adm.values_.length, newItems);
  },
  // Used by JSON.stringify
  toJSON: function toJSON() {
    return this.slice();
  },
  /*
   * functions that do alter the internal structure of the array, (based on lib.es6.d.ts)
   * since these functions alter the inner structure of the array, the have side effects.
   * Because the have side effects, they should not be used in computed function,
   * and for that reason the do not call dependencyState.notifyObserved
   */
  splice: function splice(index, deleteCount) {
    for (var _len = arguments.length, newItems = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      newItems[_key - 2] = arguments[_key];
    }
    var adm = this[$mobx];
    switch (arguments.length) {
      case 0:
        return [];
      case 1:
        return adm.spliceWithArray_(index);
      case 2:
        return adm.spliceWithArray_(index, deleteCount);
    }
    return adm.spliceWithArray_(index, deleteCount, newItems);
  },
  spliceWithArray: function spliceWithArray(index, deleteCount, newItems) {
    return this[$mobx].spliceWithArray_(index, deleteCount, newItems);
  },
  push: function push() {
    var adm = this[$mobx];
    for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      items[_key2] = arguments[_key2];
    }
    adm.spliceWithArray_(adm.values_.length, 0, items);
    return adm.values_.length;
  },
  pop: function pop() {
    return this.splice(Math.max(this[$mobx].values_.length - 1, 0), 1)[0];
  },
  shift: function shift() {
    return this.splice(0, 1)[0];
  },
  unshift: function unshift() {
    var adm = this[$mobx];
    for (var _len3 = arguments.length, items = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      items[_key3] = arguments[_key3];
    }
    adm.spliceWithArray_(0, 0, items);
    return adm.values_.length;
  },
  reverse: function reverse() {
    // reverse by default mutates in place before returning the result
    // which makes it both a 'derivation' and a 'mutation'.
    if (globalState.trackingDerivation) {
      die(37, "reverse");
    }
    this.replace(this.slice().reverse());
    return this;
  },
  sort: function sort() {
    // sort by default mutates in place before returning the result
    // which goes against all good practices. Let's not change the array in place!
    if (globalState.trackingDerivation) {
      die(37, "sort");
    }
    var copy = this.slice();
    copy.sort.apply(copy, arguments);
    this.replace(copy);
    return this;
  },
  remove: function remove(value) {
    var adm = this[$mobx];
    var idx = adm.dehanceValues_(adm.values_).indexOf(value);
    if (idx > -1) {
      this.splice(idx, 1);
      return true;
    }
    return false;
  }
};
/**
 * Wrap function from prototype
 * Without this, everything works as well, but this works
 * faster as everything works on unproxied values
 */
addArrayExtension("at", simpleFunc);
addArrayExtension("concat", simpleFunc);
addArrayExtension("flat", simpleFunc);
addArrayExtension("includes", simpleFunc);
addArrayExtension("indexOf", simpleFunc);
addArrayExtension("join", simpleFunc);
addArrayExtension("lastIndexOf", simpleFunc);
addArrayExtension("slice", simpleFunc);
addArrayExtension("toString", simpleFunc);
addArrayExtension("toLocaleString", simpleFunc);
addArrayExtension("toSorted", simpleFunc);
addArrayExtension("toSpliced", simpleFunc);
addArrayExtension("with", simpleFunc);
// map
addArrayExtension("every", mapLikeFunc);
addArrayExtension("filter", mapLikeFunc);
addArrayExtension("find", mapLikeFunc);
addArrayExtension("findIndex", mapLikeFunc);
addArrayExtension("findLast", mapLikeFunc);
addArrayExtension("findLastIndex", mapLikeFunc);
addArrayExtension("flatMap", mapLikeFunc);
addArrayExtension("forEach", mapLikeFunc);
addArrayExtension("map", mapLikeFunc);
addArrayExtension("some", mapLikeFunc);
addArrayExtension("toReversed", mapLikeFunc);
// reduce
addArrayExtension("reduce", reduceLikeFunc);
addArrayExtension("reduceRight", reduceLikeFunc);
function addArrayExtension(funcName, funcFactory) {
  if (typeof Array.prototype[funcName] === "function") {
    arrayExtensions[funcName] = funcFactory(funcName);
  }
}
// Report and delegate to dehanced array
function simpleFunc(funcName) {
  return function () {
    var adm = this[$mobx];
    adm.atom_.reportObserved();
    var dehancedValues = adm.dehanceValues_(adm.values_);
    return dehancedValues[funcName].apply(dehancedValues, arguments);
  };
}
// Make sure callbacks receive correct array arg #2326
function mapLikeFunc(funcName) {
  return function (callback, thisArg) {
    var _this2 = this;
    var adm = this[$mobx];
    adm.atom_.reportObserved();
    var dehancedValues = adm.dehanceValues_(adm.values_);
    return dehancedValues[funcName](function (element, index) {
      return callback.call(thisArg, element, index, _this2);
    });
  };
}
// Make sure callbacks receive correct array arg #2326
function reduceLikeFunc(funcName) {
  return function () {
    var _this3 = this;
    var adm = this[$mobx];
    adm.atom_.reportObserved();
    var dehancedValues = adm.dehanceValues_(adm.values_);
    // #2432 - reduce behavior depends on arguments.length
    var callback = arguments[0];
    arguments[0] = function (accumulator, currentValue, index) {
      return callback(accumulator, currentValue, index, _this3);
    };
    return dehancedValues[funcName].apply(dehancedValues, arguments);
  };
}
var isObservableArrayAdministration = /*#__PURE__*/createInstanceofPredicate("ObservableArrayAdministration", ObservableArrayAdministration);
function isObservableArray(thing) {
  return isObject(thing) && isObservableArrayAdministration(thing[$mobx]);
}

var ObservableMapMarker = {};
var ADD = "add";
var DELETE = "delete";
// just extend Map? See also https://gist.github.com/nestharus/13b4d74f2ef4a2f4357dbd3fc23c1e54
// But: https://github.com/mobxjs/mobx/issues/1556
var ObservableMap = /*#__PURE__*/function () {
  function ObservableMap(initialData, enhancer_, name_) {
    var _this = this;
    if (enhancer_ === void 0) {
      enhancer_ = deepEnhancer;
    }
    if (name_ === void 0) {
      name_ =  false ? undefined : "ObservableMap";
    }
    this.enhancer_ = void 0;
    this.name_ = void 0;
    this[$mobx] = ObservableMapMarker;
    this.data_ = void 0;
    this.hasMap_ = void 0;
    // hasMap, not hashMap >-).
    this.keysAtom_ = void 0;
    this.interceptors_ = void 0;
    this.changeListeners_ = void 0;
    this.dehancer = void 0;
    this.enhancer_ = enhancer_;
    this.name_ = name_;
    if (!isFunction(Map)) {
      die(18);
    }
    initObservable(function () {
      _this.keysAtom_ = createAtom( false ? undefined : "ObservableMap.keys()");
      _this.data_ = new Map();
      _this.hasMap_ = new Map();
      if (initialData) {
        _this.merge(initialData);
      }
    });
  }
  var _proto = ObservableMap.prototype;
  _proto.has_ = function has_(key) {
    return this.data_.has(key);
  };
  _proto.has = function has(key) {
    var _this2 = this;
    if (!globalState.trackingDerivation) {
      return this.has_(key);
    }
    var entry = this.hasMap_.get(key);
    if (!entry) {
      var newEntry = entry = new ObservableValue(this.has_(key), referenceEnhancer,  false ? undefined : "ObservableMap.key?", false);
      this.hasMap_.set(key, newEntry);
      onBecomeUnobserved(newEntry, function () {
        return _this2.hasMap_["delete"](key);
      });
    }
    return entry.get();
  };
  _proto.set = function set(key, value) {
    var hasKey = this.has_(key);
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        type: hasKey ? UPDATE : ADD,
        object: this,
        newValue: value,
        name: key
      });
      if (!change) {
        return this;
      }
      value = change.newValue;
    }
    if (hasKey) {
      this.updateValue_(key, value);
    } else {
      this.addValue_(key, value);
    }
    return this;
  };
  _proto["delete"] = function _delete(key) {
    var _this3 = this;
    checkIfStateModificationsAreAllowed(this.keysAtom_);
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        type: DELETE,
        object: this,
        name: key
      });
      if (!change) {
        return false;
      }
    }
    if (this.has_(key)) {
      var notifySpy = isSpyEnabled();
      var notify = hasListeners(this);
      var _change = notify || notifySpy ? {
        observableKind: "map",
        debugObjectName: this.name_,
        type: DELETE,
        object: this,
        oldValue: this.data_.get(key).value_,
        name: key
      } : null;
      if (false) {} // TODO fix type
      transaction(function () {
        var _this3$hasMap_$get;
        _this3.keysAtom_.reportChanged();
        (_this3$hasMap_$get = _this3.hasMap_.get(key)) == null || _this3$hasMap_$get.setNewValue_(false);
        var observable = _this3.data_.get(key);
        observable.setNewValue_(undefined);
        _this3.data_["delete"](key);
      });
      if (notify) {
        notifyListeners(this, _change);
      }
      if (false) {}
      return true;
    }
    return false;
  };
  _proto.updateValue_ = function updateValue_(key, newValue) {
    var observable = this.data_.get(key);
    newValue = observable.prepareNewValue_(newValue);
    if (newValue !== globalState.UNCHANGED) {
      var notifySpy = isSpyEnabled();
      var notify = hasListeners(this);
      var change = notify || notifySpy ? {
        observableKind: "map",
        debugObjectName: this.name_,
        type: UPDATE,
        object: this,
        oldValue: observable.value_,
        name: key,
        newValue: newValue
      } : null;
      if (false) {} // TODO fix type
      observable.setNewValue_(newValue);
      if (notify) {
        notifyListeners(this, change);
      }
      if (false) {}
    }
  };
  _proto.addValue_ = function addValue_(key, newValue) {
    var _this4 = this;
    checkIfStateModificationsAreAllowed(this.keysAtom_);
    transaction(function () {
      var _this4$hasMap_$get;
      var observable = new ObservableValue(newValue, _this4.enhancer_,  false ? undefined : "ObservableMap.key", false);
      _this4.data_.set(key, observable);
      newValue = observable.value_; // value might have been changed
      (_this4$hasMap_$get = _this4.hasMap_.get(key)) == null || _this4$hasMap_$get.setNewValue_(true);
      _this4.keysAtom_.reportChanged();
    });
    var notifySpy = isSpyEnabled();
    var notify = hasListeners(this);
    var change = notify || notifySpy ? {
      observableKind: "map",
      debugObjectName: this.name_,
      type: ADD,
      object: this,
      name: key,
      newValue: newValue
    } : null;
    if (false) {} // TODO fix type
    if (notify) {
      notifyListeners(this, change);
    }
    if (false) {}
  };
  _proto.get = function get(key) {
    if (this.has(key)) {
      return this.dehanceValue_(this.data_.get(key).get());
    }
    return this.dehanceValue_(undefined);
  };
  _proto.dehanceValue_ = function dehanceValue_(value) {
    if (this.dehancer !== undefined) {
      return this.dehancer(value);
    }
    return value;
  };
  _proto.keys = function keys() {
    this.keysAtom_.reportObserved();
    return this.data_.keys();
  };
  _proto.values = function values() {
    var self = this;
    var keys = this.keys();
    return makeIterableForMap({
      next: function next() {
        var _keys$next = keys.next(),
          done = _keys$next.done,
          value = _keys$next.value;
        return {
          done: done,
          value: done ? undefined : self.get(value)
        };
      }
    });
  };
  _proto.entries = function entries() {
    var self = this;
    var keys = this.keys();
    return makeIterableForMap({
      next: function next() {
        var _keys$next2 = keys.next(),
          done = _keys$next2.done,
          value = _keys$next2.value;
        return {
          done: done,
          value: done ? undefined : [value, self.get(value)]
        };
      }
    });
  };
  _proto[Symbol.iterator] = function () {
    return this.entries();
  };
  _proto.forEach = function forEach(callback, thisArg) {
    for (var _iterator = _createForOfIteratorHelperLoose(this), _step; !(_step = _iterator()).done;) {
      var _step$value = _step.value,
        key = _step$value[0],
        value = _step$value[1];
      callback.call(thisArg, value, key, this);
    }
  }
  /** Merge another object into this object, returns this. */;
  _proto.merge = function merge(other) {
    var _this5 = this;
    if (isObservableMap(other)) {
      other = new Map(other);
    }
    transaction(function () {
      if (isPlainObject(other)) {
        getPlainObjectKeys(other).forEach(function (key) {
          return _this5.set(key, other[key]);
        });
      } else if (Array.isArray(other)) {
        other.forEach(function (_ref) {
          var key = _ref[0],
            value = _ref[1];
          return _this5.set(key, value);
        });
      } else if (isES6Map(other)) {
        if (!isPlainES6Map(other)) {
          die(19, other);
        }
        other.forEach(function (value, key) {
          return _this5.set(key, value);
        });
      } else if (other !== null && other !== undefined) {
        die(20, other);
      }
    });
    return this;
  };
  _proto.clear = function clear() {
    var _this6 = this;
    transaction(function () {
      untracked(function () {
        for (var _iterator2 = _createForOfIteratorHelperLoose(_this6.keys()), _step2; !(_step2 = _iterator2()).done;) {
          var key = _step2.value;
          _this6["delete"](key);
        }
      });
    });
  };
  _proto.replace = function replace(values) {
    var _this7 = this;
    // Implementation requirements:
    // - respect ordering of replacement map
    // - allow interceptors to run and potentially prevent individual operations
    // - don't recreate observables that already exist in original map (so we don't destroy existing subscriptions)
    // - don't _keysAtom.reportChanged if the keys of resulting map are indentical (order matters!)
    // - note that result map may differ from replacement map due to the interceptors
    transaction(function () {
      // Convert to map so we can do quick key lookups
      var replacementMap = convertToMap(values);
      var orderedData = new Map();
      // Used for optimization
      var keysReportChangedCalled = false;
      // Delete keys that don't exist in replacement map
      // if the key deletion is prevented by interceptor
      // add entry at the beginning of the result map
      for (var _iterator3 = _createForOfIteratorHelperLoose(_this7.data_.keys()), _step3; !(_step3 = _iterator3()).done;) {
        var key = _step3.value;
        // Concurrently iterating/deleting keys
        // iterator should handle this correctly
        if (!replacementMap.has(key)) {
          var deleted = _this7["delete"](key);
          // Was the key removed?
          if (deleted) {
            // _keysAtom.reportChanged() was already called
            keysReportChangedCalled = true;
          } else {
            // Delete prevented by interceptor
            var value = _this7.data_.get(key);
            orderedData.set(key, value);
          }
        }
      }
      // Merge entries
      for (var _iterator4 = _createForOfIteratorHelperLoose(replacementMap.entries()), _step4; !(_step4 = _iterator4()).done;) {
        var _step4$value = _step4.value,
          _key = _step4$value[0],
          _value = _step4$value[1];
        // We will want to know whether a new key is added
        var keyExisted = _this7.data_.has(_key);
        // Add or update value
        _this7.set(_key, _value);
        // The addition could have been prevent by interceptor
        if (_this7.data_.has(_key)) {
          // The update could have been prevented by interceptor
          // and also we want to preserve existing values
          // so use value from _data map (instead of replacement map)
          var _value2 = _this7.data_.get(_key);
          orderedData.set(_key, _value2);
          // Was a new key added?
          if (!keyExisted) {
            // _keysAtom.reportChanged() was already called
            keysReportChangedCalled = true;
          }
        }
      }
      // Check for possible key order change
      if (!keysReportChangedCalled) {
        if (_this7.data_.size !== orderedData.size) {
          // If size differs, keys are definitely modified
          _this7.keysAtom_.reportChanged();
        } else {
          var iter1 = _this7.data_.keys();
          var iter2 = orderedData.keys();
          var next1 = iter1.next();
          var next2 = iter2.next();
          while (!next1.done) {
            if (next1.value !== next2.value) {
              _this7.keysAtom_.reportChanged();
              break;
            }
            next1 = iter1.next();
            next2 = iter2.next();
          }
        }
      }
      // Use correctly ordered map
      _this7.data_ = orderedData;
    });
    return this;
  };
  _proto.toString = function toString() {
    return "[object ObservableMap]";
  };
  _proto.toJSON = function toJSON() {
    return Array.from(this);
  };
  /**
   * Observes this object. Triggers for the events 'add', 'update' and 'delete'.
   * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe
   * for callback details
   */
  _proto.observe_ = function observe_(listener, fireImmediately) {
    if (false) {}
    return registerListener(this, listener);
  };
  _proto.intercept_ = function intercept_(handler) {
    return registerInterceptor(this, handler);
  };
  return _createClass(ObservableMap, [{
    key: "size",
    get: function get() {
      this.keysAtom_.reportObserved();
      return this.data_.size;
    }
  }, {
    key: Symbol.toStringTag,
    get: function get() {
      return "Map";
    }
  }]);
}();
// eslint-disable-next-line
var isObservableMap = /*#__PURE__*/createInstanceofPredicate("ObservableMap", ObservableMap);
function makeIterableForMap(iterator) {
  iterator[Symbol.toStringTag] = "MapIterator";
  return makeIterable(iterator);
}
function convertToMap(dataStructure) {
  if (isES6Map(dataStructure) || isObservableMap(dataStructure)) {
    return dataStructure;
  } else if (Array.isArray(dataStructure)) {
    return new Map(dataStructure);
  } else if (isPlainObject(dataStructure)) {
    var map = new Map();
    for (var key in dataStructure) {
      map.set(key, dataStructure[key]);
    }
    return map;
  } else {
    return die(21, dataStructure);
  }
}

var ObservableSetMarker = {};
var ObservableSet = /*#__PURE__*/function () {
  function ObservableSet(initialData, enhancer, name_) {
    var _this = this;
    if (enhancer === void 0) {
      enhancer = deepEnhancer;
    }
    if (name_ === void 0) {
      name_ =  false ? undefined : "ObservableSet";
    }
    this.name_ = void 0;
    this[$mobx] = ObservableSetMarker;
    this.data_ = new Set();
    this.atom_ = void 0;
    this.changeListeners_ = void 0;
    this.interceptors_ = void 0;
    this.dehancer = void 0;
    this.enhancer_ = void 0;
    this.name_ = name_;
    if (!isFunction(Set)) {
      die(22);
    }
    this.enhancer_ = function (newV, oldV) {
      return enhancer(newV, oldV, name_);
    };
    initObservable(function () {
      _this.atom_ = createAtom(_this.name_);
      if (initialData) {
        _this.replace(initialData);
      }
    });
  }
  var _proto = ObservableSet.prototype;
  _proto.dehanceValue_ = function dehanceValue_(value) {
    if (this.dehancer !== undefined) {
      return this.dehancer(value);
    }
    return value;
  };
  _proto.clear = function clear() {
    var _this2 = this;
    transaction(function () {
      untracked(function () {
        for (var _iterator = _createForOfIteratorHelperLoose(_this2.data_.values()), _step; !(_step = _iterator()).done;) {
          var value = _step.value;
          _this2["delete"](value);
        }
      });
    });
  };
  _proto.forEach = function forEach(callbackFn, thisArg) {
    for (var _iterator2 = _createForOfIteratorHelperLoose(this), _step2; !(_step2 = _iterator2()).done;) {
      var value = _step2.value;
      callbackFn.call(thisArg, value, value, this);
    }
  };
  _proto.add = function add(value) {
    var _this3 = this;
    checkIfStateModificationsAreAllowed(this.atom_);
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        type: ADD,
        object: this,
        newValue: value
      });
      if (!change) {
        return this;
      }
      // implemented reassignment same as it's done for ObservableMap
      value = change.newValue;
    }
    if (!this.has(value)) {
      transaction(function () {
        _this3.data_.add(_this3.enhancer_(value, undefined));
        _this3.atom_.reportChanged();
      });
      var notifySpy =  false && false;
      var notify = hasListeners(this);
      var _change = notify || notifySpy ? {
        observableKind: "set",
        debugObjectName: this.name_,
        type: ADD,
        object: this,
        newValue: value
      } : null;
      if (notifySpy && "production" !== "production") {
        spyReportStart(_change);
      }
      if (notify) {
        notifyListeners(this, _change);
      }
      if (notifySpy && "production" !== "production") {
        spyReportEnd();
      }
    }
    return this;
  };
  _proto["delete"] = function _delete(value) {
    var _this4 = this;
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        type: DELETE,
        object: this,
        oldValue: value
      });
      if (!change) {
        return false;
      }
    }
    if (this.has(value)) {
      var notifySpy =  false && false;
      var notify = hasListeners(this);
      var _change2 = notify || notifySpy ? {
        observableKind: "set",
        debugObjectName: this.name_,
        type: DELETE,
        object: this,
        oldValue: value
      } : null;
      if (notifySpy && "production" !== "production") {
        spyReportStart(_change2);
      }
      transaction(function () {
        _this4.atom_.reportChanged();
        _this4.data_["delete"](value);
      });
      if (notify) {
        notifyListeners(this, _change2);
      }
      if (notifySpy && "production" !== "production") {
        spyReportEnd();
      }
      return true;
    }
    return false;
  };
  _proto.has = function has(value) {
    this.atom_.reportObserved();
    return this.data_.has(this.dehanceValue_(value));
  };
  _proto.entries = function entries() {
    var values = this.values();
    return makeIterableForSet({
      next: function next() {
        var _values$next = values.next(),
          value = _values$next.value,
          done = _values$next.done;
        return !done ? {
          value: [value, value],
          done: done
        } : {
          value: undefined,
          done: done
        };
      }
    });
  };
  _proto.keys = function keys() {
    return this.values();
  };
  _proto.values = function values() {
    this.atom_.reportObserved();
    var self = this;
    var values = this.data_.values();
    return makeIterableForSet({
      next: function next() {
        var _values$next2 = values.next(),
          value = _values$next2.value,
          done = _values$next2.done;
        return !done ? {
          value: self.dehanceValue_(value),
          done: done
        } : {
          value: undefined,
          done: done
        };
      }
    });
  };
  _proto.intersection = function intersection(otherSet) {
    if (isES6Set(otherSet) && !isObservableSet(otherSet)) {
      return otherSet.intersection(this);
    } else {
      var dehancedSet = new Set(this);
      return dehancedSet.intersection(otherSet);
    }
  };
  _proto.union = function union(otherSet) {
    if (isES6Set(otherSet) && !isObservableSet(otherSet)) {
      return otherSet.union(this);
    } else {
      var dehancedSet = new Set(this);
      return dehancedSet.union(otherSet);
    }
  };
  _proto.difference = function difference(otherSet) {
    return new Set(this).difference(otherSet);
  };
  _proto.symmetricDifference = function symmetricDifference(otherSet) {
    if (isES6Set(otherSet) && !isObservableSet(otherSet)) {
      return otherSet.symmetricDifference(this);
    } else {
      var dehancedSet = new Set(this);
      return dehancedSet.symmetricDifference(otherSet);
    }
  };
  _proto.isSubsetOf = function isSubsetOf(otherSet) {
    return new Set(this).isSubsetOf(otherSet);
  };
  _proto.isSupersetOf = function isSupersetOf(otherSet) {
    return new Set(this).isSupersetOf(otherSet);
  };
  _proto.isDisjointFrom = function isDisjointFrom(otherSet) {
    if (isES6Set(otherSet) && !isObservableSet(otherSet)) {
      return otherSet.isDisjointFrom(this);
    } else {
      var dehancedSet = new Set(this);
      return dehancedSet.isDisjointFrom(otherSet);
    }
  };
  _proto.replace = function replace(other) {
    var _this5 = this;
    if (isObservableSet(other)) {
      other = new Set(other);
    }
    transaction(function () {
      if (Array.isArray(other)) {
        _this5.clear();
        other.forEach(function (value) {
          return _this5.add(value);
        });
      } else if (isES6Set(other)) {
        _this5.clear();
        other.forEach(function (value) {
          return _this5.add(value);
        });
      } else if (other !== null && other !== undefined) {
        die("Cannot initialize set from " + other);
      }
    });
    return this;
  };
  _proto.observe_ = function observe_(listener, fireImmediately) {
    // ... 'fireImmediately' could also be true?
    if (false) {}
    return registerListener(this, listener);
  };
  _proto.intercept_ = function intercept_(handler) {
    return registerInterceptor(this, handler);
  };
  _proto.toJSON = function toJSON() {
    return Array.from(this);
  };
  _proto.toString = function toString() {
    return "[object ObservableSet]";
  };
  _proto[Symbol.iterator] = function () {
    return this.values();
  };
  return _createClass(ObservableSet, [{
    key: "size",
    get: function get() {
      this.atom_.reportObserved();
      return this.data_.size;
    }
  }, {
    key: Symbol.toStringTag,
    get: function get() {
      return "Set";
    }
  }]);
}();
// eslint-disable-next-line
var isObservableSet = /*#__PURE__*/createInstanceofPredicate("ObservableSet", ObservableSet);
function makeIterableForSet(iterator) {
  iterator[Symbol.toStringTag] = "SetIterator";
  return makeIterable(iterator);
}

var descriptorCache = /*#__PURE__*/Object.create(null);
var REMOVE = "remove";
var ObservableObjectAdministration = /*#__PURE__*/function () {
  function ObservableObjectAdministration(target_, values_, name_,
  // Used anytime annotation is not explicitely provided
  defaultAnnotation_) {
    if (values_ === void 0) {
      values_ = new Map();
    }
    if (defaultAnnotation_ === void 0) {
      defaultAnnotation_ = autoAnnotation;
    }
    this.target_ = void 0;
    this.values_ = void 0;
    this.name_ = void 0;
    this.defaultAnnotation_ = void 0;
    this.keysAtom_ = void 0;
    this.changeListeners_ = void 0;
    this.interceptors_ = void 0;
    this.proxy_ = void 0;
    this.isPlainObject_ = void 0;
    this.appliedAnnotations_ = void 0;
    this.pendingKeys_ = void 0;
    this.target_ = target_;
    this.values_ = values_;
    this.name_ = name_;
    this.defaultAnnotation_ = defaultAnnotation_;
    this.keysAtom_ = new Atom( false ? undefined : "ObservableObject.keys");
    // Optimization: we use this frequently
    this.isPlainObject_ = isPlainObject(this.target_);
    if (false) {}
    if (false) {}
  }
  var _proto = ObservableObjectAdministration.prototype;
  _proto.getObservablePropValue_ = function getObservablePropValue_(key) {
    return this.values_.get(key).get();
  };
  _proto.setObservablePropValue_ = function setObservablePropValue_(key, newValue) {
    var observable = this.values_.get(key);
    if (observable instanceof ComputedValue) {
      observable.set(newValue);
      return true;
    }
    // intercept
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        type: UPDATE,
        object: this.proxy_ || this.target_,
        name: key,
        newValue: newValue
      });
      if (!change) {
        return null;
      }
      newValue = change.newValue;
    }
    newValue = observable.prepareNewValue_(newValue);
    // notify spy & observers
    if (newValue !== globalState.UNCHANGED) {
      var notify = hasListeners(this);
      var notifySpy =  false && false;
      var _change = notify || notifySpy ? {
        type: UPDATE,
        observableKind: "object",
        debugObjectName: this.name_,
        object: this.proxy_ || this.target_,
        oldValue: observable.value_,
        name: key,
        newValue: newValue
      } : null;
      if (false) {}
      observable.setNewValue_(newValue);
      if (notify) {
        notifyListeners(this, _change);
      }
      if (false) {}
    }
    return true;
  };
  _proto.get_ = function get_(key) {
    if (globalState.trackingDerivation && !hasProp(this.target_, key)) {
      // Key doesn't exist yet, subscribe for it in case it's added later
      this.has_(key);
    }
    return this.target_[key];
  }
  /**
   * @param {PropertyKey} key
   * @param {any} value
   * @param {Annotation|boolean} annotation true - use default annotation, false - copy as is
   * @param {boolean} proxyTrap whether it's called from proxy trap
   * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor
   */;
  _proto.set_ = function set_(key, value, proxyTrap) {
    if (proxyTrap === void 0) {
      proxyTrap = false;
    }
    // Don't use .has(key) - we care about own
    if (hasProp(this.target_, key)) {
      // Existing prop
      if (this.values_.has(key)) {
        // Observable (can be intercepted)
        return this.setObservablePropValue_(key, value);
      } else if (proxyTrap) {
        // Non-observable - proxy
        return Reflect.set(this.target_, key, value);
      } else {
        // Non-observable
        this.target_[key] = value;
        return true;
      }
    } else {
      // New prop
      return this.extend_(key, {
        value: value,
        enumerable: true,
        writable: true,
        configurable: true
      }, this.defaultAnnotation_, proxyTrap);
    }
  }
  // Trap for "in"
  ;
  _proto.has_ = function has_(key) {
    if (!globalState.trackingDerivation) {
      // Skip key subscription outside derivation
      return key in this.target_;
    }
    this.pendingKeys_ || (this.pendingKeys_ = new Map());
    var entry = this.pendingKeys_.get(key);
    if (!entry) {
      entry = new ObservableValue(key in this.target_, referenceEnhancer,  false ? undefined : "ObservableObject.key?", false);
      this.pendingKeys_.set(key, entry);
    }
    return entry.get();
  }
  /**
   * @param {PropertyKey} key
   * @param {Annotation|boolean} annotation true - use default annotation, false - ignore prop
   */;
  _proto.make_ = function make_(key, annotation) {
    if (annotation === true) {
      annotation = this.defaultAnnotation_;
    }
    if (annotation === false) {
      return;
    }
    assertAnnotable(this, annotation, key);
    if (!(key in this.target_)) {
      var _this$target_$storedA;
      // Throw on missing key, except for decorators:
      // Decorator annotations are collected from whole prototype chain.
      // When called from super() some props may not exist yet.
      // However we don't have to worry about missing prop,
      // because the decorator must have been applied to something.
      if ((_this$target_$storedA = this.target_[storedAnnotationsSymbol]) != null && _this$target_$storedA[key]) {
        return; // will be annotated by subclass constructor
      } else {
        die(1, annotation.annotationType_, this.name_ + "." + key.toString());
      }
    }
    var source = this.target_;
    while (source && source !== objectPrototype) {
      var descriptor = getDescriptor(source, key);
      if (descriptor) {
        var outcome = annotation.make_(this, key, descriptor, source);
        if (outcome === 0 /* MakeResult.Cancel */) {
          return;
        }
        if (outcome === 1 /* MakeResult.Break */) {
          break;
        }
      }
      source = Object.getPrototypeOf(source);
    }
    recordAnnotationApplied(this, annotation, key);
  }
  /**
   * @param {PropertyKey} key
   * @param {PropertyDescriptor} descriptor
   * @param {Annotation|boolean} annotation true - use default annotation, false - copy as is
   * @param {boolean} proxyTrap whether it's called from proxy trap
   * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor
   */;
  _proto.extend_ = function extend_(key, descriptor, annotation, proxyTrap) {
    if (proxyTrap === void 0) {
      proxyTrap = false;
    }
    if (annotation === true) {
      annotation = this.defaultAnnotation_;
    }
    if (annotation === false) {
      return this.defineProperty_(key, descriptor, proxyTrap);
    }
    assertAnnotable(this, annotation, key);
    var outcome = annotation.extend_(this, key, descriptor, proxyTrap);
    if (outcome) {
      recordAnnotationApplied(this, annotation, key);
    }
    return outcome;
  }
  /**
   * @param {PropertyKey} key
   * @param {PropertyDescriptor} descriptor
   * @param {boolean} proxyTrap whether it's called from proxy trap
   * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor
   */;
  _proto.defineProperty_ = function defineProperty_(key, descriptor, proxyTrap) {
    if (proxyTrap === void 0) {
      proxyTrap = false;
    }
    checkIfStateModificationsAreAllowed(this.keysAtom_);
    try {
      startBatch();
      // Delete
      var deleteOutcome = this.delete_(key);
      if (!deleteOutcome) {
        // Failure or intercepted
        return deleteOutcome;
      }
      // ADD interceptor
      if (hasInterceptors(this)) {
        var change = interceptChange(this, {
          object: this.proxy_ || this.target_,
          name: key,
          type: ADD,
          newValue: descriptor.value
        });
        if (!change) {
          return null;
        }
        var newValue = change.newValue;
        if (descriptor.value !== newValue) {
          descriptor = _extends({}, descriptor, {
            value: newValue
          });
        }
      }
      // Define
      if (proxyTrap) {
        if (!Reflect.defineProperty(this.target_, key, descriptor)) {
          return false;
        }
      } else {
        defineProperty(this.target_, key, descriptor);
      }
      // Notify
      this.notifyPropertyAddition_(key, descriptor.value);
    } finally {
      endBatch();
    }
    return true;
  }
  // If original descriptor becomes relevant, move this to annotation directly
  ;
  _proto.defineObservableProperty_ = function defineObservableProperty_(key, value, enhancer, proxyTrap) {
    if (proxyTrap === void 0) {
      proxyTrap = false;
    }
    checkIfStateModificationsAreAllowed(this.keysAtom_);
    try {
      startBatch();
      // Delete
      var deleteOutcome = this.delete_(key);
      if (!deleteOutcome) {
        // Failure or intercepted
        return deleteOutcome;
      }
      // ADD interceptor
      if (hasInterceptors(this)) {
        var change = interceptChange(this, {
          object: this.proxy_ || this.target_,
          name: key,
          type: ADD,
          newValue: value
        });
        if (!change) {
          return null;
        }
        value = change.newValue;
      }
      var cachedDescriptor = getCachedObservablePropDescriptor(key);
      var descriptor = {
        configurable: globalState.safeDescriptors ? this.isPlainObject_ : true,
        enumerable: true,
        get: cachedDescriptor.get,
        set: cachedDescriptor.set
      };
      // Define
      if (proxyTrap) {
        if (!Reflect.defineProperty(this.target_, key, descriptor)) {
          return false;
        }
      } else {
        defineProperty(this.target_, key, descriptor);
      }
      var observable = new ObservableValue(value, enhancer,  false ? undefined : "ObservableObject.key", false);
      this.values_.set(key, observable);
      // Notify (value possibly changed by ObservableValue)
      this.notifyPropertyAddition_(key, observable.value_);
    } finally {
      endBatch();
    }
    return true;
  }
  // If original descriptor becomes relevant, move this to annotation directly
  ;
  _proto.defineComputedProperty_ = function defineComputedProperty_(key, options, proxyTrap) {
    if (proxyTrap === void 0) {
      proxyTrap = false;
    }
    checkIfStateModificationsAreAllowed(this.keysAtom_);
    try {
      startBatch();
      // Delete
      var deleteOutcome = this.delete_(key);
      if (!deleteOutcome) {
        // Failure or intercepted
        return deleteOutcome;
      }
      // ADD interceptor
      if (hasInterceptors(this)) {
        var change = interceptChange(this, {
          object: this.proxy_ || this.target_,
          name: key,
          type: ADD,
          newValue: undefined
        });
        if (!change) {
          return null;
        }
      }
      options.name || (options.name =  false ? undefined : "ObservableObject.key");
      options.context = this.proxy_ || this.target_;
      var cachedDescriptor = getCachedObservablePropDescriptor(key);
      var descriptor = {
        configurable: globalState.safeDescriptors ? this.isPlainObject_ : true,
        enumerable: false,
        get: cachedDescriptor.get,
        set: cachedDescriptor.set
      };
      // Define
      if (proxyTrap) {
        if (!Reflect.defineProperty(this.target_, key, descriptor)) {
          return false;
        }
      } else {
        defineProperty(this.target_, key, descriptor);
      }
      this.values_.set(key, new ComputedValue(options));
      // Notify
      this.notifyPropertyAddition_(key, undefined);
    } finally {
      endBatch();
    }
    return true;
  }
  /**
   * @param {PropertyKey} key
   * @param {PropertyDescriptor} descriptor
   * @param {boolean} proxyTrap whether it's called from proxy trap
   * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor
   */;
  _proto.delete_ = function delete_(key, proxyTrap) {
    if (proxyTrap === void 0) {
      proxyTrap = false;
    }
    checkIfStateModificationsAreAllowed(this.keysAtom_);
    // No such prop
    if (!hasProp(this.target_, key)) {
      return true;
    }
    // Intercept
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        object: this.proxy_ || this.target_,
        name: key,
        type: REMOVE
      });
      // Cancelled
      if (!change) {
        return null;
      }
    }
    // Delete
    try {
      var _this$pendingKeys_;
      startBatch();
      var notify = hasListeners(this);
      var notifySpy =  false && false;
      var observable = this.values_.get(key);
      // Value needed for spies/listeners
      var value = undefined;
      // Optimization: don't pull the value unless we will need it
      if (!observable && (notify || notifySpy)) {
        var _getDescriptor;
        value = (_getDescriptor = getDescriptor(this.target_, key)) == null ? void 0 : _getDescriptor.value;
      }
      // delete prop (do first, may fail)
      if (proxyTrap) {
        if (!Reflect.deleteProperty(this.target_, key)) {
          return false;
        }
      } else {
        delete this.target_[key];
      }
      // Allow re-annotating this field
      if (false) {}
      // Clear observable
      if (observable) {
        this.values_["delete"](key);
        // for computed, value is undefined
        if (observable instanceof ObservableValue) {
          value = observable.value_;
        }
        // Notify: autorun(() => obj[key]), see #1796
        propagateChanged(observable);
      }
      // Notify "keys/entries/values" observers
      this.keysAtom_.reportChanged();
      // Notify "has" observers
      // "in" as it may still exist in proto
      (_this$pendingKeys_ = this.pendingKeys_) == null || (_this$pendingKeys_ = _this$pendingKeys_.get(key)) == null || _this$pendingKeys_.set(key in this.target_);
      // Notify spies/listeners
      if (notify || notifySpy) {
        var _change2 = {
          type: REMOVE,
          observableKind: "object",
          object: this.proxy_ || this.target_,
          debugObjectName: this.name_,
          oldValue: value,
          name: key
        };
        if (false) {}
        if (notify) {
          notifyListeners(this, _change2);
        }
        if (false) {}
      }
    } finally {
      endBatch();
    }
    return true;
  }
  /**
   * Observes this object. Triggers for the events 'add', 'update' and 'delete'.
   * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe
   * for callback details
   */;
  _proto.observe_ = function observe_(callback, fireImmediately) {
    if (false) {}
    return registerListener(this, callback);
  };
  _proto.intercept_ = function intercept_(handler) {
    return registerInterceptor(this, handler);
  };
  _proto.notifyPropertyAddition_ = function notifyPropertyAddition_(key, value) {
    var _this$pendingKeys_2;
    var notify = hasListeners(this);
    var notifySpy =  false && false;
    if (notify || notifySpy) {
      var change = notify || notifySpy ? {
        type: ADD,
        observableKind: "object",
        debugObjectName: this.name_,
        object: this.proxy_ || this.target_,
        name: key,
        newValue: value
      } : null;
      if (false) {}
      if (notify) {
        notifyListeners(this, change);
      }
      if (false) {}
    }
    (_this$pendingKeys_2 = this.pendingKeys_) == null || (_this$pendingKeys_2 = _this$pendingKeys_2.get(key)) == null || _this$pendingKeys_2.set(true);
    // Notify "keys/entries/values" observers
    this.keysAtom_.reportChanged();
  };
  _proto.ownKeys_ = function ownKeys_() {
    this.keysAtom_.reportObserved();
    return ownKeys(this.target_);
  };
  _proto.keys_ = function keys_() {
    // Returns enumerable && own, but unfortunately keysAtom will report on ANY key change.
    // There is no way to distinguish between Object.keys(object) and Reflect.ownKeys(object) - both are handled by ownKeys trap.
    // We can either over-report in Object.keys(object) or under-report in Reflect.ownKeys(object)
    // We choose to over-report in Object.keys(object), because:
    // - typically it's used with simple data objects
    // - when symbolic/non-enumerable keys are relevant Reflect.ownKeys works as expected
    this.keysAtom_.reportObserved();
    return Object.keys(this.target_);
  };
  return ObservableObjectAdministration;
}();
function asObservableObject(target, options) {
  var _options$name;
  if (false) {}
  if (hasProp(target, $mobx)) {
    if (false) {}
    return target;
  }
  if (false) {}
  var name = (_options$name = options == null ? void 0 : options.name) != null ? _options$name :  false ? undefined : "ObservableObject";
  var adm = new ObservableObjectAdministration(target, new Map(), String(name), getAnnotationFromOptions(options));
  addHiddenProp(target, $mobx, adm);
  return target;
}
var isObservableObjectAdministration = /*#__PURE__*/createInstanceofPredicate("ObservableObjectAdministration", ObservableObjectAdministration);
function getCachedObservablePropDescriptor(key) {
  return descriptorCache[key] || (descriptorCache[key] = {
    get: function get() {
      return this[$mobx].getObservablePropValue_(key);
    },
    set: function set(value) {
      return this[$mobx].setObservablePropValue_(key, value);
    }
  });
}
function isObservableObject(thing) {
  if (isObject(thing)) {
    return isObservableObjectAdministration(thing[$mobx]);
  }
  return false;
}
function recordAnnotationApplied(adm, annotation, key) {
  var _adm$target_$storedAn;
  if (false) {}
  // Remove applied decorator annotation so we don't try to apply it again in subclass constructor
  (_adm$target_$storedAn = adm.target_[storedAnnotationsSymbol]) == null || delete _adm$target_$storedAn[key];
}
function assertAnnotable(adm, annotation, key) {
  // Valid annotation
  if (false) {}
  /*
  // Configurable, not sealed, not frozen
  // Possibly not needed, just a little better error then the one thrown by engine.
  // Cases where this would be useful the most (subclass field initializer) are not interceptable by this.
  if (__DEV__) {
      const configurable = getDescriptor(adm.target_, key)?.configurable
      const frozen = Object.isFrozen(adm.target_)
      const sealed = Object.isSealed(adm.target_)
      if (!configurable || frozen || sealed) {
          const fieldName = `${adm.name_}.${key.toString()}`
          const requestedAnnotationType = annotation.annotationType_
          let error = `Cannot apply '${requestedAnnotationType}' to '${fieldName}':`
          if (frozen) {
              error += `\nObject is frozen.`
          }
          if (sealed) {
              error += `\nObject is sealed.`
          }
          if (!configurable) {
              error += `\nproperty is not configurable.`
              // Mention only if caused by us to avoid confusion
              if (hasProp(adm.appliedAnnotations!, key)) {
                  error += `\nTo prevent accidental re-definition of a field by a subclass, `
                  error += `all annotated fields of non-plain objects (classes) are not configurable.`
              }
          }
          die(error)
      }
  }
  */
  // Not annotated
  if (false) { var requestedAnnotationType, currentAnnotationType, fieldName; }
}

// Bug in safari 9.* (or iOS 9 safari mobile). See #364
var ENTRY_0 = /*#__PURE__*/createArrayEntryDescriptor(0);
var safariPrototypeSetterInheritanceBug = /*#__PURE__*/function () {
  var v = false;
  var p = {};
  Object.defineProperty(p, "0", {
    set: function set() {
      v = true;
    }
  });
  /*#__PURE__*/Object.create(p)["0"] = 1;
  return v === false;
}();
/**
 * This array buffer contains two lists of properties, so that all arrays
 * can recycle their property definitions, which significantly improves performance of creating
 * properties on the fly.
 */
var OBSERVABLE_ARRAY_BUFFER_SIZE = 0;
// Typescript workaround to make sure ObservableArray extends Array
var StubArray = function StubArray() {};
function inherit(ctor, proto) {
  if (Object.setPrototypeOf) {
    Object.setPrototypeOf(ctor.prototype, proto);
  } else if (ctor.prototype.__proto__ !== undefined) {
    ctor.prototype.__proto__ = proto;
  } else {
    ctor.prototype = proto;
  }
}
inherit(StubArray, Array.prototype);
// Weex proto freeze protection was here,
// but it is unclear why the hack is need as MobX never changed the prototype
// anyway, so removed it in V6
var LegacyObservableArray = /*#__PURE__*/function (_StubArray) {
  function LegacyObservableArray(initialValues, enhancer, name, owned) {
    var _this;
    if (name === void 0) {
      name =  false ? undefined : "ObservableArray";
    }
    if (owned === void 0) {
      owned = false;
    }
    _this = _StubArray.call(this) || this;
    initObservable(function () {
      var adm = new ObservableArrayAdministration(name, enhancer, owned, true);
      adm.proxy_ = _this;
      addHiddenFinalProp(_this, $mobx, adm);
      if (initialValues && initialValues.length) {
        // @ts-ignore
        _this.spliceWithArray(0, 0, initialValues);
      }
      if (safariPrototypeSetterInheritanceBug) {
        // Seems that Safari won't use numeric prototype setter until any * numeric property is
        // defined on the instance. After that it works fine, even if this property is deleted.
        Object.defineProperty(_this, "0", ENTRY_0);
      }
    });
    return _this;
  }
  _inheritsLoose(LegacyObservableArray, _StubArray);
  var _proto = LegacyObservableArray.prototype;
  _proto.concat = function concat() {
    this[$mobx].atom_.reportObserved();
    for (var _len = arguments.length, arrays = new Array(_len), _key = 0; _key < _len; _key++) {
      arrays[_key] = arguments[_key];
    }
    return Array.prototype.concat.apply(this.slice(),
    //@ts-ignore
    arrays.map(function (a) {
      return isObservableArray(a) ? a.slice() : a;
    }));
  };
  _proto[Symbol.iterator] = function () {
    var self = this;
    var nextIndex = 0;
    return makeIterable({
      next: function next() {
        return nextIndex < self.length ? {
          value: self[nextIndex++],
          done: false
        } : {
          done: true,
          value: undefined
        };
      }
    });
  };
  return _createClass(LegacyObservableArray, [{
    key: "length",
    get: function get() {
      return this[$mobx].getArrayLength_();
    },
    set: function set(newLength) {
      this[$mobx].setArrayLength_(newLength);
    }
  }, {
    key: Symbol.toStringTag,
    get: function get() {
      return "Array";
    }
  }]);
}(StubArray);
Object.entries(arrayExtensions).forEach(function (_ref) {
  var prop = _ref[0],
    fn = _ref[1];
  if (prop !== "concat") {
    addHiddenProp(LegacyObservableArray.prototype, prop, fn);
  }
});
function createArrayEntryDescriptor(index) {
  return {
    enumerable: false,
    configurable: true,
    get: function get() {
      return this[$mobx].get_(index);
    },
    set: function set(value) {
      this[$mobx].set_(index, value);
    }
  };
}
function createArrayBufferItem(index) {
  defineProperty(LegacyObservableArray.prototype, "" + index, createArrayEntryDescriptor(index));
}
function reserveArrayBuffer(max) {
  if (max > OBSERVABLE_ARRAY_BUFFER_SIZE) {
    for (var index = OBSERVABLE_ARRAY_BUFFER_SIZE; index < max + 100; index++) {
      createArrayBufferItem(index);
    }
    OBSERVABLE_ARRAY_BUFFER_SIZE = max;
  }
}
reserveArrayBuffer(1000);
function createLegacyArray(initialValues, enhancer, name) {
  return new LegacyObservableArray(initialValues, enhancer, name);
}

function getAtom(thing, property) {
  if (typeof thing === "object" && thing !== null) {
    if (isObservableArray(thing)) {
      if (property !== undefined) {
        die(23);
      }
      return thing[$mobx].atom_;
    }
    if (isObservableSet(thing)) {
      return thing.atom_;
    }
    if (isObservableMap(thing)) {
      if (property === undefined) {
        return thing.keysAtom_;
      }
      var observable = thing.data_.get(property) || thing.hasMap_.get(property);
      if (!observable) {
        die(25, property, getDebugName(thing));
      }
      return observable;
    }
    if (isObservableObject(thing)) {
      if (!property) {
        return die(26);
      }
      var _observable = thing[$mobx].values_.get(property);
      if (!_observable) {
        die(27, property, getDebugName(thing));
      }
      return _observable;
    }
    if (isAtom(thing) || isComputedValue(thing) || isReaction(thing)) {
      return thing;
    }
  } else if (isFunction(thing)) {
    if (isReaction(thing[$mobx])) {
      // disposer function
      return thing[$mobx];
    }
  }
  die(28);
}
function getAdministration(thing, property) {
  if (!thing) {
    die(29);
  }
  if (property !== undefined) {
    return getAdministration(getAtom(thing, property));
  }
  if (isAtom(thing) || isComputedValue(thing) || isReaction(thing)) {
    return thing;
  }
  if (isObservableMap(thing) || isObservableSet(thing)) {
    return thing;
  }
  if (thing[$mobx]) {
    return thing[$mobx];
  }
  die(24, thing);
}
function getDebugName(thing, property) {
  var named;
  if (property !== undefined) {
    named = getAtom(thing, property);
  } else if (isAction(thing)) {
    return thing.name;
  } else if (isObservableObject(thing) || isObservableMap(thing) || isObservableSet(thing)) {
    named = getAdministration(thing);
  } else {
    // valid for arrays as well
    named = getAtom(thing);
  }
  return named.name_;
}
/**
 * Helper function for initializing observable structures, it applies:
 * 1. allowStateChanges so we don't violate enforceActions.
 * 2. untracked so we don't accidentaly subscribe to anything observable accessed during init in case the observable is created inside derivation.
 * 3. batch to avoid state version updates
 */
function initObservable(cb) {
  var derivation = untrackedStart();
  var allowStateChanges = allowStateChangesStart(true);
  startBatch();
  try {
    return cb();
  } finally {
    endBatch();
    allowStateChangesEnd(allowStateChanges);
    untrackedEnd(derivation);
  }
}

var toString = objectPrototype.toString;
function deepEqual(a, b, depth) {
  if (depth === void 0) {
    depth = -1;
  }
  return eq(a, b, depth);
}
// Copied from https://github.com/jashkenas/underscore/blob/5c237a7c682fb68fd5378203f0bf22dce1624854/underscore.js#L1186-L1289
// Modified: "Deep compare objects" part to iterate over keys in forward order instead of reverse order.
//
// Internal recursive comparison function for `isEqual`.
function eq(a, b, depth, aStack, bStack) {
  // Identical objects are equal. `0 === -0`, but they aren't identical.
  // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).
  if (a === b) {
    return a !== 0 || 1 / a === 1 / b;
  }
  // `null` or `undefined` only equal to itself (strict comparison).
  if (a == null || b == null) {
    return false;
  }
  // `NaN`s are equivalent, but non-reflexive.
  if (a !== a) {
    return b !== b;
  }
  // Exhaust primitive checks
  var type = typeof a;
  if (type !== "function" && type !== "object" && typeof b != "object") {
    return false;
  }
  // Compare `[[Class]]` names.
  var className = toString.call(a);
  if (className !== toString.call(b)) {
    return false;
  }
  switch (className) {
    // Strings, numbers, regular expressions, dates, and booleans are compared by value.
    case "[object RegExp]":
    // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')
    case "[object String]":
      // Primitives and their corresponding object wrappers are equivalent; thus, `"5"` is
      // equivalent to `new String("5")`.
      return "" + a === "" + b;
    case "[object Number]":
      // `NaN`s are equivalent, but non-reflexive.
      // Object(NaN) is equivalent to NaN.
      if (+a !== +a) {
        return +b !== +b;
      }
      // An `egal` comparison is performed for other numeric values.
      return +a === 0 ? 1 / +a === 1 / b : +a === +b;
    case "[object Date]":
    case "[object Boolean]":
      // Coerce dates and booleans to numeric primitive values. Dates are compared by their
      // millisecond representations. Note that invalid dates with millisecond representations
      // of `NaN` are not equivalent.
      return +a === +b;
    case "[object Symbol]":
      return typeof Symbol !== "undefined" && Symbol.valueOf.call(a) === Symbol.valueOf.call(b);
    case "[object Map]":
    case "[object Set]":
      // Maps and Sets are unwrapped to arrays of entry-pairs, adding an incidental level.
      // Hide this extra level by increasing the depth.
      if (depth >= 0) {
        depth++;
      }
      break;
  }
  // Unwrap any wrapped objects.
  a = unwrap(a);
  b = unwrap(b);
  var areArrays = className === "[object Array]";
  if (!areArrays) {
    if (typeof a != "object" || typeof b != "object") {
      return false;
    }
    // Objects with different constructors are not equivalent, but `Object`s or `Array`s
    // from different frames are.
    var aCtor = a.constructor,
      bCtor = b.constructor;
    if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor && isFunction(bCtor) && bCtor instanceof bCtor) && "constructor" in a && "constructor" in b) {
      return false;
    }
  }
  if (depth === 0) {
    return false;
  } else if (depth < 0) {
    depth = -1;
  }
  // Assume equality for cyclic structures. The algorithm for detecting cyclic
  // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.
  // Initializing stack of traversed objects.
  // It's done here since we only need them for objects and arrays comparison.
  aStack = aStack || [];
  bStack = bStack || [];
  var length = aStack.length;
  while (length--) {
    // Linear search. Performance is inversely proportional to the number of
    // unique nested structures.
    if (aStack[length] === a) {
      return bStack[length] === b;
    }
  }
  // Add the first object to the stack of traversed objects.
  aStack.push(a);
  bStack.push(b);
  // Recursively compare objects and arrays.
  if (areArrays) {
    // Compare array lengths to determine if a deep comparison is necessary.
    length = a.length;
    if (length !== b.length) {
      return false;
    }
    // Deep compare the contents, ignoring non-numeric properties.
    while (length--) {
      if (!eq(a[length], b[length], depth - 1, aStack, bStack)) {
        return false;
      }
    }
  } else {
    // Deep compare objects.
    var keys = Object.keys(a);
    var _length = keys.length;
    // Ensure that both objects contain the same number of properties before comparing deep equality.
    if (Object.keys(b).length !== _length) {
      return false;
    }
    for (var i = 0; i < _length; i++) {
      // Deep compare each member
      var key = keys[i];
      if (!(hasProp(b, key) && eq(a[key], b[key], depth - 1, aStack, bStack))) {
        return false;
      }
    }
  }
  // Remove the first object from the stack of traversed objects.
  aStack.pop();
  bStack.pop();
  return true;
}
function unwrap(a) {
  if (isObservableArray(a)) {
    return a.slice();
  }
  if (isES6Map(a) || isObservableMap(a)) {
    return Array.from(a.entries());
  }
  if (isES6Set(a) || isObservableSet(a)) {
    return Array.from(a.entries());
  }
  return a;
}

var _getGlobal$Iterator;
// safely get iterator prototype if available
var maybeIteratorPrototype = ((_getGlobal$Iterator = /*#__PURE__*/getGlobal().Iterator) == null ? void 0 : _getGlobal$Iterator.prototype) || {};
function makeIterable(iterator) {
  iterator[Symbol.iterator] = getSelf;
  return Object.assign(Object.create(maybeIteratorPrototype), iterator);
}
function getSelf() {
  return this;
}

function isAnnotation(thing) {
  return (
    // Can be function
    thing instanceof Object && typeof thing.annotationType_ === "string" && isFunction(thing.make_) && isFunction(thing.extend_)
  );
}

/**
 * (c) Michel Weststrate 2015 - 2020
 * MIT Licensed
 *
 * Welcome to the mobx sources! To get a global overview of how MobX internally works,
 * this is a good place to start:
 * https://medium.com/@mweststrate/becoming-fully-reactive-an-in-depth-explanation-of-mobservable-55995262a254#.xvbh6qd74
 *
 * Source folders:
 * ===============
 *
 * - api/     Most of the public static methods exposed by the module can be found here.
 * - core/    Implementation of the MobX algorithm; atoms, derivations, reactions, dependency trees, optimizations. Cool stuff can be found here.
 * - types/   All the magic that is need to have observable objects, arrays and values is in this folder. Including the modifiers like `asFlat`.
 * - utils/   Utility stuff.
 *
 */
["Symbol", "Map", "Set"].forEach(function (m) {
  var g = getGlobal();
  if (typeof g[m] === "undefined") {
    die("MobX requires global '" + m + "' to be available or polyfilled");
  }
});
if (typeof __MOBX_DEVTOOLS_GLOBAL_HOOK__ === "object") {
  // See: https://github.com/andykog/mobx-devtools/
  __MOBX_DEVTOOLS_GLOBAL_HOOK__.injectMobx({
    spy: spy,
    extras: {
      getDebugName: getDebugName
    },
    $mobx: $mobx
  });
}


//# sourceMappingURL=mobx.esm.js.map

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(33)))

/***/ }),
/* 8 */
/***/ (function(module, exports) {

module.exports = _;

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



var R = typeof Reflect === 'object' ? Reflect : null
var ReflectApply = R && typeof R.apply === 'function'
  ? R.apply
  : function ReflectApply(target, receiver, args) {
    return Function.prototype.apply.call(target, receiver, args);
  }

var ReflectOwnKeys
if (R && typeof R.ownKeys === 'function') {
  ReflectOwnKeys = R.ownKeys
} else if (Object.getOwnPropertySymbols) {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target)
      .concat(Object.getOwnPropertySymbols(target));
  };
} else {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target);
  };
}

function ProcessEmitWarning(warning) {
  if (console && console.warn) console.warn(warning);
}

var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {
  return value !== value;
}

function EventEmitter() {
  EventEmitter.init.call(this);
}
module.exports = EventEmitter;
module.exports.once = once;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._eventsCount = 0;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
var defaultMaxListeners = 10;

function checkListener(listener) {
  if (typeof listener !== 'function') {
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
  }
}

Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
  enumerable: true,
  get: function() {
    return defaultMaxListeners;
  },
  set: function(arg) {
    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {
      throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + '.');
    }
    defaultMaxListeners = arg;
  }
});

EventEmitter.init = function() {

  if (this._events === undefined ||
      this._events === Object.getPrototypeOf(this)._events) {
    this._events = Object.create(null);
    this._eventsCount = 0;
  }

  this._maxListeners = this._maxListeners || undefined;
};

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {
    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + '.');
  }
  this._maxListeners = n;
  return this;
};

function _getMaxListeners(that) {
  if (that._maxListeners === undefined)
    return EventEmitter.defaultMaxListeners;
  return that._maxListeners;
}

EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
  return _getMaxListeners(this);
};

EventEmitter.prototype.emit = function emit(type) {
  var args = [];
  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);
  var doError = (type === 'error');

  var events = this._events;
  if (events !== undefined)
    doError = (doError && events.error === undefined);
  else if (!doError)
    return false;

  // If there is no 'error' event listener then throw.
  if (doError) {
    var er;
    if (args.length > 0)
      er = args[0];
    if (er instanceof Error) {
      // Note: The comments on the `throw` lines are intentional, they show
      // up in Node's output if this results in an unhandled exception.
      throw er; // Unhandled 'error' event
    }
    // At least give some kind of context to the user
    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));
    err.context = er;
    throw err; // Unhandled 'error' event
  }

  var handler = events[type];

  if (handler === undefined)
    return false;

  if (typeof handler === 'function') {
    ReflectApply(handler, this, args);
  } else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      ReflectApply(listeners[i], this, args);
  }

  return true;
};

function _addListener(target, type, listener, prepend) {
  var m;
  var events;
  var existing;

  checkListener(listener);

  events = target._events;
  if (events === undefined) {
    events = target._events = Object.create(null);
    target._eventsCount = 0;
  } else {
    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (events.newListener !== undefined) {
      target.emit('newListener', type,
                  listener.listener ? listener.listener : listener);

      // Re-assign `events` because a newListener handler could have caused the
      // this._events to be assigned to a new object
      events = target._events;
    }
    existing = events[type];
  }

  if (existing === undefined) {
    // Optimize the case of one listener. Don't need the extra array object.
    existing = events[type] = listener;
    ++target._eventsCount;
  } else {
    if (typeof existing === 'function') {
      // Adding the second element, need to change to array.
      existing = events[type] =
        prepend ? [listener, existing] : [existing, listener];
      // If we've already got an array, just append.
    } else if (prepend) {
      existing.unshift(listener);
    } else {
      existing.push(listener);
    }

    // Check for listener leak
    m = _getMaxListeners(target);
    if (m > 0 && existing.length > m && !existing.warned) {
      existing.warned = true;
      // No error code for this since it is a Warning
      // eslint-disable-next-line no-restricted-syntax
      var w = new Error('Possible EventEmitter memory leak detected. ' +
                          existing.length + ' ' + String(type) + ' listeners ' +
                          'added. Use emitter.setMaxListeners() to ' +
                          'increase limit');
      w.name = 'MaxListenersExceededWarning';
      w.emitter = target;
      w.type = type;
      w.count = existing.length;
      ProcessEmitWarning(w);
    }
  }

  return target;
}

EventEmitter.prototype.addListener = function addListener(type, listener) {
  return _addListener(this, type, listener, false);
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.prependListener =
    function prependListener(type, listener) {
      return _addListener(this, type, listener, true);
    };

function onceWrapper() {
  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    if (arguments.length === 0)
      return this.listener.call(this.target);
    return this.listener.apply(this.target, arguments);
  }
}

function _onceWrap(target, type, listener) {
  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };
  var wrapped = onceWrapper.bind(state);
  wrapped.listener = listener;
  state.wrapFn = wrapped;
  return wrapped;
}

EventEmitter.prototype.once = function once(type, listener) {
  checkListener(listener);
  this.on(type, _onceWrap(this, type, listener));
  return this;
};

EventEmitter.prototype.prependOnceListener =
    function prependOnceListener(type, listener) {
      checkListener(listener);
      this.prependListener(type, _onceWrap(this, type, listener));
      return this;
    };

// Emits a 'removeListener' event if and only if the listener was removed.
EventEmitter.prototype.removeListener =
    function removeListener(type, listener) {
      var list, events, position, i, originalListener;

      checkListener(listener);

      events = this._events;
      if (events === undefined)
        return this;

      list = events[type];
      if (list === undefined)
        return this;

      if (list === listener || list.listener === listener) {
        if (--this._eventsCount === 0)
          this._events = Object.create(null);
        else {
          delete events[type];
          if (events.removeListener)
            this.emit('removeListener', type, list.listener || listener);
        }
      } else if (typeof list !== 'function') {
        position = -1;

        for (i = list.length - 1; i >= 0; i--) {
          if (list[i] === listener || list[i].listener === listener) {
            originalListener = list[i].listener;
            position = i;
            break;
          }
        }

        if (position < 0)
          return this;

        if (position === 0)
          list.shift();
        else {
          spliceOne(list, position);
        }

        if (list.length === 1)
          events[type] = list[0];

        if (events.removeListener !== undefined)
          this.emit('removeListener', type, originalListener || listener);
      }

      return this;
    };

EventEmitter.prototype.off = EventEmitter.prototype.removeListener;

EventEmitter.prototype.removeAllListeners =
    function removeAllListeners(type) {
      var listeners, events, i;

      events = this._events;
      if (events === undefined)
        return this;

      // not listening for removeListener, no need to emit
      if (events.removeListener === undefined) {
        if (arguments.length === 0) {
          this._events = Object.create(null);
          this._eventsCount = 0;
        } else if (events[type] !== undefined) {
          if (--this._eventsCount === 0)
            this._events = Object.create(null);
          else
            delete events[type];
        }
        return this;
      }

      // emit removeListener for all listeners on all events
      if (arguments.length === 0) {
        var keys = Object.keys(events);
        var key;
        for (i = 0; i < keys.length; ++i) {
          key = keys[i];
          if (key === 'removeListener') continue;
          this.removeAllListeners(key);
        }
        this.removeAllListeners('removeListener');
        this._events = Object.create(null);
        this._eventsCount = 0;
        return this;
      }

      listeners = events[type];

      if (typeof listeners === 'function') {
        this.removeListener(type, listeners);
      } else if (listeners !== undefined) {
        // LIFO order
        for (i = listeners.length - 1; i >= 0; i--) {
          this.removeListener(type, listeners[i]);
        }
      }

      return this;
    };

function _listeners(target, type, unwrap) {
  var events = target._events;

  if (events === undefined)
    return [];

  var evlistener = events[type];
  if (evlistener === undefined)
    return [];

  if (typeof evlistener === 'function')
    return unwrap ? [evlistener.listener || evlistener] : [evlistener];

  return unwrap ?
    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
}

EventEmitter.prototype.listeners = function listeners(type) {
  return _listeners(this, type, true);
};

EventEmitter.prototype.rawListeners = function rawListeners(type) {
  return _listeners(this, type, false);
};

EventEmitter.listenerCount = function(emitter, type) {
  if (typeof emitter.listenerCount === 'function') {
    return emitter.listenerCount(type);
  } else {
    return listenerCount.call(emitter, type);
  }
};

EventEmitter.prototype.listenerCount = listenerCount;
function listenerCount(type) {
  var events = this._events;

  if (events !== undefined) {
    var evlistener = events[type];

    if (typeof evlistener === 'function') {
      return 1;
    } else if (evlistener !== undefined) {
      return evlistener.length;
    }
  }

  return 0;
}

EventEmitter.prototype.eventNames = function eventNames() {
  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
};

function arrayClone(arr, n) {
  var copy = new Array(n);
  for (var i = 0; i < n; ++i)
    copy[i] = arr[i];
  return copy;
}

function spliceOne(list, index) {
  for (; index + 1 < list.length; index++)
    list[index] = list[index + 1];
  list.pop();
}

function unwrapListeners(arr) {
  var ret = new Array(arr.length);
  for (var i = 0; i < ret.length; ++i) {
    ret[i] = arr[i].listener || arr[i];
  }
  return ret;
}

function once(emitter, name) {
  return new Promise(function (resolve, reject) {
    function errorListener(err) {
      emitter.removeListener(name, resolver);
      reject(err);
    }

    function resolver() {
      if (typeof emitter.removeListener === 'function') {
        emitter.removeListener('error', errorListener);
      }
      resolve([].slice.call(arguments));
    };

    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });
    if (name !== 'error') {
      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });
    }
  });
}

function addErrorHandlerIfEventEmitter(emitter, handler, flags) {
  if (typeof emitter.on === 'function') {
    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);
  }
}

function eventTargetAgnosticAddListener(emitter, name, listener, flags) {
  if (typeof emitter.on === 'function') {
    if (flags.once) {
      emitter.once(name, listener);
    } else {
      emitter.on(name, listener);
    }
  } else if (typeof emitter.addEventListener === 'function') {
    // EventTarget does not have `error` event semantics like Node
    // EventEmitters, we do not listen for `error` events here.
    emitter.addEventListener(name, function wrapListener(arg) {
      // IE does not have builtin `{ once: true }` support so we
      // have to do it manually.
      if (flags.once) {
        emitter.removeEventListener(name, wrapListener);
      }
      listener(arg);
    });
  } else {
    throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof emitter);
  }
}


/***/ }),
/* 10 */
/***/ (function(module, exports) {

module.exports = window.ReactDOM;

/***/ }),
/* 11 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return tipHandler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return postTip; });
/* harmony import */ var _event_bus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(14);
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

var TipHandler = /*#__PURE__*/function () {
  function TipHandler() {
    _classCallCheck(this, TipHandler);
    this.tip = null;
    this.showDelay = null;
    this.hideDelay = null;
    this.emitter = Object(_event_bus__WEBPACK_IMPORTED_MODULE_0__[/* createModuleEventBus */ "b"])('TipHandler');
  }
  return _createClass(TipHandler, [{
    key: "setTarget",
    value: function setTarget(target) {
      var _this = this;
      var tip = findTip(target);
      if (tip) {
        if (this.tip) {
          // the some target should return
          if (this.tip.target === tip.target) {
            this.tip = tip;
            return;
          }
          // not show already, reset show delay
          if (this.showDelay) {
            clearTimeout(this.showDelay);
            this.showDelay = null;
            this.tip = null;
          } else {
            if (this.hideDelay) {
              clearTimeout(this.hideDelay);
              this.hideDelay = null;
            }
            this.tip = tip;
            this.emitter.emit('tipchange');
            return;
          }
        }
        this.tip = tip;
        if (this.hideDelay) {
          clearTimeout(this.hideDelay);
          this.hideDelay = null;
          this.emitter.emit('tipchange');
        } else {
          this.showDelay = setTimeout(function () {
            _this.showDelay = null;
            _this.emitter.emit('tipchange');
          }, 350);
        }
      } else {
        if (this.showDelay) {
          clearTimeout(this.showDelay);
          this.showDelay = null;
        } else {
          this.hideDelay = setTimeout(function () {
            _this.hideDelay = null;
          }, 100);
        }
        this.tip = null;
        this.emitter.emit('tipchange');
      }
    }
  }, {
    key: "hideImmediately",
    value: function hideImmediately() {
      if (this.hideDelay) {
        clearTimeout(this.hideDelay);
        this.hideDelay = null;
      }
      if (this.showDelay) {
        clearTimeout(this.showDelay);
        this.showDelay = null;
      }
      this.tip = null;
      this.emitter.emit('tipchange');
    }
  }, {
    key: "onChange",
    value: function onChange(func) {
      var _this2 = this;
      this.emitter.on('tipchange', func);
      return function () {
        _this2.emitter.removeListener('tipchange', func);
      };
    }
  }]);
}();
var tipHandler = new TipHandler();
function findTip(target) {
  if (!target) {
    return null;
  }
  // optimize deep finding on mouseover
  var loopupLimit = 10;
  while (target && loopupLimit-- > 0) {
    // get tip from target node
    if (target.dataset && target.dataset.tip) {
      return {
        children: target.dataset.tip,
        direction: target.dataset.direction || target.dataset.dir,
        theme: target.dataset.theme,
        target: target
      };
    }
    // or get tip from child nodes
    var child = target.lastElementChild;
    while (child) {
      if (child.dataset && child.dataset.role === 'tip') {
        var tipId = child.dataset.tipId;
        if (!tipId) {
          return null;
        }
        var tipProps = tipsMap.get(tipId);
        if (!tipProps) {
          return null;
        }
        return _objectSpread(_objectSpread({}, tipProps), {}, {
          target: target
        });
      }
      child = child.previousElementSibling;
    }
    target = target.parentNode;
  }
  return null;
}
var tipsMap = new Map();
function postTip(id, props) {
  if (props) {
    tipsMap.set(id, props);
  } else {
    tipsMap.delete(id);
  }
}

/***/ }),
/* 12 */
/***/ (function(module, exports) {

module.exports = window.PropTypes;

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.getMetadataField = exports.getMetadata = exports.MetadataType = exports.metaSymbol = void 0;
exports.metaSymbol = Symbol('power-di-metadata');
var MetadataType = /** @class */ (function () {
    function MetadataType() {
        this.classInfo = {
            extends: [],
            implements: [],
        };
        this.injects = [];
        this.postConstruct = [];
        this.preDestroy = [];
        this.aspects = [];
    }
    return MetadataType;
}());
exports.MetadataType = MetadataType;
/**
 * get metadata of class
 * @param type type of class
 */
function getMetadata(type) {
    if ([Object, Object.prototype, Array, Array.prototype, Error, Error.prototype, null].includes(type)) {
        return new MetadataType();
    }
    var metadata = Object.getOwnPropertyDescriptor(type, exports.metaSymbol);
    if (!metadata || !metadata.value) {
        Object.defineProperty(type, exports.metaSymbol, {
            enumerable: false,
            configurable: false,
            value: new MetadataType(),
        });
        return getMetadata(type);
    }
    return metadata.value;
}
exports.getMetadata = getMetadata;
/**
 * get the field of class metadata
 * @param type type of class
 * @param key field
 */
function getMetadataField(type, key) {
    var field = getMetadata(type)[key];
    if (Array.isArray(field)) {
        var superType = Object.getPrototypeOf(type);
        if (superType) {
            return getMetadataField(superType, key).concat(field);
        }
    }
    return field;
}
exports.getMetadataField = getMetadataField;
//# sourceMappingURL=metadata.js.map

/***/ }),
/* 14 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EventBus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return createModuleEventBus; });
/* harmony import */ var _alilc_lowcode_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(9);
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_1__);
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }


var logger = new _alilc_lowcode_utils__WEBPACK_IMPORTED_MODULE_0__[/* Logger */ "e"]({
  level: 'warn',
  bizName: 'event-bus'
});
var moduleLogger = new _alilc_lowcode_utils__WEBPACK_IMPORTED_MODULE_0__[/* Logger */ "e"]({
  level: 'warn',
  bizName: 'module-event-bus'
});
var EventBus = /*#__PURE__*/function () {
  function EventBus(emitter, name) {
    _classCallCheck(this, EventBus);
    this.eventEmitter = void 0;
    this.name = void 0;
    /**
     * 内核触发的事件名
     */
    this.names = [];
    this.eventEmitter = emitter;
    this.name = name;
  }
  return _createClass(EventBus, [{
    key: "getMsgPrefix",
    value: function getMsgPrefix(type) {
      if (this.name && this.name.length > 0) {
        return "[".concat(this.name, "][event-").concat(type, "]");
      } else {
        return "[*][event-".concat(type, "]");
      }
    }
  }, {
    key: "getLogger",
    value: function getLogger() {
      if (this.name && this.name.length > 0) {
        return moduleLogger;
      } else {
        return logger;
      }
    }
    /**
     * 监听事件
     * @param event 事件名称
     * @param listener 事件回调
     */
  }, {
    key: "on",
    value: function on(event, listener) {
      var _this = this;
      this.eventEmitter.on(event, listener);
      this.getLogger().debug("".concat(this.getMsgPrefix('on'), " ").concat(event));
      return function () {
        _this.off(event, listener);
      };
    }
  }, {
    key: "prependListener",
    value: function prependListener(event, listener) {
      var _this2 = this;
      this.eventEmitter.prependListener(event, listener);
      this.getLogger().debug("".concat(this.getMsgPrefix('prependListener'), " ").concat(event));
      return function () {
        _this2.off(event, listener);
      };
    }
    /**
     * 取消监听事件
     * @param event 事件名称
     * @param listener 事件回调
     */
  }, {
    key: "off",
    value: function off(event, listener) {
      this.eventEmitter.off(event, listener);
      this.getLogger().debug("".concat(this.getMsgPrefix('off'), " ").concat(event));
    }
    /**
     * 触发事件
     * @param event 事件名称
     * @param args 事件参数
     * @returns
     */
  }, {
    key: "emit",
    value: function emit(event) {
      var _this$eventEmitter, _this$getLogger;
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }
      (_this$eventEmitter = this.eventEmitter).emit.apply(_this$eventEmitter, [event].concat(args));
      (_this$getLogger = this.getLogger()).debug.apply(_this$getLogger, ["".concat(this.getMsgPrefix('emit'), " name: ").concat(event, ", args: ")].concat(args));
    }
  }, {
    key: "removeListener",
    value: function removeListener(event, listener) {
      return this.eventEmitter.removeListener(event, listener);
    }
  }, {
    key: "addListener",
    value: function addListener(event, listener) {
      return this.eventEmitter.addListener(event, listener);
    }
  }, {
    key: "setMaxListeners",
    value: function setMaxListeners(n) {
      return this.eventEmitter.setMaxListeners(n);
    }
  }, {
    key: "removeAllListeners",
    value: function removeAllListeners(event) {
      return this.eventEmitter.removeAllListeners(event);
    }
  }]);
}();
var createModuleEventBus = function createModuleEventBus(moduleName, maxListeners) {
  var emitter = new events__WEBPACK_IMPORTED_MODULE_1___default.a();
  if (maxListeners) {
    emitter.setMaxListeners(maxListeners);
  }
  return new EventBus(emitter, moduleName);
};

/***/ }),
/* 15 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Tip; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _alilc_lowcode_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
/* harmony import */ var _tip_handler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(11);
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _possibleConstructorReturn(t, e) { if (e && ("object" == _typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return _assertThisInitialized(t); }
function _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }
function _inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && _setPrototypeOf(t, e); }
function _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }



var Tip = /*#__PURE__*/function (_Component) {
  function Tip() {
    var _this;
    _classCallCheck(this, Tip);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper(this, Tip, [].concat(args));
    _this.id = Object(_alilc_lowcode_utils__WEBPACK_IMPORTED_MODULE_1__[/* uniqueId */ "ib"])('tips$');
    return _this;
  }
  _inherits(Tip, _Component);
  return _createClass(Tip, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      Object(_tip_handler__WEBPACK_IMPORTED_MODULE_2__[/* postTip */ "a"])(this.id, null);
    }
  }, {
    key: "render",
    value: function render() {
      Object(_tip_handler__WEBPACK_IMPORTED_MODULE_2__[/* postTip */ "a"])(this.id, this.props);
      return /*#__PURE__*/React.createElement("meta", {
        "data-role": "tip",
        "data-tip-id": this.id
      });
    }
  }]);
}(react__WEBPACK_IMPORTED_MODULE_0__["Component"]);

/***/ }),
/* 16 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "c", function() { return /* binding */ intl_intl; });
__webpack_require__.d(__webpack_exports__, "d", function() { return /* binding */ shallowIntl; });
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ createIntl; });
__webpack_require__.d(__webpack_exports__, "b", function() { return /* reexport */ globalLocale; });

// UNUSED EXPORTS: intlNode

// EXTERNAL MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/tslib/tslib.es6.js
var tslib_es6 = __webpack_require__(0);

// EXTERNAL MODULE: external "window.React"
var external_window_React_ = __webpack_require__(2);

// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/@formatjs/icu-messageformat-parser/lib/error.js
var ErrorKind;
(function (ErrorKind) {
    /** Argument is unclosed (e.g. `{0`) */
    ErrorKind[ErrorKind["EXPECT_ARGUMENT_CLOSING_BRACE"] = 1] = "EXPECT_ARGUMENT_CLOSING_BRACE";
    /** Argument is empty (e.g. `{}`). */
    ErrorKind[ErrorKind["EMPTY_ARGUMENT"] = 2] = "EMPTY_ARGUMENT";
    /** Argument is malformed (e.g. `{foo!}``) */
    ErrorKind[ErrorKind["MALFORMED_ARGUMENT"] = 3] = "MALFORMED_ARGUMENT";
    /** Expect an argument type (e.g. `{foo,}`) */
    ErrorKind[ErrorKind["EXPECT_ARGUMENT_TYPE"] = 4] = "EXPECT_ARGUMENT_TYPE";
    /** Unsupported argument type (e.g. `{foo,foo}`) */
    ErrorKind[ErrorKind["INVALID_ARGUMENT_TYPE"] = 5] = "INVALID_ARGUMENT_TYPE";
    /** Expect an argument style (e.g. `{foo, number, }`) */
    ErrorKind[ErrorKind["EXPECT_ARGUMENT_STYLE"] = 6] = "EXPECT_ARGUMENT_STYLE";
    /** The number skeleton is invalid. */
    ErrorKind[ErrorKind["INVALID_NUMBER_SKELETON"] = 7] = "INVALID_NUMBER_SKELETON";
    /** The date time skeleton is invalid. */
    ErrorKind[ErrorKind["INVALID_DATE_TIME_SKELETON"] = 8] = "INVALID_DATE_TIME_SKELETON";
    /** Exepct a number skeleton following the `::` (e.g. `{foo, number, ::}`) */
    ErrorKind[ErrorKind["EXPECT_NUMBER_SKELETON"] = 9] = "EXPECT_NUMBER_SKELETON";
    /** Exepct a date time skeleton following the `::` (e.g. `{foo, date, ::}`) */
    ErrorKind[ErrorKind["EXPECT_DATE_TIME_SKELETON"] = 10] = "EXPECT_DATE_TIME_SKELETON";
    /** Unmatched apostrophes in the argument style (e.g. `{foo, number, 'test`) */
    ErrorKind[ErrorKind["UNCLOSED_QUOTE_IN_ARGUMENT_STYLE"] = 11] = "UNCLOSED_QUOTE_IN_ARGUMENT_STYLE";
    /** Missing select argument options (e.g. `{foo, select}`) */
    ErrorKind[ErrorKind["EXPECT_SELECT_ARGUMENT_OPTIONS"] = 12] = "EXPECT_SELECT_ARGUMENT_OPTIONS";
    /** Expecting an offset value in `plural` or `selectordinal` argument (e.g `{foo, plural, offset}`) */
    ErrorKind[ErrorKind["EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE"] = 13] = "EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE";
    /** Offset value in `plural` or `selectordinal` is invalid (e.g. `{foo, plural, offset: x}`) */
    ErrorKind[ErrorKind["INVALID_PLURAL_ARGUMENT_OFFSET_VALUE"] = 14] = "INVALID_PLURAL_ARGUMENT_OFFSET_VALUE";
    /** Expecting a selector in `select` argument (e.g `{foo, select}`) */
    ErrorKind[ErrorKind["EXPECT_SELECT_ARGUMENT_SELECTOR"] = 15] = "EXPECT_SELECT_ARGUMENT_SELECTOR";
    /** Expecting a selector in `plural` or `selectordinal` argument (e.g `{foo, plural}`) */
    ErrorKind[ErrorKind["EXPECT_PLURAL_ARGUMENT_SELECTOR"] = 16] = "EXPECT_PLURAL_ARGUMENT_SELECTOR";
    /** Expecting a message fragment after the `select` selector (e.g. `{foo, select, apple}`) */
    ErrorKind[ErrorKind["EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT"] = 17] = "EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT";
    /**
     * Expecting a message fragment after the `plural` or `selectordinal` selector
     * (e.g. `{foo, plural, one}`)
     */
    ErrorKind[ErrorKind["EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT"] = 18] = "EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT";
    /** Selector in `plural` or `selectordinal` is malformed (e.g. `{foo, plural, =x {#}}`) */
    ErrorKind[ErrorKind["INVALID_PLURAL_ARGUMENT_SELECTOR"] = 19] = "INVALID_PLURAL_ARGUMENT_SELECTOR";
    /**
     * Duplicate selectors in `plural` or `selectordinal` argument.
     * (e.g. {foo, plural, one {#} one {#}})
     */
    ErrorKind[ErrorKind["DUPLICATE_PLURAL_ARGUMENT_SELECTOR"] = 20] = "DUPLICATE_PLURAL_ARGUMENT_SELECTOR";
    /** Duplicate selectors in `select` argument.
     * (e.g. {foo, select, apple {apple} apple {apple}})
     */
    ErrorKind[ErrorKind["DUPLICATE_SELECT_ARGUMENT_SELECTOR"] = 21] = "DUPLICATE_SELECT_ARGUMENT_SELECTOR";
    /** Plural or select argument option must have `other` clause. */
    ErrorKind[ErrorKind["MISSING_OTHER_CLAUSE"] = 22] = "MISSING_OTHER_CLAUSE";
    /** The tag is malformed. (e.g. `<bold!>foo</bold!>) */
    ErrorKind[ErrorKind["INVALID_TAG"] = 23] = "INVALID_TAG";
    /** The tag name is invalid. (e.g. `<123>foo</123>`) */
    ErrorKind[ErrorKind["INVALID_TAG_NAME"] = 25] = "INVALID_TAG_NAME";
    /** The closing tag does not match the opening tag. (e.g. `<bold>foo</italic>`) */
    ErrorKind[ErrorKind["UNMATCHED_CLOSING_TAG"] = 26] = "UNMATCHED_CLOSING_TAG";
    /** The opening tag has unmatched closing tag. (e.g. `<bold>foo`) */
    ErrorKind[ErrorKind["UNCLOSED_TAG"] = 27] = "UNCLOSED_TAG";
})(ErrorKind || (ErrorKind = {}));

// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/@formatjs/icu-messageformat-parser/lib/types.js
var TYPE;
(function (TYPE) {
    /**
     * Raw text
     */
    TYPE[TYPE["literal"] = 0] = "literal";
    /**
     * Variable w/o any format, e.g `var` in `this is a {var}`
     */
    TYPE[TYPE["argument"] = 1] = "argument";
    /**
     * Variable w/ number format
     */
    TYPE[TYPE["number"] = 2] = "number";
    /**
     * Variable w/ date format
     */
    TYPE[TYPE["date"] = 3] = "date";
    /**
     * Variable w/ time format
     */
    TYPE[TYPE["time"] = 4] = "time";
    /**
     * Variable w/ select format
     */
    TYPE[TYPE["select"] = 5] = "select";
    /**
     * Variable w/ plural format
     */
    TYPE[TYPE["plural"] = 6] = "plural";
    /**
     * Only possible within plural argument.
     * This is the `#` symbol that will be substituted with the count.
     */
    TYPE[TYPE["pound"] = 7] = "pound";
    /**
     * XML-like tag
     */
    TYPE[TYPE["tag"] = 8] = "tag";
})(TYPE || (TYPE = {}));
var SKELETON_TYPE;
(function (SKELETON_TYPE) {
    SKELETON_TYPE[SKELETON_TYPE["number"] = 0] = "number";
    SKELETON_TYPE[SKELETON_TYPE["dateTime"] = 1] = "dateTime";
})(SKELETON_TYPE || (SKELETON_TYPE = {}));
/**
 * Type Guards
 */
function isLiteralElement(el) {
    return el.type === TYPE.literal;
}
function isArgumentElement(el) {
    return el.type === TYPE.argument;
}
function isNumberElement(el) {
    return el.type === TYPE.number;
}
function isDateElement(el) {
    return el.type === TYPE.date;
}
function isTimeElement(el) {
    return el.type === TYPE.time;
}
function isSelectElement(el) {
    return el.type === TYPE.select;
}
function isPluralElement(el) {
    return el.type === TYPE.plural;
}
function isPoundElement(el) {
    return el.type === TYPE.pound;
}
function isTagElement(el) {
    return el.type === TYPE.tag;
}
function isNumberSkeleton(el) {
    return !!(el && typeof el === 'object' && el.type === SKELETON_TYPE.number);
}
function isDateTimeSkeleton(el) {
    return !!(el && typeof el === 'object' && el.type === SKELETON_TYPE.dateTime);
}
function createLiteralElement(value) {
    return {
        type: TYPE.literal,
        value: value,
    };
}
function createNumberElement(value, style) {
    return {
        type: TYPE.number,
        value: value,
        style: style,
    };
}

// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/@formatjs/icu-messageformat-parser/lib/regex.generated.js
// @generated from regex-gen.ts
var SPACE_SEPARATOR_REGEX = /[ \xA0\u1680\u2000-\u200A\u202F\u205F\u3000]/;
var WHITE_SPACE_REGEX = /[\t-\r \x85\u200E\u200F\u2028\u2029]/;

// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/@formatjs/icu-skeleton-parser/lib/date-time.js
/**
 * https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
 * Credit: https://github.com/caridy/intl-datetimeformat-pattern/blob/master/index.js
 * with some tweaks
 */
var DATE_TIME_REGEX = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;
/**
 * Parse Date time skeleton into Intl.DateTimeFormatOptions
 * Ref: https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
 * @public
 * @param skeleton skeleton string
 */
function parseDateTimeSkeleton(skeleton) {
    var result = {};
    skeleton.replace(DATE_TIME_REGEX, function (match) {
        var len = match.length;
        switch (match[0]) {
            // Era
            case 'G':
                result.era = len === 4 ? 'long' : len === 5 ? 'narrow' : 'short';
                break;
            // Year
            case 'y':
                result.year = len === 2 ? '2-digit' : 'numeric';
                break;
            case 'Y':
            case 'u':
            case 'U':
            case 'r':
                throw new RangeError('`Y/u/U/r` (year) patterns are not supported, use `y` instead');
            // Quarter
            case 'q':
            case 'Q':
                throw new RangeError('`q/Q` (quarter) patterns are not supported');
            // Month
            case 'M':
            case 'L':
                result.month = ['numeric', '2-digit', 'short', 'long', 'narrow'][len - 1];
                break;
            // Week
            case 'w':
            case 'W':
                throw new RangeError('`w/W` (week) patterns are not supported');
            case 'd':
                result.day = ['numeric', '2-digit'][len - 1];
                break;
            case 'D':
            case 'F':
            case 'g':
                throw new RangeError('`D/F/g` (day) patterns are not supported, use `d` instead');
            // Weekday
            case 'E':
                result.weekday = len === 4 ? 'short' : len === 5 ? 'narrow' : 'short';
                break;
            case 'e':
                if (len < 4) {
                    throw new RangeError('`e..eee` (weekday) patterns are not supported');
                }
                result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];
                break;
            case 'c':
                if (len < 4) {
                    throw new RangeError('`c..ccc` (weekday) patterns are not supported');
                }
                result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];
                break;
            // Period
            case 'a': // AM, PM
                result.hour12 = true;
                break;
            case 'b': // am, pm, noon, midnight
            case 'B': // flexible day periods
                throw new RangeError('`b/B` (period) patterns are not supported, use `a` instead');
            // Hour
            case 'h':
                result.hourCycle = 'h12';
                result.hour = ['numeric', '2-digit'][len - 1];
                break;
            case 'H':
                result.hourCycle = 'h23';
                result.hour = ['numeric', '2-digit'][len - 1];
                break;
            case 'K':
                result.hourCycle = 'h11';
                result.hour = ['numeric', '2-digit'][len - 1];
                break;
            case 'k':
                result.hourCycle = 'h24';
                result.hour = ['numeric', '2-digit'][len - 1];
                break;
            case 'j':
            case 'J':
            case 'C':
                throw new RangeError('`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead');
            // Minute
            case 'm':
                result.minute = ['numeric', '2-digit'][len - 1];
                break;
            // Second
            case 's':
                result.second = ['numeric', '2-digit'][len - 1];
                break;
            case 'S':
            case 'A':
                throw new RangeError('`S/A` (second) patterns are not supported, use `s` instead');
            // Zone
            case 'z': // 1..3, 4: specific non-location format
                result.timeZoneName = len < 4 ? 'short' : 'long';
                break;
            case 'Z': // 1..3, 4, 5: The ISO8601 varios formats
            case 'O': // 1, 4: miliseconds in day short, long
            case 'v': // 1, 4: generic non-location format
            case 'V': // 1, 2, 3, 4: time zone ID or city
            case 'X': // 1, 2, 3, 4: The ISO8601 varios formats
            case 'x': // 1, 2, 3, 4: The ISO8601 varios formats
                throw new RangeError('`Z/O/v/V/X/x` (timeZone) patterns are not supported, use `z` instead');
        }
        return '';
    });
    return result;
}

// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/@formatjs/icu-skeleton-parser/lib/regex.generated.js
// @generated from regex-gen.ts
var regex_generated_WHITE_SPACE_REGEX = /[\t-\r \x85\u200E\u200F\u2028\u2029]/i;

// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/@formatjs/icu-skeleton-parser/lib/number.js


function parseNumberSkeletonFromString(skeleton) {
    if (skeleton.length === 0) {
        throw new Error('Number skeleton cannot be empty');
    }
    // Parse the skeleton
    var stringTokens = skeleton
        .split(regex_generated_WHITE_SPACE_REGEX)
        .filter(function (x) { return x.length > 0; });
    var tokens = [];
    for (var _i = 0, stringTokens_1 = stringTokens; _i < stringTokens_1.length; _i++) {
        var stringToken = stringTokens_1[_i];
        var stemAndOptions = stringToken.split('/');
        if (stemAndOptions.length === 0) {
            throw new Error('Invalid number skeleton');
        }
        var stem = stemAndOptions[0], options = stemAndOptions.slice(1);
        for (var _a = 0, options_1 = options; _a < options_1.length; _a++) {
            var option = options_1[_a];
            if (option.length === 0) {
                throw new Error('Invalid number skeleton');
            }
        }
        tokens.push({ stem: stem, options: options });
    }
    return tokens;
}
function icuUnitToEcma(unit) {
    return unit.replace(/^(.*?)-/, '');
}
var FRACTION_PRECISION_REGEX = /^\.(?:(0+)(\*)?|(#+)|(0+)(#+))$/g;
var SIGNIFICANT_PRECISION_REGEX = /^(@+)?(\+|#+)?[rs]?$/g;
var INTEGER_WIDTH_REGEX = /(\*)(0+)|(#+)(0+)|(0+)/g;
var CONCISE_INTEGER_WIDTH_REGEX = /^(0+)$/;
function parseSignificantPrecision(str) {
    var result = {};
    if (str[str.length - 1] === 'r') {
        result.roundingPriority = 'morePrecision';
    }
    else if (str[str.length - 1] === 's') {
        result.roundingPriority = 'lessPrecision';
    }
    str.replace(SIGNIFICANT_PRECISION_REGEX, function (_, g1, g2) {
        // @@@ case
        if (typeof g2 !== 'string') {
            result.minimumSignificantDigits = g1.length;
            result.maximumSignificantDigits = g1.length;
        }
        // @@@+ case
        else if (g2 === '+') {
            result.minimumSignificantDigits = g1.length;
        }
        // .### case
        else if (g1[0] === '#') {
            result.maximumSignificantDigits = g1.length;
        }
        // .@@## or .@@@ case
        else {
            result.minimumSignificantDigits = g1.length;
            result.maximumSignificantDigits =
                g1.length + (typeof g2 === 'string' ? g2.length : 0);
        }
        return '';
    });
    return result;
}
function parseSign(str) {
    switch (str) {
        case 'sign-auto':
            return {
                signDisplay: 'auto',
            };
        case 'sign-accounting':
        case '()':
            return {
                currencySign: 'accounting',
            };
        case 'sign-always':
        case '+!':
            return {
                signDisplay: 'always',
            };
        case 'sign-accounting-always':
        case '()!':
            return {
                signDisplay: 'always',
                currencySign: 'accounting',
            };
        case 'sign-except-zero':
        case '+?':
            return {
                signDisplay: 'exceptZero',
            };
        case 'sign-accounting-except-zero':
        case '()?':
            return {
                signDisplay: 'exceptZero',
                currencySign: 'accounting',
            };
        case 'sign-never':
        case '+_':
            return {
                signDisplay: 'never',
            };
    }
}
function parseConciseScientificAndEngineeringStem(stem) {
    // Engineering
    var result;
    if (stem[0] === 'E' && stem[1] === 'E') {
        result = {
            notation: 'engineering',
        };
        stem = stem.slice(2);
    }
    else if (stem[0] === 'E') {
        result = {
            notation: 'scientific',
        };
        stem = stem.slice(1);
    }
    if (result) {
        var signDisplay = stem.slice(0, 2);
        if (signDisplay === '+!') {
            result.signDisplay = 'always';
            stem = stem.slice(2);
        }
        else if (signDisplay === '+?') {
            result.signDisplay = 'exceptZero';
            stem = stem.slice(2);
        }
        if (!CONCISE_INTEGER_WIDTH_REGEX.test(stem)) {
            throw new Error('Malformed concise eng/scientific notation');
        }
        result.minimumIntegerDigits = stem.length;
    }
    return result;
}
function parseNotationOptions(opt) {
    var result = {};
    var signOpts = parseSign(opt);
    if (signOpts) {
        return signOpts;
    }
    return result;
}
/**
 * https://github.com/unicode-org/icu/blob/master/docs/userguide/format_parse/numbers/skeletons.md#skeleton-stems-and-options
 */
function parseNumberSkeleton(tokens) {
    var result = {};
    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {
        var token = tokens_1[_i];
        switch (token.stem) {
            case 'percent':
            case '%':
                result.style = 'percent';
                continue;
            case '%x100':
                result.style = 'percent';
                result.scale = 100;
                continue;
            case 'currency':
                result.style = 'currency';
                result.currency = token.options[0];
                continue;
            case 'group-off':
            case ',_':
                result.useGrouping = false;
                continue;
            case 'precision-integer':
            case '.':
                result.maximumFractionDigits = 0;
                continue;
            case 'measure-unit':
            case 'unit':
                result.style = 'unit';
                result.unit = icuUnitToEcma(token.options[0]);
                continue;
            case 'compact-short':
            case 'K':
                result.notation = 'compact';
                result.compactDisplay = 'short';
                continue;
            case 'compact-long':
            case 'KK':
                result.notation = 'compact';
                result.compactDisplay = 'long';
                continue;
            case 'scientific':
                result = Object(tslib_es6["a" /* __assign */])(Object(tslib_es6["a" /* __assign */])(Object(tslib_es6["a" /* __assign */])({}, result), { notation: 'scientific' }), token.options.reduce(function (all, opt) { return (Object(tslib_es6["a" /* __assign */])(Object(tslib_es6["a" /* __assign */])({}, all), parseNotationOptions(opt))); }, {}));
                continue;
            case 'engineering':
                result = Object(tslib_es6["a" /* __assign */])(Object(tslib_es6["a" /* __assign */])(Object(tslib_es6["a" /* __assign */])({}, result), { notation: 'engineering' }), token.options.reduce(function (all, opt) { return (Object(tslib_es6["a" /* __assign */])(Object(tslib_es6["a" /* __assign */])({}, all), parseNotationOptions(opt))); }, {}));
                continue;
            case 'notation-simple':
                result.notation = 'standard';
                continue;
            // https://github.com/unicode-org/icu/blob/master/icu4c/source/i18n/unicode/unumberformatter.h
            case 'unit-width-narrow':
                result.currencyDisplay = 'narrowSymbol';
                result.unitDisplay = 'narrow';
                continue;
            case 'unit-width-short':
                result.currencyDisplay = 'code';
                result.unitDisplay = 'short';
                continue;
            case 'unit-width-full-name':
                result.currencyDisplay = 'name';
                result.unitDisplay = 'long';
                continue;
            case 'unit-width-iso-code':
                result.currencyDisplay = 'symbol';
                continue;
            case 'scale':
                result.scale = parseFloat(token.options[0]);
                continue;
            // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#integer-width
            case 'integer-width':
                if (token.options.length > 1) {
                    throw new RangeError('integer-width stems only accept a single optional option');
                }
                token.options[0].replace(INTEGER_WIDTH_REGEX, function (_, g1, g2, g3, g4, g5) {
                    if (g1) {
                        result.minimumIntegerDigits = g2.length;
                    }
                    else if (g3 && g4) {
                        throw new Error('We currently do not support maximum integer digits');
                    }
                    else if (g5) {
                        throw new Error('We currently do not support exact integer digits');
                    }
                    return '';
                });
                continue;
        }
        // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#integer-width
        if (CONCISE_INTEGER_WIDTH_REGEX.test(token.stem)) {
            result.minimumIntegerDigits = token.stem.length;
            continue;
        }
        if (FRACTION_PRECISION_REGEX.test(token.stem)) {
            // Precision
            // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#fraction-precision
            // precision-integer case
            if (token.options.length > 1) {
                throw new RangeError('Fraction-precision stems only accept a single optional option');
            }
            token.stem.replace(FRACTION_PRECISION_REGEX, function (_, g1, g2, g3, g4, g5) {
                // .000* case (before ICU67 it was .000+)
                if (g2 === '*') {
                    result.minimumFractionDigits = g1.length;
                }
                // .### case
                else if (g3 && g3[0] === '#') {
                    result.maximumFractionDigits = g3.length;
                }
                // .00## case
                else if (g4 && g5) {
                    result.minimumFractionDigits = g4.length;
                    result.maximumFractionDigits = g4.length + g5.length;
                }
                else {
                    result.minimumFractionDigits = g1.length;
                    result.maximumFractionDigits = g1.length;
                }
                return '';
            });
            var opt = token.options[0];
            // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#trailing-zero-display
            if (opt === 'w') {
                result = Object(tslib_es6["a" /* __assign */])(Object(tslib_es6["a" /* __assign */])({}, result), { trailingZeroDisplay: 'stripIfInteger' });
            }
            else if (opt) {
                result = Object(tslib_es6["a" /* __assign */])(Object(tslib_es6["a" /* __assign */])({}, result), parseSignificantPrecision(opt));
            }
            continue;
        }
        // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#significant-digits-precision
        if (SIGNIFICANT_PRECISION_REGEX.test(token.stem)) {
            result = Object(tslib_es6["a" /* __assign */])(Object(tslib_es6["a" /* __assign */])({}, result), parseSignificantPrecision(token.stem));
            continue;
        }
        var signOpts = parseSign(token.stem);
        if (signOpts) {
            result = Object(tslib_es6["a" /* __assign */])(Object(tslib_es6["a" /* __assign */])({}, result), signOpts);
        }
        var conciseScientificAndEngineeringOpts = parseConciseScientificAndEngineeringStem(token.stem);
        if (conciseScientificAndEngineeringOpts) {
            result = Object(tslib_es6["a" /* __assign */])(Object(tslib_es6["a" /* __assign */])({}, result), conciseScientificAndEngineeringOpts);
        }
    }
    return result;
}

// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/@formatjs/icu-skeleton-parser/lib/index.js



// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/@formatjs/icu-messageformat-parser/lib/time-data.generated.js
// @generated from time-data-gen.ts
// prettier-ignore
var timeData = {
    "AX": [
        "H"
    ],
    "BQ": [
        "H"
    ],
    "CP": [
        "H"
    ],
    "CZ": [
        "H"
    ],
    "DK": [
        "H"
    ],
    "FI": [
        "H"
    ],
    "ID": [
        "H"
    ],
    "IS": [
        "H"
    ],
    "ML": [
        "H"
    ],
    "NE": [
        "H"
    ],
    "RU": [
        "H"
    ],
    "SE": [
        "H"
    ],
    "SJ": [
        "H"
    ],
    "SK": [
        "H"
    ],
    "AS": [
        "h",
        "H"
    ],
    "BT": [
        "h",
        "H"
    ],
    "DJ": [
        "h",
        "H"
    ],
    "ER": [
        "h",
        "H"
    ],
    "GH": [
        "h",
        "H"
    ],
    "IN": [
        "h",
        "H"
    ],
    "LS": [
        "h",
        "H"
    ],
    "PG": [
        "h",
        "H"
    ],
    "PW": [
        "h",
        "H"
    ],
    "SO": [
        "h",
        "H"
    ],
    "TO": [
        "h",
        "H"
    ],
    "VU": [
        "h",
        "H"
    ],
    "WS": [
        "h",
        "H"
    ],
    "001": [
        "H",
        "h"
    ],
    "AL": [
        "h",
        "H",
        "hB"
    ],
    "TD": [
        "h",
        "H",
        "hB"
    ],
    "ca-ES": [
        "H",
        "h",
        "hB"
    ],
    "CF": [
        "H",
        "h",
        "hB"
    ],
    "CM": [
        "H",
        "h",
        "hB"
    ],
    "fr-CA": [
        "H",
        "h",
        "hB"
    ],
    "gl-ES": [
        "H",
        "h",
        "hB"
    ],
    "it-CH": [
        "H",
        "h",
        "hB"
    ],
    "it-IT": [
        "H",
        "h",
        "hB"
    ],
    "LU": [
        "H",
        "h",
        "hB"
    ],
    "NP": [
        "H",
        "h",
        "hB"
    ],
    "PF": [
        "H",
        "h",
        "hB"
    ],
    "SC": [
        "H",
        "h",
        "hB"
    ],
    "SM": [
        "H",
        "h",
        "hB"
    ],
    "SN": [
        "H",
        "h",
        "hB"
    ],
    "TF": [
        "H",
        "h",
        "hB"
    ],
    "VA": [
        "H",
        "h",
        "hB"
    ],
    "CY": [
        "h",
        "H",
        "hb",
        "hB"
    ],
    "GR": [
        "h",
        "H",
        "hb",
        "hB"
    ],
    "CO": [
        "h",
        "H",
        "hB",
        "hb"
    ],
    "DO": [
        "h",
        "H",
        "hB",
        "hb"
    ],
    "KP": [
        "h",
        "H",
        "hB",
        "hb"
    ],
    "KR": [
        "h",
        "H",
        "hB",
        "hb"
    ],
    "NA": [
        "h",
        "H",
        "hB",
        "hb"
    ],
    "PA": [
        "h",
        "H",
        "hB",
        "hb"
    ],
    "PR": [
        "h",
        "H",
        "hB",
        "hb"
    ],
    "VE": [
        "h",
        "H",
        "hB",
        "hb"
    ],
    "AC": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "AI": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "BW": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "BZ": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "CC": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "CK": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "CX": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "DG": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "FK": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "GB": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "GG": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "GI": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "IE": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "IM": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "IO": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "JE": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "LT": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "MK": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "MN": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "MS": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "NF": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "NG": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "NR": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "NU": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "PN": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "SH": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "SX": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "TA": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "ZA": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "af-ZA": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "AR": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "CL": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "CR": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "CU": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "EA": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "es-BO": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "es-BR": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "es-EC": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "es-ES": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "es-GQ": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "es-PE": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "GT": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "HN": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "IC": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "KG": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "KM": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "LK": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "MA": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "MX": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "NI": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "PY": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "SV": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "UY": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "JP": [
        "H",
        "h",
        "K"
    ],
    "AD": [
        "H",
        "hB"
    ],
    "AM": [
        "H",
        "hB"
    ],
    "AO": [
        "H",
        "hB"
    ],
    "AT": [
        "H",
        "hB"
    ],
    "AW": [
        "H",
        "hB"
    ],
    "BE": [
        "H",
        "hB"
    ],
    "BF": [
        "H",
        "hB"
    ],
    "BJ": [
        "H",
        "hB"
    ],
    "BL": [
        "H",
        "hB"
    ],
    "BR": [
        "H",
        "hB"
    ],
    "CG": [
        "H",
        "hB"
    ],
    "CI": [
        "H",
        "hB"
    ],
    "CV": [
        "H",
        "hB"
    ],
    "DE": [
        "H",
        "hB"
    ],
    "EE": [
        "H",
        "hB"
    ],
    "FR": [
        "H",
        "hB"
    ],
    "GA": [
        "H",
        "hB"
    ],
    "GF": [
        "H",
        "hB"
    ],
    "GN": [
        "H",
        "hB"
    ],
    "GP": [
        "H",
        "hB"
    ],
    "GW": [
        "H",
        "hB"
    ],
    "HR": [
        "H",
        "hB"
    ],
    "IL": [
        "H",
        "hB"
    ],
    "IT": [
        "H",
        "hB"
    ],
    "KZ": [
        "H",
        "hB"
    ],
    "MC": [
        "H",
        "hB"
    ],
    "MD": [
        "H",
        "hB"
    ],
    "MF": [
        "H",
        "hB"
    ],
    "MQ": [
        "H",
        "hB"
    ],
    "MZ": [
        "H",
        "hB"
    ],
    "NC": [
        "H",
        "hB"
    ],
    "NL": [
        "H",
        "hB"
    ],
    "PM": [
        "H",
        "hB"
    ],
    "PT": [
        "H",
        "hB"
    ],
    "RE": [
        "H",
        "hB"
    ],
    "RO": [
        "H",
        "hB"
    ],
    "SI": [
        "H",
        "hB"
    ],
    "SR": [
        "H",
        "hB"
    ],
    "ST": [
        "H",
        "hB"
    ],
    "TG": [
        "H",
        "hB"
    ],
    "TR": [
        "H",
        "hB"
    ],
    "WF": [
        "H",
        "hB"
    ],
    "YT": [
        "H",
        "hB"
    ],
    "BD": [
        "h",
        "hB",
        "H"
    ],
    "PK": [
        "h",
        "hB",
        "H"
    ],
    "AZ": [
        "H",
        "hB",
        "h"
    ],
    "BA": [
        "H",
        "hB",
        "h"
    ],
    "BG": [
        "H",
        "hB",
        "h"
    ],
    "CH": [
        "H",
        "hB",
        "h"
    ],
    "GE": [
        "H",
        "hB",
        "h"
    ],
    "LI": [
        "H",
        "hB",
        "h"
    ],
    "ME": [
        "H",
        "hB",
        "h"
    ],
    "RS": [
        "H",
        "hB",
        "h"
    ],
    "UA": [
        "H",
        "hB",
        "h"
    ],
    "UZ": [
        "H",
        "hB",
        "h"
    ],
    "XK": [
        "H",
        "hB",
        "h"
    ],
    "AG": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "AU": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "BB": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "BM": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "BS": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "CA": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "DM": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "en-001": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "FJ": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "FM": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "GD": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "GM": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "GU": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "GY": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "JM": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "KI": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "KN": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "KY": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "LC": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "LR": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "MH": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "MP": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "MW": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "NZ": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "SB": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "SG": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "SL": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "SS": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "SZ": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "TC": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "TT": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "UM": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "US": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "VC": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "VG": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "VI": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "ZM": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "BO": [
        "H",
        "hB",
        "h",
        "hb"
    ],
    "EC": [
        "H",
        "hB",
        "h",
        "hb"
    ],
    "ES": [
        "H",
        "hB",
        "h",
        "hb"
    ],
    "GQ": [
        "H",
        "hB",
        "h",
        "hb"
    ],
    "PE": [
        "H",
        "hB",
        "h",
        "hb"
    ],
    "AE": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "ar-001": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "BH": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "DZ": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "EG": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "EH": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "HK": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "IQ": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "JO": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "KW": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "LB": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "LY": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "MO": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "MR": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "OM": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "PH": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "PS": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "QA": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "SA": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "SD": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "SY": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "TN": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "YE": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "AF": [
        "H",
        "hb",
        "hB",
        "h"
    ],
    "LA": [
        "H",
        "hb",
        "hB",
        "h"
    ],
    "CN": [
        "H",
        "hB",
        "hb",
        "h"
    ],
    "LV": [
        "H",
        "hB",
        "hb",
        "h"
    ],
    "TL": [
        "H",
        "hB",
        "hb",
        "h"
    ],
    "zu-ZA": [
        "H",
        "hB",
        "hb",
        "h"
    ],
    "CD": [
        "hB",
        "H"
    ],
    "IR": [
        "hB",
        "H"
    ],
    "hi-IN": [
        "hB",
        "h",
        "H"
    ],
    "kn-IN": [
        "hB",
        "h",
        "H"
    ],
    "ml-IN": [
        "hB",
        "h",
        "H"
    ],
    "te-IN": [
        "hB",
        "h",
        "H"
    ],
    "KH": [
        "hB",
        "h",
        "H",
        "hb"
    ],
    "ta-IN": [
        "hB",
        "h",
        "hb",
        "H"
    ],
    "BN": [
        "hb",
        "hB",
        "h",
        "H"
    ],
    "MY": [
        "hb",
        "hB",
        "h",
        "H"
    ],
    "ET": [
        "hB",
        "hb",
        "h",
        "H"
    ],
    "gu-IN": [
        "hB",
        "hb",
        "h",
        "H"
    ],
    "mr-IN": [
        "hB",
        "hb",
        "h",
        "H"
    ],
    "pa-IN": [
        "hB",
        "hb",
        "h",
        "H"
    ],
    "TW": [
        "hB",
        "hb",
        "h",
        "H"
    ],
    "KE": [
        "hB",
        "hb",
        "H",
        "h"
    ],
    "MM": [
        "hB",
        "hb",
        "H",
        "h"
    ],
    "TZ": [
        "hB",
        "hb",
        "H",
        "h"
    ],
    "UG": [
        "hB",
        "hb",
        "H",
        "h"
    ]
};

// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/@formatjs/icu-messageformat-parser/lib/date-time-pattern-generator.js

/**
 * Returns the best matching date time pattern if a date time skeleton
 * pattern is provided with a locale. Follows the Unicode specification:
 * https://www.unicode.org/reports/tr35/tr35-dates.html#table-mapping-requested-time-skeletons-to-patterns
 * @param skeleton date time skeleton pattern that possibly includes j, J or C
 * @param locale
 */
function getBestPattern(skeleton, locale) {
    var skeletonCopy = '';
    for (var patternPos = 0; patternPos < skeleton.length; patternPos++) {
        var patternChar = skeleton.charAt(patternPos);
        if (patternChar === 'j') {
            var extraLength = 0;
            while (patternPos + 1 < skeleton.length &&
                skeleton.charAt(patternPos + 1) === patternChar) {
                extraLength++;
                patternPos++;
            }
            var hourLen = 1 + (extraLength & 1);
            var dayPeriodLen = extraLength < 2 ? 1 : 3 + (extraLength >> 1);
            var dayPeriodChar = 'a';
            var hourChar = getDefaultHourSymbolFromLocale(locale);
            if (hourChar == 'H' || hourChar == 'k') {
                dayPeriodLen = 0;
            }
            while (dayPeriodLen-- > 0) {
                skeletonCopy += dayPeriodChar;
            }
            while (hourLen-- > 0) {
                skeletonCopy = hourChar + skeletonCopy;
            }
        }
        else if (patternChar === 'J') {
            skeletonCopy += 'H';
        }
        else {
            skeletonCopy += patternChar;
        }
    }
    return skeletonCopy;
}
/**
 * Maps the [hour cycle type](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/hourCycle)
 * of the given `locale` to the corresponding time pattern.
 * @param locale
 */
function getDefaultHourSymbolFromLocale(locale) {
    var hourCycle = locale.hourCycle;
    if (hourCycle === undefined &&
        // @ts-ignore hourCycle(s) is not identified yet
        locale.hourCycles &&
        // @ts-ignore
        locale.hourCycles.length) {
        // @ts-ignore
        hourCycle = locale.hourCycles[0];
    }
    if (hourCycle) {
        switch (hourCycle) {
            case 'h24':
                return 'k';
            case 'h23':
                return 'H';
            case 'h12':
                return 'h';
            case 'h11':
                return 'K';
            default:
                throw new Error('Invalid hourCycle');
        }
    }
    // TODO: Once hourCycle is fully supported remove the following with data generation
    var languageTag = locale.language;
    var regionTag;
    if (languageTag !== 'root') {
        regionTag = locale.maximize().region;
    }
    var hourCycles = timeData[regionTag || ''] ||
        timeData[languageTag || ''] ||
        timeData["".concat(languageTag, "-001")] ||
        timeData['001'];
    return hourCycles[0];
}

// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/@formatjs/icu-messageformat-parser/lib/parser.js
var parser_a;






var SPACE_SEPARATOR_START_REGEX = new RegExp("^".concat(SPACE_SEPARATOR_REGEX.source, "*"));
var SPACE_SEPARATOR_END_REGEX = new RegExp("".concat(SPACE_SEPARATOR_REGEX.source, "*$"));
function createLocation(start, end) {
    return { start: start, end: end };
}
// #region Ponyfills
// Consolidate these variables up top for easier toggling during debugging
var hasNativeStartsWith = !!String.prototype.startsWith;
var hasNativeFromCodePoint = !!String.fromCodePoint;
var hasNativeFromEntries = !!Object.fromEntries;
var hasNativeCodePointAt = !!String.prototype.codePointAt;
var hasTrimStart = !!String.prototype.trimStart;
var hasTrimEnd = !!String.prototype.trimEnd;
var hasNativeIsSafeInteger = !!Number.isSafeInteger;
var isSafeInteger = hasNativeIsSafeInteger
    ? Number.isSafeInteger
    : function (n) {
        return (typeof n === 'number' &&
            isFinite(n) &&
            Math.floor(n) === n &&
            Math.abs(n) <= 0x1fffffffffffff);
    };
// IE11 does not support y and u.
var REGEX_SUPPORTS_U_AND_Y = true;
try {
    var re = RE('([^\\p{White_Space}\\p{Pattern_Syntax}]*)', 'yu');
    /**
     * legacy Edge or Xbox One browser
     * Unicode flag support: supported
     * Pattern_Syntax support: not supported
     * See https://github.com/formatjs/formatjs/issues/2822
     */
    REGEX_SUPPORTS_U_AND_Y = ((parser_a = re.exec('a')) === null || parser_a === void 0 ? void 0 : parser_a[0]) === 'a';
}
catch (_) {
    REGEX_SUPPORTS_U_AND_Y = false;
}
var startsWith = hasNativeStartsWith
    ? // Native
        function startsWith(s, search, position) {
            return s.startsWith(search, position);
        }
    : // For IE11
        function startsWith(s, search, position) {
            return s.slice(position, position + search.length) === search;
        };
var fromCodePoint = hasNativeFromCodePoint
    ? String.fromCodePoint
    : // IE11
        function fromCodePoint() {
            var codePoints = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                codePoints[_i] = arguments[_i];
            }
            var elements = '';
            var length = codePoints.length;
            var i = 0;
            var code;
            while (length > i) {
                code = codePoints[i++];
                if (code > 0x10ffff)
                    throw RangeError(code + ' is not a valid code point');
                elements +=
                    code < 0x10000
                        ? String.fromCharCode(code)
                        : String.fromCharCode(((code -= 0x10000) >> 10) + 0xd800, (code % 0x400) + 0xdc00);
            }
            return elements;
        };
var fromEntries =
// native
hasNativeFromEntries
    ? Object.fromEntries
    : // Ponyfill
        function fromEntries(entries) {
            var obj = {};
            for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {
                var _a = entries_1[_i], k = _a[0], v = _a[1];
                obj[k] = v;
            }
            return obj;
        };
var codePointAt = hasNativeCodePointAt
    ? // Native
        function codePointAt(s, index) {
            return s.codePointAt(index);
        }
    : // IE 11
        function codePointAt(s, index) {
            var size = s.length;
            if (index < 0 || index >= size) {
                return undefined;
            }
            var first = s.charCodeAt(index);
            var second;
            return first < 0xd800 ||
                first > 0xdbff ||
                index + 1 === size ||
                (second = s.charCodeAt(index + 1)) < 0xdc00 ||
                second > 0xdfff
                ? first
                : ((first - 0xd800) << 10) + (second - 0xdc00) + 0x10000;
        };
var trimStart = hasTrimStart
    ? // Native
        function trimStart(s) {
            return s.trimStart();
        }
    : // Ponyfill
        function trimStart(s) {
            return s.replace(SPACE_SEPARATOR_START_REGEX, '');
        };
var trimEnd = hasTrimEnd
    ? // Native
        function trimEnd(s) {
            return s.trimEnd();
        }
    : // Ponyfill
        function trimEnd(s) {
            return s.replace(SPACE_SEPARATOR_END_REGEX, '');
        };
// Prevent minifier to translate new RegExp to literal form that might cause syntax error on IE11.
function RE(s, flag) {
    return new RegExp(s, flag);
}
// #endregion
var matchIdentifierAtIndex;
if (REGEX_SUPPORTS_U_AND_Y) {
    // Native
    var IDENTIFIER_PREFIX_RE_1 = RE('([^\\p{White_Space}\\p{Pattern_Syntax}]*)', 'yu');
    matchIdentifierAtIndex = function matchIdentifierAtIndex(s, index) {
        var _a;
        IDENTIFIER_PREFIX_RE_1.lastIndex = index;
        var match = IDENTIFIER_PREFIX_RE_1.exec(s);
        return (_a = match[1]) !== null && _a !== void 0 ? _a : '';
    };
}
else {
    // IE11
    matchIdentifierAtIndex = function matchIdentifierAtIndex(s, index) {
        var match = [];
        while (true) {
            var c = codePointAt(s, index);
            if (c === undefined || _isWhiteSpace(c) || _isPatternSyntax(c)) {
                break;
            }
            match.push(c);
            index += c >= 0x10000 ? 2 : 1;
        }
        return fromCodePoint.apply(void 0, match);
    };
}
var parser_Parser = /** @class */ (function () {
    function Parser(message, options) {
        if (options === void 0) { options = {}; }
        this.message = message;
        this.position = { offset: 0, line: 1, column: 1 };
        this.ignoreTag = !!options.ignoreTag;
        this.locale = options.locale;
        this.requiresOtherClause = !!options.requiresOtherClause;
        this.shouldParseSkeletons = !!options.shouldParseSkeletons;
    }
    Parser.prototype.parse = function () {
        if (this.offset() !== 0) {
            throw Error('parser can only be used once');
        }
        return this.parseMessage(0, '', false);
    };
    Parser.prototype.parseMessage = function (nestingLevel, parentArgType, expectingCloseTag) {
        var elements = [];
        while (!this.isEOF()) {
            var char = this.char();
            if (char === 123 /* `{` */) {
                var result = this.parseArgument(nestingLevel, expectingCloseTag);
                if (result.err) {
                    return result;
                }
                elements.push(result.val);
            }
            else if (char === 125 /* `}` */ && nestingLevel > 0) {
                break;
            }
            else if (char === 35 /* `#` */ &&
                (parentArgType === 'plural' || parentArgType === 'selectordinal')) {
                var position = this.clonePosition();
                this.bump();
                elements.push({
                    type: TYPE.pound,
                    location: createLocation(position, this.clonePosition()),
                });
            }
            else if (char === 60 /* `<` */ &&
                !this.ignoreTag &&
                this.peek() === 47 // char code for '/'
            ) {
                if (expectingCloseTag) {
                    break;
                }
                else {
                    return this.error(ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(this.clonePosition(), this.clonePosition()));
                }
            }
            else if (char === 60 /* `<` */ &&
                !this.ignoreTag &&
                _isAlpha(this.peek() || 0)) {
                var result = this.parseTag(nestingLevel, parentArgType);
                if (result.err) {
                    return result;
                }
                elements.push(result.val);
            }
            else {
                var result = this.parseLiteral(nestingLevel, parentArgType);
                if (result.err) {
                    return result;
                }
                elements.push(result.val);
            }
        }
        return { val: elements, err: null };
    };
    /**
     * A tag name must start with an ASCII lower/upper case letter. The grammar is based on the
     * [custom element name][] except that a dash is NOT always mandatory and uppercase letters
     * are accepted:
     *
     * ```
     * tag ::= "<" tagName (whitespace)* "/>" | "<" tagName (whitespace)* ">" message "</" tagName (whitespace)* ">"
     * tagName ::= [a-z] (PENChar)*
     * PENChar ::=
     *     "-" | "." | [0-9] | "_" | [a-z] | [A-Z] | #xB7 | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x37D] |
     *     [#x37F-#x1FFF] | [#x200C-#x200D] | [#x203F-#x2040] | [#x2070-#x218F] | [#x2C00-#x2FEF] |
     *     [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]
     * ```
     *
     * [custom element name]: https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name
     * NOTE: We're a bit more lax here since HTML technically does not allow uppercase HTML element but we do
     * since other tag-based engines like React allow it
     */
    Parser.prototype.parseTag = function (nestingLevel, parentArgType) {
        var startPosition = this.clonePosition();
        this.bump(); // `<`
        var tagName = this.parseTagName();
        this.bumpSpace();
        if (this.bumpIf('/>')) {
            // Self closing tag
            return {
                val: {
                    type: TYPE.literal,
                    value: "<".concat(tagName, "/>"),
                    location: createLocation(startPosition, this.clonePosition()),
                },
                err: null,
            };
        }
        else if (this.bumpIf('>')) {
            var childrenResult = this.parseMessage(nestingLevel + 1, parentArgType, true);
            if (childrenResult.err) {
                return childrenResult;
            }
            var children = childrenResult.val;
            // Expecting a close tag
            var endTagStartPosition = this.clonePosition();
            if (this.bumpIf('</')) {
                if (this.isEOF() || !_isAlpha(this.char())) {
                    return this.error(ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));
                }
                var closingTagNameStartPosition = this.clonePosition();
                var closingTagName = this.parseTagName();
                if (tagName !== closingTagName) {
                    return this.error(ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(closingTagNameStartPosition, this.clonePosition()));
                }
                this.bumpSpace();
                if (!this.bumpIf('>')) {
                    return this.error(ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));
                }
                return {
                    val: {
                        type: TYPE.tag,
                        value: tagName,
                        children: children,
                        location: createLocation(startPosition, this.clonePosition()),
                    },
                    err: null,
                };
            }
            else {
                return this.error(ErrorKind.UNCLOSED_TAG, createLocation(startPosition, this.clonePosition()));
            }
        }
        else {
            return this.error(ErrorKind.INVALID_TAG, createLocation(startPosition, this.clonePosition()));
        }
    };
    /**
     * This method assumes that the caller has peeked ahead for the first tag character.
     */
    Parser.prototype.parseTagName = function () {
        var startOffset = this.offset();
        this.bump(); // the first tag name character
        while (!this.isEOF() && _isPotentialElementNameChar(this.char())) {
            this.bump();
        }
        return this.message.slice(startOffset, this.offset());
    };
    Parser.prototype.parseLiteral = function (nestingLevel, parentArgType) {
        var start = this.clonePosition();
        var value = '';
        while (true) {
            var parseQuoteResult = this.tryParseQuote(parentArgType);
            if (parseQuoteResult) {
                value += parseQuoteResult;
                continue;
            }
            var parseUnquotedResult = this.tryParseUnquoted(nestingLevel, parentArgType);
            if (parseUnquotedResult) {
                value += parseUnquotedResult;
                continue;
            }
            var parseLeftAngleResult = this.tryParseLeftAngleBracket();
            if (parseLeftAngleResult) {
                value += parseLeftAngleResult;
                continue;
            }
            break;
        }
        var location = createLocation(start, this.clonePosition());
        return {
            val: { type: TYPE.literal, value: value, location: location },
            err: null,
        };
    };
    Parser.prototype.tryParseLeftAngleBracket = function () {
        if (!this.isEOF() &&
            this.char() === 60 /* `<` */ &&
            (this.ignoreTag ||
                // If at the opening tag or closing tag position, bail.
                !_isAlphaOrSlash(this.peek() || 0))) {
            this.bump(); // `<`
            return '<';
        }
        return null;
    };
    /**
     * Starting with ICU 4.8, an ASCII apostrophe only starts quoted text if it immediately precedes
     * a character that requires quoting (that is, "only where needed"), and works the same in
     * nested messages as on the top level of the pattern. The new behavior is otherwise compatible.
     */
    Parser.prototype.tryParseQuote = function (parentArgType) {
        if (this.isEOF() || this.char() !== 39 /* `'` */) {
            return null;
        }
        // Parse escaped char following the apostrophe, or early return if there is no escaped char.
        // Check if is valid escaped character
        switch (this.peek()) {
            case 39 /* `'` */:
                // double quote, should return as a single quote.
                this.bump();
                this.bump();
                return "'";
            // '{', '<', '>', '}'
            case 123:
            case 60:
            case 62:
            case 125:
                break;
            case 35: // '#'
                if (parentArgType === 'plural' || parentArgType === 'selectordinal') {
                    break;
                }
                return null;
            default:
                return null;
        }
        this.bump(); // apostrophe
        var codePoints = [this.char()]; // escaped char
        this.bump();
        // read chars until the optional closing apostrophe is found
        while (!this.isEOF()) {
            var ch = this.char();
            if (ch === 39 /* `'` */) {
                if (this.peek() === 39 /* `'` */) {
                    codePoints.push(39);
                    // Bump one more time because we need to skip 2 characters.
                    this.bump();
                }
                else {
                    // Optional closing apostrophe.
                    this.bump();
                    break;
                }
            }
            else {
                codePoints.push(ch);
            }
            this.bump();
        }
        return fromCodePoint.apply(void 0, codePoints);
    };
    Parser.prototype.tryParseUnquoted = function (nestingLevel, parentArgType) {
        if (this.isEOF()) {
            return null;
        }
        var ch = this.char();
        if (ch === 60 /* `<` */ ||
            ch === 123 /* `{` */ ||
            (ch === 35 /* `#` */ &&
                (parentArgType === 'plural' || parentArgType === 'selectordinal')) ||
            (ch === 125 /* `}` */ && nestingLevel > 0)) {
            return null;
        }
        else {
            this.bump();
            return fromCodePoint(ch);
        }
    };
    Parser.prototype.parseArgument = function (nestingLevel, expectingCloseTag) {
        var openingBracePosition = this.clonePosition();
        this.bump(); // `{`
        this.bumpSpace();
        if (this.isEOF()) {
            return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
        }
        if (this.char() === 125 /* `}` */) {
            this.bump();
            return this.error(ErrorKind.EMPTY_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
        }
        // argument name
        var value = this.parseIdentifierIfPossible().value;
        if (!value) {
            return this.error(ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
        }
        this.bumpSpace();
        if (this.isEOF()) {
            return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
        }
        switch (this.char()) {
            // Simple argument: `{name}`
            case 125 /* `}` */: {
                this.bump(); // `}`
                return {
                    val: {
                        type: TYPE.argument,
                        // value does not include the opening and closing braces.
                        value: value,
                        location: createLocation(openingBracePosition, this.clonePosition()),
                    },
                    err: null,
                };
            }
            // Argument with options: `{name, format, ...}`
            case 44 /* `,` */: {
                this.bump(); // `,`
                this.bumpSpace();
                if (this.isEOF()) {
                    return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
                }
                return this.parseArgumentOptions(nestingLevel, expectingCloseTag, value, openingBracePosition);
            }
            default:
                return this.error(ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
        }
    };
    /**
     * Advance the parser until the end of the identifier, if it is currently on
     * an identifier character. Return an empty string otherwise.
     */
    Parser.prototype.parseIdentifierIfPossible = function () {
        var startingPosition = this.clonePosition();
        var startOffset = this.offset();
        var value = matchIdentifierAtIndex(this.message, startOffset);
        var endOffset = startOffset + value.length;
        this.bumpTo(endOffset);
        var endPosition = this.clonePosition();
        var location = createLocation(startingPosition, endPosition);
        return { value: value, location: location };
    };
    Parser.prototype.parseArgumentOptions = function (nestingLevel, expectingCloseTag, value, openingBracePosition) {
        var _a;
        // Parse this range:
        // {name, type, style}
        //        ^---^
        var typeStartPosition = this.clonePosition();
        var argType = this.parseIdentifierIfPossible().value;
        var typeEndPosition = this.clonePosition();
        switch (argType) {
            case '':
                // Expecting a style string number, date, time, plural, selectordinal, or select.
                return this.error(ErrorKind.EXPECT_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));
            case 'number':
            case 'date':
            case 'time': {
                // Parse this range:
                // {name, number, style}
                //              ^-------^
                this.bumpSpace();
                var styleAndLocation = null;
                if (this.bumpIf(',')) {
                    this.bumpSpace();
                    var styleStartPosition = this.clonePosition();
                    var result = this.parseSimpleArgStyleIfPossible();
                    if (result.err) {
                        return result;
                    }
                    var style = trimEnd(result.val);
                    if (style.length === 0) {
                        return this.error(ErrorKind.EXPECT_ARGUMENT_STYLE, createLocation(this.clonePosition(), this.clonePosition()));
                    }
                    var styleLocation = createLocation(styleStartPosition, this.clonePosition());
                    styleAndLocation = { style: style, styleLocation: styleLocation };
                }
                var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
                if (argCloseResult.err) {
                    return argCloseResult;
                }
                var location_1 = createLocation(openingBracePosition, this.clonePosition());
                // Extract style or skeleton
                if (styleAndLocation && startsWith(styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style, '::', 0)) {
                    // Skeleton starts with `::`.
                    var skeleton = trimStart(styleAndLocation.style.slice(2));
                    if (argType === 'number') {
                        var result = this.parseNumberSkeletonFromString(skeleton, styleAndLocation.styleLocation);
                        if (result.err) {
                            return result;
                        }
                        return {
                            val: { type: TYPE.number, value: value, location: location_1, style: result.val },
                            err: null,
                        };
                    }
                    else {
                        if (skeleton.length === 0) {
                            return this.error(ErrorKind.EXPECT_DATE_TIME_SKELETON, location_1);
                        }
                        var dateTimePattern = skeleton;
                        // Get "best match" pattern only if locale is passed, if not, let it
                        // pass as-is where `parseDateTimeSkeleton()` will throw an error
                        // for unsupported patterns.
                        if (this.locale) {
                            dateTimePattern = getBestPattern(skeleton, this.locale);
                        }
                        var style = {
                            type: SKELETON_TYPE.dateTime,
                            pattern: dateTimePattern,
                            location: styleAndLocation.styleLocation,
                            parsedOptions: this.shouldParseSkeletons
                                ? parseDateTimeSkeleton(dateTimePattern)
                                : {},
                        };
                        var type = argType === 'date' ? TYPE.date : TYPE.time;
                        return {
                            val: { type: type, value: value, location: location_1, style: style },
                            err: null,
                        };
                    }
                }
                // Regular style or no style.
                return {
                    val: {
                        type: argType === 'number'
                            ? TYPE.number
                            : argType === 'date'
                                ? TYPE.date
                                : TYPE.time,
                        value: value,
                        location: location_1,
                        style: (_a = styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style) !== null && _a !== void 0 ? _a : null,
                    },
                    err: null,
                };
            }
            case 'plural':
            case 'selectordinal':
            case 'select': {
                // Parse this range:
                // {name, plural, options}
                //              ^---------^
                var typeEndPosition_1 = this.clonePosition();
                this.bumpSpace();
                if (!this.bumpIf(',')) {
                    return this.error(ErrorKind.EXPECT_SELECT_ARGUMENT_OPTIONS, createLocation(typeEndPosition_1, Object(tslib_es6["a" /* __assign */])({}, typeEndPosition_1)));
                }
                this.bumpSpace();
                // Parse offset:
                // {name, plural, offset:1, options}
                //                ^-----^
                //
                // or the first option:
                //
                // {name, plural, one {...} other {...}}
                //                ^--^
                var identifierAndLocation = this.parseIdentifierIfPossible();
                var pluralOffset = 0;
                if (argType !== 'select' && identifierAndLocation.value === 'offset') {
                    if (!this.bumpIf(':')) {
                        return this.error(ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, createLocation(this.clonePosition(), this.clonePosition()));
                    }
                    this.bumpSpace();
                    var result = this.tryParseDecimalInteger(ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, ErrorKind.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE);
                    if (result.err) {
                        return result;
                    }
                    // Parse another identifier for option parsing
                    this.bumpSpace();
                    identifierAndLocation = this.parseIdentifierIfPossible();
                    pluralOffset = result.val;
                }
                var optionsResult = this.tryParsePluralOrSelectOptions(nestingLevel, argType, expectingCloseTag, identifierAndLocation);
                if (optionsResult.err) {
                    return optionsResult;
                }
                var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
                if (argCloseResult.err) {
                    return argCloseResult;
                }
                var location_2 = createLocation(openingBracePosition, this.clonePosition());
                if (argType === 'select') {
                    return {
                        val: {
                            type: TYPE.select,
                            value: value,
                            options: fromEntries(optionsResult.val),
                            location: location_2,
                        },
                        err: null,
                    };
                }
                else {
                    return {
                        val: {
                            type: TYPE.plural,
                            value: value,
                            options: fromEntries(optionsResult.val),
                            offset: pluralOffset,
                            pluralType: argType === 'plural' ? 'cardinal' : 'ordinal',
                            location: location_2,
                        },
                        err: null,
                    };
                }
            }
            default:
                return this.error(ErrorKind.INVALID_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));
        }
    };
    Parser.prototype.tryParseArgumentClose = function (openingBracePosition) {
        // Parse: {value, number, ::currency/GBP }
        //
        if (this.isEOF() || this.char() !== 125 /* `}` */) {
            return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
        }
        this.bump(); // `}`
        return { val: true, err: null };
    };
    /**
     * See: https://github.com/unicode-org/icu/blob/af7ed1f6d2298013dc303628438ec4abe1f16479/icu4c/source/common/messagepattern.cpp#L659
     */
    Parser.prototype.parseSimpleArgStyleIfPossible = function () {
        var nestedBraces = 0;
        var startPosition = this.clonePosition();
        while (!this.isEOF()) {
            var ch = this.char();
            switch (ch) {
                case 39 /* `'` */: {
                    // Treat apostrophe as quoting but include it in the style part.
                    // Find the end of the quoted literal text.
                    this.bump();
                    var apostrophePosition = this.clonePosition();
                    if (!this.bumpUntil("'")) {
                        return this.error(ErrorKind.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE, createLocation(apostrophePosition, this.clonePosition()));
                    }
                    this.bump();
                    break;
                }
                case 123 /* `{` */: {
                    nestedBraces += 1;
                    this.bump();
                    break;
                }
                case 125 /* `}` */: {
                    if (nestedBraces > 0) {
                        nestedBraces -= 1;
                    }
                    else {
                        return {
                            val: this.message.slice(startPosition.offset, this.offset()),
                            err: null,
                        };
                    }
                    break;
                }
                default:
                    this.bump();
                    break;
            }
        }
        return {
            val: this.message.slice(startPosition.offset, this.offset()),
            err: null,
        };
    };
    Parser.prototype.parseNumberSkeletonFromString = function (skeleton, location) {
        var tokens = [];
        try {
            tokens = parseNumberSkeletonFromString(skeleton);
        }
        catch (e) {
            return this.error(ErrorKind.INVALID_NUMBER_SKELETON, location);
        }
        return {
            val: {
                type: SKELETON_TYPE.number,
                tokens: tokens,
                location: location,
                parsedOptions: this.shouldParseSkeletons
                    ? parseNumberSkeleton(tokens)
                    : {},
            },
            err: null,
        };
    };
    /**
     * @param nesting_level The current nesting level of messages.
     *     This can be positive when parsing message fragment in select or plural argument options.
     * @param parent_arg_type The parent argument's type.
     * @param parsed_first_identifier If provided, this is the first identifier-like selector of
     *     the argument. It is a by-product of a previous parsing attempt.
     * @param expecting_close_tag If true, this message is directly or indirectly nested inside
     *     between a pair of opening and closing tags. The nested message will not parse beyond
     *     the closing tag boundary.
     */
    Parser.prototype.tryParsePluralOrSelectOptions = function (nestingLevel, parentArgType, expectCloseTag, parsedFirstIdentifier) {
        var _a;
        var hasOtherClause = false;
        var options = [];
        var parsedSelectors = new Set();
        var selector = parsedFirstIdentifier.value, selectorLocation = parsedFirstIdentifier.location;
        // Parse:
        // one {one apple}
        // ^--^
        while (true) {
            if (selector.length === 0) {
                var startPosition = this.clonePosition();
                if (parentArgType !== 'select' && this.bumpIf('=')) {
                    // Try parse `={number}` selector
                    var result = this.tryParseDecimalInteger(ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, ErrorKind.INVALID_PLURAL_ARGUMENT_SELECTOR);
                    if (result.err) {
                        return result;
                    }
                    selectorLocation = createLocation(startPosition, this.clonePosition());
                    selector = this.message.slice(startPosition.offset, this.offset());
                }
                else {
                    break;
                }
            }
            // Duplicate selector clauses
            if (parsedSelectors.has(selector)) {
                return this.error(parentArgType === 'select'
                    ? ErrorKind.DUPLICATE_SELECT_ARGUMENT_SELECTOR
                    : ErrorKind.DUPLICATE_PLURAL_ARGUMENT_SELECTOR, selectorLocation);
            }
            if (selector === 'other') {
                hasOtherClause = true;
            }
            // Parse:
            // one {one apple}
            //     ^----------^
            this.bumpSpace();
            var openingBracePosition = this.clonePosition();
            if (!this.bumpIf('{')) {
                return this.error(parentArgType === 'select'
                    ? ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT
                    : ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT, createLocation(this.clonePosition(), this.clonePosition()));
            }
            var fragmentResult = this.parseMessage(nestingLevel + 1, parentArgType, expectCloseTag);
            if (fragmentResult.err) {
                return fragmentResult;
            }
            var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
            if (argCloseResult.err) {
                return argCloseResult;
            }
            options.push([
                selector,
                {
                    value: fragmentResult.val,
                    location: createLocation(openingBracePosition, this.clonePosition()),
                },
            ]);
            // Keep track of the existing selectors
            parsedSelectors.add(selector);
            // Prep next selector clause.
            this.bumpSpace();
            (_a = this.parseIdentifierIfPossible(), selector = _a.value, selectorLocation = _a.location);
        }
        if (options.length === 0) {
            return this.error(parentArgType === 'select'
                ? ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR
                : ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, createLocation(this.clonePosition(), this.clonePosition()));
        }
        if (this.requiresOtherClause && !hasOtherClause) {
            return this.error(ErrorKind.MISSING_OTHER_CLAUSE, createLocation(this.clonePosition(), this.clonePosition()));
        }
        return { val: options, err: null };
    };
    Parser.prototype.tryParseDecimalInteger = function (expectNumberError, invalidNumberError) {
        var sign = 1;
        var startingPosition = this.clonePosition();
        if (this.bumpIf('+')) {
        }
        else if (this.bumpIf('-')) {
            sign = -1;
        }
        var hasDigits = false;
        var decimal = 0;
        while (!this.isEOF()) {
            var ch = this.char();
            if (ch >= 48 /* `0` */ && ch <= 57 /* `9` */) {
                hasDigits = true;
                decimal = decimal * 10 + (ch - 48);
                this.bump();
            }
            else {
                break;
            }
        }
        var location = createLocation(startingPosition, this.clonePosition());
        if (!hasDigits) {
            return this.error(expectNumberError, location);
        }
        decimal *= sign;
        if (!isSafeInteger(decimal)) {
            return this.error(invalidNumberError, location);
        }
        return { val: decimal, err: null };
    };
    Parser.prototype.offset = function () {
        return this.position.offset;
    };
    Parser.prototype.isEOF = function () {
        return this.offset() === this.message.length;
    };
    Parser.prototype.clonePosition = function () {
        // This is much faster than `Object.assign` or spread.
        return {
            offset: this.position.offset,
            line: this.position.line,
            column: this.position.column,
        };
    };
    /**
     * Return the code point at the current position of the parser.
     * Throws if the index is out of bound.
     */
    Parser.prototype.char = function () {
        var offset = this.position.offset;
        if (offset >= this.message.length) {
            throw Error('out of bound');
        }
        var code = codePointAt(this.message, offset);
        if (code === undefined) {
            throw Error("Offset ".concat(offset, " is at invalid UTF-16 code unit boundary"));
        }
        return code;
    };
    Parser.prototype.error = function (kind, location) {
        return {
            val: null,
            err: {
                kind: kind,
                message: this.message,
                location: location,
            },
        };
    };
    /** Bump the parser to the next UTF-16 code unit. */
    Parser.prototype.bump = function () {
        if (this.isEOF()) {
            return;
        }
        var code = this.char();
        if (code === 10 /* '\n' */) {
            this.position.line += 1;
            this.position.column = 1;
            this.position.offset += 1;
        }
        else {
            this.position.column += 1;
            // 0 ~ 0x10000 -> unicode BMP, otherwise skip the surrogate pair.
            this.position.offset += code < 0x10000 ? 1 : 2;
        }
    };
    /**
     * If the substring starting at the current position of the parser has
     * the given prefix, then bump the parser to the character immediately
     * following the prefix and return true. Otherwise, don't bump the parser
     * and return false.
     */
    Parser.prototype.bumpIf = function (prefix) {
        if (startsWith(this.message, prefix, this.offset())) {
            for (var i = 0; i < prefix.length; i++) {
                this.bump();
            }
            return true;
        }
        return false;
    };
    /**
     * Bump the parser until the pattern character is found and return `true`.
     * Otherwise bump to the end of the file and return `false`.
     */
    Parser.prototype.bumpUntil = function (pattern) {
        var currentOffset = this.offset();
        var index = this.message.indexOf(pattern, currentOffset);
        if (index >= 0) {
            this.bumpTo(index);
            return true;
        }
        else {
            this.bumpTo(this.message.length);
            return false;
        }
    };
    /**
     * Bump the parser to the target offset.
     * If target offset is beyond the end of the input, bump the parser to the end of the input.
     */
    Parser.prototype.bumpTo = function (targetOffset) {
        if (this.offset() > targetOffset) {
            throw Error("targetOffset ".concat(targetOffset, " must be greater than or equal to the current offset ").concat(this.offset()));
        }
        targetOffset = Math.min(targetOffset, this.message.length);
        while (true) {
            var offset = this.offset();
            if (offset === targetOffset) {
                break;
            }
            if (offset > targetOffset) {
                throw Error("targetOffset ".concat(targetOffset, " is at invalid UTF-16 code unit boundary"));
            }
            this.bump();
            if (this.isEOF()) {
                break;
            }
        }
    };
    /** advance the parser through all whitespace to the next non-whitespace code unit. */
    Parser.prototype.bumpSpace = function () {
        while (!this.isEOF() && _isWhiteSpace(this.char())) {
            this.bump();
        }
    };
    /**
     * Peek at the *next* Unicode codepoint in the input without advancing the parser.
     * If the input has been exhausted, then this returns null.
     */
    Parser.prototype.peek = function () {
        if (this.isEOF()) {
            return null;
        }
        var code = this.char();
        var offset = this.offset();
        var nextCode = this.message.charCodeAt(offset + (code >= 0x10000 ? 2 : 1));
        return nextCode !== null && nextCode !== void 0 ? nextCode : null;
    };
    return Parser;
}());

/**
 * This check if codepoint is alphabet (lower & uppercase)
 * @param codepoint
 * @returns
 */
function _isAlpha(codepoint) {
    return ((codepoint >= 97 && codepoint <= 122) ||
        (codepoint >= 65 && codepoint <= 90));
}
function _isAlphaOrSlash(codepoint) {
    return _isAlpha(codepoint) || codepoint === 47; /* '/' */
}
/** See `parseTag` function docs. */
function _isPotentialElementNameChar(c) {
    return (c === 45 /* '-' */ ||
        c === 46 /* '.' */ ||
        (c >= 48 && c <= 57) /* 0..9 */ ||
        c === 95 /* '_' */ ||
        (c >= 97 && c <= 122) /** a..z */ ||
        (c >= 65 && c <= 90) /* A..Z */ ||
        c == 0xb7 ||
        (c >= 0xc0 && c <= 0xd6) ||
        (c >= 0xd8 && c <= 0xf6) ||
        (c >= 0xf8 && c <= 0x37d) ||
        (c >= 0x37f && c <= 0x1fff) ||
        (c >= 0x200c && c <= 0x200d) ||
        (c >= 0x203f && c <= 0x2040) ||
        (c >= 0x2070 && c <= 0x218f) ||
        (c >= 0x2c00 && c <= 0x2fef) ||
        (c >= 0x3001 && c <= 0xd7ff) ||
        (c >= 0xf900 && c <= 0xfdcf) ||
        (c >= 0xfdf0 && c <= 0xfffd) ||
        (c >= 0x10000 && c <= 0xeffff));
}
/**
 * Code point equivalent of regex `\p{White_Space}`.
 * From: https://www.unicode.org/Public/UCD/latest/ucd/PropList.txt
 */
function _isWhiteSpace(c) {
    return ((c >= 0x0009 && c <= 0x000d) ||
        c === 0x0020 ||
        c === 0x0085 ||
        (c >= 0x200e && c <= 0x200f) ||
        c === 0x2028 ||
        c === 0x2029);
}
/**
 * Code point equivalent of regex `\p{Pattern_Syntax}`.
 * See https://www.unicode.org/Public/UCD/latest/ucd/PropList.txt
 */
function _isPatternSyntax(c) {
    return ((c >= 0x0021 && c <= 0x0023) ||
        c === 0x0024 ||
        (c >= 0x0025 && c <= 0x0027) ||
        c === 0x0028 ||
        c === 0x0029 ||
        c === 0x002a ||
        c === 0x002b ||
        c === 0x002c ||
        c === 0x002d ||
        (c >= 0x002e && c <= 0x002f) ||
        (c >= 0x003a && c <= 0x003b) ||
        (c >= 0x003c && c <= 0x003e) ||
        (c >= 0x003f && c <= 0x0040) ||
        c === 0x005b ||
        c === 0x005c ||
        c === 0x005d ||
        c === 0x005e ||
        c === 0x0060 ||
        c === 0x007b ||
        c === 0x007c ||
        c === 0x007d ||
        c === 0x007e ||
        c === 0x00a1 ||
        (c >= 0x00a2 && c <= 0x00a5) ||
        c === 0x00a6 ||
        c === 0x00a7 ||
        c === 0x00a9 ||
        c === 0x00ab ||
        c === 0x00ac ||
        c === 0x00ae ||
        c === 0x00b0 ||
        c === 0x00b1 ||
        c === 0x00b6 ||
        c === 0x00bb ||
        c === 0x00bf ||
        c === 0x00d7 ||
        c === 0x00f7 ||
        (c >= 0x2010 && c <= 0x2015) ||
        (c >= 0x2016 && c <= 0x2017) ||
        c === 0x2018 ||
        c === 0x2019 ||
        c === 0x201a ||
        (c >= 0x201b && c <= 0x201c) ||
        c === 0x201d ||
        c === 0x201e ||
        c === 0x201f ||
        (c >= 0x2020 && c <= 0x2027) ||
        (c >= 0x2030 && c <= 0x2038) ||
        c === 0x2039 ||
        c === 0x203a ||
        (c >= 0x203b && c <= 0x203e) ||
        (c >= 0x2041 && c <= 0x2043) ||
        c === 0x2044 ||
        c === 0x2045 ||
        c === 0x2046 ||
        (c >= 0x2047 && c <= 0x2051) ||
        c === 0x2052 ||
        c === 0x2053 ||
        (c >= 0x2055 && c <= 0x205e) ||
        (c >= 0x2190 && c <= 0x2194) ||
        (c >= 0x2195 && c <= 0x2199) ||
        (c >= 0x219a && c <= 0x219b) ||
        (c >= 0x219c && c <= 0x219f) ||
        c === 0x21a0 ||
        (c >= 0x21a1 && c <= 0x21a2) ||
        c === 0x21a3 ||
        (c >= 0x21a4 && c <= 0x21a5) ||
        c === 0x21a6 ||
        (c >= 0x21a7 && c <= 0x21ad) ||
        c === 0x21ae ||
        (c >= 0x21af && c <= 0x21cd) ||
        (c >= 0x21ce && c <= 0x21cf) ||
        (c >= 0x21d0 && c <= 0x21d1) ||
        c === 0x21d2 ||
        c === 0x21d3 ||
        c === 0x21d4 ||
        (c >= 0x21d5 && c <= 0x21f3) ||
        (c >= 0x21f4 && c <= 0x22ff) ||
        (c >= 0x2300 && c <= 0x2307) ||
        c === 0x2308 ||
        c === 0x2309 ||
        c === 0x230a ||
        c === 0x230b ||
        (c >= 0x230c && c <= 0x231f) ||
        (c >= 0x2320 && c <= 0x2321) ||
        (c >= 0x2322 && c <= 0x2328) ||
        c === 0x2329 ||
        c === 0x232a ||
        (c >= 0x232b && c <= 0x237b) ||
        c === 0x237c ||
        (c >= 0x237d && c <= 0x239a) ||
        (c >= 0x239b && c <= 0x23b3) ||
        (c >= 0x23b4 && c <= 0x23db) ||
        (c >= 0x23dc && c <= 0x23e1) ||
        (c >= 0x23e2 && c <= 0x2426) ||
        (c >= 0x2427 && c <= 0x243f) ||
        (c >= 0x2440 && c <= 0x244a) ||
        (c >= 0x244b && c <= 0x245f) ||
        (c >= 0x2500 && c <= 0x25b6) ||
        c === 0x25b7 ||
        (c >= 0x25b8 && c <= 0x25c0) ||
        c === 0x25c1 ||
        (c >= 0x25c2 && c <= 0x25f7) ||
        (c >= 0x25f8 && c <= 0x25ff) ||
        (c >= 0x2600 && c <= 0x266e) ||
        c === 0x266f ||
        (c >= 0x2670 && c <= 0x2767) ||
        c === 0x2768 ||
        c === 0x2769 ||
        c === 0x276a ||
        c === 0x276b ||
        c === 0x276c ||
        c === 0x276d ||
        c === 0x276e ||
        c === 0x276f ||
        c === 0x2770 ||
        c === 0x2771 ||
        c === 0x2772 ||
        c === 0x2773 ||
        c === 0x2774 ||
        c === 0x2775 ||
        (c >= 0x2794 && c <= 0x27bf) ||
        (c >= 0x27c0 && c <= 0x27c4) ||
        c === 0x27c5 ||
        c === 0x27c6 ||
        (c >= 0x27c7 && c <= 0x27e5) ||
        c === 0x27e6 ||
        c === 0x27e7 ||
        c === 0x27e8 ||
        c === 0x27e9 ||
        c === 0x27ea ||
        c === 0x27eb ||
        c === 0x27ec ||
        c === 0x27ed ||
        c === 0x27ee ||
        c === 0x27ef ||
        (c >= 0x27f0 && c <= 0x27ff) ||
        (c >= 0x2800 && c <= 0x28ff) ||
        (c >= 0x2900 && c <= 0x2982) ||
        c === 0x2983 ||
        c === 0x2984 ||
        c === 0x2985 ||
        c === 0x2986 ||
        c === 0x2987 ||
        c === 0x2988 ||
        c === 0x2989 ||
        c === 0x298a ||
        c === 0x298b ||
        c === 0x298c ||
        c === 0x298d ||
        c === 0x298e ||
        c === 0x298f ||
        c === 0x2990 ||
        c === 0x2991 ||
        c === 0x2992 ||
        c === 0x2993 ||
        c === 0x2994 ||
        c === 0x2995 ||
        c === 0x2996 ||
        c === 0x2997 ||
        c === 0x2998 ||
        (c >= 0x2999 && c <= 0x29d7) ||
        c === 0x29d8 ||
        c === 0x29d9 ||
        c === 0x29da ||
        c === 0x29db ||
        (c >= 0x29dc && c <= 0x29fb) ||
        c === 0x29fc ||
        c === 0x29fd ||
        (c >= 0x29fe && c <= 0x2aff) ||
        (c >= 0x2b00 && c <= 0x2b2f) ||
        (c >= 0x2b30 && c <= 0x2b44) ||
        (c >= 0x2b45 && c <= 0x2b46) ||
        (c >= 0x2b47 && c <= 0x2b4c) ||
        (c >= 0x2b4d && c <= 0x2b73) ||
        (c >= 0x2b74 && c <= 0x2b75) ||
        (c >= 0x2b76 && c <= 0x2b95) ||
        c === 0x2b96 ||
        (c >= 0x2b97 && c <= 0x2bff) ||
        (c >= 0x2e00 && c <= 0x2e01) ||
        c === 0x2e02 ||
        c === 0x2e03 ||
        c === 0x2e04 ||
        c === 0x2e05 ||
        (c >= 0x2e06 && c <= 0x2e08) ||
        c === 0x2e09 ||
        c === 0x2e0a ||
        c === 0x2e0b ||
        c === 0x2e0c ||
        c === 0x2e0d ||
        (c >= 0x2e0e && c <= 0x2e16) ||
        c === 0x2e17 ||
        (c >= 0x2e18 && c <= 0x2e19) ||
        c === 0x2e1a ||
        c === 0x2e1b ||
        c === 0x2e1c ||
        c === 0x2e1d ||
        (c >= 0x2e1e && c <= 0x2e1f) ||
        c === 0x2e20 ||
        c === 0x2e21 ||
        c === 0x2e22 ||
        c === 0x2e23 ||
        c === 0x2e24 ||
        c === 0x2e25 ||
        c === 0x2e26 ||
        c === 0x2e27 ||
        c === 0x2e28 ||
        c === 0x2e29 ||
        (c >= 0x2e2a && c <= 0x2e2e) ||
        c === 0x2e2f ||
        (c >= 0x2e30 && c <= 0x2e39) ||
        (c >= 0x2e3a && c <= 0x2e3b) ||
        (c >= 0x2e3c && c <= 0x2e3f) ||
        c === 0x2e40 ||
        c === 0x2e41 ||
        c === 0x2e42 ||
        (c >= 0x2e43 && c <= 0x2e4f) ||
        (c >= 0x2e50 && c <= 0x2e51) ||
        c === 0x2e52 ||
        (c >= 0x2e53 && c <= 0x2e7f) ||
        (c >= 0x3001 && c <= 0x3003) ||
        c === 0x3008 ||
        c === 0x3009 ||
        c === 0x300a ||
        c === 0x300b ||
        c === 0x300c ||
        c === 0x300d ||
        c === 0x300e ||
        c === 0x300f ||
        c === 0x3010 ||
        c === 0x3011 ||
        (c >= 0x3012 && c <= 0x3013) ||
        c === 0x3014 ||
        c === 0x3015 ||
        c === 0x3016 ||
        c === 0x3017 ||
        c === 0x3018 ||
        c === 0x3019 ||
        c === 0x301a ||
        c === 0x301b ||
        c === 0x301c ||
        c === 0x301d ||
        (c >= 0x301e && c <= 0x301f) ||
        c === 0x3020 ||
        c === 0x3030 ||
        c === 0xfd3e ||
        c === 0xfd3f ||
        (c >= 0xfe45 && c <= 0xfe46));
}

// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/@formatjs/icu-messageformat-parser/lib/index.js




function pruneLocation(els) {
    els.forEach(function (el) {
        delete el.location;
        if (isSelectElement(el) || isPluralElement(el)) {
            for (var k in el.options) {
                delete el.options[k].location;
                pruneLocation(el.options[k].value);
            }
        }
        else if (isNumberElement(el) && isNumberSkeleton(el.style)) {
            delete el.style.location;
        }
        else if ((isDateElement(el) || isTimeElement(el)) &&
            isDateTimeSkeleton(el.style)) {
            delete el.style.location;
        }
        else if (isTagElement(el)) {
            pruneLocation(el.children);
        }
    });
}
function parse(message, opts) {
    if (opts === void 0) { opts = {}; }
    opts = Object(tslib_es6["a" /* __assign */])({ shouldParseSkeletons: true, requiresOtherClause: true }, opts);
    var result = new parser_Parser(message, opts).parse();
    if (result.err) {
        var error = SyntaxError(ErrorKind[result.err.kind]);
        // @ts-expect-error Assign to error object
        error.location = result.err.location;
        // @ts-expect-error Assign to error object
        error.originalMessage = result.err.message;
        throw error;
    }
    if (!(opts === null || opts === void 0 ? void 0 : opts.captureLocation)) {
        pruneLocation(result.val);
    }
    return result.val;
}


// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/@formatjs/fast-memoize/lib/index.js
//
// Main
//
function memoize(fn, options) {
    var cache = options && options.cache ? options.cache : cacheDefault;
    var serializer = options && options.serializer ? options.serializer : serializerDefault;
    var strategy = options && options.strategy ? options.strategy : strategyDefault;
    return strategy(fn, {
        cache: cache,
        serializer: serializer,
    });
}
//
// Strategy
//
function isPrimitive(value) {
    return (value == null || typeof value === 'number' || typeof value === 'boolean'); // || typeof value === "string" 'unsafe' primitive for our needs
}
function monadic(fn, cache, serializer, arg) {
    var cacheKey = isPrimitive(arg) ? arg : serializer(arg);
    var computedValue = cache.get(cacheKey);
    if (typeof computedValue === 'undefined') {
        computedValue = fn.call(this, arg);
        cache.set(cacheKey, computedValue);
    }
    return computedValue;
}
function variadic(fn, cache, serializer) {
    var args = Array.prototype.slice.call(arguments, 3);
    var cacheKey = serializer(args);
    var computedValue = cache.get(cacheKey);
    if (typeof computedValue === 'undefined') {
        computedValue = fn.apply(this, args);
        cache.set(cacheKey, computedValue);
    }
    return computedValue;
}
function assemble(fn, context, strategy, cache, serialize) {
    return strategy.bind(context, fn, cache, serialize);
}
function strategyDefault(fn, options) {
    var strategy = fn.length === 1 ? monadic : variadic;
    return assemble(fn, this, strategy, options.cache.create(), options.serializer);
}
function strategyVariadic(fn, options) {
    return assemble(fn, this, variadic, options.cache.create(), options.serializer);
}
function strategyMonadic(fn, options) {
    return assemble(fn, this, monadic, options.cache.create(), options.serializer);
}
//
// Serializer
//
var serializerDefault = function () {
    return JSON.stringify(arguments);
};
//
// Cache
//
function ObjectWithoutPrototypeCache() {
    this.cache = Object.create(null);
}
ObjectWithoutPrototypeCache.prototype.get = function (key) {
    return this.cache[key];
};
ObjectWithoutPrototypeCache.prototype.set = function (key, value) {
    this.cache[key] = value;
};
var cacheDefault = {
    create: function create() {
        // @ts-ignore
        return new ObjectWithoutPrototypeCache();
    },
};
var strategies = {
    variadic: strategyVariadic,
    monadic: strategyMonadic,
};

// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/intl-messageformat/lib/src/error.js

var ErrorCode;
(function (ErrorCode) {
    // When we have a placeholder but no value to format
    ErrorCode["MISSING_VALUE"] = "MISSING_VALUE";
    // When value supplied is invalid
    ErrorCode["INVALID_VALUE"] = "INVALID_VALUE";
    // When we need specific Intl API but it's not available
    ErrorCode["MISSING_INTL_API"] = "MISSING_INTL_API";
})(ErrorCode || (ErrorCode = {}));
var error_FormatError = /** @class */ (function (_super) {
    Object(tslib_es6["c" /* __extends */])(FormatError, _super);
    function FormatError(msg, code, originalMessage) {
        var _this = _super.call(this, msg) || this;
        _this.code = code;
        _this.originalMessage = originalMessage;
        return _this;
    }
    FormatError.prototype.toString = function () {
        return "[formatjs Error: ".concat(this.code, "] ").concat(this.message);
    };
    return FormatError;
}(Error));

var error_InvalidValueError = /** @class */ (function (_super) {
    Object(tslib_es6["c" /* __extends */])(InvalidValueError, _super);
    function InvalidValueError(variableId, value, options, originalMessage) {
        return _super.call(this, "Invalid values for \"".concat(variableId, "\": \"").concat(value, "\". Options are \"").concat(Object.keys(options).join('", "'), "\""), ErrorCode.INVALID_VALUE, originalMessage) || this;
    }
    return InvalidValueError;
}(error_FormatError));

var error_InvalidValueTypeError = /** @class */ (function (_super) {
    Object(tslib_es6["c" /* __extends */])(InvalidValueTypeError, _super);
    function InvalidValueTypeError(value, type, originalMessage) {
        return _super.call(this, "Value for \"".concat(value, "\" must be of type ").concat(type), ErrorCode.INVALID_VALUE, originalMessage) || this;
    }
    return InvalidValueTypeError;
}(error_FormatError));

var error_MissingValueError = /** @class */ (function (_super) {
    Object(tslib_es6["c" /* __extends */])(MissingValueError, _super);
    function MissingValueError(variableId, originalMessage) {
        return _super.call(this, "The intl string context variable \"".concat(variableId, "\" was not provided to the string \"").concat(originalMessage, "\""), ErrorCode.MISSING_VALUE, originalMessage) || this;
    }
    return MissingValueError;
}(error_FormatError));


// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/intl-messageformat/lib/src/formatters.js


var PART_TYPE;
(function (PART_TYPE) {
    PART_TYPE[PART_TYPE["literal"] = 0] = "literal";
    PART_TYPE[PART_TYPE["object"] = 1] = "object";
})(PART_TYPE || (PART_TYPE = {}));
function mergeLiteral(parts) {
    if (parts.length < 2) {
        return parts;
    }
    return parts.reduce(function (all, part) {
        var lastPart = all[all.length - 1];
        if (!lastPart ||
            lastPart.type !== PART_TYPE.literal ||
            part.type !== PART_TYPE.literal) {
            all.push(part);
        }
        else {
            lastPart.value += part.value;
        }
        return all;
    }, []);
}
function isFormatXMLElementFn(el) {
    return typeof el === 'function';
}
// TODO(skeleton): add skeleton support
function formatToParts(els, locales, formatters, formats, values, currentPluralValue,
// For debugging
originalMessage) {
    // Hot path for straight simple msg translations
    if (els.length === 1 && isLiteralElement(els[0])) {
        return [
            {
                type: PART_TYPE.literal,
                value: els[0].value,
            },
        ];
    }
    var result = [];
    for (var _i = 0, els_1 = els; _i < els_1.length; _i++) {
        var el = els_1[_i];
        // Exit early for string parts.
        if (isLiteralElement(el)) {
            result.push({
                type: PART_TYPE.literal,
                value: el.value,
            });
            continue;
        }
        // TODO: should this part be literal type?
        // Replace `#` in plural rules with the actual numeric value.
        if (isPoundElement(el)) {
            if (typeof currentPluralValue === 'number') {
                result.push({
                    type: PART_TYPE.literal,
                    value: formatters.getNumberFormat(locales).format(currentPluralValue),
                });
            }
            continue;
        }
        var varName = el.value;
        // Enforce that all required values are provided by the caller.
        if (!(values && varName in values)) {
            throw new error_MissingValueError(varName, originalMessage);
        }
        var value = values[varName];
        if (isArgumentElement(el)) {
            if (!value || typeof value === 'string' || typeof value === 'number') {
                value =
                    typeof value === 'string' || typeof value === 'number'
                        ? String(value)
                        : '';
            }
            result.push({
                type: typeof value === 'string' ? PART_TYPE.literal : PART_TYPE.object,
                value: value,
            });
            continue;
        }
        // Recursively format plural and select parts' option — which can be a
        // nested pattern structure. The choosing of the option to use is
        // abstracted-by and delegated-to the part helper object.
        if (isDateElement(el)) {
            var style = typeof el.style === 'string'
                ? formats.date[el.style]
                : isDateTimeSkeleton(el.style)
                    ? el.style.parsedOptions
                    : undefined;
            result.push({
                type: PART_TYPE.literal,
                value: formatters
                    .getDateTimeFormat(locales, style)
                    .format(value),
            });
            continue;
        }
        if (isTimeElement(el)) {
            var style = typeof el.style === 'string'
                ? formats.time[el.style]
                : isDateTimeSkeleton(el.style)
                    ? el.style.parsedOptions
                    : formats.time.medium;
            result.push({
                type: PART_TYPE.literal,
                value: formatters
                    .getDateTimeFormat(locales, style)
                    .format(value),
            });
            continue;
        }
        if (isNumberElement(el)) {
            var style = typeof el.style === 'string'
                ? formats.number[el.style]
                : isNumberSkeleton(el.style)
                    ? el.style.parsedOptions
                    : undefined;
            if (style && style.scale) {
                value =
                    value *
                        (style.scale || 1);
            }
            result.push({
                type: PART_TYPE.literal,
                value: formatters
                    .getNumberFormat(locales, style)
                    .format(value),
            });
            continue;
        }
        if (isTagElement(el)) {
            var children = el.children, value_1 = el.value;
            var formatFn = values[value_1];
            if (!isFormatXMLElementFn(formatFn)) {
                throw new error_InvalidValueTypeError(value_1, 'function', originalMessage);
            }
            var parts = formatToParts(children, locales, formatters, formats, values, currentPluralValue);
            var chunks = formatFn(parts.map(function (p) { return p.value; }));
            if (!Array.isArray(chunks)) {
                chunks = [chunks];
            }
            result.push.apply(result, chunks.map(function (c) {
                return {
                    type: typeof c === 'string' ? PART_TYPE.literal : PART_TYPE.object,
                    value: c,
                };
            }));
        }
        if (isSelectElement(el)) {
            var opt = el.options[value] || el.options.other;
            if (!opt) {
                throw new error_InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);
            }
            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));
            continue;
        }
        if (isPluralElement(el)) {
            var opt = el.options["=".concat(value)];
            if (!opt) {
                if (!Intl.PluralRules) {
                    throw new error_FormatError("Intl.PluralRules is not available in this environment.\nTry polyfilling it using \"@formatjs/intl-pluralrules\"\n", ErrorCode.MISSING_INTL_API, originalMessage);
                }
                var rule = formatters
                    .getPluralRules(locales, { type: el.pluralType })
                    .select(value - (el.offset || 0));
                opt = el.options[rule] || el.options.other;
            }
            if (!opt) {
                throw new error_InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);
            }
            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values, value - (el.offset || 0)));
            continue;
        }
    }
    return mergeLiteral(result);
}

// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/intl-messageformat/lib/src/core.js
/*
Copyright (c) 2014, Yahoo! Inc. All rights reserved.
Copyrights licensed under the New BSD License.
See the accompanying LICENSE file for terms.
*/




// -- MessageFormat --------------------------------------------------------
function mergeConfig(c1, c2) {
    if (!c2) {
        return c1;
    }
    return Object(tslib_es6["a" /* __assign */])(Object(tslib_es6["a" /* __assign */])(Object(tslib_es6["a" /* __assign */])({}, (c1 || {})), (c2 || {})), Object.keys(c1).reduce(function (all, k) {
        all[k] = Object(tslib_es6["a" /* __assign */])(Object(tslib_es6["a" /* __assign */])({}, c1[k]), (c2[k] || {}));
        return all;
    }, {}));
}
function mergeConfigs(defaultConfig, configs) {
    if (!configs) {
        return defaultConfig;
    }
    return Object.keys(defaultConfig).reduce(function (all, k) {
        all[k] = mergeConfig(defaultConfig[k], configs[k]);
        return all;
    }, Object(tslib_es6["a" /* __assign */])({}, defaultConfig));
}
function createFastMemoizeCache(store) {
    return {
        create: function () {
            return {
                get: function (key) {
                    return store[key];
                },
                set: function (key, value) {
                    store[key] = value;
                },
            };
        },
    };
}
function createDefaultFormatters(cache) {
    if (cache === void 0) { cache = {
        number: {},
        dateTime: {},
        pluralRules: {},
    }; }
    return {
        getNumberFormat: memoize(function () {
            var _a;
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return new ((_a = Intl.NumberFormat).bind.apply(_a, Object(tslib_es6["e" /* __spreadArray */])([void 0], args, false)))();
        }, {
            cache: createFastMemoizeCache(cache.number),
            strategy: strategies.variadic,
        }),
        getDateTimeFormat: memoize(function () {
            var _a;
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return new ((_a = Intl.DateTimeFormat).bind.apply(_a, Object(tslib_es6["e" /* __spreadArray */])([void 0], args, false)))();
        }, {
            cache: createFastMemoizeCache(cache.dateTime),
            strategy: strategies.variadic,
        }),
        getPluralRules: memoize(function () {
            var _a;
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return new ((_a = Intl.PluralRules).bind.apply(_a, Object(tslib_es6["e" /* __spreadArray */])([void 0], args, false)))();
        }, {
            cache: createFastMemoizeCache(cache.pluralRules),
            strategy: strategies.variadic,
        }),
    };
}
var core_IntlMessageFormat = /** @class */ (function () {
    function IntlMessageFormat(message, locales, overrideFormats, opts) {
        var _this = this;
        if (locales === void 0) { locales = IntlMessageFormat.defaultLocale; }
        this.formatterCache = {
            number: {},
            dateTime: {},
            pluralRules: {},
        };
        this.format = function (values) {
            var parts = _this.formatToParts(values);
            // Hot path for straight simple msg translations
            if (parts.length === 1) {
                return parts[0].value;
            }
            var result = parts.reduce(function (all, part) {
                if (!all.length ||
                    part.type !== PART_TYPE.literal ||
                    typeof all[all.length - 1] !== 'string') {
                    all.push(part.value);
                }
                else {
                    all[all.length - 1] += part.value;
                }
                return all;
            }, []);
            if (result.length <= 1) {
                return result[0] || '';
            }
            return result;
        };
        this.formatToParts = function (values) {
            return formatToParts(_this.ast, _this.locales, _this.formatters, _this.formats, values, undefined, _this.message);
        };
        this.resolvedOptions = function () { return ({
            locale: _this.resolvedLocale.toString(),
        }); };
        this.getAst = function () { return _this.ast; };
        // Defined first because it's used to build the format pattern.
        this.locales = locales;
        this.resolvedLocale = IntlMessageFormat.resolveLocale(locales);
        if (typeof message === 'string') {
            this.message = message;
            if (!IntlMessageFormat.__parse) {
                throw new TypeError('IntlMessageFormat.__parse must be set to process `message` of type `string`');
            }
            // Parse string messages into an AST.
            this.ast = IntlMessageFormat.__parse(message, {
                ignoreTag: opts === null || opts === void 0 ? void 0 : opts.ignoreTag,
                locale: this.resolvedLocale,
            });
        }
        else {
            this.ast = message;
        }
        if (!Array.isArray(this.ast)) {
            throw new TypeError('A message must be provided as a String or AST.');
        }
        // Creates a new object with the specified `formats` merged with the default
        // formats.
        this.formats = mergeConfigs(IntlMessageFormat.formats, overrideFormats);
        this.formatters =
            (opts && opts.formatters) || createDefaultFormatters(this.formatterCache);
    }
    Object.defineProperty(IntlMessageFormat, "defaultLocale", {
        get: function () {
            if (!IntlMessageFormat.memoizedDefaultLocale) {
                IntlMessageFormat.memoizedDefaultLocale =
                    new Intl.NumberFormat().resolvedOptions().locale;
            }
            return IntlMessageFormat.memoizedDefaultLocale;
        },
        enumerable: false,
        configurable: true
    });
    IntlMessageFormat.memoizedDefaultLocale = null;
    IntlMessageFormat.resolveLocale = function (locales) {
        var supportedLocales = Intl.NumberFormat.supportedLocalesOf(locales);
        if (supportedLocales.length > 0) {
            return new Intl.Locale(supportedLocales[0]);
        }
        return new Intl.Locale(typeof locales === 'string' ? locales : locales[0]);
    };
    IntlMessageFormat.__parse = parse;
    // Default format options used as the prototype of the `formats` provided to the
    // constructor. These are used when constructing the internal Intl.NumberFormat
    // and Intl.DateTimeFormat instances.
    IntlMessageFormat.formats = {
        number: {
            integer: {
                maximumFractionDigits: 0,
            },
            currency: {
                style: 'currency',
            },
            percent: {
                style: 'percent',
            },
        },
        date: {
            short: {
                month: 'numeric',
                day: 'numeric',
                year: '2-digit',
            },
            medium: {
                month: 'short',
                day: 'numeric',
                year: 'numeric',
            },
            long: {
                month: 'long',
                day: 'numeric',
                year: 'numeric',
            },
            full: {
                weekday: 'long',
                month: 'long',
                day: 'numeric',
                year: 'numeric',
            },
        },
        time: {
            short: {
                hour: 'numeric',
                minute: 'numeric',
            },
            medium: {
                hour: 'numeric',
                minute: 'numeric',
                second: 'numeric',
            },
            long: {
                hour: 'numeric',
                minute: 'numeric',
                second: 'numeric',
                timeZoneName: 'short',
            },
            full: {
                hour: 'numeric',
                minute: 'numeric',
                second: 'numeric',
                timeZoneName: 'short',
            },
        },
    };
    return IntlMessageFormat;
}());


// EXTERNAL MODULE: ../editor-core/src/event-bus.ts
var event_bus = __webpack_require__(14);

// EXTERNAL MODULE: ../editor-core/src/utils/obx.ts + 16 modules
var obx = __webpack_require__(22);

// EXTERNAL MODULE: ../utils/src/index.ts + 63 modules
var src = __webpack_require__(3);

// CONCATENATED MODULE: ../editor-core/src/intl/global-locale.ts
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }




var logger = new src["e" /* Logger */]({
  level: 'warn',
  bizName: 'globalLocale'
});
var languageMap = {
  en: 'en-US',
  zh: 'zh-CN',
  zt: 'zh-TW',
  es: 'es-ES',
  pt: 'pt-PT',
  fr: 'fr-FR',
  de: 'de-DE',
  it: 'it-IT',
  ru: 'ru-RU',
  ja: 'ja-JP',
  ko: 'ko-KR',
  ar: 'ar-SA',
  tr: 'tr-TR',
  th: 'th-TH',
  vi: 'vi-VN',
  nl: 'nl-NL',
  he: 'iw-IL',
  id: 'in-ID',
  pl: 'pl-PL',
  hi: 'hi-IN',
  uk: 'uk-UA',
  ms: 'ms-MY',
  tl: 'tl-PH'
};
var LowcodeConfigKey = 'ali-lowcode-config';
var global_locale_GlobalLocale = /*#__PURE__*/function () {
  function GlobalLocale() {
    _classCallCheck(this, GlobalLocale);
    this.emitter = Object(event_bus["b" /* createModuleEventBus */])('GlobalLocale');
    this._locale = void 0;
    this.emitter.setMaxListeners(0);
  }
  return _createClass(GlobalLocale, [{
    key: "locale",
    get: function get() {
      if (this._locale != null) {
        return this._locale;
      }
      // TODO: store 1 & store 2 abstract out as custom implements
      // store 1: config from storage
      var result = null;
      if (hasLocalStorage(window)) {
        var _config;
        var store = window.localStorage;
        var config;
        try {
          config = JSON.parse(store.getItem(LowcodeConfigKey) || '');
        } catch (e) {
          // ignore;
        }
        if ((_config = config) !== null && _config !== void 0 && _config.locale) {
          result = (config.locale || '').replace('_', '-');
          logger.debug("getting locale from localStorage: ".concat(result));
        }
      }
      if (!result) {
        // store 2: config from window
        var localeFromConfig = getConfig('locale');
        if (localeFromConfig) {
          result = languageMap[localeFromConfig] || localeFromConfig.replace('_', '-');
          logger.debug("getting locale from config: ".concat(result));
        }
      }
      if (!result) {
        // store 3: config from system
        var _window = window,
          navigator = _window.navigator;
        if (navigator.language) {
          var lang = navigator.language;
          return languageMap[lang] || lang.replace('_', '-');
        } else if (navigator.browserLanguage) {
          var it = navigator.browserLanguage.split('-');
          var localeFromSystem = it[0];
          if (it[1]) {
            localeFromSystem += "-".concat(it[1].toUpperCase());
          }
          result = localeFromSystem;
          logger.debug("getting locale from system: ".concat(result));
        }
      }
      if (!result) {
        logger.warn('something when wrong when trying to get locale, use zh-CN as default, please check it out!');
        result = 'zh-CN';
      }
      this._locale = result;
      return result;
    }
  }, {
    key: "setLocale",
    value: function setLocale(locale) {
      logger.info("setting locale to ".concat(locale));
      if (locale === this.locale) {
        return;
      }
      this._locale = locale;
      if (hasLocalStorage(window)) {
        var store = window.localStorage;
        var config;
        try {
          config = JSON.parse(store.getItem(LowcodeConfigKey) || '');
        } catch (e) {
          // ignore;
        }
        if (config && _typeof(config) === 'object') {
          config.locale = locale;
        } else {
          config = {
            locale: locale
          };
        }
        store.setItem(LowcodeConfigKey, JSON.stringify(config));
      }
      this.emitter.emit('localechange', locale);
    }
  }, {
    key: "getLocale",
    value: function getLocale() {
      return this.locale;
    }
  }, {
    key: "onChangeLocale",
    value: function onChangeLocale(fn) {
      var _this = this;
      this.emitter.on('localechange', fn);
      return function () {
        _this.emitter.removeListener('localechange', fn);
      };
    }
  }]);
}();
Object(tslib_es6["b" /* __decorate */])([obx["h" /* obx */].ref, Object(tslib_es6["d" /* __metadata */])("design:type", String)], global_locale_GlobalLocale.prototype, "_locale", void 0);
Object(tslib_es6["b" /* __decorate */])([obx["c" /* computed */], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], global_locale_GlobalLocale.prototype, "locale", null);
function getConfig(name) {
  var win = window;
  return win[name] || (win.g_config || {})[name] || (win.pageConfig || {})[name];
}
function hasLocalStorage(obj) {
  return obj.localStorage;
}
var globalLocale = new global_locale_GlobalLocale();

// EXTERNAL MODULE: ../editor-core/src/utils/index.ts + 4 modules
var utils = __webpack_require__(18);

// CONCATENATED MODULE: ../editor-core/src/intl/index.ts
function intl_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function intl_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, intl_toPropertyKey(o.key), o); } }
function intl_createClass(e, r, t) { return r && intl_defineProperties(e.prototype, r), t && intl_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function intl_toPropertyKey(t) { var i = intl_toPrimitive(t, "string"); return "symbol" == intl_typeof(i) ? i : i + ""; }
function intl_toPrimitive(t, r) { if ("object" != intl_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != intl_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _possibleConstructorReturn(t, e) { if (e && ("object" == intl_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return _assertThisInitialized(t); }
function _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }
function _inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && _setPrototypeOf(t, e); }
function _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }
function intl_typeof(o) { "@babel/helpers - typeof"; return intl_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, intl_typeof(o); }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t.return || t.return(); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }






function generateTryLocales(locale) {
  var tries = [locale, locale.replace('-', '_')];
  if (locale === 'zh-TW' || locale === 'en-US') {
    tries.push('zh-CN');
    tries.push('zh_CN');
  } else {
    tries.push('en-US');
    tries.push('en_US');
    if (locale !== 'zh-CN') {
      tries.push('zh-CN');
      tries.push('zh_CN');
    }
  }
  return tries;
}
function injectVars(msg, params, locale) {
  if (!msg || !params) {
    return msg;
  }
  var formater = new core_IntlMessageFormat(msg, locale);
  return formater.format(params);
}
function intl_intl(data, params) {
  if (!Object(src["I" /* isI18nData */])(data)) {
    return data;
  }
  if (data.intl) {
    return data.intl;
  }
  var locale = globalLocale.getLocale();
  var tries = generateTryLocales(locale);
  var msg;
  var _iterator = _createForOfIteratorHelper(tries),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var lan = _step.value;
      msg = data[lan];
      if (msg != null) {
        break;
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  if (msg == null) {
    return "##intl@".concat(locale, "##");
  }
  return injectVars(msg, params, locale);
}
function shallowIntl(data) {
  if (!data || intl_typeof(data) !== 'object') {
    return data;
  }
  var maps = {};
  Object.keys(data).forEach(function (key) {
    maps[key] = intl_intl(data[key]);
  });
  return maps;
}
function intl_intlNode(data, params) {
  if (Object(src["I" /* isI18nData */])(data)) {
    if (data.intlNode) {
      return data.intlNode;
    }
    return /*#__PURE__*/Object(external_window_React_["createElement"])(intl_IntlElement, {
      data: data,
      params: params
    });
  }
  return data;
}
var intl_IntlElement = /*#__PURE__*/function (_Component) {
  function IntlElement() {
    intl_classCallCheck(this, IntlElement);
    return _callSuper(this, IntlElement, arguments);
  }
  _inherits(IntlElement, _Component);
  return intl_createClass(IntlElement, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
        data = _this$props.data,
        params = _this$props.params;
      return intl_intl(data, params);
    }
  }]);
}(external_window_React_["Component"]);
intl_IntlElement = Object(tslib_es6["b" /* __decorate */])([utils["i" /* observer */]], intl_IntlElement);
function createIntl(instance) {
  // TODO: make reactive
  var data = function () {
    var locale = globalLocale.getLocale();
    if (typeof instance === 'string') {
      if (window[instance]) {
        return window[instance][locale] || {};
      }
      var key = "".concat(instance, "_").concat(locale.toLocaleLowerCase());
      return window[key] || {};
    }
    if (instance && intl_typeof(instance) === 'object') {
      return instance[locale] || {};
    }
    return {};
  }();
  function intl(key, params) {
    // TODO: tries lost language
    var str = data[key];
    if (str == null) {
      return "##intl@".concat(key, "##");
    }
    return injectVars(str, params, globalLocale.getLocale());
  }
  var IntlElement = /*#__PURE__*/function (_Component2) {
    function IntlElement() {
      intl_classCallCheck(this, IntlElement);
      return _callSuper(this, IntlElement, arguments);
    }
    _inherits(IntlElement, _Component2);
    return intl_createClass(IntlElement, [{
      key: "render",
      value: function render() {
        var _this$props2 = this.props,
          id = _this$props2.id,
          params = _this$props2.params;
        return intl(id, params);
      }
    }]);
  }(external_window_React_["Component"]);
  IntlElement = Object(tslib_es6["b" /* __decorate */])([utils["i" /* observer */]], IntlElement);
  return {
    intlNode: function intlNode(id, params) {
      return /*#__PURE__*/Object(external_window_React_["createElement"])(IntlElement, {
        id: id,
        params: params
      });
    },
    intl: intl,
    getLocale: function getLocale() {
      return globalLocale.getLocale();
    },
    setLocale: function setLocale(locale) {
      globalLocale.setLocale(locale);
    }
  };
}


/***/ }),
/* 17 */
/***/ (function(module, exports) {

/* globals requestIdleCallback, cancelIdleCallback */
var fallback = function (cb) {
  return setTimeout(function () {
    var start = Date.now()
    cb({
      didTimeout: false,
      timeRemaining: function () {
        return Math.max(0, 50 - (Date.now() - start))
      }
    })
  }, 1)
}

var isSupported = (typeof requestIdleCallback !== 'undefined')

module.exports = isSupported ? requestIdleCallback : fallback
module.exports.cancelIdleCallback = isSupported ? cancelIdleCallback : clearTimeout


/***/ }),
/* 18 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "e", function() { return /* reexport */ getPublicPath; });
__webpack_require__.d(__webpack_exports__, "j", function() { return /* reexport */ obx["h" /* obx */]; });
__webpack_require__.d(__webpack_exports__, "h", function() { return /* reexport */ obx["f" /* observable */]; });
__webpack_require__.d(__webpack_exports__, "c", function() { return /* reexport */ obx["b" /* autorun */]; });
__webpack_require__.d(__webpack_exports__, "f", function() { return /* reexport */ obx["d" /* makeObservable */]; });
__webpack_require__.d(__webpack_exports__, "k", function() { return /* reexport */ obx["i" /* reaction */]; });
__webpack_require__.d(__webpack_exports__, "d", function() { return /* reexport */ obx["c" /* computed */]; });
__webpack_require__.d(__webpack_exports__, "b", function() { return /* reexport */ obx["a" /* action */]; });
__webpack_require__.d(__webpack_exports__, "l", function() { return /* reexport */ obx["j" /* runInAction */]; });
__webpack_require__.d(__webpack_exports__, "n", function() { return /* reexport */ obx["k" /* untracked */]; });
__webpack_require__.d(__webpack_exports__, "g", function() { return /* reexport */ obx["e" /* mobx */]; });
__webpack_require__.d(__webpack_exports__, "i", function() { return /* reexport */ obx["g" /* observer */]; });
__webpack_require__.d(__webpack_exports__, "a", function() { return /* reexport */ FocusTracker; });
__webpack_require__.d(__webpack_exports__, "m", function() { return /* reexport */ runWithGlobalEventOff; });
__webpack_require__.d(__webpack_exports__, "o", function() { return /* reexport */ wrapWithEventSwitch; });

// UNUSED EXPORTS: observe, makeAutoObservable, serialize, buildUrl, get, post, request, Focusable, setGlobalEventFlag, switchGlobalEventOn, switchGlobalEventOff, isGlobalEventOn

// CONCATENATED MODULE: ../editor-core/src/utils/get-public-path.ts
var _document$currentScri;
var publicPath = (_document$currentScri = document.currentScript) === null || _document$currentScri === void 0 ? void 0 : _document$currentScri.src.replace(/^(.*\/)[^/]+$/, '$1');
function getPublicPath() {
  return publicPath || '';
}
// EXTERNAL MODULE: ../editor-core/src/utils/obx.ts + 16 modules
var obx = __webpack_require__(22);

// EXTERNAL MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/debug/src/browser.js
var browser = __webpack_require__(59);
var browser_default = /*#__PURE__*/__webpack_require__.n(browser);

// CONCATENATED MODULE: ../editor-core/src/utils/request.ts
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }

var debug = browser_default()('request');
function serialize(obj) {
  if (!obj) {
    return '';
  }
  var rst = [];
  Object.entries(obj || {}).forEach(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 2),
      key = _ref2[0],
      val = _ref2[1];
    if (val === null || val === undefined || val === '') return;
    if (_typeof(val) === 'object') rst.push("".concat(key, "=").concat(encodeURIComponent(JSON.stringify(val))));else rst.push("".concat(key, "=").concat(encodeURIComponent(val)));
  });
  return rst.join('&');
}
function buildUrl(dataAPI, params) {
  var paramStr = serialize(params);
  if (paramStr) {
    return dataAPI.indexOf('?') > 0 ? "".concat(dataAPI, "&").concat(paramStr) : "".concat(dataAPI, "?").concat(paramStr);
  }
  return dataAPI;
}
function get(dataAPI, params, headers, otherProps) {
  var fetchHeaders = _objectSpread({
    Accept: 'application/json'
  }, headers);
  return request(buildUrl(dataAPI, params), 'GET', undefined, fetchHeaders, otherProps);
}
function post(dataAPI, params, headers, otherProps) {
  var fetchHeaders = _objectSpread({
    Accept: 'application/json',
    'Content-Type': 'application/x-www-form-urlencoded'
  }, headers);
  return request(dataAPI, 'POST', fetchHeaders['Content-Type'].indexOf('application/json') > -1 || Array.isArray(params) ? JSON.stringify(params) : serialize(params), fetchHeaders, otherProps);
}
function request(dataAPI) {
  var method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GET';
  var data = arguments.length > 2 ? arguments[2] : undefined;
  var headers = arguments.length > 3 ? arguments[3] : undefined;
  var otherProps = arguments.length > 4 ? arguments[4] : undefined;
  return new Promise(function (resolve, reject) {
    if (otherProps && otherProps.timeout) {
      setTimeout(function () {
        reject(new Error('timeout'));
      }, otherProps.timeout);
    }
    fetch(dataAPI, _objectSpread({
      method: method,
      credentials: 'include',
      headers: headers,
      body: data
    }, otherProps)).then(function (response) {
      switch (response.status) {
        case 200:
        case 201:
        case 202:
          return response.json();
        case 204:
          if (method === 'DELETE') {
            return {
              success: true
            };
          } else {
            return {
              __success: false,
              code: response.status
            };
          }
        case 400:
        case 401:
        case 403:
        case 404:
        case 406:
        case 410:
        case 422:
        case 500:
          return response.json().then(function (res) {
            return {
              __success: false,
              code: response.status,
              data: res
            };
          }).catch(function () {
            return {
              __success: false,
              code: response.status
            };
          });
        default:
          return null;
      }
    }).then(function (json) {
      if (json && json.__success !== false) {
        resolve(json);
      } else {
        delete json.__success;
        reject(json);
      }
    }).catch(function (err) {
      debug(err);
      reject(err);
    });
  });
}
// CONCATENATED MODULE: ../editor-core/src/utils/focus-tracker.ts
function focus_tracker_typeof(o) { "@babel/helpers - typeof"; return focus_tracker_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, focus_tracker_typeof(o); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, focus_tracker_toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function focus_tracker_toPropertyKey(t) { var i = focus_tracker_toPrimitive(t, "string"); return "symbol" == focus_tracker_typeof(i) ? i : i + ""; }
function focus_tracker_toPrimitive(t, r) { if ("object" != focus_tracker_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != focus_tracker_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var FocusTracker = /*#__PURE__*/function () {
  function FocusTracker() {
    _classCallCheck(this, FocusTracker);
    this.actives = [];
    this.modals = [];
  }
  return _createClass(FocusTracker, [{
    key: "mount",
    value: function mount(win) {
      var _this = this;
      var checkDown = function checkDown(e) {
        if (_this.checkModalDown(e)) {
          return;
        }
        var first = _this.first;
        if (first && !first.internalCheckInRange(e)) {
          _this.internalSuspenseItem(first);
          first.internalTriggerBlur();
        }
      };
      win.document.addEventListener('click', checkDown, true);
      return function () {
        win.document.removeEventListener('click', checkDown, true);
      };
    }
  }, {
    key: "first",
    get: function get() {
      return this.actives[0];
    }
  }, {
    key: "addModal",
    value: function addModal(checkDown, checkOpen) {
      this.modals.push({
        checkDown: checkDown,
        checkOpen: checkOpen
      });
    }
  }, {
    key: "checkModalOpen",
    value: function checkModalOpen() {
      return this.modals.some(function (item) {
        return item.checkOpen();
      });
    }
  }, {
    key: "checkModalDown",
    value: function checkModalDown(e) {
      return this.modals.some(function (item) {
        return item.checkDown(e);
      });
    }
  }, {
    key: "execSave",
    value: function execSave() {
      // has Modal return;
      if (this.checkModalOpen()) {
        return;
      }
      // catch
      if (this.first) {
        this.first.internalTriggerSave();
      }
    }
  }, {
    key: "execEsc",
    value: function execEsc() {
      var first = this.first;
      if (first) {
        this.internalSuspenseItem(first);
        first.internalTriggerEsc();
      }
    }
  }, {
    key: "create",
    value: function create(config) {
      return new Focusable(this, config);
    }
  }, {
    key: "internalActiveItem",
    value: function internalActiveItem(item) {
      var first = this.actives[0];
      if (first === item) {
        return;
      }
      var i = this.actives.indexOf(item);
      if (i > -1) {
        this.actives.splice(i, 1);
      }
      this.actives.unshift(item);
      if (!item.isModal && first) {
        // trigger Blur
        first.internalTriggerBlur();
      }
      // trigger onActive
      item.internalTriggerActive();
    }
  }, {
    key: "internalSuspenseItem",
    value: function internalSuspenseItem(item) {
      var i = this.actives.indexOf(item);
      if (i > -1) {
        var _this$first;
        this.actives.splice(i, 1);
        (_this$first = this.first) === null || _this$first === void 0 ? void 0 : _this$first.internalTriggerActive();
      }
    }
  }]);
}();
var Focusable = /*#__PURE__*/function () {
  function Focusable(tracker, config) {
    _classCallCheck(this, Focusable);
    this.tracker = void 0;
    this.config = void 0;
    this.isModal = void 0;
    this.tracker = tracker;
    this.config = config;
    this.isModal = config.modal == null ? false : config.modal;
  }
  return _createClass(Focusable, [{
    key: "active",
    value: function active() {
      this.tracker.internalActiveItem(this);
    }
  }, {
    key: "suspense",
    value: function suspense() {
      this.tracker.internalSuspenseItem(this);
    }
  }, {
    key: "purge",
    value: function purge() {
      this.tracker.internalSuspenseItem(this);
    }
  }, {
    key: "internalCheckInRange",
    value: function internalCheckInRange(e) {
      var range = this.config.range;
      if (!range) {
        return false;
      }
      if (typeof range === 'function') {
        return range(e);
      }
      return range.contains(e.target);
    }
  }, {
    key: "internalTriggerBlur",
    value: function internalTriggerBlur() {
      if (this.config.onBlur) {
        this.config.onBlur();
      }
    }
  }, {
    key: "internalTriggerSave",
    value: function internalTriggerSave() {
      if (this.config.onSave) {
        this.config.onSave();
        return true;
      }
      return false;
    }
  }, {
    key: "internalTriggerEsc",
    value: function internalTriggerEsc() {
      if (this.config.onEsc) {
        this.config.onEsc();
      }
    }
  }, {
    key: "internalTriggerActive",
    value: function internalTriggerActive() {
      if (this.config.onActive) {
        this.config.onActive();
      }
    }
  }]);
}();
// CONCATENATED MODULE: ../editor-core/src/utils/control.ts
var globalEventOn = true;
function setGlobalEventFlag(flag) {
  globalEventOn = flag;
}
function switchGlobalEventOn() {
  setGlobalEventFlag(true);
}
function switchGlobalEventOff() {
  setGlobalEventFlag(false);
}
function isGlobalEventOn() {
  return globalEventOn;
}
function runWithGlobalEventOff(fn) {
  switchGlobalEventOff();
  fn();
  switchGlobalEventOn();
}
function wrapWithEventSwitch(fn) {
  return function () {
    if (isGlobalEventOn()) fn.apply(void 0, arguments);
  };
}
// EXTERNAL MODULE: ../editor-core/src/utils/preference.ts
var preference = __webpack_require__(27);

// CONCATENATED MODULE: ../editor-core/src/utils/index.ts







/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var assign = make_assign()
var create = make_create()
var trim = make_trim()
var Global = (typeof window !== 'undefined' ? window : global)

module.exports = {
	assign: assign,
	create: create,
	trim: trim,
	bind: bind,
	slice: slice,
	each: each,
	map: map,
	pluck: pluck,
	isList: isList,
	isFunction: isFunction,
	isObject: isObject,
	Global: Global
}

function make_assign() {
	if (Object.assign) {
		return Object.assign
	} else {
		return function shimAssign(obj, props1, props2, etc) {
			for (var i = 1; i < arguments.length; i++) {
				each(Object(arguments[i]), function(val, key) {
					obj[key] = val
				})
			}
			return obj
		}
	}
}

function make_create() {
	if (Object.create) {
		return function create(obj, assignProps1, assignProps2, etc) {
			var assignArgsList = slice(arguments, 1)
			return assign.apply(this, [Object.create(obj)].concat(assignArgsList))
		}
	} else {
		function F() {} // eslint-disable-line no-inner-declarations
		return function create(obj, assignProps1, assignProps2, etc) {
			var assignArgsList = slice(arguments, 1)
			F.prototype = obj
			return assign.apply(this, [new F()].concat(assignArgsList))
		}
	}
}

function make_trim() {
	if (String.prototype.trim) {
		return function trim(str) {
			return String.prototype.trim.call(str)
		}
	} else {
		return function trim(str) {
			return str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '')
		}
	}
}

function bind(obj, fn) {
	return function() {
		return fn.apply(obj, Array.prototype.slice.call(arguments, 0))
	}
}

function slice(arr, index) {
	return Array.prototype.slice.call(arr, index || 0)
}

function each(obj, fn) {
	pluck(obj, function(val, key) {
		fn(val, key)
		return false
	})
}

function map(obj, fn) {
	var res = (isList(obj) ? [] : {})
	pluck(obj, function(v, k) {
		res[k] = fn(v, k)
		return false
	})
	return res
}

function pluck(obj, fn) {
	if (isList(obj)) {
		for (var i=0; i<obj.length; i++) {
			if (fn(obj[i], i)) {
				return obj[i]
			}
		}
	} else {
		for (var key in obj) {
			if (obj.hasOwnProperty(key)) {
				if (fn(obj[key], key)) {
					return obj[key]
				}
			}
		}
	}
}

function isList(val) {
	return (val != null && typeof val != 'function' && typeof val.length == 'number')
}

function isFunction(val) {
	return val && {}.toString.call(val) === '[object Function]'
}

function isObject(val) {
	return val && {}.toString.call(val) === '[object Object]'
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(33)))

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const SemVer = __webpack_require__(38)
const compare = (a, b, loose) =>
  new SemVer(a, loose).compare(new SemVer(b, loose))

module.exports = compare


/***/ }),
/* 21 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _setter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(43);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Setters", function() { return _setter__WEBPACK_IMPORTED_MODULE_0__["a"]; });

/* harmony import */ var _ioc_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(44);
/* harmony reexport (checked) */ if(__webpack_require__.o(_ioc_context__WEBPACK_IMPORTED_MODULE_1__, "Command")) __webpack_require__.d(__webpack_exports__, "Command", function() { return _ioc_context__WEBPACK_IMPORTED_MODULE_1__["Command"]; });

/* harmony reexport (checked) */ if(__webpack_require__.o(_ioc_context__WEBPACK_IMPORTED_MODULE_1__, "HelpTip")) __webpack_require__.d(__webpack_exports__, "HelpTip", function() { return _ioc_context__WEBPACK_IMPORTED_MODULE_1__["HelpTip"]; });

/* harmony reexport (checked) */ if(__webpack_require__.o(_ioc_context__WEBPACK_IMPORTED_MODULE_1__, "Hotkey")) __webpack_require__.d(__webpack_exports__, "Hotkey", function() { return _ioc_context__WEBPACK_IMPORTED_MODULE_1__["Hotkey"]; });

/* harmony reexport (checked) */ if(__webpack_require__.o(_ioc_context__WEBPACK_IMPORTED_MODULE_1__, "Tip")) __webpack_require__.d(__webpack_exports__, "Tip", function() { return _ioc_context__WEBPACK_IMPORTED_MODULE_1__["Tip"]; });

/* harmony reexport (checked) */ if(__webpack_require__.o(_ioc_context__WEBPACK_IMPORTED_MODULE_1__, "TipContainer")) __webpack_require__.d(__webpack_exports__, "TipContainer", function() { return _ioc_context__WEBPACK_IMPORTED_MODULE_1__["TipContainer"]; });

/* harmony reexport (checked) */ if(__webpack_require__.o(_ioc_context__WEBPACK_IMPORTED_MODULE_1__, "Title")) __webpack_require__.d(__webpack_exports__, "Title", function() { return _ioc_context__WEBPACK_IMPORTED_MODULE_1__["Title"]; });

/* harmony reexport (checked) */ if(__webpack_require__.o(_ioc_context__WEBPACK_IMPORTED_MODULE_1__, "createModuleEventBus")) __webpack_require__.d(__webpack_exports__, "createModuleEventBus", function() { return _ioc_context__WEBPACK_IMPORTED_MODULE_1__["createModuleEventBus"]; });

/* harmony reexport (checked) */ if(__webpack_require__.o(_ioc_context__WEBPACK_IMPORTED_MODULE_1__, "engineConfig")) __webpack_require__.d(__webpack_exports__, "engineConfig", function() { return _ioc_context__WEBPACK_IMPORTED_MODULE_1__["engineConfig"]; });

/* harmony reexport (checked) */ if(__webpack_require__.o(_ioc_context__WEBPACK_IMPORTED_MODULE_1__, "globalContext")) __webpack_require__.d(__webpack_exports__, "globalContext", function() { return _ioc_context__WEBPACK_IMPORTED_MODULE_1__["globalContext"]; });

/* harmony import */ var _widgets_tip_tip__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(15);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tip", function() { return _widgets_tip_tip__WEBPACK_IMPORTED_MODULE_2__["a"]; });





/***/ }),
/* 22 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "h", function() { return /* reexport */ mobx_esm["observable"]; });
__webpack_require__.d(__webpack_exports__, "f", function() { return /* reexport */ mobx_esm["observable"]; });
__webpack_require__.d(__webpack_exports__, "b", function() { return /* reexport */ mobx_esm["autorun"]; });
__webpack_require__.d(__webpack_exports__, "d", function() { return /* reexport */ mobx_esm["makeObservable"]; });
__webpack_require__.d(__webpack_exports__, "i", function() { return /* reexport */ mobx_esm["reaction"]; });
__webpack_require__.d(__webpack_exports__, "c", function() { return /* reexport */ mobx_esm["computed"]; });
__webpack_require__.d(__webpack_exports__, "a", function() { return /* reexport */ mobx_esm["action"]; });
__webpack_require__.d(__webpack_exports__, "j", function() { return /* reexport */ mobx_esm["runInAction"]; });
__webpack_require__.d(__webpack_exports__, "k", function() { return /* reexport */ mobx_esm["untracked"]; });
__webpack_require__.d(__webpack_exports__, "e", function() { return /* reexport */ mobx_esm; });
__webpack_require__.d(__webpack_exports__, "g", function() { return /* reexport */ mobxreact_esm_observer; });

// UNUSED EXPORTS: observe, makeAutoObservable

// EXTERNAL MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/mobx/dist/mobx.esm.js
var mobx_esm = __webpack_require__(7);

// EXTERNAL MODULE: external "window.React"
var external_window_React_ = __webpack_require__(2);
var external_window_React_default = /*#__PURE__*/__webpack_require__.n(external_window_React_);

// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/mobx-react-lite/es/utils/assertEnvironment.js


if (!external_window_React_["useState"]) {
    throw new Error("mobx-react-lite requires React with Hooks support");
}
if (!mobx_esm["makeObservable"]) {
    throw new Error("mobx-react-lite@3 requires mobx at least version 6 to be available");
}
//# sourceMappingURL=assertEnvironment.js.map
// EXTERNAL MODULE: external "window.ReactDOM"
var external_window_ReactDOM_ = __webpack_require__(10);

// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/mobx-react-lite/es/utils/reactBatchedUpdates.js

//# sourceMappingURL=reactBatchedUpdates.js.map
// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/mobx-react-lite/es/utils/observerBatching.js

function defaultNoopBatch(callback) {
    callback();
}
function observerBatching(reactionScheduler) {
    if (!reactionScheduler) {
        reactionScheduler = defaultNoopBatch;
        if (false) {}
    }
    Object(mobx_esm["configure"])({ reactionScheduler: reactionScheduler });
}
var isObserverBatched = function () {
    if (false) {}
    return true;
};
//# sourceMappingURL=observerBatching.js.map
// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/mobx-react-lite/es/utils/utils.js
var deprecatedMessages = [];
function useDeprecated(msg) {
    if (!deprecatedMessages.includes(msg)) {
        deprecatedMessages.push(msg);
        console.warn(msg);
    }
}
//# sourceMappingURL=utils.js.map
// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/mobx-react-lite/es/utils/printDebugValue.js

function printDebugValue(v) {
    return Object(mobx_esm["getDependencyTree"])(v);
}
//# sourceMappingURL=printDebugValue.js.map
// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/mobx-react-lite/es/utils/UniversalFinalizationRegistry.js
var REGISTRY_FINALIZE_AFTER = 10000;
var REGISTRY_SWEEP_INTERVAL = 10000;
var TimerBasedFinalizationRegistry = /** @class */ (function () {
    function TimerBasedFinalizationRegistry(finalize) {
        var _this = this;
        Object.defineProperty(this, "finalize", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: finalize
        });
        Object.defineProperty(this, "registrations", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Map()
        });
        Object.defineProperty(this, "sweepTimeout", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        // Bound so it can be used directly as setTimeout callback.
        Object.defineProperty(this, "sweep", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: function (maxAge) {
                if (maxAge === void 0) { maxAge = REGISTRY_FINALIZE_AFTER; }
                // cancel timeout so we can force sweep anytime
                clearTimeout(_this.sweepTimeout);
                _this.sweepTimeout = undefined;
                var now = Date.now();
                _this.registrations.forEach(function (registration, token) {
                    if (now - registration.registeredAt >= maxAge) {
                        _this.finalize(registration.value);
                        _this.registrations.delete(token);
                    }
                });
                if (_this.registrations.size > 0) {
                    _this.scheduleSweep();
                }
            }
        });
        // Bound so it can be exported directly as clearTimers test utility.
        Object.defineProperty(this, "finalizeAllImmediately", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: function () {
                _this.sweep(0);
            }
        });
    }
    // Token is actually required with this impl
    Object.defineProperty(TimerBasedFinalizationRegistry.prototype, "register", {
        enumerable: false,
        configurable: true,
        writable: true,
        value: function (target, value, token) {
            this.registrations.set(token, {
                value: value,
                registeredAt: Date.now()
            });
            this.scheduleSweep();
        }
    });
    Object.defineProperty(TimerBasedFinalizationRegistry.prototype, "unregister", {
        enumerable: false,
        configurable: true,
        writable: true,
        value: function (token) {
            this.registrations.delete(token);
        }
    });
    Object.defineProperty(TimerBasedFinalizationRegistry.prototype, "scheduleSweep", {
        enumerable: false,
        configurable: true,
        writable: true,
        value: function () {
            if (this.sweepTimeout === undefined) {
                this.sweepTimeout = setTimeout(this.sweep, REGISTRY_SWEEP_INTERVAL);
            }
        }
    });
    return TimerBasedFinalizationRegistry;
}());

var UniversalFinalizationRegistry = typeof FinalizationRegistry !== "undefined"
    ? FinalizationRegistry
    : TimerBasedFinalizationRegistry;
//# sourceMappingURL=UniversalFinalizationRegistry.js.map
// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/mobx-react-lite/es/utils/observerFinalizationRegistry.js

var observerFinalizationRegistry = new UniversalFinalizationRegistry(function (adm) {
    var _a;
    (_a = adm.reaction) === null || _a === void 0 ? void 0 : _a.dispose();
    adm.reaction = null;
});
//# sourceMappingURL=observerFinalizationRegistry.js.map
// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/mobx-react-lite/es/staticRendering.js
var globalIsUsingStaticRendering = false;
function enableStaticRendering(enable) {
    globalIsUsingStaticRendering = enable;
}
function isUsingStaticRendering() {
    return globalIsUsingStaticRendering;
}
//# sourceMappingURL=staticRendering.js.map
// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/mobx-react-lite/es/useObserver.js
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};





function observerComponentNameFor(baseComponentName) {
    return "observer".concat(baseComponentName);
}
/**
 * We use class to make it easier to detect in heap snapshots by name
 */
var ObjectToBeRetainedByReact = /** @class */ (function () {
    function ObjectToBeRetainedByReact() {
    }
    return ObjectToBeRetainedByReact;
}());
function objectToBeRetainedByReactFactory() {
    return new ObjectToBeRetainedByReact();
}
function useObserver(fn, baseComponentName) {
    if (baseComponentName === void 0) { baseComponentName = "observed"; }
    if (isUsingStaticRendering()) {
        return fn();
    }
    var _a = __read(external_window_React_default.a.useState(objectToBeRetainedByReactFactory), 1), objectRetainedByReact = _a[0];
    // Force update, see #2982
    var _b = __read(external_window_React_default.a.useState(), 2), setState = _b[1];
    var forceUpdate = function () { return setState([]); };
    // StrictMode/ConcurrentMode/Suspense may mean that our component is
    // rendered and abandoned multiple times, so we need to track leaked
    // Reactions.
    var admRef = external_window_React_default.a.useRef(null);
    if (!admRef.current) {
        // First render
        admRef.current = {
            reaction: null,
            mounted: false,
            changedBeforeMount: false
        };
    }
    var adm = admRef.current;
    if (!adm.reaction) {
        // First render or component was not committed and reaction was disposed by registry
        adm.reaction = new mobx_esm["Reaction"](observerComponentNameFor(baseComponentName), function () {
            // Observable has changed, meaning we want to re-render
            // BUT if we're a component that hasn't yet got to the useEffect()
            // stage, we might be a component that _started_ to render, but
            // got dropped, and we don't want to make state changes then.
            // (It triggers warnings in StrictMode, for a start.)
            if (adm.mounted) {
                // We have reached useEffect(), so we're mounted, and can trigger an update
                forceUpdate();
            }
            else {
                // We haven't yet reached useEffect(), so we'll need to trigger a re-render
                // when (and if) useEffect() arrives.
                adm.changedBeforeMount = true;
            }
        });
        observerFinalizationRegistry.register(objectRetainedByReact, adm, adm);
    }
    external_window_React_default.a.useDebugValue(adm.reaction, printDebugValue);
    external_window_React_default.a.useEffect(function () {
        observerFinalizationRegistry.unregister(adm);
        adm.mounted = true;
        if (adm.reaction) {
            if (adm.changedBeforeMount) {
                // Got a change before mount, force an update
                adm.changedBeforeMount = false;
                forceUpdate();
            }
        }
        else {
            // The reaction we set up in our render has been disposed.
            // This can be due to bad timings of renderings, e.g. our
            // component was paused for a _very_ long time, and our
            // reaction got cleaned up
            // Re-create the reaction
            adm.reaction = new mobx_esm["Reaction"](observerComponentNameFor(baseComponentName), function () {
                // We've definitely already been mounted at this point
                forceUpdate();
            });
            forceUpdate();
        }
        return function () {
            adm.reaction.dispose();
            adm.reaction = null;
            adm.mounted = false;
            adm.changedBeforeMount = false;
        };
    }, []);
    // render the original component, but have the
    // reaction track the observables, so that rendering
    // can be invalidated (see above) once a dependency changes
    var rendering;
    var exception;
    adm.reaction.track(function () {
        try {
            rendering = fn();
        }
        catch (e) {
            exception = e;
        }
    });
    if (exception) {
        throw exception; // re-throw any exceptions caught during rendering
    }
    return rendering;
}
//# sourceMappingURL=useObserver.js.map
// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/mobx-react-lite/es/observer.js



var warnObserverOptionsDeprecated = true;
var hasSymbol = typeof Symbol === "function" && Symbol.for;
// Using react-is had some issues (and operates on elements, not on types), see #608 / #609
var ReactForwardRefSymbol = hasSymbol
    ? Symbol.for("react.forward_ref")
    : typeof external_window_React_["forwardRef"] === "function" && Object(external_window_React_["forwardRef"])(function (props) { return null; })["$$typeof"];
var ReactMemoSymbol = hasSymbol
    ? Symbol.for("react.memo")
    : typeof external_window_React_["memo"] === "function" && Object(external_window_React_["memo"])(function (props) { return null; })["$$typeof"];
// n.b. base case is not used for actual typings or exported in the typing files
function observer(baseComponent,
// TODO remove in next major
options) {
    var _a;
    if (false) {}
    if (ReactMemoSymbol && baseComponent["$$typeof"] === ReactMemoSymbol) {
        throw new Error("[mobx-react-lite] You are trying to use `observer` on a function component wrapped in either another `observer` or `React.memo`. The observer already applies 'React.memo' for you.");
    }
    // The working of observer is explained step by step in this talk: https://www.youtube.com/watch?v=cPF4iBedoF0&feature=youtu.be&t=1307
    if (isUsingStaticRendering()) {
        return baseComponent;
    }
    var useForwardRef = (_a = options === null || options === void 0 ? void 0 : options.forwardRef) !== null && _a !== void 0 ? _a : false;
    var render = baseComponent;
    var baseComponentName = baseComponent.displayName || baseComponent.name;
    // If already wrapped with forwardRef, unwrap,
    // so we can patch render and apply memo
    if (ReactForwardRefSymbol && baseComponent["$$typeof"] === ReactForwardRefSymbol) {
        useForwardRef = true;
        render = baseComponent["render"];
        if (typeof render !== "function") {
            throw new Error("[mobx-react-lite] `render` property of ForwardRef was not a function");
        }
    }
    var observerComponent = function (props, ref) {
        return useObserver(function () { return render(props, ref); }, baseComponentName);
    };
    // Don't set `displayName` for anonymous components,
    // so the `displayName` can be customized by user, see #3192.
    if (baseComponentName !== "") {
        ;
        observerComponent.displayName = baseComponentName;
    }
    // Support legacy context: `contextTypes` must be applied before `memo`
    if (baseComponent.contextTypes) {
        ;
        observerComponent.contextTypes = baseComponent.contextTypes;
    }
    if (useForwardRef) {
        // `forwardRef` must be applied prior `memo`
        // `forwardRef(observer(cmp))` throws:
        // "forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...))"
        observerComponent = Object(external_window_React_["forwardRef"])(observerComponent);
    }
    // memo; we are not interested in deep updates
    // in props; we assume that if deep objects are changed,
    // this is in observables, which would have been tracked anyway
    observerComponent = Object(external_window_React_["memo"])(observerComponent);
    copyStaticProperties(baseComponent, observerComponent);
    if (false) {}
    return observerComponent;
}
// based on https://github.com/mridgway/hoist-non-react-statics/blob/master/src/index.js
var hoistBlackList = {
    $$typeof: true,
    render: true,
    compare: true,
    type: true,
    // Don't redefine `displayName`,
    // it's defined as getter-setter pair on `memo` (see #3192).
    displayName: true
};
function copyStaticProperties(base, target) {
    Object.keys(base).forEach(function (key) {
        if (!hoistBlackList[key]) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(base, key));
        }
    });
}
//# sourceMappingURL=observer.js.map
// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/mobx-react-lite/es/ObserverComponent.js

function ObserverComponent(_a) {
    var children = _a.children, render = _a.render;
    var component = children || render;
    if (typeof component !== "function") {
        return null;
    }
    return useObserver(component);
}
if (false) {}
ObserverComponent.displayName = "Observer";

function ObserverPropsCheck(props, key, componentName, location, propFullName) {
    var extraKey = key === "children" ? "render" : "children";
    var hasProp = typeof props[key] === "function";
    var hasExtraProp = typeof props[extraKey] === "function";
    if (hasProp && hasExtraProp) {
        return new Error("MobX Observer: Do not use children and render in the same time in`" + componentName);
    }
    if (hasProp || hasExtraProp) {
        return null;
    }
    return new Error("Invalid prop `" +
        propFullName +
        "` of type `" +
        typeof props[key] +
        "` supplied to" +
        " `" +
        componentName +
        "`, expected `function`.");
}
//# sourceMappingURL=ObserverComponent.js.map
// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/mobx-react-lite/es/useLocalObservable.js


function useLocalObservable(initializer, annotations) {
    return Object(external_window_React_["useState"])(function () { return Object(mobx_esm["observable"])(initializer(), annotations, { autoBind: true }); })[0];
}
//# sourceMappingURL=useLocalObservable.js.map
// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/mobx-react-lite/es/useAsObservableSource.js
var useAsObservableSource_read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};



function useAsObservableSource(current) {
    if (false)
        {}
    var _a = useAsObservableSource_read(Object(external_window_React_["useState"])(function () { return Object(mobx_esm["observable"])(current, {}, { deep: false }); }), 1), res = _a[0];
    Object(mobx_esm["runInAction"])(function () {
        Object.assign(res, current);
    });
    return res;
}
//# sourceMappingURL=useAsObservableSource.js.map
// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/mobx-react-lite/es/useLocalStore.js




function useLocalStore(initializer, current) {
    if (false)
        {}
    var source = current && useAsObservableSource(current);
    return Object(external_window_React_["useState"])(function () { return Object(mobx_esm["observable"])(initializer(source), undefined, { autoBind: true }); })[0];
}
//# sourceMappingURL=useLocalStore.js.map
// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/mobx-react-lite/es/index.js
var es_a;







observerBatching(external_window_ReactDOM_["unstable_batchedUpdates"]);






var clearTimers = (es_a = observerFinalizationRegistry["finalizeAllImmediately"]) !== null && es_a !== void 0 ? es_a : (function () { });
function es_useObserver(fn, baseComponentName) {
    if (baseComponentName === void 0) { baseComponentName = "observed"; }
    if (false) {}
    return useObserver(fn, baseComponentName);
}

function useStaticRendering(enable) {
    if (false) {}
    enableStaticRendering(enable);
}
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/mobx-react/dist/mobxreact.esm.js





var symbolId = 0;

function createSymbol(name) {
  if (typeof Symbol === "function") {
    return Symbol(name);
  }

  var symbol = "__$mobx-react " + name + " (" + symbolId + ")";
  symbolId++;
  return symbol;
}

var createdSymbols = {};
function newSymbol(name) {
  if (!createdSymbols[name]) {
    createdSymbols[name] = createSymbol(name);
  }

  return createdSymbols[name];
}
function shallowEqual(objA, objB) {
  //From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js
  if (is(objA, objB)) {
    return true;
  }

  if (typeof objA !== "object" || objA === null || typeof objB !== "object" || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  for (var i = 0; i < keysA.length; i++) {
    if (!Object.hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

function is(x, y) {
  // From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js
  if (x === y) {
    return x !== 0 || 1 / x === 1 / y;
  } else {
    return x !== x && y !== y;
  }
} // based on https://github.com/mridgway/hoist-non-react-statics/blob/master/src/index.js


var mobxreact_esm_hoistBlackList = {
  $$typeof: 1,
  render: 1,
  compare: 1,
  type: 1,
  childContextTypes: 1,
  contextType: 1,
  contextTypes: 1,
  defaultProps: 1,
  getDefaultProps: 1,
  getDerivedStateFromError: 1,
  getDerivedStateFromProps: 1,
  mixins: 1,
  displayName: 1,
  propTypes: 1
};
function mobxreact_esm_copyStaticProperties(base, target) {
  var protoProps = Object.getOwnPropertyNames(Object.getPrototypeOf(base));
  Object.getOwnPropertyNames(base).forEach(function (key) {
    if (!mobxreact_esm_hoistBlackList[key] && protoProps.indexOf(key) === -1) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(base, key));
    }
  });
}
/**
 * Helper to set `prop` to `this` as non-enumerable (hidden prop)
 * @param target
 * @param prop
 * @param value
 */

function setHiddenProp(target, prop, value) {
  if (!Object.hasOwnProperty.call(target, prop)) {
    Object.defineProperty(target, prop, {
      enumerable: false,
      configurable: true,
      writable: true,
      value: value
    });
  } else {
    target[prop] = value;
  }
}
/**
 * Utilities for patching componentWillUnmount, to make sure @disposeOnUnmount works correctly icm with user defined hooks
 * and the handler provided by mobx-react
 */

var mobxMixins = /*#__PURE__*/newSymbol("patchMixins");
var mobxPatchedDefinition = /*#__PURE__*/newSymbol("patchedDefinition");

function getMixins(target, methodName) {
  var mixins = target[mobxMixins] = target[mobxMixins] || {};
  var methodMixins = mixins[methodName] = mixins[methodName] || {};
  methodMixins.locks = methodMixins.locks || 0;
  methodMixins.methods = methodMixins.methods || [];
  return methodMixins;
}

function wrapper(realMethod, mixins) {
  var _this = this;

  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    args[_key - 2] = arguments[_key];
  }

  // locks are used to ensure that mixins are invoked only once per invocation, even on recursive calls
  mixins.locks++;

  try {
    var retVal;

    if (realMethod !== undefined && realMethod !== null) {
      retVal = realMethod.apply(this, args);
    }

    return retVal;
  } finally {
    mixins.locks--;

    if (mixins.locks === 0) {
      mixins.methods.forEach(function (mx) {
        mx.apply(_this, args);
      });
    }
  }
}

function wrapFunction(realMethod, mixins) {
  var fn = function fn() {
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    wrapper.call.apply(wrapper, [this, realMethod, mixins].concat(args));
  };

  return fn;
}

function patch(target, methodName, mixinMethod) {
  var mixins = getMixins(target, methodName);

  if (mixins.methods.indexOf(mixinMethod) < 0) {
    mixins.methods.push(mixinMethod);
  }

  var oldDefinition = Object.getOwnPropertyDescriptor(target, methodName);

  if (oldDefinition && oldDefinition[mobxPatchedDefinition]) {
    // already patched definition, do not repatch
    return;
  }

  var originalMethod = target[methodName];
  var newDefinition = createDefinition(target, methodName, oldDefinition ? oldDefinition.enumerable : undefined, mixins, originalMethod);
  Object.defineProperty(target, methodName, newDefinition);
}

function createDefinition(target, methodName, enumerable, mixins, originalMethod) {
  var _ref;

  var wrappedFunc = wrapFunction(originalMethod, mixins);
  return _ref = {}, _ref[mobxPatchedDefinition] = true, _ref.get = function get() {
    return wrappedFunc;
  }, _ref.set = function set(value) {
    if (this === target) {
      wrappedFunc = wrapFunction(value, mixins);
    } else {
      // when it is an instance of the prototype/a child prototype patch that particular case again separately
      // since we need to store separate values depending on wether it is the actual instance, the prototype, etc
      // e.g. the method for super might not be the same as the method for the prototype which might be not the same
      // as the method for the instance
      var newDefinition = createDefinition(this, methodName, enumerable, mixins, value);
      Object.defineProperty(this, methodName, newDefinition);
    }
  }, _ref.configurable = true, _ref.enumerable = enumerable, _ref;
}

var mobxAdminProperty = mobx_esm["$mobx"] || "$mobx"; // BC

var mobxObserverProperty = /*#__PURE__*/newSymbol("isMobXReactObserver");
var mobxIsUnmounted = /*#__PURE__*/newSymbol("isUnmounted");
var skipRenderKey = /*#__PURE__*/newSymbol("skipRender");
var isForcingUpdateKey = /*#__PURE__*/newSymbol("isForcingUpdate");
function makeClassComponentObserver(componentClass) {
  var target = componentClass.prototype;

  if (componentClass[mobxObserverProperty]) {
    var displayName = getDisplayName(target);
    console.warn("The provided component class (" + displayName + ")\n                has already been declared as an observer component.");
  } else {
    componentClass[mobxObserverProperty] = true;
  }

  if (target.componentWillReact) {
    throw new Error("The componentWillReact life-cycle event is no longer supported");
  }

  if (componentClass["__proto__"] !== external_window_React_["PureComponent"]) {
    if (!target.shouldComponentUpdate) {
      target.shouldComponentUpdate = observerSCU;
    } else if (target.shouldComponentUpdate !== observerSCU) {
      // n.b. unequal check, instead of existence check, as @observer might be on superclass as well
      throw new Error("It is not allowed to use shouldComponentUpdate in observer based components.");
    }
  } // this.props and this.state are made observable, just to make sure @computed fields that
  // are defined inside the component, and which rely on state or props, re-compute if state or props change
  // (otherwise the computed wouldn't update and become stale on props change, since props are not observable)
  // However, this solution is not without it's own problems: https://github.com/mobxjs/mobx-react/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3Aobservable-props-or-not+


  makeObservableProp(target, "props");
  makeObservableProp(target, "state");

  if (componentClass.contextType) {
    makeObservableProp(target, "context");
  }

  var originalRender = target.render;

  if (typeof originalRender !== "function") {
    var _displayName = getDisplayName(target);

    throw new Error("[mobx-react] class component (" + _displayName + ") is missing `render` method." + "\n`observer` requires `render` being a function defined on prototype." + "\n`render = () => {}` or `render = function() {}` is not supported.");
  }

  target.render = function () {
    this.render = isUsingStaticRendering() ? originalRender : createReactiveRender.call(this, originalRender);
    return this.render();
  };

  patch(target, "componentDidMount", function () {
    this[mobxIsUnmounted] = false;

    if (!this.render[mobxAdminProperty]) {
      // Reaction is re-created automatically during render, but a component can re-mount and skip render #3395.
      // To re-create the reaction and re-subscribe to relevant observables we have to force an update.
      external_window_React_["Component"].prototype.forceUpdate.call(this);
    }
  });
  patch(target, "componentWillUnmount", function () {
    if (isUsingStaticRendering()) {
      return;
    }

    var reaction = this.render[mobxAdminProperty];

    if (reaction) {
      reaction.dispose(); // Forces reaction to be re-created on next render

      this.render[mobxAdminProperty] = null;
    } else {
      // Render may have been hot-swapped and/or overridden by a subclass.
      var _displayName2 = getDisplayName(this);

      console.warn("The reactive render of an observer class component (" + _displayName2 + ")\n                was overridden after MobX attached. This may result in a memory leak if the\n                overridden reactive render was not properly disposed.");
    }

    this[mobxIsUnmounted] = true;
  });
  return componentClass;
} // Generates a friendly name for debugging

function getDisplayName(comp) {
  return comp.displayName || comp.name || comp.constructor && (comp.constructor.displayName || comp.constructor.name) || "<component>";
}

function createReactiveRender(originalRender) {
  var _this = this;

  /**
   * If props are shallowly modified, react will render anyway,
   * so atom.reportChanged() should not result in yet another re-render
   */
  setHiddenProp(this, skipRenderKey, false);
  /**
   * forceUpdate will re-assign this.props. We don't want that to cause a loop,
   * so detect these changes
   */

  setHiddenProp(this, isForcingUpdateKey, false);
  var initialName = getDisplayName(this);
  var boundOriginalRender = originalRender.bind(this);
  var isRenderingPending = false;

  var createReaction = function createReaction() {
    var reaction = new mobx_esm["Reaction"](initialName + ".render()", function () {
      if (!isRenderingPending) {
        // N.B. Getting here *before mounting* means that a component constructor has side effects (see the relevant test in misc.test.tsx)
        // This unidiomatic React usage but React will correctly warn about this so we continue as usual
        // See #85 / Pull #44
        isRenderingPending = true;

        if (_this[mobxIsUnmounted] !== true) {
          var hasError = true;

          try {
            setHiddenProp(_this, isForcingUpdateKey, true);

            if (!_this[skipRenderKey]) {
              external_window_React_["Component"].prototype.forceUpdate.call(_this);
            }

            hasError = false;
          } finally {
            setHiddenProp(_this, isForcingUpdateKey, false);

            if (hasError) {
              reaction.dispose(); // Forces reaction to be re-created on next render

              _this.render[mobxAdminProperty] = null;
            }
          }
        }
      }
    });
    reaction["reactComponent"] = _this;
    return reaction;
  };

  function reactiveRender() {
    var _reactiveRender$mobxA;

    isRenderingPending = false; // Create reaction lazily to support re-mounting #3395

    var reaction = (_reactiveRender$mobxA = reactiveRender[mobxAdminProperty]) != null ? _reactiveRender$mobxA : reactiveRender[mobxAdminProperty] = createReaction();
    var exception = undefined;
    var rendering = undefined;
    reaction.track(function () {
      try {
        // TODO@major
        // Optimization: replace with _allowStateChangesStart/End (not available in mobx@6.0.0)
        rendering = Object(mobx_esm["_allowStateChanges"])(false, boundOriginalRender);
      } catch (e) {
        exception = e;
      }
    });

    if (exception) {
      throw exception;
    }

    return rendering;
  }

  return reactiveRender;
}

function observerSCU(nextProps, nextState) {
  if (isUsingStaticRendering()) {
    console.warn("[mobx-react] It seems that a re-rendering of a React component is triggered while in static (server-side) mode. Please make sure components are rendered only once server-side.");
  } // update on any state changes (as is the default)


  if (this.state !== nextState) {
    return true;
  } // update if props are shallowly not equal, inspired by PureRenderMixin
  // we could return just 'false' here, and avoid the `skipRender` checks etc
  // however, it is nicer if lifecycle events are triggered like usually,
  // so we return true here if props are shallowly modified.


  return !shallowEqual(this.props, nextProps);
}

function makeObservableProp(target, propName) {
  var valueHolderKey = newSymbol("reactProp_" + propName + "_valueHolder");
  var atomHolderKey = newSymbol("reactProp_" + propName + "_atomHolder");

  function getAtom() {
    if (!this[atomHolderKey]) {
      setHiddenProp(this, atomHolderKey, Object(mobx_esm["createAtom"])("reactive " + propName));
    }

    return this[atomHolderKey];
  }

  Object.defineProperty(target, propName, {
    configurable: true,
    enumerable: true,
    get: function get() {
      var prevReadState = false; // Why this check? BC?
      // @ts-expect-error

      if (mobx_esm["_allowStateReadsStart"] && mobx_esm["_allowStateReadsEnd"]) {
        prevReadState = Object(mobx_esm["_allowStateReadsStart"])(true);
      }

      getAtom.call(this).reportObserved(); // Why this check? BC?
      // @ts-expect-error

      if (mobx_esm["_allowStateReadsStart"] && mobx_esm["_allowStateReadsEnd"]) {
        Object(mobx_esm["_allowStateReadsEnd"])(prevReadState);
      }

      return this[valueHolderKey];
    },
    set: function set(v) {
      if (!this[isForcingUpdateKey] && !shallowEqual(this[valueHolderKey], v)) {
        setHiddenProp(this, valueHolderKey, v);
        setHiddenProp(this, skipRenderKey, true);
        getAtom.call(this).reportChanged();
        setHiddenProp(this, skipRenderKey, false);
      } else {
        setHiddenProp(this, valueHolderKey, v);
      }
    }
  });
}

/**
 * Observer function / decorator
 */

function mobxreact_esm_observer(component) {
  if (component["isMobxInjector"] === true) {
    console.warn("Mobx observer: You are trying to use `observer` on a component that already has `inject`. Please apply `observer` before applying `inject`");
  }

  if (Object.prototype.isPrototypeOf.call(external_window_React_["Component"], component) || Object.prototype.isPrototypeOf.call(external_window_React_["PureComponent"], component)) {
    // Class component
    return makeClassComponentObserver(component);
  } else {
    // Function component
    return observer(component);
  }
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var _excluded = ["children"];
var MobXProviderContext = /*#__PURE__*/external_window_React_default.a.createContext({});
function Provider(props) {
  var children = props.children,
      stores = _objectWithoutPropertiesLoose(props, _excluded);

  var parentValue = external_window_React_default.a.useContext(MobXProviderContext);
  var mutableProviderRef = external_window_React_default.a.useRef(_extends({}, parentValue, stores));
  var value = mutableProviderRef.current;

  if (false) { var newValue; }

  return external_window_React_default.a.createElement(MobXProviderContext.Provider, {
    value: value
  }, children);
}
Provider.displayName = "MobXProvider";

/**
 * Store Injection
 */

function createStoreInjector(grabStoresFn, component, injectNames, makeReactive) {
  // Support forward refs
  var Injector = external_window_React_default.a.forwardRef(function (props, ref) {
    var newProps = _extends({}, props);

    var context = external_window_React_default.a.useContext(MobXProviderContext);
    Object.assign(newProps, grabStoresFn(context || {}, newProps) || {});

    if (ref) {
      newProps.ref = ref;
    }

    return external_window_React_default.a.createElement(component, newProps);
  });
  if (makeReactive) Injector = mobxreact_esm_observer(Injector);
  Injector["isMobxInjector"] = true; // assigned late to suppress observer warning
  // Static fields from component should be visible on the generated Injector

  mobxreact_esm_copyStaticProperties(component, Injector);
  Injector["wrappedComponent"] = component;
  Injector.displayName = getInjectName(component, injectNames);
  return Injector;
}

function getInjectName(component, injectNames) {
  var displayName;
  var componentName = component.displayName || component.name || component.constructor && component.constructor.name || "Component";
  if (injectNames) displayName = "inject-with-" + injectNames + "(" + componentName + ")";else displayName = "inject(" + componentName + ")";
  return displayName;
}

function grabStoresByName(storeNames) {
  return function (baseStores, nextProps) {
    storeNames.forEach(function (storeName) {
      if (storeName in nextProps // prefer props over stores
      ) return;
      if (!(storeName in baseStores)) throw new Error("MobX injector: Store '" + storeName + "' is not available! Make sure it is provided by some Provider");
      nextProps[storeName] = baseStores[storeName];
    });
    return nextProps;
  };
}
/**
 * higher order component that injects stores to a child.
 * takes either a varargs list of strings, which are stores read from the context,
 * or a function that manually maps the available stores from the context to props:
 * storesToProps(mobxStores, props, context) => newProps
 */


function inject() {
  for (var _len = arguments.length, storeNames = new Array(_len), _key = 0; _key < _len; _key++) {
    storeNames[_key] = arguments[_key];
  }

  if (typeof arguments[0] === "function") {
    var grabStoresFn = arguments[0];
    return function (componentClass) {
      return createStoreInjector(grabStoresFn, componentClass, grabStoresFn.name, true);
    };
  } else {
    return function (componentClass) {
      return createStoreInjector(grabStoresByName(storeNames), componentClass, storeNames.join("-"), false);
    };
  }
}

var protoStoreKey = /*#__PURE__*/newSymbol("disposeOnUnmountProto");
var instStoreKey = /*#__PURE__*/newSymbol("disposeOnUnmountInst");

function runDisposersOnWillUnmount() {
  var _this = this;
  [].concat(this[protoStoreKey] || [], this[instStoreKey] || []).forEach(function (propKeyOrFunction) {
    var prop = typeof propKeyOrFunction === "string" ? _this[propKeyOrFunction] : propKeyOrFunction;

    if (prop !== undefined && prop !== null) {
      if (Array.isArray(prop)) prop.map(function (f) {
        return f();
      });else prop();
    }
  });
}

function disposeOnUnmount(target, propertyKeyOrFunction) {
  if (Array.isArray(propertyKeyOrFunction)) {
    return propertyKeyOrFunction.map(function (fn) {
      return disposeOnUnmount(target, fn);
    });
  }

  var c = Object.getPrototypeOf(target).constructor;
  var c2 = Object.getPrototypeOf(target.constructor); // Special case for react-hot-loader

  var c3 = Object.getPrototypeOf(Object.getPrototypeOf(target));

  if (!(c === external_window_React_default.a.Component || c === external_window_React_default.a.PureComponent || c2 === external_window_React_default.a.Component || c2 === external_window_React_default.a.PureComponent || c3 === external_window_React_default.a.Component || c3 === external_window_React_default.a.PureComponent)) {
    throw new Error("[mobx-react] disposeOnUnmount only supports direct subclasses of React.Component or React.PureComponent.");
  }

  if (typeof propertyKeyOrFunction !== "string" && typeof propertyKeyOrFunction !== "function" && !Array.isArray(propertyKeyOrFunction)) {
    throw new Error("[mobx-react] disposeOnUnmount only works if the parameter is either a property key or a function.");
  } // decorator's target is the prototype, so it doesn't have any instance properties like props


  var isDecorator = typeof propertyKeyOrFunction === "string"; // add property key / function we want run (disposed) to the store

  var componentWasAlreadyModified = !!target[protoStoreKey] || !!target[instStoreKey];
  var store = isDecorator ? // decorators are added to the prototype store
  target[protoStoreKey] || (target[protoStoreKey] = []) : // functions are added to the instance store
  target[instStoreKey] || (target[instStoreKey] = []);
  store.push(propertyKeyOrFunction); // tweak the component class componentWillUnmount if not done already

  if (!componentWasAlreadyModified) {
    patch(target, "componentWillUnmount", runDisposersOnWillUnmount);
  } // return the disposer as is if invoked as a non decorator


  if (typeof propertyKeyOrFunction !== "string") {
    return propertyKeyOrFunction;
  }
}

function createChainableTypeChecker(validator) {
  function checkType(isRequired, props, propName, componentName, location, propFullName) {
    for (var _len = arguments.length, rest = new Array(_len > 6 ? _len - 6 : 0), _key = 6; _key < _len; _key++) {
      rest[_key - 6] = arguments[_key];
    }

    return Object(mobx_esm["untracked"])(function () {
      componentName = componentName || "<<anonymous>>";
      propFullName = propFullName || propName;

      if (props[propName] == null) {
        if (isRequired) {
          var actual = props[propName] === null ? "null" : "undefined";
          return new Error("The " + location + " `" + propFullName + "` is marked as required " + "in `" + componentName + "`, but its value is `" + actual + "`.");
        }

        return null;
      } else {
        // @ts-ignore rest arg is necessary for some React internals - fails tests otherwise
        return validator.apply(void 0, [props, propName, componentName, location, propFullName].concat(rest));
      }
    });
  }

  var chainedCheckType = checkType.bind(null, false); // Add isRequired to satisfy Requirable

  chainedCheckType.isRequired = checkType.bind(null, true);
  return chainedCheckType;
} // Copied from React.PropTypes


function isSymbol(propType, propValue) {
  // Native Symbol.
  if (propType === "symbol") {
    return true;
  } // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'


  if (propValue["@@toStringTag"] === "Symbol") {
    return true;
  } // Fallback for non-spec compliant Symbols which are polyfilled.


  if (typeof Symbol === "function" && propValue instanceof Symbol) {
    return true;
  }

  return false;
} // Copied from React.PropTypes


function getPropType(propValue) {
  var propType = typeof propValue;

  if (Array.isArray(propValue)) {
    return "array";
  }

  if (propValue instanceof RegExp) {
    // Old webkits (at least until Android 4.0) return 'function' rather than
    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
    // passes PropTypes.object.
    return "object";
  }

  if (isSymbol(propType, propValue)) {
    return "symbol";
  }

  return propType;
} // This handles more types than `getPropType`. Only used for error messages.
// Copied from React.PropTypes


function getPreciseType(propValue) {
  var propType = getPropType(propValue);

  if (propType === "object") {
    if (propValue instanceof Date) {
      return "date";
    } else if (propValue instanceof RegExp) {
      return "regexp";
    }
  }

  return propType;
}

function createObservableTypeCheckerCreator(allowNativeType, mobxType) {
  return createChainableTypeChecker(function (props, propName, componentName, location, propFullName) {
    return Object(mobx_esm["untracked"])(function () {
      if (allowNativeType) {
        if (getPropType(props[propName]) === mobxType.toLowerCase()) return null;
      }

      var mobxChecker;

      switch (mobxType) {
        case "Array":
          mobxChecker = mobx_esm["isObservableArray"];
          break;

        case "Object":
          mobxChecker = mobx_esm["isObservableObject"];
          break;

        case "Map":
          mobxChecker = mobx_esm["isObservableMap"];
          break;

        default:
          throw new Error("Unexpected mobxType: " + mobxType);
      }

      var propValue = props[propName];

      if (!mobxChecker(propValue)) {
        var preciseType = getPreciseType(propValue);
        var nativeTypeExpectationMessage = allowNativeType ? " or javascript `" + mobxType.toLowerCase() + "`" : "";
        return new Error("Invalid prop `" + propFullName + "` of type `" + preciseType + "` supplied to" + " `" + componentName + "`, expected `mobx.Observable" + mobxType + "`" + nativeTypeExpectationMessage + ".");
      }

      return null;
    });
  });
}

function createObservableArrayOfTypeChecker(allowNativeType, typeChecker) {
  return createChainableTypeChecker(function (props, propName, componentName, location, propFullName) {
    for (var _len2 = arguments.length, rest = new Array(_len2 > 5 ? _len2 - 5 : 0), _key2 = 5; _key2 < _len2; _key2++) {
      rest[_key2 - 5] = arguments[_key2];
    }

    return Object(mobx_esm["untracked"])(function () {
      if (typeof typeChecker !== "function") {
        return new Error("Property `" + propFullName + "` of component `" + componentName + "` has " + "invalid PropType notation.");
      } else {
        var error = createObservableTypeCheckerCreator(allowNativeType, "Array")(props, propName, componentName, location, propFullName);
        if (error instanceof Error) return error;
        var propValue = props[propName];

        for (var i = 0; i < propValue.length; i++) {
          error = typeChecker.apply(void 0, [propValue, i, componentName, location, propFullName + "[" + i + "]"].concat(rest));
          if (error instanceof Error) return error;
        }

        return null;
      }
    });
  });
}

var observableArray = /*#__PURE__*/createObservableTypeCheckerCreator(false, "Array");
var observableArrayOf = /*#__PURE__*/createObservableArrayOfTypeChecker.bind(null, false);
var observableMap = /*#__PURE__*/createObservableTypeCheckerCreator(false, "Map");
var observableObject = /*#__PURE__*/createObservableTypeCheckerCreator(false, "Object");
var arrayOrObservableArray = /*#__PURE__*/createObservableTypeCheckerCreator(true, "Array");
var arrayOrObservableArrayOf = /*#__PURE__*/createObservableArrayOfTypeChecker.bind(null, true);
var objectOrObservableObject = /*#__PURE__*/createObservableTypeCheckerCreator(true, "Object");
var PropTypes = {
  observableArray: observableArray,
  observableArrayOf: observableArrayOf,
  observableMap: observableMap,
  observableObject: observableObject,
  arrayOrObservableArray: arrayOrObservableArray,
  arrayOrObservableArrayOf: arrayOrObservableArrayOf,
  objectOrObservableObject: objectOrObservableObject
};

if (!external_window_React_["Component"]) throw new Error("mobx-react requires React to be available");
if (!mobx_esm["observable"]) throw new Error("mobx-react requires mobx to be available");


//# sourceMappingURL=mobxreact.esm.js.map

// CONCATENATED MODULE: ../editor-core/src/utils/obx.ts


Object(mobx_esm["configure"])({
  enforceActions: 'never'
});
// 常用的直接导出，其他的以 mobx 命名空间导出





/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.logger = void 0;
__exportStar(__webpack_require__(85), exports);
__exportStar(__webpack_require__(24), exports);
__exportStar(__webpack_require__(88), exports);
__exportStar(__webpack_require__(45), exports);
__exportStar(__webpack_require__(46), exports);
__exportStar(__webpack_require__(47), exports);
__exportStar(__webpack_require__(89), exports);
var logger_1 = __webpack_require__(47);
exports.logger = logger_1.default;
//# sourceMappingURL=index.js.map

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.symbolString = exports.isExtendOf = exports.getGlobalType = exports.isClass = void 0;
var class_1 = __webpack_require__(34);
var getSuperClassInfo_1 = __webpack_require__(45);
var _uid = 0;
var _globalTypes = {};
function isClass(target) {
    return (target === null || target === void 0 ? void 0 : target.prototype) && target.prototype.constructor === target;
    // If browser, maybe no class
    // getPrototypeOf a class, is not Function, not instanceof Function, but typeof 'function'
}
exports.isClass = isClass;
/**
 * getGlobalType
 * @param key class, string or symbol.
 * @param prefix the prefix of type.
 */
function getGlobalType(key, prefix) {
    if (prefix === void 0) { prefix = ''; }
    if (!key)
        throw new Error('no key.');
    // object for ie11 symbol
    if (['string', 'symbol', 'object'].includes(typeof key)) {
        return key;
    }
    if (key.hasOwnProperty('__type')) {
        return key['__type'];
    }
    var type;
    var keyName = key[class_1.nameSymbol] || key.name;
    if (typeof key !== 'function' || !keyName) {
        // Only for compatible with es5 class
        throw new Error('data MUST be a class or string.');
    }
    type = prefix + keyName;
    if (_globalTypes[type]) {
        type = type + '_' + _uid++;
    }
    _globalTypes[type] = true;
    Object.defineProperty(key, '__type', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: type,
    });
    return type;
}
exports.getGlobalType = getGlobalType;
function isExtendOf(classType, superClassType) {
    if (!isClass(classType) || !isClass(superClassType)) {
        throw new Error('classType and superClassType MUST be a class.');
    }
    var type = getGlobalType(superClassType);
    return !!(0, getSuperClassInfo_1.getSuperClassInfo)(classType).find(function (cls) { return cls.type === type; });
}
exports.isExtendOf = isExtendOf;
function symbolString(key) {
    return typeof key === 'symbol' ? key.toString() : key;
}
exports.symbolString = symbolString;
//# sourceMappingURL=getGlobalType.js.map

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.classLoader = exports.ClassLoader = exports.DuplicateRegistrationError = void 0;
var metadata_1 = __webpack_require__(13);
var utils_1 = __webpack_require__(23);
var DuplicateRegistrationError = /** @class */ (function (_super) {
    __extends(DuplicateRegistrationError, _super);
    function DuplicateRegistrationError(type) {
        return _super.call(this, "Type ".concat(type.name, " is already registration.")) || this;
    }
    return DuplicateRegistrationError;
}(Error));
exports.DuplicateRegistrationError = DuplicateRegistrationError;
var ClassLoader = /** @class */ (function () {
    function ClassLoader(classInfoMap, implementCacheMap, callback) {
        if (classInfoMap === void 0) { classInfoMap = new Map(); }
        if (implementCacheMap === void 0) { implementCacheMap = new Map(); }
        if (callback === void 0) { callback = {}; }
        this.classInfoMap = classInfoMap;
        this.implementCacheMap = implementCacheMap;
        this.callback = callback;
    }
    /** has class */
    ClassLoader.prototype.hasClass = function (type) {
        return this.classInfoMap.has(type);
    };
    /** register class */
    ClassLoader.prototype.registerClass = function (type, info) {
        var _this = this;
        var _a, _b, _c;
        if (this.classInfoMap.has(type)) {
            throw new DuplicateRegistrationError(type);
        }
        var metadata = (0, metadata_1.getMetadata)(type);
        metadata.injectable = true;
        var clsInfo = info || metadata.classInfo;
        if (!clsInfo.name) {
            clsInfo.name = type.name;
        }
        if (!((_a = clsInfo.extends) === null || _a === void 0 ? void 0 : _a.length)) {
            var superClasses = (0, utils_1.getSuperClassInfo)(type);
            clsInfo.extends = superClasses.map(function (c) { return c.class; });
        }
        this.classInfoMap.set(type, clsInfo);
        if (!clsInfo.implements) {
            clsInfo.implements = [];
        }
        // add cache
        __spreadArray(__spreadArray([], clsInfo.extends, true), clsInfo.implements, true).forEach(function (ext) {
            var impls = _this.getImplCacheByType(ext);
            if (impls.every(function (impl) { return impl.type !== type; })) {
                impls.push({
                    type: type,
                    info: clsInfo,
                });
            }
        });
        (_c = (_b = this.callback).onRegisterClass) === null || _c === void 0 ? void 0 : _c.call(_b, type, clsInfo);
        return this;
    };
    /** unregister class */
    ClassLoader.prototype.unregisterClass = function (type) {
        var _this = this;
        var _a, _b;
        var info = this.classInfoMap.get(type);
        if (info) {
            // remove from cache
            __spreadArray(__spreadArray([], info.extends, true), info.implements, true).forEach(function (ext) {
                var cache = _this.getImplCacheByType(ext);
                var index = cache.findIndex(function (c) { return c.type === type; });
                /* istanbul ignore else */
                if (index >= 0) {
                    cache.splice(index, 1);
                }
            });
            var ret = this.classInfoMap.delete(type);
            (_b = (_a = this.callback).onUnregisterClass) === null || _b === void 0 ? void 0 : _b.call(_a, type, info);
            return ret;
        }
        return false;
    };
    /** get class info */
    ClassLoader.prototype.getClassInfo = function (type) {
        return this.classInfoMap.get(type);
    };
    /** filter classes by info */
    ClassLoader.prototype.filterClasses = function (pattern) {
        var classes = [];
        this.classInfoMap.forEach(function (info, type) {
            var typeWithInfo = { type: type, info: info };
            if (pattern(typeWithInfo)) {
                classes.push(typeWithInfo);
            }
        });
        return classes;
    };
    /** classes of extends/implements type */
    ClassLoader.prototype.getImplementClasses = function (type) {
        return this.getImplCacheByType(type);
    };
    ClassLoader.prototype.clearAll = function () {
        this.classInfoMap.clear();
        this.implementCacheMap.clear();
        return this;
    };
    /** return new instance from this */
    ClassLoader.prototype.clone = function () {
        var Constructor = this.constructor;
        var newInst = new Constructor();
        newInst.initWith(this);
        return newInst;
    };
    /**
     * init maps from instance
     * @param oldLoader source loader
     */
    ClassLoader.prototype.initWith = function (oldLoader) {
        this.classInfoMap = new Map(oldLoader.classInfoMap);
        this.implementCacheMap = this.cloneImplCacheMap(oldLoader.implementCacheMap);
        this.callback = oldLoader.callback;
    };
    ClassLoader.prototype.cloneImplCacheMap = function (map) {
        return new Map(Array.from(map.entries()).map(function (_a) {
            var k = _a[0], v = _a[1];
            return [k, __spreadArray([], v, true)];
        }));
    };
    ClassLoader.prototype.getImplCacheByType = function (type) {
        var key = (0, utils_1.getGlobalType)(type);
        if (!this.implementCacheMap.has(key)) {
            this.implementCacheMap.set(key, []);
            return this.getImplCacheByType(type);
        }
        return this.implementCacheMap.get(key);
    };
    return ClassLoader;
}());
exports.ClassLoader = ClassLoader;
exports.classLoader = new ClassLoader();
//# sourceMappingURL=ClassLoader.js.map

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

const debug = (
  typeof process === 'object' &&
  process.env &&
  process.env.NODE_DEBUG &&
  /\bsemver\b/i.test(process.env.NODE_DEBUG)
) ? (...args) => console.error('SEMVER', ...args)
  : () => {}

module.exports = debug

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(42)))

/***/ }),
/* 27 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Preference; });
/* harmony import */ var store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(32);
/* harmony import */ var store__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(store__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(30);
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }


var logger = Object(_logger__WEBPACK_IMPORTED_MODULE_1__[/* getLogger */ "a"])({
  level: 'warn',
  bizName: 'Preference'
});
var STORAGE_KEY_PREFIX = 'ale';
/**
 * used to store user preferences, such as pinned status of a pannel.
 * save to local storage.
 */
var Preference = /*#__PURE__*/function () {
  function Preference() {
    _classCallCheck(this, Preference);
  }
  return _createClass(Preference, [{
    key: "getStorageKey",
    value: function getStorageKey(key, module) {
      var moduleKey = module || '__inner__';
      return "".concat(STORAGE_KEY_PREFIX, "_").concat(moduleKey, ".").concat(key);
    }
  }, {
    key: "set",
    value: function set(key, value, module) {
      if (!key || typeof key !== 'string' || key.length === 0) {
        logger.error('Invalid key when setting preference', key);
        return;
      }
      var storageKey = this.getStorageKey(key, module);
      logger.debug('storageKey:', storageKey, 'set with value:', value);
      store__WEBPACK_IMPORTED_MODULE_0___default.a.set(storageKey, value);
    }
  }, {
    key: "get",
    value: function get(key, module) {
      if (!key || typeof key !== 'string' || key.length === 0) {
        logger.error('Invalid key when getting from preference', key);
        return;
      }
      var storageKey = this.getStorageKey(key, module);
      var result = store__WEBPACK_IMPORTED_MODULE_0___default.a.get(storageKey);
      logger.debug('storageKey:', storageKey, 'get with result:', result);
      return result;
    }
    /**
     * check if local storage contain certain key
     *
     * @param {string} key
     * @param {string} module
     */
  }, {
    key: "contains",
    value: function contains(key, module) {
      if (!key || typeof key !== 'string' || key.length === 0) {
        logger.error('Invalid key when getting from preference', key);
        return false;
      }
      var storageKey = this.getStorageKey(key, module);
      var result = store__WEBPACK_IMPORTED_MODULE_0___default.a.get(storageKey);
      return !(result === undefined || result === null);
    }
  }]);
}();


/***/ }),
/* 28 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export EngineConfig */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return engineConfig; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _alilc_lowcode_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
/* harmony import */ var _utils_logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(30);
/* harmony import */ var _utils_preference__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(27);
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }




var logger = Object(_utils_logger__WEBPACK_IMPORTED_MODULE_2__[/* getLogger */ "a"])({
  level: 'log',
  bizName: 'config'
});
// this default behavior will be different later
var STRICT_PLUGIN_MODE_DEFAULT = true;
// used in strict mode, when only options in this VALID_ENGINE_OPTIONS can be accepted
// type and description are only used for developer`s assistance, won`t affect runtime
var VALID_ENGINE_OPTIONS = {
  enableCondition: {
    type: 'boolean',
    description: '是否开启 condition 的能力，默认在设计器中不管 condition 是啥都正常展示'
  },
  designMode: {
    type: 'string',
    enum: ['design', 'live'],
    default: 'design',
    description: '设计模式，live 模式将会实时展示变量值'
  },
  device: {
    type: 'string',
    enum: ['default', 'mobile', 'any string value'],
    default: 'default',
    description: '设备类型'
  },
  deviceClassName: {
    type: 'string',
    default: undefined,
    description: '指定初始化的 deviceClassName，挂载到画布的顶层节点上'
  },
  locale: {
    type: 'string',
    default: 'zh-CN',
    description: '语言'
  },
  renderEnv: {
    type: 'string',
    enum: ['react', 'any string value'],
    default: 'react',
    description: '渲染器类型'
  },
  deviceMapper: {
    type: 'object',
    description: '设备类型映射器，处理设计器与渲染器中 device 的映射'
  },
  enableStrictPluginMode: {
    type: 'boolean',
    default: STRICT_PLUGIN_MODE_DEFAULT,
    description: '开启严格插件模式，默认值：STRICT_PLUGIN_MODE_DEFAULT , 严格模式下，插件将无法通过 engineOptions 传递自定义配置项'
  },
  enableReactiveContainer: {
    type: 'boolean',
    default: false,
    description: '开启拖拽组件时，即将被放入的容器是否有视觉反馈'
  },
  disableAutoRender: {
    type: 'boolean',
    default: false,
    description: '关闭画布自动渲染，在资产包多重异步加载的场景有效'
  },
  disableDetecting: {
    type: 'boolean',
    default: false,
    description: '关闭拖拽组件时的虚线响应，性能考虑'
  },
  customizeIgnoreSelectors: {
    type: 'function',
    default: undefined,
    description: '定制画布中点击被忽略的 selectors, eg. (defaultIgnoreSelectors: string[], e: MouseEvent) => string[]'
  },
  disableDefaultSettingPanel: {
    type: 'boolean',
    default: false,
    description: '禁止默认的设置面板'
  },
  disableDefaultSetters: {
    type: 'boolean',
    default: false,
    description: '禁止默认的设置器'
  },
  enableCanvasLock: {
    type: 'boolean',
    default: false,
    description: '打开画布的锁定操作'
  },
  enableLockedNodeSetting: {
    type: 'boolean',
    default: false,
    description: '容器锁定后，容器本身是否可以设置属性，仅当画布锁定特性开启时生效'
  },
  stayOnTheSameSettingTab: {
    type: 'boolean',
    default: false,
    description: '当选中节点切换时，是否停留在相同的设置 tab 上'
  },
  hideSettingsTabsWhenOnlyOneItem: {
    type: 'boolean',
    description: '是否在只有一个 item 的时候隐藏设置 tabs'
  },
  loadingComponent: {
    type: 'ComponentType',
    default: undefined,
    description: '自定义 loading 组件'
  },
  supportVariableGlobally: {
    type: 'boolean',
    default: false,
    description: '设置所有属性支持变量配置'
  },
  visionSettings: {
    type: 'object',
    description: 'Vision-polyfill settings'
  },
  simulatorUrl: {
    type: 'array',
    description: '自定义 simulatorUrl 的地址'
  },
  // 与 react-renderer 的 appHelper 一致，https://lowcode-engine.cn/site/docs/guide/expand/runtime/renderer#apphelper
  appHelper: {
    type: 'object',
    description: '定义 utils 和 constants 等对象'
  },
  requestHandlersMap: {
    type: 'object',
    description: '数据源引擎的请求处理器映射'
  },
  thisRequiredInJSE: {
    type: 'boolean',
    description: 'JSExpression 是否只支持使用 this 来访问上下文变量'
  },
  enableStrictNotFoundMode: {
    type: 'boolean',
    description: '当开启组件未找到严格模式时，渲染模块不会默认给一个容器组件'
  },
  focusNodeSelector: {
    type: 'function',
    description: '配置指定节点为根组件'
  },
  enableAutoOpenFirstWindow: {
    type: 'boolean',
    description: '应用级设计模式下，自动打开第一个窗口',
    default: true
  },
  enableWorkspaceMode: {
    type: 'boolean',
    description: '是否开启应用级设计模式',
    default: false
  },
  workspaceEmptyComponent: {
    type: 'function',
    description: '应用级设计模式下，窗口为空时展示的占位组件'
  },
  enableContextMenu: {
    type: 'boolean',
    description: '是否开启右键菜单',
    default: false
  },
  hideComponentAction: {
    type: 'boolean',
    description: '是否隐藏设计器辅助层',
    default: false
  }
};
var getStrictModeValue = function getStrictModeValue(engineOptions, defaultValue) {
  if (!engineOptions || !Object(_alilc_lowcode_utils__WEBPACK_IMPORTED_MODULE_1__[/* isPlainObject */ "R"])(engineOptions)) {
    return defaultValue;
  }
  if (engineOptions.enableStrictPluginMode === undefined || engineOptions.enableStrictPluginMode === null) {
    return defaultValue;
  }
  return engineOptions.enableStrictPluginMode;
};
var EngineConfig = /*#__PURE__*/function () {
  function EngineConfig(config) {
    _classCallCheck(this, EngineConfig);
    this.config = {};
    this.waits = new Map();
    /**
     * used to store preferences
     *
     */
    this.preference = void 0;
    this.config = config || {};
    this.preference = new _utils_preference__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"]();
  }
  /**
   * 判断指定 key 是否有值
   * @param key
   */
  return _createClass(EngineConfig, [{
    key: "has",
    value: function has(key) {
      return this.config[key] !== undefined;
    }
    /**
     * 获取指定 key 的值
     * @param key
     * @param defaultValue
     */
  }, {
    key: "get",
    value: function get(key, defaultValue) {
      return Object(lodash__WEBPACK_IMPORTED_MODULE_0__["get"])(this.config, key, defaultValue);
    }
    /**
     * 设置指定 key 的值
     * @param key
     * @param value
     */
  }, {
    key: "set",
    value: function set(key, value) {
      this.config[key] = value;
      this.notifyGot(key);
    }
    /**
     * 批量设值，set 的对象版本
     * @param config
     */
  }, {
    key: "setConfig",
    value: function setConfig(config) {
      var _this = this;
      if (config) {
        Object.keys(config).forEach(function (key) {
          _this.set(key, config[key]);
        });
      }
    }
    /**
     * if engineOptions.strictPluginMode === true, only accept propertied predefined in EngineOptions.
     *
     * @param {IPublicTypeEngineOptions} engineOptions
     */
  }, {
    key: "setEngineOptions",
    value: function setEngineOptions(engineOptions) {
      var _this2 = this;
      if (!engineOptions || !Object(_alilc_lowcode_utils__WEBPACK_IMPORTED_MODULE_1__[/* isPlainObject */ "R"])(engineOptions)) {
        return;
      }
      var strictMode = getStrictModeValue(engineOptions, STRICT_PLUGIN_MODE_DEFAULT) === true;
      if (strictMode) {
        var isValidKey = function isValidKey(key) {
          var result = VALID_ENGINE_OPTIONS[key];
          return !(result === undefined || result === null);
        };
        Object.keys(engineOptions).forEach(function (key) {
          if (isValidKey(key)) {
            _this2.set(key, engineOptions[key]);
          } else {
            logger.warn("failed to config ".concat(key, " to engineConfig, only predefined options can be set under strict mode, predefined options: "), VALID_ENGINE_OPTIONS);
          }
        });
      } else {
        this.setConfig(engineOptions);
      }
    }
    /**
     * 获取指定 key 的值，若此时还未赋值，则等待，若已有值，则直接返回值
     *  注：此函数返回 Promise 实例，只会执行（fullfill）一次
     * @param key
     * @returns
     */
  }, {
    key: "onceGot",
    value: function onceGot(key) {
      var _this3 = this;
      var val = this.config[key];
      if (val !== undefined) {
        return Promise.resolve(val);
      }
      return new Promise(function (resolve) {
        _this3.setWait(key, resolve, true);
      });
    }
    /**
     * 获取指定 key 的值，函数回调模式，若多次被赋值，回调会被多次调用
     * @param key
     * @param fn
     * @returns
     */
  }, {
    key: "onGot",
    value: function onGot(key, fn) {
      var _this$config,
        _this4 = this;
      var val = (_this$config = this.config) === null || _this$config === void 0 ? void 0 : _this$config[key];
      if (val !== undefined) {
        fn(val);
      }
      this.setWait(key, fn);
      return function () {
        _this4.delWait(key, fn);
      };
    }
  }, {
    key: "notifyGot",
    value: function notifyGot(key) {
      var waits = this.waits.get(key);
      if (!waits) {
        return;
      }
      waits = waits.slice().reverse();
      var i = waits.length;
      while (i--) {
        waits[i].resolve(this.get(key));
        if (waits[i].once) {
          waits.splice(i, 1);
        }
      }
      if (waits.length > 0) {
        this.waits.set(key, waits);
      } else {
        this.waits.delete(key);
      }
    }
  }, {
    key: "setWait",
    value: function setWait(key, resolve, once) {
      var waits = this.waits.get(key);
      if (waits) {
        waits.push({
          resolve: resolve,
          once: once
        });
      } else {
        this.waits.set(key, [{
          resolve: resolve,
          once: once
        }]);
      }
    }
  }, {
    key: "delWait",
    value: function delWait(key, fn) {
      var waits = this.waits.get(key);
      if (!waits) {
        return;
      }
      var i = waits.length;
      while (i--) {
        if (waits[i].resolve === fn) {
          waits.splice(i, 1);
        }
      }
      if (waits.length < 1) {
        this.waits.delete(key);
      }
    }
  }, {
    key: "getPreference",
    value: function getPreference() {
      return this.preference;
    }
  }]);
}();
var engineConfig = new EngineConfig();

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(__webpack_require__(84), exports);
__exportStar(__webpack_require__(34), exports);
__exportStar(__webpack_require__(90), exports);
//# sourceMappingURL=index.js.map

/***/ }),
/* 30 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return getLogger; });
/* harmony import */ var _alilc_lowcode_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);


function getLogger(config) {
  return new _alilc_lowcode_utils__WEBPACK_IMPORTED_MODULE_0__[/* Logger */ "e"](config);
}

/***/ }),
/* 31 */
/***/ (function(module) {

module.exports = JSON.parse("{\"NotValidNodeData\":\"不是有效的节点数据\",\"SelectComponents\":\"选择组件\",\"CopyAndPaste\":\"复制\",\"Copy\":\"拷贝\",\"PasteToTheBottom\":\"粘贴至下方\",\"PasteToTheInside\":\"粘贴至内部\",\"Delete\":\"删除\"}");

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

var engine = __webpack_require__(74)

var storages = __webpack_require__(75)
var plugins = [__webpack_require__(82)]

module.exports = engine.createStore(storages, plugins)


/***/ }),
/* 33 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(__webpack_require__(86), exports);
__exportStar(__webpack_require__(25), exports);
//# sourceMappingURL=index.js.map

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// parse out just the options we care about
const looseOption = Object.freeze({ loose: true })
const emptyOpts = Object.freeze({ })
const parseOptions = options => {
  if (!options) {
    return emptyOpts
  }

  if (typeof options !== 'object') {
    return looseOption
  }

  return options
}
module.exports = parseOptions


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const {
  MAX_SAFE_COMPONENT_LENGTH,
  MAX_SAFE_BUILD_LENGTH,
  MAX_LENGTH,
} = __webpack_require__(37)
const debug = __webpack_require__(26)
exports = module.exports = {}

// The actual regexps go on exports.re
const re = exports.re = []
const safeRe = exports.safeRe = []
const src = exports.src = []
const safeSrc = exports.safeSrc = []
const t = exports.t = {}
let R = 0

const LETTERDASHNUMBER = '[a-zA-Z0-9-]'

// Replace some greedy regex tokens to prevent regex dos issues. These regex are
// used internally via the safeRe object since all inputs in this library get
// normalized first to trim and collapse all extra whitespace. The original
// regexes are exported for userland consumption and lower level usage. A
// future breaking change could export the safer regex only with a note that
// all input should have extra whitespace removed.
const safeRegexReplacements = [
  ['\\s', 1],
  ['\\d', MAX_LENGTH],
  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],
]

const makeSafeRegex = (value) => {
  for (const [token, max] of safeRegexReplacements) {
    value = value
      .split(`${token}*`).join(`${token}{0,${max}}`)
      .split(`${token}+`).join(`${token}{1,${max}}`)
  }
  return value
}

const createToken = (name, value, isGlobal) => {
  const safe = makeSafeRegex(value)
  const index = R++
  debug(name, index, value)
  t[name] = index
  src[index] = value
  safeSrc[index] = safe
  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)
  safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined)
}

// The following Regular Expressions can be used for tokenizing,
// validating, and parsing SemVer version strings.

// ## Numeric Identifier
// A single `0`, or a non-zero digit followed by zero or more digits.

createToken('NUMERICIDENTIFIER', '0|[1-9]\\d*')
createToken('NUMERICIDENTIFIERLOOSE', '\\d+')

// ## Non-numeric Identifier
// Zero or more digits, followed by a letter or hyphen, and then zero or
// more letters, digits, or hyphens.

createToken('NONNUMERICIDENTIFIER', `\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`)

// ## Main Version
// Three dot-separated numeric identifiers.

createToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\.` +
                   `(${src[t.NUMERICIDENTIFIER]})\\.` +
                   `(${src[t.NUMERICIDENTIFIER]})`)

createToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\.` +
                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\.` +
                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)

// ## Pre-release Version Identifier
// A numeric identifier, or a non-numeric identifier.
// Non-numberic identifiers include numberic identifiers but can be longer.
// Therefore non-numberic identifiers must go first.

createToken('PRERELEASEIDENTIFIER', `(?:${src[t.NONNUMERICIDENTIFIER]
}|${src[t.NUMERICIDENTIFIER]})`)

createToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NONNUMERICIDENTIFIER]
}|${src[t.NUMERICIDENTIFIERLOOSE]})`)

// ## Pre-release Version
// Hyphen, followed by one or more dot-separated pre-release version
// identifiers.

createToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]
}(?:\\.${src[t.PRERELEASEIDENTIFIER]})*))`)

createToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]
}(?:\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)

// ## Build Metadata Identifier
// Any combination of digits, letters, or hyphens.

createToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`)

// ## Build Metadata
// Plus sign, followed by one or more period-separated build metadata
// identifiers.

createToken('BUILD', `(?:\\+(${src[t.BUILDIDENTIFIER]
}(?:\\.${src[t.BUILDIDENTIFIER]})*))`)

// ## Full Version String
// A main version, followed optionally by a pre-release version and
// build metadata.

// Note that the only major, minor, patch, and pre-release sections of
// the version string are capturing groups.  The build metadata is not a
// capturing group, because it should not ever be used in version
// comparison.

createToken('FULLPLAIN', `v?${src[t.MAINVERSION]
}${src[t.PRERELEASE]}?${
  src[t.BUILD]}?`)

createToken('FULL', `^${src[t.FULLPLAIN]}$`)

// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.
// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty
// common in the npm registry.
createToken('LOOSEPLAIN', `[v=\\s]*${src[t.MAINVERSIONLOOSE]
}${src[t.PRERELEASELOOSE]}?${
  src[t.BUILD]}?`)

createToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)

createToken('GTLT', '((?:<|>)?=?)')

// Something like "2.*" or "1.2.x".
// Note that "x.x" is a valid xRange identifer, meaning "any version"
// Only the first item is strictly required.
createToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`)
createToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\*`)

createToken('XRANGEPLAIN', `[v=\\s]*(${src[t.XRANGEIDENTIFIER]})` +
                   `(?:\\.(${src[t.XRANGEIDENTIFIER]})` +
                   `(?:\\.(${src[t.XRANGEIDENTIFIER]})` +
                   `(?:${src[t.PRERELEASE]})?${
                     src[t.BUILD]}?` +
                   `)?)?`)

createToken('XRANGEPLAINLOOSE', `[v=\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +
                        `(?:\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +
                        `(?:\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +
                        `(?:${src[t.PRERELEASELOOSE]})?${
                          src[t.BUILD]}?` +
                        `)?)?`)

createToken('XRANGE', `^${src[t.GTLT]}\\s*${src[t.XRANGEPLAIN]}$`)
createToken('XRANGELOOSE', `^${src[t.GTLT]}\\s*${src[t.XRANGEPLAINLOOSE]}$`)

// Coercion.
// Extract anything that could conceivably be a part of a valid semver
createToken('COERCEPLAIN', `${'(^|[^\\d])' +
              '(\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +
              `(?:\\.(\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +
              `(?:\\.(\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`)
createToken('COERCE', `${src[t.COERCEPLAIN]}(?:$|[^\\d])`)
createToken('COERCEFULL', src[t.COERCEPLAIN] +
              `(?:${src[t.PRERELEASE]})?` +
              `(?:${src[t.BUILD]})?` +
              `(?:$|[^\\d])`)
createToken('COERCERTL', src[t.COERCE], true)
createToken('COERCERTLFULL', src[t.COERCEFULL], true)

// Tilde ranges.
// Meaning is "reasonably at or greater than"
createToken('LONETILDE', '(?:~>?)')

createToken('TILDETRIM', `(\\s*)${src[t.LONETILDE]}\\s+`, true)
exports.tildeTrimReplace = '$1~'

createToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)
createToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)

// Caret ranges.
// Meaning is "at least and backwards compatible with"
createToken('LONECARET', '(?:\\^)')

createToken('CARETTRIM', `(\\s*)${src[t.LONECARET]}\\s+`, true)
exports.caretTrimReplace = '$1^'

createToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)
createToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)

// A simple gt/lt/eq thing, or just "" to indicate "any version"
createToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\s*(${src[t.LOOSEPLAIN]})$|^$`)
createToken('COMPARATOR', `^${src[t.GTLT]}\\s*(${src[t.FULLPLAIN]})$|^$`)

// An expression to strip any whitespace between the gtlt and the thing
// it modifies, so that `> 1.2.3` ==> `>1.2.3`
createToken('COMPARATORTRIM', `(\\s*)${src[t.GTLT]
}\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)
exports.comparatorTrimReplace = '$1$2$3'

// Something like `1.2.3 - 1.2.4`
// Note that these all use the loose form, because they'll be
// checked against either the strict or loose comparator form
// later.
createToken('HYPHENRANGE', `^\\s*(${src[t.XRANGEPLAIN]})` +
                   `\\s+-\\s+` +
                   `(${src[t.XRANGEPLAIN]})` +
                   `\\s*$`)

createToken('HYPHENRANGELOOSE', `^\\s*(${src[t.XRANGEPLAINLOOSE]})` +
                        `\\s+-\\s+` +
                        `(${src[t.XRANGEPLAINLOOSE]})` +
                        `\\s*$`)

// Star ranges basically just allow anything at all.
createToken('STAR', '(<|>)?=?\\s*\\*')
// >=0.0.0 is like a star
createToken('GTE0', '^\\s*>=\\s*0\\.0\\.0\\s*$')
createToken('GTE0PRE', '^\\s*>=\\s*0\\.0\\.0-0\\s*$')


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// Note: this is the semver.org version of the spec that it implements
// Not necessarily the package version of this code.
const SEMVER_SPEC_VERSION = '2.0.0'

const MAX_LENGTH = 256
const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||
/* istanbul ignore next */ 9007199254740991

// Max safe segment length for coercion.
const MAX_SAFE_COMPONENT_LENGTH = 16

// Max safe length for a build identifier. The max length minus 6 characters for
// the shortest version with a build 0.0.0+BUILD.
const MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6

const RELEASE_TYPES = [
  'major',
  'premajor',
  'minor',
  'preminor',
  'patch',
  'prepatch',
  'prerelease',
]

module.exports = {
  MAX_LENGTH,
  MAX_SAFE_COMPONENT_LENGTH,
  MAX_SAFE_BUILD_LENGTH,
  MAX_SAFE_INTEGER,
  RELEASE_TYPES,
  SEMVER_SPEC_VERSION,
  FLAG_INCLUDE_PRERELEASE: 0b001,
  FLAG_LOOSE: 0b010,
}


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const debug = __webpack_require__(26)
const { MAX_LENGTH, MAX_SAFE_INTEGER } = __webpack_require__(37)
const { safeRe: re, t } = __webpack_require__(36)

const parseOptions = __webpack_require__(35)
const { compareIdentifiers } = __webpack_require__(112)
class SemVer {
  constructor (version, options) {
    options = parseOptions(options)

    if (version instanceof SemVer) {
      if (version.loose === !!options.loose &&
        version.includePrerelease === !!options.includePrerelease) {
        return version
      } else {
        version = version.version
      }
    } else if (typeof version !== 'string') {
      throw new TypeError(`Invalid version. Must be a string. Got type "${typeof version}".`)
    }

    if (version.length > MAX_LENGTH) {
      throw new TypeError(
        `version is longer than ${MAX_LENGTH} characters`
      )
    }

    debug('SemVer', version, options)
    this.options = options
    this.loose = !!options.loose
    // this isn't actually relevant for versions, but keep it so that we
    // don't run into trouble passing this.options around.
    this.includePrerelease = !!options.includePrerelease

    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])

    if (!m) {
      throw new TypeError(`Invalid Version: ${version}`)
    }

    this.raw = version

    // these are actually numbers
    this.major = +m[1]
    this.minor = +m[2]
    this.patch = +m[3]

    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {
      throw new TypeError('Invalid major version')
    }

    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {
      throw new TypeError('Invalid minor version')
    }

    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {
      throw new TypeError('Invalid patch version')
    }

    // numberify any prerelease numeric ids
    if (!m[4]) {
      this.prerelease = []
    } else {
      this.prerelease = m[4].split('.').map((id) => {
        if (/^[0-9]+$/.test(id)) {
          const num = +id
          if (num >= 0 && num < MAX_SAFE_INTEGER) {
            return num
          }
        }
        return id
      })
    }

    this.build = m[5] ? m[5].split('.') : []
    this.format()
  }

  format () {
    this.version = `${this.major}.${this.minor}.${this.patch}`
    if (this.prerelease.length) {
      this.version += `-${this.prerelease.join('.')}`
    }
    return this.version
  }

  toString () {
    return this.version
  }

  compare (other) {
    debug('SemVer.compare', this.version, this.options, other)
    if (!(other instanceof SemVer)) {
      if (typeof other === 'string' && other === this.version) {
        return 0
      }
      other = new SemVer(other, this.options)
    }

    if (other.version === this.version) {
      return 0
    }

    return this.compareMain(other) || this.comparePre(other)
  }

  compareMain (other) {
    if (!(other instanceof SemVer)) {
      other = new SemVer(other, this.options)
    }

    return (
      compareIdentifiers(this.major, other.major) ||
      compareIdentifiers(this.minor, other.minor) ||
      compareIdentifiers(this.patch, other.patch)
    )
  }

  comparePre (other) {
    if (!(other instanceof SemVer)) {
      other = new SemVer(other, this.options)
    }

    // NOT having a prerelease is > having one
    if (this.prerelease.length && !other.prerelease.length) {
      return -1
    } else if (!this.prerelease.length && other.prerelease.length) {
      return 1
    } else if (!this.prerelease.length && !other.prerelease.length) {
      return 0
    }

    let i = 0
    do {
      const a = this.prerelease[i]
      const b = other.prerelease[i]
      debug('prerelease compare', i, a, b)
      if (a === undefined && b === undefined) {
        return 0
      } else if (b === undefined) {
        return 1
      } else if (a === undefined) {
        return -1
      } else if (a === b) {
        continue
      } else {
        return compareIdentifiers(a, b)
      }
    } while (++i)
  }

  compareBuild (other) {
    if (!(other instanceof SemVer)) {
      other = new SemVer(other, this.options)
    }

    let i = 0
    do {
      const a = this.build[i]
      const b = other.build[i]
      debug('build compare', i, a, b)
      if (a === undefined && b === undefined) {
        return 0
      } else if (b === undefined) {
        return 1
      } else if (a === undefined) {
        return -1
      } else if (a === b) {
        continue
      } else {
        return compareIdentifiers(a, b)
      }
    } while (++i)
  }

  // preminor will bump the version up to the next minor release, and immediately
  // down to pre-release. premajor and prepatch work the same way.
  inc (release, identifier, identifierBase) {
    if (release.startsWith('pre')) {
      if (!identifier && identifierBase === false) {
        throw new Error('invalid increment argument: identifier is empty')
      }
      // Avoid an invalid semver results
      if (identifier) {
        const match = `-${identifier}`.match(this.options.loose ? re[t.PRERELEASELOOSE] : re[t.PRERELEASE])
        if (!match || match[1] !== identifier) {
          throw new Error(`invalid identifier: ${identifier}`)
        }
      }
    }

    switch (release) {
      case 'premajor':
        this.prerelease.length = 0
        this.patch = 0
        this.minor = 0
        this.major++
        this.inc('pre', identifier, identifierBase)
        break
      case 'preminor':
        this.prerelease.length = 0
        this.patch = 0
        this.minor++
        this.inc('pre', identifier, identifierBase)
        break
      case 'prepatch':
        // If this is already a prerelease, it will bump to the next version
        // drop any prereleases that might already exist, since they are not
        // relevant at this point.
        this.prerelease.length = 0
        this.inc('patch', identifier, identifierBase)
        this.inc('pre', identifier, identifierBase)
        break
      // If the input is a non-prerelease version, this acts the same as
      // prepatch.
      case 'prerelease':
        if (this.prerelease.length === 0) {
          this.inc('patch', identifier, identifierBase)
        }
        this.inc('pre', identifier, identifierBase)
        break
      case 'release':
        if (this.prerelease.length === 0) {
          throw new Error(`version ${this.raw} is not a prerelease`)
        }
        this.prerelease.length = 0
        break

      case 'major':
        // If this is a pre-major version, bump up to the same major version.
        // Otherwise increment major.
        // 1.0.0-5 bumps to 1.0.0
        // 1.1.0 bumps to 2.0.0
        if (
          this.minor !== 0 ||
          this.patch !== 0 ||
          this.prerelease.length === 0
        ) {
          this.major++
        }
        this.minor = 0
        this.patch = 0
        this.prerelease = []
        break
      case 'minor':
        // If this is a pre-minor version, bump up to the same minor version.
        // Otherwise increment minor.
        // 1.2.0-5 bumps to 1.2.0
        // 1.2.1 bumps to 1.3.0
        if (this.patch !== 0 || this.prerelease.length === 0) {
          this.minor++
        }
        this.patch = 0
        this.prerelease = []
        break
      case 'patch':
        // If this is not a pre-release version, it will increment the patch.
        // If it is a pre-release it will bump up to the same patch version.
        // 1.2.0-5 patches to 1.2.0
        // 1.2.0 patches to 1.2.1
        if (this.prerelease.length === 0) {
          this.patch++
        }
        this.prerelease = []
        break
      // This probably shouldn't be used publicly.
      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.
      case 'pre': {
        const base = Number(identifierBase) ? 1 : 0

        if (this.prerelease.length === 0) {
          this.prerelease = [base]
        } else {
          let i = this.prerelease.length
          while (--i >= 0) {
            if (typeof this.prerelease[i] === 'number') {
              this.prerelease[i]++
              i = -2
            }
          }
          if (i === -1) {
            // didn't increment anything
            if (identifier === this.prerelease.join('.') && identifierBase === false) {
              throw new Error('invalid increment argument: identifier already exists')
            }
            this.prerelease.push(base)
          }
        }
        if (identifier) {
          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,
          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0
          let prerelease = [identifier, base]
          if (identifierBase === false) {
            prerelease = [identifier]
          }
          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {
            if (isNaN(this.prerelease[1])) {
              this.prerelease = prerelease
            }
          } else {
            this.prerelease = prerelease
          }
        }
        break
      }
      default:
        throw new Error(`invalid increment argument: ${release}`)
    }
    this.raw = this.format()
    if (this.build.length) {
      this.raw += `+${this.build.join('.')}`
    }
    return this
  }
}

module.exports = SemVer


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (true) {
  module.exports = __webpack_require__(68);
} else {}


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),
/* 41 */
/***/ (function(module) {

module.exports = JSON.parse("{\"NotValidNodeData\":\"Not valid node data\",\"SelectComponents\":\"Select components\",\"CopyAndPaste\":\"Copy and Paste\",\"Copy\":\"Copy\",\"PasteToTheBottom\":\"Paste to the bottom\",\"PasteToTheInside\":\"Paste to the inside\",\"Delete\":\"Delete\"}");

/***/ }),
/* 42 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 43 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export registerSetter */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Setters; });
/* harmony import */ var _alilc_lowcode_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }

var settersMap = new Map();
function registerSetter(typeOrMaps, setter) {
  if (_typeof(typeOrMaps) === 'object') {
    Object.keys(typeOrMaps).forEach(function (type) {
      registerSetter(type, typeOrMaps[type]);
    });
    return;
  }
  if (!setter) {
    return;
  }
  if (Object(_alilc_lowcode_utils__WEBPACK_IMPORTED_MODULE_0__[/* isCustomView */ "A"])(setter)) {
    setter = {
      component: setter,
      // todo: intl
      title: setter.displayName || setter.name || 'CustomSetter'
    };
  }
  if (!setter.initialValue) {
    var initial = getInitialFromSetter(setter.component);
    if (initial) {
      setter.initialValue = function (field) {
        return initial.call(field, field.getValue());
      };
    }
  }
  settersMap.set(typeOrMaps, _objectSpread({
    type: typeOrMaps
  }, setter));
}
function getInitialFromSetter(setter) {
  return setter && (setter.initial || setter.Initial || setter.type && (setter.type.initial || setter.type.Initial)) || null; // eslint-disable-line
}
var Setters = /*#__PURE__*/_createClass(function Setters() {
  var _this = this;
  var viewName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'global';
  _classCallCheck(this, Setters);
  this.viewName = void 0;
  this.settersMap = new Map();
  this.getSetter = function (type) {
    return _this.settersMap.get(type) || null;
  };
  this.registerSetter = function (typeOrMaps, setter) {
    if (_typeof(typeOrMaps) === 'object') {
      Object.keys(typeOrMaps).forEach(function (type) {
        _this.registerSetter(type, typeOrMaps[type]);
      });
      return;
    }
    if (!setter) {
      return;
    }
    if (Object(_alilc_lowcode_utils__WEBPACK_IMPORTED_MODULE_0__[/* isCustomView */ "A"])(setter)) {
      setter = {
        component: setter,
        // todo: intl
        title: setter.displayName || setter.name || 'CustomSetter'
      };
    }
    if (!setter.initialValue) {
      var initial = getInitialFromSetter(setter.component);
      if (initial) {
        setter.initialValue = function (field) {
          return initial.call(field, field.getValue());
        };
      }
    }
    _this.settersMap.set(typeOrMaps, _objectSpread({
      type: typeOrMaps
    }, setter));
  };
  this.getSettersMap = function () {
    return _this.settersMap;
  };
  this.createSetterContent = function (setter, props) {
    if (typeof setter === 'string') {
      setter = _this.getSetter(setter);
      if (!setter) {
        return null;
      }
      if (setter.defaultProps) {
        props = _objectSpread(_objectSpread({}, setter.defaultProps), props);
      }
      setter = setter.component;
    }
    // Fusion 的表单组件都是通过 'value' in props 来判断是否使用 defaultValue
    if ('value' in props && typeof props.value === 'undefined') {
      delete props.value;
    }
    return Object(_alilc_lowcode_utils__WEBPACK_IMPORTED_MODULE_0__[/* createContent */ "n"])(setter, props);
  };
  this.viewName = viewName;
});

/***/ }),
/* 44 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "globalContext", function() { return globalContext; });
/* harmony import */ var power_di__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(29);
/* harmony import */ var power_di__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(power_di__WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (checked) */ if(__webpack_require__.o(power_di__WEBPACK_IMPORTED_MODULE_0__, "Command")) __webpack_require__.d(__webpack_exports__, "Command", function() { return power_di__WEBPACK_IMPORTED_MODULE_0__["Command"]; });

/* harmony reexport (checked) */ if(__webpack_require__.o(power_di__WEBPACK_IMPORTED_MODULE_0__, "HelpTip")) __webpack_require__.d(__webpack_exports__, "HelpTip", function() { return power_di__WEBPACK_IMPORTED_MODULE_0__["HelpTip"]; });

/* harmony reexport (checked) */ if(__webpack_require__.o(power_di__WEBPACK_IMPORTED_MODULE_0__, "Hotkey")) __webpack_require__.d(__webpack_exports__, "Hotkey", function() { return power_di__WEBPACK_IMPORTED_MODULE_0__["Hotkey"]; });

/* harmony reexport (checked) */ if(__webpack_require__.o(power_di__WEBPACK_IMPORTED_MODULE_0__, "Tip")) __webpack_require__.d(__webpack_exports__, "Tip", function() { return power_di__WEBPACK_IMPORTED_MODULE_0__["Tip"]; });

/* harmony reexport (checked) */ if(__webpack_require__.o(power_di__WEBPACK_IMPORTED_MODULE_0__, "TipContainer")) __webpack_require__.d(__webpack_exports__, "TipContainer", function() { return power_di__WEBPACK_IMPORTED_MODULE_0__["TipContainer"]; });

/* harmony reexport (checked) */ if(__webpack_require__.o(power_di__WEBPACK_IMPORTED_MODULE_0__, "Title")) __webpack_require__.d(__webpack_exports__, "Title", function() { return power_di__WEBPACK_IMPORTED_MODULE_0__["Title"]; });

/* harmony reexport (checked) */ if(__webpack_require__.o(power_di__WEBPACK_IMPORTED_MODULE_0__, "createModuleEventBus")) __webpack_require__.d(__webpack_exports__, "createModuleEventBus", function() { return power_di__WEBPACK_IMPORTED_MODULE_0__["createModuleEventBus"]; });

/* harmony reexport (checked) */ if(__webpack_require__.o(power_di__WEBPACK_IMPORTED_MODULE_0__, "engineConfig")) __webpack_require__.d(__webpack_exports__, "engineConfig", function() { return power_di__WEBPACK_IMPORTED_MODULE_0__["engineConfig"]; });



var globalContext = power_di__WEBPACK_IMPORTED_MODULE_0__["IocContext"].DefaultInstance;

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.getSuperClassInfo = void 0;
var getGlobalType_1 = __webpack_require__(24);
function getSuperClassInfo(classType) {
    if (!(0, getGlobalType_1.isClass)(classType)) {
        throw new Error('need a classType.');
    }
    var superClasses = [];
    var tmpType = Object.getPrototypeOf(classType);
    while ((0, getGlobalType_1.isClass)(tmpType)) {
        var type = (0, getGlobalType_1.getGlobalType)(tmpType);
        superClasses.push({
            type: type,
            class: tmpType,
        });
        tmpType = Object.getPrototypeOf(tmpType);
    }
    return superClasses;
}
exports.getSuperClassInfo = getSuperClassInfo;
//# sourceMappingURL=getSuperClassInfo.js.map

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.guard = void 0;
function guard(f, opt) {
    var _a;
    if (opt === void 0) { opt = {}; }
    try {
        return f();
    }
    catch (error) {
        (_a = opt.onError) === null || _a === void 0 ? void 0 : _a.call(opt, error);
        return opt.defaultValue;
    }
}
exports.guard = guard;
//# sourceMappingURL=guard.js.map

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Logger = exports.OutLevel = void 0;
var OutLevel;
(function (OutLevel) {
    OutLevel[OutLevel["Log"] = 0] = "Log";
    OutLevel[OutLevel["Info"] = 1] = "Info";
    OutLevel[OutLevel["Warn"] = 2] = "Warn";
    OutLevel[OutLevel["Error"] = 3] = "Error";
    OutLevel[OutLevel["None"] = 4] = "None";
})(OutLevel = exports.OutLevel || (exports.OutLevel = {}));
var Logger = /** @class */ (function () {
    function Logger() {
        this.outLevel = OutLevel.Warn;
    }
    Logger.prototype.setOutLevel = function (level) {
        this.outLevel = level;
    };
    Logger.prototype.error = function (message) {
        var optionalParams = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            optionalParams[_i - 1] = arguments[_i];
        }
        if (this.outLevel <= OutLevel.Error) {
            console.error.apply(console, __spreadArray([message], optionalParams, false));
        }
    };
    Logger.prototype.info = function (message) {
        var optionalParams = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            optionalParams[_i - 1] = arguments[_i];
        }
        if (this.outLevel <= OutLevel.Info) {
            console.info.apply(console, __spreadArray([message], optionalParams, false));
        }
    };
    Logger.prototype.log = function (message) {
        var optionalParams = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            optionalParams[_i - 1] = arguments[_i];
        }
        if (this.outLevel <= OutLevel.Log) {
            console.log.apply(console, __spreadArray([message], optionalParams, false));
        }
    };
    Logger.prototype.warn = function (message) {
        var optionalParams = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            optionalParams[_i - 1] = arguments[_i];
        }
        if (this.outLevel <= OutLevel.Warn) {
            console.warn.apply(console, __spreadArray([message], optionalParams, false));
        }
    };
    return Logger;
}());
exports.Logger = Logger;
var logger = new Logger();
exports.default = logger;
//# sourceMappingURL=logger.js.map

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.aspect = exports.genAspectWrapper = void 0;
var metadata_1 = __webpack_require__(13);
/* istanbul ignore next */
var normalFn = function normalFn() { };
/* istanbul ignore next */
var generatorFn = function () { return __generator(this, function (_a) {
    return [2 /*return*/];
}); };
var normalFuncPrototype = Object.getPrototypeOf(normalFn);
var generatorFuncPrototype = Object.getPrototypeOf(generatorFn);
function isGeneratorFunction(fn) {
    // if use some transformer, generator is polyfill maybe.
    return (typeof fn === 'function' &&
        normalFuncPrototype !== generatorFuncPrototype &&
        Object.getPrototypeOf(fn) === generatorFuncPrototype);
}
function run(func, context) {
    func && func(context);
}
function createContext(ioc, inst, fn, args) {
    return {
        ioc: ioc,
        functionName: fn.__name || fn.name,
        inst: inst,
        data: {},
        args: args,
    };
}
function genAspectWrapper(ioc, point, oriFn) {
    var newFn;
    if (isGeneratorFunction(oriFn)) {
        newFn = function () {
            var _i, context, _a, error_1;
            var args = [];
            for (_i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        context = createContext(ioc, this, oriFn, args);
                        _b.label = 1;
                    case 1:
                        _b.trys.push([1, 4, , 5]);
                        run(point.before, context);
                        if (!!context.skipRunning) return [3 /*break*/, 3];
                        _a = context;
                        return [4 /*yield*/, oriFn.apply(this, context.args)];
                    case 2:
                        _a.ret = _b.sent();
                        _b.label = 3;
                    case 3:
                        run(point.after, context);
                        return [2 /*return*/, context.ret];
                    case 4:
                        error_1 = _b.sent();
                        context.err = error_1;
                        run(point.error, context);
                        if (context.err) {
                            throw context.err;
                        }
                        return [3 /*break*/, 5];
                    case 5: return [2 /*return*/];
                }
            });
        };
    }
    else {
        newFn = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var context = createContext(ioc, this, oriFn, args);
            try {
                run(point.before, context);
                if (!context.skipRunning) {
                    context.ret = oriFn.apply(this, context.args);
                }
                if (context.ret instanceof Promise) {
                    context.ret = context.ret.then(function (ret) {
                        context.ret = ret;
                        run(point.after, context);
                        return context.ret;
                    });
                    if (point.error) {
                        context.ret = context.ret.catch(function (error) {
                            context.err = error;
                            run(point.error, context);
                            if (context.err) {
                                throw context.err;
                            }
                        });
                    }
                    return context.ret;
                }
                else {
                    run(point.after, context);
                    return context.ret;
                }
            }
            catch (error) {
                context.err = error;
                run(point.error, context);
                if (context.err) {
                    throw context.err;
                }
            }
        };
    }
    newFn.__name = oriFn.__name || oriFn.name;
    return newFn;
}
exports.genAspectWrapper = genAspectWrapper;
function aspect(point) {
    if (point === void 0) { point = {}; }
    return function (target, key) {
        (0, metadata_1.getMetadata)(target.constructor).aspects.push({
            key: key,
            point: point,
        });
    };
}
exports.aspect = aspect;
//# sourceMappingURL=aspect.js.map

/***/ }),
/* 49 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Hotkey; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _di__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(21);
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t.return || t.return(); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }


var MAP = {
  8: 'backspace',
  9: 'tab',
  13: 'enter',
  16: 'shift',
  17: 'ctrl',
  18: 'alt',
  20: 'capslock',
  27: 'esc',
  32: 'space',
  33: 'pageup',
  34: 'pagedown',
  35: 'end',
  36: 'home',
  37: 'left',
  38: 'up',
  39: 'right',
  40: 'down',
  45: 'ins',
  46: 'del',
  91: 'meta',
  93: 'meta',
  224: 'meta'
};
var KEYCODE_MAP = {
  106: '*',
  107: '+',
  109: '-',
  110: '.',
  111: '/',
  186: ';',
  187: '=',
  188: ',',
  189: '-',
  190: '.',
  191: '/',
  192: '`',
  219: '[',
  220: '\\',
  221: ']',
  222: "'"
};
var SHIFT_MAP = {
  '~': '`',
  '!': '1',
  '@': '2',
  '#': '3',
  $: '4',
  '%': '5',
  '^': '6',
  '&': '7',
  '*': '8',
  '(': '9',
  ')': '0',
  _: '-',
  '+': '=',
  ':': ';',
  '"': "'",
  '<': ',',
  '>': '.',
  '?': '/',
  '|': '\\'
};
var SPECIAL_ALIASES = {
  option: 'alt',
  command: 'meta',
  return: 'enter',
  escape: 'esc',
  plus: '+',
  mod: /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'
};
var REVERSE_MAP;
/**
 * loop through the f keys, f1 to f19 and add them to the map
 * programatically
 */
for (var i = 1; i < 20; ++i) {
  MAP[111 + i] = "f".concat(i);
}
/**
 * loop through to map numbers on the numeric keypad
 */
for (var _i = 0; _i <= 9; ++_i) {
  MAP[_i + 96] = String(_i);
}
/**
 * takes the event and returns the key character
 */
function characterFromEvent(e) {
  var keyCode = e.keyCode || e.which;
  // for keypress events we should return the character as is
  if (e.type === 'keypress') {
    var character = String.fromCharCode(keyCode);
    // if the shift key is not pressed then it is safe to assume
    // that we want the character to be lowercase.  this means if
    // you accidentally have caps lock on then your key bindings
    // will continue to work
    //
    // the only side effect that might not be desired is if you
    // bind something like 'A' cause you want to trigger an
    // event when capital A is pressed caps lock will no longer
    // trigger the event.  shift+a will though.
    if (!e.shiftKey) {
      character = character.toLowerCase();
    }
    return character;
  }
  // for non keypress events the special maps are needed
  if (MAP[keyCode]) {
    return MAP[keyCode];
  }
  if (KEYCODE_MAP[keyCode]) {
    return KEYCODE_MAP[keyCode];
  }
  // if it is not in the special map
  // with keydown and keyup events the character seems to always
  // come in as an uppercase character whether you are pressing shift
  // or not.  we should make sure it is always lowercase for comparisons
  // tips: Q29weXJpZ2h0IChjKSAyMDIwLXByZXNlbnQgQWxpYmFiYSBJbmMuIFYy
  return String.fromCharCode(keyCode).toLowerCase();
}
function isPressEvent(e) {
  return e.type === 'keypress';
}
/**
 * checks if two arrays are equal
 */
function modifiersMatch(modifiers1, modifiers2) {
  return modifiers1.sort().join(',') === modifiers2.sort().join(',');
}
/**
 * takes a key event and figures out what the modifiers are
 */
function eventModifiers(e) {
  var modifiers = [];
  if (e.shiftKey) {
    modifiers.push('shift');
  }
  if (e.altKey) {
    modifiers.push('alt');
  }
  if (e.ctrlKey) {
    modifiers.push('ctrl');
  }
  if (e.metaKey) {
    modifiers.push('meta');
  }
  return modifiers;
}
/**
 * determines if the keycode specified is a modifier key or not
 */
function isModifier(key) {
  return key === 'shift' || key === 'ctrl' || key === 'alt' || key === 'meta';
}
/**
 * reverses the map lookup so that we can look for specific keys
 * to see what can and can't use keypress
 *
 * @return {Object}
 */
function getReverseMap() {
  if (!REVERSE_MAP) {
    REVERSE_MAP = {};
    for (var key in MAP) {
      // pull out the numeric keypad from here cause keypress should
      // be able to detect the keys from the character
      if (Number(key) > 95 && Number(key) < 112) {
        continue;
      }
      if (MAP.hasOwnProperty(key)) {
        REVERSE_MAP[MAP[key]] = key;
      }
    }
  }
  return REVERSE_MAP;
}
/**
 * picks the best action based on the key combination
 */
function pickBestAction(key, modifiers, action) {
  // if no action was picked in we should try to pick the one
  // that we think would work best for this key
  if (!action) {
    action = getReverseMap()[key] ? 'keydown' : 'keypress';
  }
  // modifier keys don't work as expected with keypress,
  // switch to keydown
  if (action === 'keypress' && modifiers.length) {
    action = 'keydown';
  }
  return action;
}
/**
 * Converts from a string key combination to an array
 *
 * @param  {string} combination like "command+shift+l"
 * @return {Array}
 */
function keysFromString(combination) {
  if (combination === '+') {
    return ['+'];
  }
  combination = combination.replace(/\+{2}/g, '+plus');
  return combination.split('+');
}
/**
 * Gets info for a specific key combination
 *
 * @param combination key combination ("command+s" or "a" or "*")
 */
function getKeyInfo(combination, action) {
  var keys = [];
  var key = '';
  var i;
  var modifiers = [];
  // take the keys from this pattern and figure out what the actual
  // pattern is all about
  keys = keysFromString(combination);
  for (i = 0; i < keys.length; ++i) {
    key = keys[i];
    // normalize key names
    if (SPECIAL_ALIASES[key]) {
      key = SPECIAL_ALIASES[key];
    }
    // if this is not a keypress event then we should
    // be smart about using shift keys
    // this will only work for US keyboards however
    if (action && action !== 'keypress' && SHIFT_MAP[key]) {
      key = SHIFT_MAP[key];
      modifiers.push('shift');
    }
    // if this key is a modifier then add it to the list of modifiers
    if (isModifier(key)) {
      modifiers.push(key);
    }
  }
  // depending on what the key combination is
  // we will try to pick the best event for it
  action = pickBestAction(key, modifiers, action);
  return {
    key: key,
    modifiers: modifiers,
    action: action
  };
}
/**
 * actually calls the callback function
 *
 * if your callback function returns false this will use the jquery
 * convention - prevent default and stop propogation on the event
 */
function fireCallback(callback, e, combo, sequence) {
  try {
    var _workspace$window, _designer$currentSele, _designer$currentSele2, _node$componentMeta, _node$componentMeta2;
    var workspace = _di__WEBPACK_IMPORTED_MODULE_1__["globalContext"].get('workspace');
    var editor = workspace.isActive ? (_workspace$window = workspace.window) === null || _workspace$window === void 0 ? void 0 : _workspace$window.editor : _di__WEBPACK_IMPORTED_MODULE_1__["globalContext"].get('editor');
    var designer = editor === null || editor === void 0 ? void 0 : editor.get('designer');
    var node = designer === null || designer === void 0 ? void 0 : (_designer$currentSele = designer.currentSelection) === null || _designer$currentSele === void 0 ? void 0 : (_designer$currentSele2 = _designer$currentSele.getNodes()) === null || _designer$currentSele2 === void 0 ? void 0 : _designer$currentSele2[0];
    var npm = node === null || node === void 0 ? void 0 : (_node$componentMeta = node.componentMeta) === null || _node$componentMeta === void 0 ? void 0 : _node$componentMeta.npm;
    var selected = [npm === null || npm === void 0 ? void 0 : npm.package, npm === null || npm === void 0 ? void 0 : npm.componentName].filter(function (item) {
      return !!item;
    }).join('-') || (node === null || node === void 0 ? void 0 : (_node$componentMeta2 = node.componentMeta) === null || _node$componentMeta2 === void 0 ? void 0 : _node$componentMeta2.componentName) || '';
    if (callback(e, combo) === false) {
      e.preventDefault();
      e.stopPropagation();
    }
    editor === null || editor === void 0 ? void 0 : editor.eventBus.emit('hotkey.callback.call', {
      callback: callback,
      e: e,
      combo: combo,
      sequence: sequence,
      selected: selected
    });
  } catch (err) {
    console.error(err.message);
  }
}
var Hotkey = /*#__PURE__*/function () {
  function Hotkey() {
    var viewName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'global';
    _classCallCheck(this, Hotkey);
    this.viewName = void 0;
    this.callBacks = {};
    this.directMap = {};
    this.sequenceLevels = {};
    this.resetTimer = 0;
    this.ignoreNextKeyup = false;
    this.ignoreNextKeypress = false;
    this.nextExpectedAction = false;
    this.isActivate = true;
    this.viewName = viewName;
    this.mount(window);
  }
  return _createClass(Hotkey, [{
    key: "activate",
    value: function activate(_activate) {
      this.isActivate = _activate;
    }
  }, {
    key: "mount",
    value: function mount(window) {
      var document = window.document;
      var handleKeyEvent = this.handleKeyEvent.bind(this);
      document.addEventListener('keypress', handleKeyEvent, false);
      document.addEventListener('keydown', handleKeyEvent, false);
      document.addEventListener('keyup', handleKeyEvent, false);
      return function () {
        document.removeEventListener('keypress', handleKeyEvent, false);
        document.removeEventListener('keydown', handleKeyEvent, false);
        document.removeEventListener('keyup', handleKeyEvent, false);
      };
    }
  }, {
    key: "bind",
    value: function bind(combos, callback, action) {
      this.bindMultiple(Array.isArray(combos) ? combos : [combos], callback, action);
      return this;
    }
  }, {
    key: "unbind",
    value: function unbind(combos, callback, action) {
      var _this = this;
      var combinations = Array.isArray(combos) ? combos : [combos];
      combinations.forEach(function (combination) {
        var info = getKeyInfo(combination, action);
        var key = info.key,
          modifiers = info.modifiers;
        var idx = _this.callBacks[key].findIndex(function (info) {
          return Object(lodash__WEBPACK_IMPORTED_MODULE_0__["isEqual"])(info.modifiers, modifiers) && info.callback === callback;
        });
        if (idx !== -1) {
          _this.callBacks[key].splice(idx, 1);
        }
      });
    }
    /**
     * resets all sequence counters except for the ones passed in
     */
  }, {
    key: "resetSequences",
    value: function resetSequences(doNotReset) {
      // doNotReset = doNotReset || {};
      var activeSequences = false;
      var key = '';
      for (key in this.sequenceLevels) {
        if (doNotReset && doNotReset[key]) {
          activeSequences = true;
        } else {
          this.sequenceLevels[key] = 0;
        }
      }
      if (!activeSequences) {
        this.nextExpectedAction = false;
      }
    }
    /**
     * finds all callbacks that match based on the keycode, modifiers,
     * and action
     */
  }, {
    key: "getMatches",
    value: function getMatches(character, modifiers, e, sequenceName, combination, level) {
      var i;
      var callback;
      var matches = [];
      var action = e.type;
      // if there are no events related to this keycode
      if (!this.callBacks[character]) {
        return [];
      }
      // if a modifier key is coming up on its own we should allow it
      if (action === 'keyup' && isModifier(character)) {
        modifiers = [character];
      }
      // loop through all callbacks for the key that was pressed
      // and see if any of them match
      for (i = 0; i < this.callBacks[character].length; ++i) {
        callback = this.callBacks[character][i];
        // if a sequence name is not specified, but this is a sequence at
        // the wrong level then move onto the next match
        if (!sequenceName && callback.seq && this.sequenceLevels[callback.seq] !== callback.level) {
          continue;
        }
        // if the action we are looking for doesn't match the action we got
        // then we should keep going
        if (action !== callback.action) {
          continue;
        }
        // if this is a keypress event and the meta key and control key
        // are not pressed that means that we need to only look at the
        // character, otherwise check the modifiers as well
        //
        // chrome will not fire a keypress if meta or control is down
        // safari will fire a keypress if meta or meta+shift is down
        // firefox will fire a keypress if meta or control is down
        if (isPressEvent(e) && !e.metaKey && !e.ctrlKey || modifiersMatch(modifiers, callback.modifiers)) {
          var deleteCombo = !sequenceName && callback.combo === combination;
          var deleteSequence = sequenceName && callback.seq === sequenceName && callback.level === level;
          if (deleteCombo || deleteSequence) {
            this.callBacks[character].splice(i, 1);
          }
          matches.push(callback);
        }
      }
      return matches;
    }
  }, {
    key: "handleKey",
    value: function handleKey(character, modifiers, e) {
      var callbacks = this.getMatches(character, modifiers, e);
      var i;
      var doNotReset = {};
      var maxLevel = 0;
      var processedSequenceCallback = false;
      // Calculate the maxLevel for sequences so we can only execute the longest callback sequence
      for (i = 0; i < callbacks.length; ++i) {
        if (callbacks[i].seq) {
          maxLevel = Math.max(maxLevel, callbacks[i].level || 0);
        }
      }
      // loop through matching callbacks for this key event
      for (i = 0; i < callbacks.length; ++i) {
        // fire for all sequence callbacks
        // this is because if for example you have multiple sequences
        // bound such as "g i" and "g t" they both need to fire the
        // callback for matching g cause otherwise you can only ever
        // match the first one
        if (callbacks[i].seq) {
          // only fire callbacks for the maxLevel to prevent
          // subsequences from also firing
          //
          // for example 'a option b' should not cause 'option b' to fire
          // even though 'option b' is part of the other sequence
          //
          // any sequences that do not match here will be discarded
          // below by the resetSequences call
          if (callbacks[i].level !== maxLevel) {
            continue;
          }
          processedSequenceCallback = true;
          // keep a list of which sequences were matches for later
          doNotReset[callbacks[i].seq || ''] = 1;
          fireCallback(callbacks[i].callback, e, callbacks[i].combo, callbacks[i].seq);
          continue;
        }
        // if there were no sequence matches but we are still here
        // that means this is a regular match so we should fire that
        if (!processedSequenceCallback) {
          fireCallback(callbacks[i].callback, e, callbacks[i].combo);
        }
      }
      var ignoreThisKeypress = e.type === 'keypress' && this.ignoreNextKeypress;
      if (e.type === this.nextExpectedAction && !isModifier(character) && !ignoreThisKeypress) {
        this.resetSequences(doNotReset);
      }
      this.ignoreNextKeypress = processedSequenceCallback && e.type === 'keydown';
    }
  }, {
    key: "handleKeyEvent",
    value: function handleKeyEvent(e) {
      if (!this.isActivate) {
        return;
      }
      var character = characterFromEvent(e);
      // no character found then stop
      if (!character) {
        return;
      }
      // need to use === for the character check because the character can be 0
      if (e.type === 'keyup' && this.ignoreNextKeyup === character) {
        this.ignoreNextKeyup = false;
        return;
      }
      this.handleKey(character, eventModifiers(e), e);
    }
  }, {
    key: "resetSequenceTimer",
    value: function resetSequenceTimer() {
      if (this.resetTimer) {
        clearTimeout(this.resetTimer);
      }
      this.resetTimer = window.setTimeout(this.resetSequences, 1000);
    }
  }, {
    key: "bindSequence",
    value: function bindSequence(combo, keys, callback, action) {
      var _this2 = this;
      // const self: any = this;
      this.sequenceLevels[combo] = 0;
      var increaseSequence = function increaseSequence(nextAction) {
        return function () {
          _this2.nextExpectedAction = nextAction;
          ++_this2.sequenceLevels[combo];
          _this2.resetSequenceTimer();
        };
      };
      var callbackAndReset = function callbackAndReset(e) {
        fireCallback(callback, e, combo);
        if (action !== 'keyup') {
          _this2.ignoreNextKeyup = characterFromEvent(e);
        }
        setTimeout(_this2.resetSequences, 10);
      };
      for (var _i2 = 0; _i2 < keys.length; ++_i2) {
        var isFinal = _i2 + 1 === keys.length;
        var wrappedCallback = isFinal ? callbackAndReset : increaseSequence(action || getKeyInfo(keys[_i2 + 1]).action);
        this.bindSingle(keys[_i2], wrappedCallback, action, combo, _i2);
      }
    }
  }, {
    key: "bindSingle",
    value: function bindSingle(combination, callback, action, sequenceName, level) {
      // store a direct mapped reference for use with HotKey.trigger
      this.directMap["".concat(combination, ":").concat(action)] = callback;
      // make sure multiple spaces in a row become a single space
      combination = combination.replace(/\s+/g, ' ');
      var sequence = combination.split(' ');
      // if this pattern is a sequence of keys then run through this method
      // to reprocess each pattern one key at a time
      if (sequence.length > 1) {
        this.bindSequence(combination, sequence, callback, action);
        return;
      }
      var info = getKeyInfo(combination, action);
      // make sure to initialize array if this is the first time
      // a callback is added for this key
      this.callBacks[info.key] = this.callBacks[info.key] || [];
      // remove an existing match if there is one
      this.getMatches(info.key, info.modifiers, {
        type: info.action
      }, sequenceName, combination, level);
      // add this call back to the array
      // if it is a sequence put it at the beginning
      // if not put it at the end
      //
      // this is important because the way these are processed expects
      // the sequence ones to come first
      this.callBacks[info.key][sequenceName ? 'unshift' : 'push']({
        callback: callback,
        modifiers: info.modifiers,
        action: info.action,
        seq: sequenceName,
        level: level,
        combo: combination
      });
    }
  }, {
    key: "bindMultiple",
    value: function bindMultiple(combinations, callback, action) {
      var _iterator = _createForOfIteratorHelper(combinations),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var item = _step.value;
          this.bindSingle(item, callback, action);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
  }]);
}();

/***/ }),
/* 50 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Command; });
/* harmony import */ var _alilc_lowcode_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var _alilc_lowcode_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }


var Command = /*#__PURE__*/function () {
  function Command() {
    _classCallCheck(this, Command);
    this.commands = new Map();
    this.commandErrors = [];
  }
  return _createClass(Command, [{
    key: "registerCommand",
    value: function registerCommand(command, options) {
      if (!(options !== null && options !== void 0 && options.commandScope)) {
        throw new Error('plugin meta.commandScope is required.');
      }
      var name = "".concat(options.commandScope, ":").concat(command.name);
      if (this.commands.has(name)) {
        throw new Error("Command '".concat(command.name, "' is already registered."));
      }
      this.commands.set(name, _objectSpread(_objectSpread({}, command), {}, {
        name: name
      }));
    }
  }, {
    key: "unregisterCommand",
    value: function unregisterCommand(name) {
      if (!this.commands.has(name)) {
        throw new Error("Command '".concat(name, "' is not registered."));
      }
      this.commands.delete(name);
    }
  }, {
    key: "executeCommand",
    value: function executeCommand(name, args) {
      var _command$parameters;
      var command = this.commands.get(name);
      if (!command) {
        throw new Error("Command '".concat(name, "' is not registered."));
      }
      (_command$parameters = command.parameters) === null || _command$parameters === void 0 ? void 0 : _command$parameters.forEach(function (d) {
        if (!Object(_alilc_lowcode_utils__WEBPACK_IMPORTED_MODULE_1__[/* checkPropTypes */ "j"])(args[d.name], d.name, d.propType, 'command')) {
          throw new Error("Command '".concat(name, "' arguments ").concat(d.name, " is invalid."));
        }
      });
      try {
        command.handler(args);
      } catch (error) {
        if (this.commandErrors && this.commandErrors.length) {
          this.commandErrors.forEach(function (callback) {
            return callback(name, error);
          });
        } else {
          throw error;
        }
      }
    }
  }, {
    key: "batchExecuteCommand",
    value: function batchExecuteCommand(commands, pluginContext) {
      var _this = this;
      if (!commands || !commands.length) {
        return;
      }
      pluginContext.common.utils.executeTransaction(function () {
        commands.forEach(function (command) {
          return _this.executeCommand(command.name, command.args);
        });
      }, _alilc_lowcode_types__WEBPACK_IMPORTED_MODULE_0__[/* IPublicEnumTransitionType */ "j"].REPAINT);
    }
  }, {
    key: "listCommands",
    value: function listCommands() {
      return Array.from(this.commands.values()).map(function (d) {
        var result = {
          name: d.name
        };
        if (d.description) {
          result.description = d.description;
        }
        if (d.parameters) {
          result.parameters = d.parameters;
        }
        return result;
      });
    }
  }, {
    key: "onCommandError",
    value: function onCommandError(callback) {
      this.commandErrors.push(callback);
    }
  }]);
}();

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const SPACE_CHARACTERS = /\s+/g

// hoisted class for cyclic dependency
class Range {
  constructor (range, options) {
    options = parseOptions(options)

    if (range instanceof Range) {
      if (
        range.loose === !!options.loose &&
        range.includePrerelease === !!options.includePrerelease
      ) {
        return range
      } else {
        return new Range(range.raw, options)
      }
    }

    if (range instanceof Comparator) {
      // just put it in the set and return
      this.raw = range.value
      this.set = [[range]]
      this.formatted = undefined
      return this
    }

    this.options = options
    this.loose = !!options.loose
    this.includePrerelease = !!options.includePrerelease

    // First reduce all whitespace as much as possible so we do not have to rely
    // on potentially slow regexes like \s*. This is then stored and used for
    // future error messages as well.
    this.raw = range.trim().replace(SPACE_CHARACTERS, ' ')

    // First, split on ||
    this.set = this.raw
      .split('||')
      // map the range to a 2d array of comparators
      .map(r => this.parseRange(r.trim()))
      // throw out any comparator lists that are empty
      // this generally means that it was not a valid range, which is allowed
      // in loose mode, but will still throw if the WHOLE range is invalid.
      .filter(c => c.length)

    if (!this.set.length) {
      throw new TypeError(`Invalid SemVer Range: ${this.raw}`)
    }

    // if we have any that are not the null set, throw out null sets.
    if (this.set.length > 1) {
      // keep the first one, in case they're all null sets
      const first = this.set[0]
      this.set = this.set.filter(c => !isNullSet(c[0]))
      if (this.set.length === 0) {
        this.set = [first]
      } else if (this.set.length > 1) {
        // if we have any that are *, then the range is just *
        for (const c of this.set) {
          if (c.length === 1 && isAny(c[0])) {
            this.set = [c]
            break
          }
        }
      }
    }

    this.formatted = undefined
  }

  get range () {
    if (this.formatted === undefined) {
      this.formatted = ''
      for (let i = 0; i < this.set.length; i++) {
        if (i > 0) {
          this.formatted += '||'
        }
        const comps = this.set[i]
        for (let k = 0; k < comps.length; k++) {
          if (k > 0) {
            this.formatted += ' '
          }
          this.formatted += comps[k].toString().trim()
        }
      }
    }
    return this.formatted
  }

  format () {
    return this.range
  }

  toString () {
    return this.range
  }

  parseRange (range) {
    // memoize range parsing for performance.
    // this is a very hot path, and fully deterministic.
    const memoOpts =
      (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |
      (this.options.loose && FLAG_LOOSE)
    const memoKey = memoOpts + ':' + range
    const cached = cache.get(memoKey)
    if (cached) {
      return cached
    }

    const loose = this.options.loose
    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`
    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]
    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))
    debug('hyphen replace', range)

    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`
    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)
    debug('comparator trim', range)

    // `~ 1.2.3` => `~1.2.3`
    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)
    debug('tilde trim', range)

    // `^ 1.2.3` => `^1.2.3`
    range = range.replace(re[t.CARETTRIM], caretTrimReplace)
    debug('caret trim', range)

    // At this point, the range is completely trimmed and
    // ready to be split into comparators.

    let rangeList = range
      .split(' ')
      .map(comp => parseComparator(comp, this.options))
      .join(' ')
      .split(/\s+/)
      // >=0.0.0 is equivalent to *
      .map(comp => replaceGTE0(comp, this.options))

    if (loose) {
      // in loose mode, throw out any that are not valid comparators
      rangeList = rangeList.filter(comp => {
        debug('loose invalid filter', comp, this.options)
        return !!comp.match(re[t.COMPARATORLOOSE])
      })
    }
    debug('range list', rangeList)

    // if any comparators are the null set, then replace with JUST null set
    // if more than one comparator, remove any * comparators
    // also, don't include the same comparator more than once
    const rangeMap = new Map()
    const comparators = rangeList.map(comp => new Comparator(comp, this.options))
    for (const comp of comparators) {
      if (isNullSet(comp)) {
        return [comp]
      }
      rangeMap.set(comp.value, comp)
    }
    if (rangeMap.size > 1 && rangeMap.has('')) {
      rangeMap.delete('')
    }

    const result = [...rangeMap.values()]
    cache.set(memoKey, result)
    return result
  }

  intersects (range, options) {
    if (!(range instanceof Range)) {
      throw new TypeError('a Range is required')
    }

    return this.set.some((thisComparators) => {
      return (
        isSatisfiable(thisComparators, options) &&
        range.set.some((rangeComparators) => {
          return (
            isSatisfiable(rangeComparators, options) &&
            thisComparators.every((thisComparator) => {
              return rangeComparators.every((rangeComparator) => {
                return thisComparator.intersects(rangeComparator, options)
              })
            })
          )
        })
      )
    })
  }

  // if ANY of the sets match ALL of its comparators, then pass
  test (version) {
    if (!version) {
      return false
    }

    if (typeof version === 'string') {
      try {
        version = new SemVer(version, this.options)
      } catch (er) {
        return false
      }
    }

    for (let i = 0; i < this.set.length; i++) {
      if (testSet(this.set[i], version, this.options)) {
        return true
      }
    }
    return false
  }
}

module.exports = Range

const LRU = __webpack_require__(108)
const cache = new LRU()

const parseOptions = __webpack_require__(35)
const Comparator = __webpack_require__(109)
const debug = __webpack_require__(26)
const SemVer = __webpack_require__(38)
const {
  safeRe: re,
  t,
  comparatorTrimReplace,
  tildeTrimReplace,
  caretTrimReplace,
} = __webpack_require__(36)
const { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = __webpack_require__(37)

const isNullSet = c => c.value === '<0.0.0-0'
const isAny = c => c.value === ''

// take a set of comparators and determine whether there
// exists a version which can satisfy it
const isSatisfiable = (comparators, options) => {
  let result = true
  const remainingComparators = comparators.slice()
  let testComparator = remainingComparators.pop()

  while (result && remainingComparators.length) {
    result = remainingComparators.every((otherComparator) => {
      return testComparator.intersects(otherComparator, options)
    })

    testComparator = remainingComparators.pop()
  }

  return result
}

// comprised of xranges, tildes, stars, and gtlt's at this point.
// already replaced the hyphen ranges
// turn into a set of JUST comparators.
const parseComparator = (comp, options) => {
  debug('comp', comp, options)
  comp = replaceCarets(comp, options)
  debug('caret', comp)
  comp = replaceTildes(comp, options)
  debug('tildes', comp)
  comp = replaceXRanges(comp, options)
  debug('xrange', comp)
  comp = replaceStars(comp, options)
  debug('stars', comp)
  return comp
}

const isX = id => !id || id.toLowerCase() === 'x' || id === '*'

// ~, ~> --> * (any, kinda silly)
// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0
// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0
// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0
// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0
// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0
// ~0.0.1 --> >=0.0.1 <0.1.0-0
const replaceTildes = (comp, options) => {
  return comp
    .trim()
    .split(/\s+/)
    .map((c) => replaceTilde(c, options))
    .join(' ')
}

const replaceTilde = (comp, options) => {
  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]
  return comp.replace(r, (_, M, m, p, pr) => {
    debug('tilde', comp, _, M, m, p, pr)
    let ret

    if (isX(M)) {
      ret = ''
    } else if (isX(m)) {
      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`
    } else if (isX(p)) {
      // ~1.2 == >=1.2.0 <1.3.0-0
      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`
    } else if (pr) {
      debug('replaceTilde pr', pr)
      ret = `>=${M}.${m}.${p}-${pr
      } <${M}.${+m + 1}.0-0`
    } else {
      // ~1.2.3 == >=1.2.3 <1.3.0-0
      ret = `>=${M}.${m}.${p
      } <${M}.${+m + 1}.0-0`
    }

    debug('tilde return', ret)
    return ret
  })
}

// ^ --> * (any, kinda silly)
// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0
// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0
// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0
// ^1.2.3 --> >=1.2.3 <2.0.0-0
// ^1.2.0 --> >=1.2.0 <2.0.0-0
// ^0.0.1 --> >=0.0.1 <0.0.2-0
// ^0.1.0 --> >=0.1.0 <0.2.0-0
const replaceCarets = (comp, options) => {
  return comp
    .trim()
    .split(/\s+/)
    .map((c) => replaceCaret(c, options))
    .join(' ')
}

const replaceCaret = (comp, options) => {
  debug('caret', comp, options)
  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]
  const z = options.includePrerelease ? '-0' : ''
  return comp.replace(r, (_, M, m, p, pr) => {
    debug('caret', comp, _, M, m, p, pr)
    let ret

    if (isX(M)) {
      ret = ''
    } else if (isX(m)) {
      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`
    } else if (isX(p)) {
      if (M === '0') {
        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`
      } else {
        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`
      }
    } else if (pr) {
      debug('replaceCaret pr', pr)
      if (M === '0') {
        if (m === '0') {
          ret = `>=${M}.${m}.${p}-${pr
          } <${M}.${m}.${+p + 1}-0`
        } else {
          ret = `>=${M}.${m}.${p}-${pr
          } <${M}.${+m + 1}.0-0`
        }
      } else {
        ret = `>=${M}.${m}.${p}-${pr
        } <${+M + 1}.0.0-0`
      }
    } else {
      debug('no pr')
      if (M === '0') {
        if (m === '0') {
          ret = `>=${M}.${m}.${p
          }${z} <${M}.${m}.${+p + 1}-0`
        } else {
          ret = `>=${M}.${m}.${p
          }${z} <${M}.${+m + 1}.0-0`
        }
      } else {
        ret = `>=${M}.${m}.${p
        } <${+M + 1}.0.0-0`
      }
    }

    debug('caret return', ret)
    return ret
  })
}

const replaceXRanges = (comp, options) => {
  debug('replaceXRanges', comp, options)
  return comp
    .split(/\s+/)
    .map((c) => replaceXRange(c, options))
    .join(' ')
}

const replaceXRange = (comp, options) => {
  comp = comp.trim()
  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]
  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {
    debug('xRange', comp, ret, gtlt, M, m, p, pr)
    const xM = isX(M)
    const xm = xM || isX(m)
    const xp = xm || isX(p)
    const anyX = xp

    if (gtlt === '=' && anyX) {
      gtlt = ''
    }

    // if we're including prereleases in the match, then we need
    // to fix this to -0, the lowest possible prerelease value
    pr = options.includePrerelease ? '-0' : ''

    if (xM) {
      if (gtlt === '>' || gtlt === '<') {
        // nothing is allowed
        ret = '<0.0.0-0'
      } else {
        // nothing is forbidden
        ret = '*'
      }
    } else if (gtlt && anyX) {
      // we know patch is an x, because we have any x at all.
      // replace X with 0
      if (xm) {
        m = 0
      }
      p = 0

      if (gtlt === '>') {
        // >1 => >=2.0.0
        // >1.2 => >=1.3.0
        gtlt = '>='
        if (xm) {
          M = +M + 1
          m = 0
          p = 0
        } else {
          m = +m + 1
          p = 0
        }
      } else if (gtlt === '<=') {
        // <=0.7.x is actually <0.8.0, since any 0.7.x should
        // pass.  Similarly, <=7.x is actually <8.0.0, etc.
        gtlt = '<'
        if (xm) {
          M = +M + 1
        } else {
          m = +m + 1
        }
      }

      if (gtlt === '<') {
        pr = '-0'
      }

      ret = `${gtlt + M}.${m}.${p}${pr}`
    } else if (xm) {
      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`
    } else if (xp) {
      ret = `>=${M}.${m}.0${pr
      } <${M}.${+m + 1}.0-0`
    }

    debug('xRange return', ret)

    return ret
  })
}

// Because * is AND-ed with everything else in the comparator,
// and '' means "any version", just remove the *s entirely.
const replaceStars = (comp, options) => {
  debug('replaceStars', comp, options)
  // Looseness is ignored here.  star is always as loose as it gets!
  return comp
    .trim()
    .replace(re[t.STAR], '')
}

const replaceGTE0 = (comp, options) => {
  debug('replaceGTE0', comp, options)
  return comp
    .trim()
    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')
}

// This function is passed to string.replace(re[t.HYPHENRANGE])
// M, m, patch, prerelease, build
// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5
// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do
// 1.2 - 3.4 => >=1.2.0 <3.5.0-0
// TODO build?
const hyphenReplace = incPr => ($0,
  from, fM, fm, fp, fpr, fb,
  to, tM, tm, tp, tpr) => {
  if (isX(fM)) {
    from = ''
  } else if (isX(fm)) {
    from = `>=${fM}.0.0${incPr ? '-0' : ''}`
  } else if (isX(fp)) {
    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`
  } else if (fpr) {
    from = `>=${from}`
  } else {
    from = `>=${from}${incPr ? '-0' : ''}`
  }

  if (isX(tM)) {
    to = ''
  } else if (isX(tm)) {
    to = `<${+tM + 1}.0.0-0`
  } else if (isX(tp)) {
    to = `<${tM}.${+tm + 1}.0-0`
  } else if (tpr) {
    to = `<=${tM}.${tm}.${tp}-${tpr}`
  } else if (incPr) {
    to = `<${tM}.${tm}.${+tp + 1}-0`
  } else {
    to = `<=${to}`
  }

  return `${from} ${to}`.trim()
}

const testSet = (set, version, options) => {
  for (let i = 0; i < set.length; i++) {
    if (!set[i].test(version)) {
      return false
    }
  }

  if (version.prerelease.length && !options.includePrerelease) {
    // Find the set of versions that are allowed to have prereleases
    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0
    // That should allow `1.2.3-pr.2` to pass.
    // However, `1.2.4-alpha.notready` should NOT be allowed,
    // even though it's within the range set by the comparators.
    for (let i = 0; i < set.length; i++) {
      debug(set[i].semver)
      if (set[i].semver === Comparator.ANY) {
        continue
      }

      if (set[i].semver.prerelease.length > 0) {
        const allowed = set[i].semver
        if (allowed.major === version.major &&
            allowed.minor === version.minor &&
            allowed.patch === version.patch) {
          return true
        }
      }
    }

    // Version has a -pre, but it's not one of the ones we like.
    return false
  }

  return true
}


/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 54 */
/***/ (function(module) {

module.exports = JSON.parse("{\"Initializing\":\"Initializing\",\"Hide\":\"Hide\",\"Show\":\"Show\",\"Lock\":\"Lock\",\"Unlock\":\"Unlock\",\"Expand\":\"Expand\",\"Collapse\":\"Collapse\",\"Conditional\":\"Condition\",\"Loop\":\"Loop\",\"Slots\":\"Slots\",\"Slot for {prop}\":\"Slot for {prop}\",\"Outline Tree\":\"Component Tree\",\"Filter Node\":\"Filter Node\",\"Check All\":\"Check All\",\"Conditional rendering\":\"Conditional rendering\",\"Loop rendering\":\"Loop rendering\",\"Locked\":\"Locked\",\"Hidden\":\"Hidden\",\"Modal View\":\"Modal View\",\"Rename\":\"Rename\",\"Delete\":\"Delete\"}");

/***/ }),
/* 55 */
/***/ (function(module) {

module.exports = JSON.parse("{\"Initializing\":\"正在初始化\",\"Hide\":\"隐藏\",\"Show\":\"显示\",\"Lock\":\"锁定\",\"Unlock\":\"解锁\",\"Expand\":\"展开\",\"Collapse\":\"收起\",\"Conditional\":\"条件式\",\"Loop\":\"循环\",\"Slots\":\"插槽\",\"Slot for {prop}\":\"属性 {prop} 的插槽\",\"Outline Tree\":\"大纲树\",\"Filter Node\":\"过滤节点\",\"Check All\":\"全选\",\"Conditional rendering\":\"条件渲染\",\"Loop rendering\":\"循环渲染\",\"Locked\":\"已锁定\",\"Hidden\":\"已隐藏\",\"Modal View\":\"模态视图层\",\"Rename\":\"重命名\",\"Delete\":\"删除\"}");

/***/ }),
/* 56 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "b", function() { return /* reexport */ tip_tip["a" /* Tip */]; });
__webpack_require__.d(__webpack_exports__, "c", function() { return /* reexport */ tip_container_TipContainer; });
__webpack_require__.d(__webpack_exports__, "a", function() { return /* reexport */ HelpTip; });
__webpack_require__.d(__webpack_exports__, "d", function() { return /* reexport */ title_Title; });

// EXTERNAL MODULE: ../editor-core/src/widgets/tip/style.less
var style = __webpack_require__(97);

// EXTERNAL MODULE: ../editor-core/src/widgets/tip/tip.tsx
var tip_tip = __webpack_require__(15);

// EXTERNAL MODULE: external "window.React"
var external_window_React_ = __webpack_require__(2);

// EXTERNAL MODULE: external "window.ReactDOM"
var external_window_ReactDOM_ = __webpack_require__(10);
var external_window_ReactDOM_default = /*#__PURE__*/__webpack_require__.n(external_window_ReactDOM_);

// EXTERNAL MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/classnames/index.js
var classnames = __webpack_require__(6);
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);

// EXTERNAL MODULE: ../editor-core/src/intl/index.ts + 16 modules
var intl = __webpack_require__(16);

// CONCATENATED MODULE: ../editor-core/src/widgets/tip/utils.ts
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function resolveEdge(popup, target, arrow, bounds) {
  var sx = arrow.width > target.width ? (arrow.width - target.width) / 2 : 0;
  var sy = arrow.width > target.height ? (arrow.width - target.height) / 2 : 0;
  var top = Math.max(target.top - popup.height + arrow.width - sy, bounds.top);
  var right = Math.min(target.right + popup.width - arrow.width + sx, bounds.right);
  var bottom = Math.min(target.bottom + popup.height - arrow.width + sy, bounds.bottom);
  var left = Math.max(target.left - popup.width + arrow.width - sx, bounds.left);
  return {
    top: top,
    right: right,
    bottom: bottom,
    left: left
  };
}
function resolveDirection(popup, target, edge, bounds, prefers) {
  if (prefers.forceDirection) {
    return prefers.dir;
  }
  var extendWidth = popup.width + popup.extraOffset;
  var extendHeight = popup.height + popup.extraOffset;
  var SY = popup.width * extendHeight;
  var SX = popup.height * extendWidth;
  var mw = Math.min(edge.right - edge.left, popup.width);
  var mh = Math.min(edge.bottom - edge.top, popup.height);
  var mat = {
    top: function top() {
      var s = mw * Math.min(target.top - bounds.top, extendHeight);
      return {
        s: s,
        enough: s >= SY
      };
    },
    bottom: function bottom() {
      var s = mw * Math.min(bounds.bottom - target.bottom, extendHeight);
      return {
        s: s,
        enough: s >= SY
      };
    },
    left: function left() {
      var s = mh * Math.min(target.left - bounds.left, extendWidth);
      return {
        s: s,
        enough: s >= SX
      };
    },
    right: function right() {
      var s = mh * Math.min(bounds.right - target.right, extendWidth);
      return {
        s: s,
        enough: s >= SX
      };
    }
  };
  var orders = ['top', 'right', 'bottom', 'left'];
  if (prefers.dir) {
    var i = orders.indexOf(prefers.dir);
    if (i > -1) {
      orders.splice(i, 1);
      orders.unshift(prefers.dir);
    }
  }
  var ms = 0;
  var prefer = orders[0];
  for (var _i = 0, l = orders.length; _i < l; _i++) {
    var dir = orders[_i];
    var _mat$dir = mat[dir](),
      s = _mat$dir.s,
      enough = _mat$dir.enough;
    if (enough) {
      return dir;
    }
    if (s > ms) {
      ms = s;
      prefer = dir;
    }
  }
  return prefer;
}
function resolvePrefer(prefer, targetRect, bounds) {
  if (!prefer) {
    if (targetRect.left - bounds.left < 10) {
      return {
        dir: 'right'
      };
    } else if (targetRect.top - bounds.top < 10) {
      return {
        dir: 'bottom'
      };
    } else if (bounds.bottom - targetRect.bottom < 10) {
      return {
        dir: 'top'
      };
    } else if (bounds.right - targetRect.right < 10) {
      return {
        dir: 'left'
      };
    }
    return {};
  }
  var force = prefer[0] === '!';
  if (force) {
    prefer = prefer.slice(1);
  }
  var _prefer$split = prefer.split(/\s+/),
    _prefer$split2 = _slicedToArray(_prefer$split, 2),
    dir = _prefer$split2[0],
    offset = _prefer$split2[1];
  var forceDirection = false;
  var forceOffset = false;
  if (dir === 'center') {
    dir = 'auto';
    if (!offset) {
      offset = 'center';
    }
  }
  if (force) {
    if (dir && dir !== 'auto') {
      forceDirection = true;
    }
    if (offset && offset !== 'auto') {
      forceOffset = true;
    }
  }
  return {
    dir: dir,
    offset: offset,
    forceDirection: forceDirection,
    forceOffset: forceOffset
  };
}
function resolvePosition(popup, target, arrow, bounds, prefer) {
  popup = {
    extraOffset: arrow.height,
    top: popup.top,
    right: popup.right,
    left: popup.left,
    bottom: popup.bottom,
    height: popup.height,
    width: popup.width
  };
  var prefers = resolvePrefer(prefer, target, bounds);
  var edge = resolveEdge(popup, target, arrow, bounds);
  // 选择方向
  var dir = resolveDirection(popup, target, edge, bounds, prefers);
  var top;
  var left;
  var arrowTop;
  var arrowLeft;
  // 或得该方位上横向 或 纵向的 偏移
  if (dir === 'top' || dir === 'bottom') {
    if (dir === 'top') {
      top = target.top - popup.extraOffset - popup.height;
    } else {
      top = target.bottom + popup.extraOffset;
    }
    // 解决横向偏移
    var offset = arrow.width > target.width ? (arrow.width - target.width) / 2 : 0;
    var minLeft = target.left + arrow.width - offset - popup.width;
    var maxLeft = target.right - arrow.width + offset;
    var centerLeft = target.left - (popup.width - target.width) / 2;
    if (prefers.offset === 'left') {
      left = minLeft;
    } else if (prefers.offset === 'right') {
      left = maxLeft;
    } else {
      left = centerLeft;
    }
    if (!prefers.forceOffset) {
      left = Math.max(Math.min(edge.right - popup.width, left), minLeft);
      left = Math.min(Math.max(edge.left, left), maxLeft);
    }
    arrowLeft = Math.min(popup.width - arrow.width, Math.max(target.left - (arrow.width - target.width) / 2 - left, 0));
  } else {
    if (dir === 'left') {
      left = target.left - popup.extraOffset - popup.width;
    } else {
      left = target.right + popup.extraOffset;
    }
    // 解决纵向偏移
    var _offset = arrow.width > target.height ? (arrow.width - target.height) / 2 : 0;
    var minTop = target.top + arrow.width - _offset - popup.height;
    var maxTop = target.bottom - arrow.width + _offset;
    var centerTop = target.top - (popup.height - target.height) / 2;
    if (prefers.offset === 'top') {
      top = minTop;
    } else if (prefers.offset === 'bottom') {
      top = maxTop;
    } else {
      top = centerTop;
    }
    if (!prefers.forceOffset) {
      top = Math.max(Math.min(edge.bottom - popup.height, top), minTop);
      top = Math.min(Math.max(edge.top, top), maxTop);
    }
    arrowTop = Math.min(popup.height - arrow.height, Math.max(target.top - (arrow.width - target.height) / 2 - top, 0));
  }
  return {
    dir: dir,
    left: left,
    top: top,
    arrowLeft: arrowLeft,
    arrowTop: arrowTop
  };
}
var percentPresets = {
  right: 1,
  left: 0,
  top: 0,
  bottom: 1,
  center: 0.5
};
function isPercent(val) {
  return /^[\d.]+%$/.test(val);
}
function resolveRelativeValue(val, offset, total) {
  if (!val) {
    val = 0;
  } else if (isPercent(val)) {
    val = parseFloat(val) / 100 * total;
  } else if (percentPresets.hasOwnProperty(val)) {
    val = percentPresets[val] * total;
  } else {
    val = parseFloat(val);
    if (isNaN(val)) {
      val = 0;
    }
  }
  return "".concat(val + offset, "px");
}
function resolveRelativePosition(align, popup, bounds) {
  if (!align) {
    // return default position
    return {
      top: '38.2%',
      left: 'calc(50% - 110px)'
    };
  }
  var _align$trim$split = align.trim().split(/\s+/),
    _align$trim$split2 = _slicedToArray(_align$trim$split, 2),
    xAlign = _align$trim$split2[0],
    yAlign = _align$trim$split2[1];
  if (xAlign === 'top' || xAlign === 'bottom' || yAlign === 'left' || yAlign === 'right') {
    var tmp = xAlign;
    xAlign = yAlign;
    yAlign = tmp;
  }
  if (xAlign === 'center' && !yAlign) {
    yAlign = 'center';
  }
  return {
    left: resolveRelativeValue(xAlign, 0, bounds.right - bounds.left - popup.width),
    top: resolveRelativeValue(yAlign, 0, bounds.bottom - bounds.top - popup.height)
  };
}
// EXTERNAL MODULE: ../editor-core/src/widgets/tip/tip-handler.ts
var tip_handler = __webpack_require__(11);

// CONCATENATED MODULE: ../editor-core/src/widgets/tip/tip-item.tsx
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _possibleConstructorReturn(t, e) { if (e && ("object" == _typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return _assertThisInitialized(t); }
function _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }
function _inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && _setPrototypeOf(t, e); }
function _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }





var tip_item_TipItem = /*#__PURE__*/function (_Component) {
  function TipItem(props) {
    var _this;
    _classCallCheck(this, TipItem);
    _this = _callSuper(this, TipItem, [props]);
    _this.dispose = void 0;
    _this.timer = null;
    _this.shell = null;
    _this.originClassName = '';
    _this.dispose = tip_handler["b" /* tipHandler */].onChange(function () {
      return _this.forceUpdate();
    });
    return _this;
  }
  _inherits(TipItem, _Component);
  return _createClass(TipItem, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate() {
      return false;
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      this.updateTip();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this.updateTip();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.dispose) {
        this.dispose();
      }
      this.clearTimer();
    }
  }, {
    key: "clearTimer",
    value: function clearTimer() {
      if (this.timer) {
        clearTimeout(this.timer);
        this.timer = null;
      }
    }
  }, {
    key: "updateTip",
    value: function updateTip() {
      if (!this.shell) {
        return;
      }
      var shell = this.shell;
      var arrow = shell.querySelector('.lc-arrow');
      // reset
      shell.className = this.originClassName;
      shell.style.cssText = '';
      arrow.style.cssText = '';
      this.clearTimer();
      var tip = tip_handler["b" /* tipHandler */].tip;
      if (!tip) {
        return;
      }
      var target = tip.target,
        direction = tip.direction;
      var targetRect = target.getBoundingClientRect();
      if (targetRect.width === 0 || targetRect.height === 0) {
        return;
      }
      var shellRect = shell.getBoundingClientRect();
      var bounds = {
        left: 1,
        top: 1,
        right: document.documentElement.clientWidth - 1,
        bottom: document.documentElement.clientHeight - 1
      };
      var arrowRect = arrow.getBoundingClientRect();
      var _resolvePosition = resolvePosition(shellRect, targetRect, arrowRect, bounds, direction),
        dir = _resolvePosition.dir,
        left = _resolvePosition.left,
        top = _resolvePosition.top,
        arrowLeft = _resolvePosition.arrowLeft,
        arrowTop = _resolvePosition.arrowTop;
      shell.classList.add("lc-align-".concat(dir));
      shell.style.top = "".concat(top, "px");
      shell.style.left = "".concat(left, "px");
      shell.style.width = "".concat(shellRect.width, "px");
      shell.style.height = "".concat(shellRect.height, "px");
      if (dir === 'top' || dir === 'bottom') {
        arrow.style.left = "".concat(arrowLeft, "px");
      } else {
        arrow.style.top = "".concat(arrowTop, "px");
      }
      this.timer = window.setTimeout(function () {
        shell.classList.add('lc-visible-animate');
        shell.style.transform = 'none';
      }, 10); /**/
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;
      var tip = tip_handler["b" /* tipHandler */].tip || {};
      var className = classnames_default()('lc-tip', tip.className, tip && tip.theme ? "lc-theme-".concat(tip.theme) : null);
      this.originClassName = className;
      return /*#__PURE__*/React.createElement("div", {
        className: className,
        ref: function ref(_ref) {
          _this2.shell = _ref;
        }
      }, /*#__PURE__*/React.createElement("i", {
        className: "lc-arrow"
      }), /*#__PURE__*/React.createElement("div", {
        className: "lc-tip-content"
      }, Object(intl["c" /* intl */])(tip.children)));
    }
  }]);
}(external_window_React_["Component"]);
// CONCATENATED MODULE: ../editor-core/src/widgets/tip/tip-container.tsx
function tip_container_typeof(o) { "@babel/helpers - typeof"; return tip_container_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, tip_container_typeof(o); }
function tip_container_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function tip_container_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, tip_container_toPropertyKey(o.key), o); } }
function tip_container_createClass(e, r, t) { return r && tip_container_defineProperties(e.prototype, r), t && tip_container_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function tip_container_toPropertyKey(t) { var i = tip_container_toPrimitive(t, "string"); return "symbol" == tip_container_typeof(i) ? i : i + ""; }
function tip_container_toPrimitive(t, r) { if ("object" != tip_container_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != tip_container_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function tip_container_callSuper(t, o, e) { return o = tip_container_getPrototypeOf(o), tip_container_possibleConstructorReturn(t, tip_container_isNativeReflectConstruct() ? Reflect.construct(o, e || [], tip_container_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function tip_container_possibleConstructorReturn(t, e) { if (e && ("object" == tip_container_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return tip_container_assertThisInitialized(t); }
function tip_container_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function tip_container_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (tip_container_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function tip_container_getPrototypeOf(t) { return tip_container_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, tip_container_getPrototypeOf(t); }
function tip_container_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && tip_container_setPrototypeOf(t, e); }
function tip_container_setPrototypeOf(t, e) { return tip_container_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, tip_container_setPrototypeOf(t, e); }




var tip_container_TipContainer = /*#__PURE__*/function (_Component) {
  function TipContainer() {
    var _this;
    tip_container_classCallCheck(this, TipContainer);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = tip_container_callSuper(this, TipContainer, [].concat(args));
    _this.dispose = void 0;
    return _this;
  }
  tip_container_inherits(TipContainer, _Component);
  return tip_container_createClass(TipContainer, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate() {
      return false;
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var over = function over(e) {
        return tip_handler["b" /* tipHandler */].setTarget(e.target);
      };
      var down = function down() {
        return tip_handler["b" /* tipHandler */].hideImmediately();
      };
      document.addEventListener('mouseover', over, false);
      document.addEventListener('mousedown', down, true);
      this.dispose = function () {
        document.removeEventListener('mouseover', over, false);
        document.removeEventListener('mousedown', down, true);
      };
    }
  }, {
    key: "UNSAFE_componentWillMount",
    value: function UNSAFE_componentWillMount() {
      if (this.dispose) {
        this.dispose();
      }
    }
  }, {
    key: "render",
    value: function render() {
      return /*#__PURE__*/external_window_ReactDOM_default.a.createPortal(/*#__PURE__*/React.createElement("div", {
        className: "lc-tips-container"
      }, /*#__PURE__*/React.createElement(tip_item_TipItem, null)), document.querySelector('body'));
    }
  }]);
}(external_window_React_["Component"]);
// EXTERNAL MODULE: external "Next"
var external_Next_ = __webpack_require__(5);

// CONCATENATED MODULE: ../editor-core/src/widgets/tip/help-tips.tsx
function help_tips_typeof(o) { "@babel/helpers - typeof"; return help_tips_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, help_tips_typeof(o); }


function HelpTip(_ref) {
  var help = _ref.help,
    _ref$direction = _ref.direction,
    direction = _ref$direction === void 0 ? 'top' : _ref$direction,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? 'small' : _ref$size;
  if (typeof help === 'string') {
    return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(external_Next_["Icon"], {
      type: "help",
      size: size,
      className: "lc-help-tip"
    }), /*#__PURE__*/React.createElement(tip_tip["a" /* Tip */], {
      direction: direction
    }, help));
  }
  if (help_tips_typeof(help) === 'object' && help.url) {
    return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("a", {
      href: help.url,
      target: "_blank",
      rel: "noopener noreferrer"
    }, /*#__PURE__*/React.createElement(external_Next_["Icon"], {
      type: "help",
      size: size,
      className: "lc-help-tip"
    })), /*#__PURE__*/React.createElement(tip_tip["a" /* Tip */], {
      direction: direction
    }, help.content));
  }
  return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(external_Next_["Icon"], {
    type: "help",
    size: "small",
    className: "lc-help-tip"
  }), /*#__PURE__*/React.createElement(tip_tip["a" /* Tip */], {
    direction: direction
  }, help.content));
}
// CONCATENATED MODULE: ../editor-core/src/widgets/tip/index.ts




// EXTERNAL MODULE: ../utils/src/index.ts + 63 modules
var src = __webpack_require__(3);

// EXTERNAL MODULE: ../editor-core/src/widgets/title/title.less
var title_title = __webpack_require__(98);

// CONCATENATED MODULE: ../editor-core/src/widgets/title/index.tsx
function title_typeof(o) { "@babel/helpers - typeof"; return title_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, title_typeof(o); }
function title_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function title_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, title_toPropertyKey(o.key), o); } }
function title_createClass(e, r, t) { return r && title_defineProperties(e.prototype, r), t && title_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function title_toPropertyKey(t) { var i = title_toPrimitive(t, "string"); return "symbol" == title_typeof(i) ? i : i + ""; }
function title_toPrimitive(t, r) { if ("object" != title_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != title_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function title_callSuper(t, o, e) { return o = title_getPrototypeOf(o), title_possibleConstructorReturn(t, title_isNativeReflectConstruct() ? Reflect.construct(o, e || [], title_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function title_possibleConstructorReturn(t, e) { if (e && ("object" == title_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return title_assertThisInitialized(t); }
function title_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function title_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (title_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function title_getPrototypeOf(t) { return title_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, title_getPrototypeOf(t); }
function title_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && title_setPrototypeOf(t, e); }
function title_setPrototypeOf(t, e) { return title_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, title_setPrototypeOf(t, e); }






/**
 * 根据 keywords 将 label 分割成文字片段
 * 示例：title = '自定义页面布局'，keywords = '页面'，返回结果为 ['自定义', '页面', '布局']
 * @param label title
 * @param keywords 关键字
 * @returns 文字片段列表
 */
function splitLabelByKeywords(label, keywords) {
  var len = keywords.length;
  var fragments = [];
  var str = label;
  while (str.length > 0) {
    var index = str.indexOf(keywords);
    if (index === 0) {
      fragments.push(keywords);
      str = str.slice(len);
    } else if (index < 0) {
      fragments.push(str);
      str = '';
    } else {
      fragments.push(str.slice(0, index));
      str = str.slice(index);
    }
  }
  return fragments;
}
var title_Title = /*#__PURE__*/function (_Component) {
  function Title(props) {
    var _this;
    title_classCallCheck(this, Title);
    _this = title_callSuper(this, Title, [props]);
    _this.renderLabel = function (label) {
      var _this$props = _this.props,
        match = _this$props.match,
        keywords = _this$props.keywords;
      if (!label) {
        return null;
      }
      var intlLabel = Object(intl["c" /* intl */])(label);
      if (typeof intlLabel !== 'string') {
        return /*#__PURE__*/React.createElement("span", {
          className: "lc-title-txt"
        }, intlLabel);
      }
      var labelToRender = intlLabel;
      if (match && keywords) {
        var fragments = splitLabelByKeywords(intlLabel, keywords);
        labelToRender = fragments.map(function (f) {
          return /*#__PURE__*/React.createElement("span", {
            style: {
              color: f === keywords ? 'red' : 'inherit'
            }
          }, f);
        });
      }
      return /*#__PURE__*/React.createElement("span", {
        className: "lc-title-txt"
      }, labelToRender);
    };
    _this.handleClick = _this.handleClick.bind(_this);
    return _this;
  }
  title_inherits(Title, _Component);
  return title_createClass(Title, [{
    key: "handleClick",
    value: function handleClick(e) {
      var _this$props2 = this.props,
        title = _this$props2.title,
        onClick = _this$props2.onClick;
      var url = title && (title.docUrl || title.url);
      if (url) {
        window.open(url);
        // 防止触发行操作（如折叠面板）
        e.stopPropagation();
      }
      // TODO: 操作交互冲突，目前 mixedSetter 仅有 2 个 setter 注册时用到了 onClick
      onClick && onClick(e);
    }
  }, {
    key: "render",
    value: function render() {
      // eslint-disable-next-line prefer-const
      var _this$props3 = this.props,
        title = _this$props3.title,
        className = _this$props3.className;
      var _title;
      if (title == null) {
        return null;
      }
      if (/*#__PURE__*/Object(external_window_React_["isValidElement"])(title)) {
        return title;
      }
      if (typeof title === 'string' || Object(src["I" /* isI18nData */])(title)) {
        _title = {
          label: title
        };
      } else if (Object(src["ab" /* isTitleConfig */])(title)) {
        _title = title;
      } else {
        _title = {
          label: title
        };
      }
      var icon = _title.icon ? Object(src["p" /* createIcon */])(_title.icon, {
        size: 20
      }) : null;
      var tip = null;
      if (_title.tip) {
        if (/*#__PURE__*/Object(external_window_React_["isValidElement"])(_title.tip) && _title.tip.type === tip_tip["a" /* Tip */]) {
          tip = _title.tip;
        } else {
          var tipProps = title_typeof(_title.tip) === 'object' && !(/*#__PURE__*/Object(external_window_React_["isValidElement"])(_title.tip) || Object(src["I" /* isI18nData */])(_title.tip)) ? _title.tip : {
            children: _title.tip
          };
          tip = /*#__PURE__*/React.createElement(tip_tip["a" /* Tip */], tipProps);
        }
      }
      return /*#__PURE__*/React.createElement("span", {
        className: classnames_default()('lc-title', className, _title.className, {
          'has-tip': !!tip,
          'only-icon': !_title.label
        }),
        onClick: this.handleClick
      }, icon ? /*#__PURE__*/React.createElement("b", {
        className: "lc-title-icon"
      }, icon) : null, this.renderLabel(_title.label), tip);
    }
  }]);
}(external_window_React_["Component"]);
// CONCATENATED MODULE: ../editor-core/src/widgets/index.ts
// TODO move another place



/***/ }),
/* 57 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ editor_Editor; });
__webpack_require__.d(__webpack_exports__, "b", function() { return /* binding */ commonEvent; });

// EXTERNAL MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/tslib/tslib.es6.js
var tslib_es6 = __webpack_require__(0);

// EXTERNAL MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/events/events.js
var events = __webpack_require__(9);

// EXTERNAL MODULE: ../editor-core/src/event-bus.ts
var event_bus = __webpack_require__(14);

// EXTERNAL MODULE: ../editor-core/src/config.ts
var config = __webpack_require__(28);

// EXTERNAL MODULE: ../editor-core/src/intl/index.ts + 16 modules
var intl = __webpack_require__(16);

// EXTERNAL MODULE: ../editor-core/src/utils/index.ts + 4 modules
var utils = __webpack_require__(18);

// EXTERNAL MODULE: ../utils/src/index.ts + 63 modules
var src = __webpack_require__(3);

// CONCATENATED MODULE: ../editor-core/src/utils/assets-transform.ts
// TODO: 该转换逻辑未来需要消化掉
function assetsTransform(assets) {
  var components = assets.components,
    packages = assets.packages;
  var packageMaps = (packages || []).reduce(function (acc, cur) {
    var key = cur.id || cur.package || '';
    acc[key] = cur;
    return acc;
  }, {});
  components.forEach(function (componentDesc) {
    var devMode = componentDesc.devMode,
      schema = componentDesc.schema,
      reference = componentDesc.reference;
    if (devMode === 'lowcode') {
      devMode = 'lowCode';
    } else if (devMode === 'proCode') {
      devMode = 'proCode';
    }
    if (devMode) {
      componentDesc.devMode = devMode;
    }
    if (devMode === 'lowCode' && !schema && reference) {
      var referenceId = reference.id || '';
      componentDesc.schema = packageMaps[referenceId].schema;
    }
  });
  return assets;
}
// CONCATENATED MODULE: ../editor-core/src/editor.ts
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i.return) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _possibleConstructorReturn(t, e) { if (e && ("object" == _typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return _assertThisInitialized(t); }
function _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }
function _inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && _setPrototypeOf(t, e); }
function _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }








events["EventEmitter"].defaultMaxListeners = 100;
// inner instance keys which should not be stored in config
var keyBlacklist = ['designer', 'skeleton', 'currentDocument', 'simulator', 'plugins', 'setters', 'material', 'innerHotkey', 'innerPlugins'];
var AssetsCache = {};
// eslint-disable-next-line no-redeclare
var editor_Editor = /*#__PURE__*/function (_EventEmitter) {
  function Editor() {
    var _this;
    var viewName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'global';
    var workspaceMode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    _classCallCheck(this, Editor);
    // eslint-disable-next-line constructor-super
    _this = _callSuper(this, Editor);
    _this.viewName = void 0;
    _this.workspaceMode = void 0;
    /**
     * Ioc Container
     */
    _this.context = new Map();
    _this.config = void 0;
    _this.eventBus = void 0;
    _this.components = void 0;
    // readonly utils = utils;
    _this.hooks = [];
    _this.waits = new Map();
    _this.initHooks = function (hooks) {
      _this.hooks = hooks.map(function (hook) {
        return _objectSpread(_objectSpread({}, hook), {}, {
          // 指定第一个参数为 editor
          handler: hook.handler.bind(_this, _this)
        });
      });
      return _this.hooks;
    };
    _this.registerHooks = function (hooks) {
      _this.initHooks(hooks).forEach(function (_ref) {
        var message = _ref.message,
          type = _ref.type,
          handler = _ref.handler;
        if (['on', 'once'].indexOf(type) !== -1) {
          _this[type](message, handler);
        }
      });
    };
    _this.unregisterHooks = function () {
      _this.hooks.forEach(function (_ref2) {
        var message = _ref2.message,
          handler = _ref2.handler;
        _this.removeListener(message, handler);
      });
    };
    _this.viewName = viewName;
    _this.workspaceMode = workspaceMode;
    // set global emitter maxListeners
    _this.setMaxListeners(200);
    _this.eventBus = new event_bus["a" /* EventBus */](_this);
    return _this;
  }
  _inherits(Editor, _EventEmitter);
  return _createClass(Editor, [{
    key: "locale",
    get: function get() {
      return intl["b" /* globalLocale */].getLocale();
    }
  }, {
    key: "get",
    value: function get(keyOrType) {
      return this.context.get(keyOrType);
    }
  }, {
    key: "has",
    value: function has(keyOrType) {
      return this.context.has(keyOrType);
    }
  }, {
    key: "set",
    value: function set(key, data) {
      if (key === 'assets') {
        return this.setAssets(data);
      }
      // store the data to engineConfig while invoking editor.set()
      if (!keyBlacklist.includes(key)) {
        config["a" /* engineConfig */].set(key, data);
      }
      this.context.set(key, data);
      this.notifyGot(key);
    }
  }, {
    key: "setAssets",
    value: function () {
      var _setAssets = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2(assets) {
        var components, componentDescriptions, remoteComponentDescriptions, innerAssets;
        return _regenerator().w(function (_context2) {
          while (1) switch (_context2.n) {
            case 0:
              components = assets.components;
              if (!(components && components.length)) {
                _context2.n = 1;
                break;
              }
              componentDescriptions = [];
              remoteComponentDescriptions = [];
              components.forEach(function (component) {
                if (!component) {
                  return;
                }
                if (component.exportName && component.url) {
                  remoteComponentDescriptions.push(component);
                } else {
                  componentDescriptions.push(component);
                }
              });
              assets.components = componentDescriptions;
              assets.componentList = assets.componentList || [];
              // 如果有远程组件描述协议，则自动加载并补充到资产包中，同时出发 designer.incrementalAssetsReady 通知组件面板更新数据
              if (!(remoteComponentDescriptions && remoteComponentDescriptions.length)) {
                _context2.n = 1;
                break;
              }
              _context2.n = 1;
              return Promise.all(remoteComponentDescriptions.map(/*#__PURE__*/function () {
                var _ref3 = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee(component) {
                  var _AssetsCache$exportNa;
                  var exportName, url, npm, setAssetsComponent, setArrayAssets;
                  return _regenerator().w(function (_context) {
                    while (1) switch (_context.n) {
                      case 0:
                        setArrayAssets = function _setArrayAssets(value) {
                          var preExportName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
                          var preSubName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
                          value.forEach(function (d, i) {
                            var exportName = [preExportName, i.toString()].filter(function (d) {
                              return !!d;
                            }).join('.');
                            var subName = [preSubName, i.toString()].filter(function (d) {
                              return !!d;
                            }).join('.');
                            Array.isArray(d) ? setArrayAssets(d, exportName, subName) : setAssetsComponent(d, {
                              exportName: exportName,
                              subName: subName
                            });
                          });
                        };
                        setAssetsComponent = function _setAssetsComponent(component) {
                          var _assets$componentList;
                          var extraNpmInfo = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                          var components = component.components;
                          assets.componentList = (_assets$componentList = assets.componentList) === null || _assets$componentList === void 0 ? void 0 : _assets$componentList.concat(component.componentList || []);
                          if (Array.isArray(components)) {
                            components.forEach(function (d) {
                              assets.components = assets.components.concat(_objectSpread({
                                npm: _objectSpread(_objectSpread({}, npm), extraNpmInfo)
                              }, d) || []);
                            });
                            return;
                          }
                          if (component.components) {
                            assets.components = assets.components.concat(_objectSpread({
                              npm: _objectSpread(_objectSpread({}, npm), extraNpmInfo)
                            }, component.components) || []);
                          }
                        };
                        exportName = component.exportName, url = component.url, npm = component.npm;
                        if (!(!url || !exportName)) {
                          _context.n = 1;
                          break;
                        }
                        return _context.a(2);
                      case 1:
                        if (!(!AssetsCache[exportName] || !(npm !== null && npm !== void 0 && npm.version) || ((_AssetsCache$exportNa = AssetsCache[exportName].npm) === null || _AssetsCache$exportNa === void 0 ? void 0 : _AssetsCache$exportNa.version) !== (npm === null || npm === void 0 ? void 0 : npm.version))) {
                          _context.n = 2;
                          break;
                        }
                        _context.n = 2;
                        return new src["c" /* AssetLoader */]().load(url);
                      case 2:
                        AssetsCache[exportName] = component;
                        if (window[exportName]) {
                          if (Array.isArray(window[exportName])) {
                            setArrayAssets(window[exportName]);
                          } else {
                            setAssetsComponent(window[exportName]);
                          }
                        }
                        return _context.a(2, window[exportName]);
                    }
                  }, _callee);
                }));
                return function (_x2) {
                  return _ref3.apply(this, arguments);
                };
              }()));
            case 1:
              innerAssets = assetsTransform(assets);
              this.context.set('assets', innerAssets);
              this.notifyGot('assets');
            case 2:
              return _context2.a(2);
          }
        }, _callee2, this);
      }));
      function setAssets(_x) {
        return _setAssets.apply(this, arguments);
      }
      return setAssets;
    }()
  }, {
    key: "onceGot",
    value: function onceGot(keyOrType) {
      var _this2 = this;
      var x = this.context.get(keyOrType);
      if (x !== undefined) {
        return Promise.resolve(x);
      }
      return new Promise(function (resolve) {
        _this2.setWait(keyOrType, resolve, true);
      });
    }
  }, {
    key: "onGot",
    value: function onGot(keyOrType, fn) {
      var _this3 = this;
      var x = this.context.get(keyOrType);
      if (x !== undefined) {
        fn(x);
      }
      this.setWait(keyOrType, fn);
      return function () {
        _this3.delWait(keyOrType, fn);
      };
    }
  }, {
    key: "onChange",
    value: function onChange(keyOrType, fn) {
      var _this4 = this;
      this.setWait(keyOrType, fn);
      return function () {
        _this4.delWait(keyOrType, fn);
      };
    }
  }, {
    key: "register",
    value: function register(data, key) {
      this.context.set(key || data, data);
      this.notifyGot(key || data);
    }
  }, {
    key: "init",
    value: function () {
      var _init = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3(config, components) {
        var _this$config, _this$config$hooks, hooks, lifeCycles, init, _t;
        return _regenerator().w(function (_context3) {
          while (1) switch (_context3.p = _context3.n) {
            case 0:
              this.config = config || {};
              this.components = components || {};
              _this$config = this.config, _this$config$hooks = _this$config.hooks, hooks = _this$config$hooks === void 0 ? [] : _this$config$hooks, lifeCycles = _this$config.lifeCycles;
              this.emit('editor.beforeInit');
              init = lifeCycles && lifeCycles.init || function () {};
              _context3.p = 1;
              _context3.n = 2;
              return init(this);
            case 2:
              // 注册快捷键
              // 注册 hooks
              this.registerHooks(hooks);
              this.emit('editor.afterInit');
              return _context3.a(2, true);
            case 3:
              _context3.p = 3;
              _t = _context3.v;
              console.error(_t);
            case 4:
              return _context3.a(2);
          }
        }, _callee3, this, [[1, 3]]);
      }));
      function init(_x3, _x4) {
        return _init.apply(this, arguments);
      }
      return init;
    }()
  }, {
    key: "destroy",
    value: function destroy() {
      if (!this.config) {
        return;
      }
      try {
        var _this$config$lifeCycl = this.config.lifeCycles,
          lifeCycles = _this$config$lifeCycl === void 0 ? {} : _this$config$lifeCycl;
        this.unregisterHooks();
        if (lifeCycles.destroy) {
          lifeCycles.destroy(this);
        }
      } catch (err) {
        console.warn(err);
      }
    }
  }, {
    key: "notifyGot",
    value: function notifyGot(key) {
      var waits = this.waits.get(key);
      if (!waits) {
        return;
      }
      waits = waits.slice().reverse();
      var i = waits.length;
      while (i--) {
        waits[i].resolve(this.get(key));
        if (waits[i].once) {
          waits.splice(i, 1);
        }
      }
      if (waits.length > 0) {
        this.waits.set(key, waits);
      } else {
        this.waits.delete(key);
      }
    }
  }, {
    key: "setWait",
    value: function setWait(key, resolve, once) {
      var waits = this.waits.get(key);
      if (waits) {
        waits.push({
          resolve: resolve,
          once: once
        });
      } else {
        this.waits.set(key, [{
          resolve: resolve,
          once: once
        }]);
      }
    }
  }, {
    key: "delWait",
    value: function delWait(key, fn) {
      var waits = this.waits.get(key);
      if (!waits) {
        return;
      }
      var i = waits.length;
      while (i--) {
        if (waits[i].resolve === fn) {
          waits.splice(i, 1);
        }
      }
      if (waits.length < 1) {
        this.waits.delete(key);
      }
    }
  }]);
}(events["EventEmitter"]);
Object(tslib_es6["b" /* __decorate */])([utils["j" /* obx */].shallow, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], editor_Editor.prototype, "context", void 0);
var commonEvent = new event_bus["a" /* EventBus */](new events["EventEmitter"]());

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactIs = __webpack_require__(39);
var assign = __webpack_require__(69);

var ReactPropTypesSecret = __webpack_require__(40);
var has = __webpack_require__(70);
var checkPropTypes = __webpack_require__(71);

var printWarning = function() {};

if (false) {}

function emptyFunctionThatReturnsNull() {
  return null;
}

module.exports = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bigint: createPrimitiveTypeChecker('bigint'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    elementType: createElementTypeTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker,
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message, data) {
    this.message = message;
    this.data = data && typeof data === 'object' ? data: {};
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (false) { var manualPropTypeWarningCount, manualPropTypeCallCache; }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          var err = new Error(
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
          err.name = 'Invariant Violation';
          throw err;
        } else if (false) { var cacheKey; }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError(
          'Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'),
          {expectedType: expectedType}
        );
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!ReactIs.isValidElementType(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      if (false) {}
      return emptyFunctionThatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
        var type = getPreciseType(value);
        if (type === 'symbol') {
          return String(value);
        }
        return value;
      });
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (has(propValue, key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
       false ? undefined : void 0;
      return emptyFunctionThatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        printWarning(
          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'
        );
        return emptyFunctionThatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      var expectedTypes = [];
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
        if (checkerResult == null) {
          return null;
        }
        if (checkerResult.data && has(checkerResult.data, 'expectedType')) {
          expectedTypes.push(checkerResult.data.expectedType);
        }
      }
      var expectedTypesMessage = (expectedTypes.length > 0) ? ', expected one of type [' + expectedTypes.join(', ') + ']': '';
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function invalidValidatorError(componentName, location, propFullName, key, type) {
    return new PropTypeError(
      (componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' +
      'it must be a function, usually from the `prop-types` package, but received `' + type + '`.'
    );
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (typeof checker !== 'function') {
          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      // We need to check all keys in case some are required but missing from props.
      var allKeys = assign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (has(shapeTypes, key) && typeof checker !== 'function') {
          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
        }
        if (!checker) {
          return new PropTypeError(
            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
            '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  ')
          );
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // falsy value can't be a Symbol
    if (!propValue) {
      return false;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {/* eslint-env browser */

/**
 * This is the web browser implementation of `debug()`.
 */

exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = localstorage();
exports.destroy = (() => {
	let warned = false;

	return () => {
		if (!warned) {
			warned = true;
			console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');
		}
	};
})();

/**
 * Colors.
 */

exports.colors = [
	'#0000CC',
	'#0000FF',
	'#0033CC',
	'#0033FF',
	'#0066CC',
	'#0066FF',
	'#0099CC',
	'#0099FF',
	'#00CC00',
	'#00CC33',
	'#00CC66',
	'#00CC99',
	'#00CCCC',
	'#00CCFF',
	'#3300CC',
	'#3300FF',
	'#3333CC',
	'#3333FF',
	'#3366CC',
	'#3366FF',
	'#3399CC',
	'#3399FF',
	'#33CC00',
	'#33CC33',
	'#33CC66',
	'#33CC99',
	'#33CCCC',
	'#33CCFF',
	'#6600CC',
	'#6600FF',
	'#6633CC',
	'#6633FF',
	'#66CC00',
	'#66CC33',
	'#9900CC',
	'#9900FF',
	'#9933CC',
	'#9933FF',
	'#99CC00',
	'#99CC33',
	'#CC0000',
	'#CC0033',
	'#CC0066',
	'#CC0099',
	'#CC00CC',
	'#CC00FF',
	'#CC3300',
	'#CC3333',
	'#CC3366',
	'#CC3399',
	'#CC33CC',
	'#CC33FF',
	'#CC6600',
	'#CC6633',
	'#CC9900',
	'#CC9933',
	'#CCCC00',
	'#CCCC33',
	'#FF0000',
	'#FF0033',
	'#FF0066',
	'#FF0099',
	'#FF00CC',
	'#FF00FF',
	'#FF3300',
	'#FF3333',
	'#FF3366',
	'#FF3399',
	'#FF33CC',
	'#FF33FF',
	'#FF6600',
	'#FF6633',
	'#FF9900',
	'#FF9933',
	'#FFCC00',
	'#FFCC33'
];

/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */

// eslint-disable-next-line complexity
function useColors() {
	// NB: In an Electron preload script, document will be defined but not fully
	// initialized. Since we know we're in Chrome, we'll just detect this case
	// explicitly
	if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {
		return true;
	}

	// Internet Explorer and Edge do not support colors.
	if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
		return false;
	}

	let m;

	// Is webkit? http://stackoverflow.com/a/16459606/376773
	// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
	// eslint-disable-next-line no-return-assign
	return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
		// Is firebug? http://stackoverflow.com/a/398120/376773
		(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
		// Is firefox >= v31?
		// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
		(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)) && parseInt(m[1], 10) >= 31) ||
		// Double check webkit in userAgent just in case we are in a worker
		(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
}

/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */

function formatArgs(args) {
	args[0] = (this.useColors ? '%c' : '') +
		this.namespace +
		(this.useColors ? ' %c' : ' ') +
		args[0] +
		(this.useColors ? '%c ' : ' ') +
		'+' + module.exports.humanize(this.diff);

	if (!this.useColors) {
		return;
	}

	const c = 'color: ' + this.color;
	args.splice(1, 0, c, 'color: inherit');

	// The final "%c" is somewhat tricky, because there could be other
	// arguments passed either before or after the %c, so we need to
	// figure out the correct index to insert the CSS into
	let index = 0;
	let lastC = 0;
	args[0].replace(/%[a-zA-Z%]/g, match => {
		if (match === '%%') {
			return;
		}
		index++;
		if (match === '%c') {
			// We only are interested in the *last* %c
			// (the user may have provided their own)
			lastC = index;
		}
	});

	args.splice(lastC, 0, c);
}

/**
 * Invokes `console.debug()` when available.
 * No-op when `console.debug` is not a "function".
 * If `console.debug` is not available, falls back
 * to `console.log`.
 *
 * @api public
 */
exports.log = console.debug || console.log || (() => {});

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */
function save(namespaces) {
	try {
		if (namespaces) {
			exports.storage.setItem('debug', namespaces);
		} else {
			exports.storage.removeItem('debug');
		}
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */
function load() {
	let r;
	try {
		r = exports.storage.getItem('debug') || exports.storage.getItem('DEBUG') ;
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}

	// If debug isn't set in LS, and we're in Electron, try to load $DEBUG
	if (!r && typeof process !== 'undefined' && 'env' in process) {
		r = process.env.DEBUG;
	}

	return r;
}

/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */

function localstorage() {
	try {
		// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context
		// The Browser also has localStorage in the global context.
		return localStorage;
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}
}

module.exports = __webpack_require__(72)(exports);

const {formatters} = module.exports;

/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

formatters.j = function (v) {
	try {
		return JSON.stringify(v);
	} catch (error) {
		return '[UnexpectedJSONParseError]: ' + error.message;
	}
};

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(42)))

/***/ }),
/* 60 */
/***/ (function(module) {

module.exports = JSON.parse("{\"copy\":\"Copy\",\"remove\":\"Remove\",\"hide\":\"Hide\",\"lock\":\"Lock\",\"unlock\":\"Unlock\",\"Condition Group\":\"Condition Group\",\"No opened document\":\"No opened document, open some document to editing\",\"locked\":\"locked\",\"Item\":\"Item\"}");

/***/ }),
/* 61 */
/***/ (function(module) {

module.exports = JSON.parse("{\"copy\":\"复制\",\"remove\":\"删除\",\"hide\":\"隐藏\",\"lock\":\"锁定\",\"unlock\":\"解锁\",\"Condition Group\":\"条件组\",\"No opened document\":\"没有打开的页面，请选择页面打开编辑\",\"locked\":\"已锁定\",\"Item\":\"项目\"}");

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const Range = __webpack_require__(51)
const satisfies = (version, range, options) => {
  try {
    range = new Range(range, options)
  } catch (er) {
    return false
  }
  return range.test(version)
}
module.exports = satisfies


/***/ }),
/* 63 */
/***/ (function(module) {

module.exports = JSON.parse("{\"Binded: {expr}\":\"Binded: {expr}\",\"Variable Binding\":\"Variable Binding\",\"Switch Setter\":\"Switch Setter\",\"Multiple Value, Click to Clear\":\"Multiple Value, Click to Clear\",\"Required\":\"Required\",\"Setted Value, Click to Clear\":\"Setted Value, Click to Clear\",\"Multiple Value\":\"Multiple Value\",\"Attribute: \":\"Attribute: \",\"Description: \":\"Description: \",\"Please select a node in canvas\":\"Please select a node in canvas\",\"Current node is locked\":\"Current node is locked\",\"No config found for this type of component\":\"No config found for this type of component\",\"Please select same kind of components\":\"Please select same kind of components\"}");

/***/ }),
/* 64 */
/***/ (function(module) {

module.exports = JSON.parse("{\"Binded: {expr}\":\"已绑定：{expr}\",\"Variable Binding\":\"变量绑定\",\"Switch Setter\":\"切换设置器\",\"Multiple Value, Click to Clear\":\"多种值，点击清除\",\"Required\":\"必填项\",\"Setted Value, Click to Clear\":\"已设置值，点击清除\",\"Multiple Value\":\"多种值\",\"Attribute: \":\"属性：\",\"Description: \":\"说明：\",\"Please select a node in canvas\":\"请在左侧画布选中节点\",\"Current node is locked\":\"该节点已被锁定，无法配置\",\"No config found for this type of component\":\"该组件暂无配置\",\"Please select same kind of components\":\"请选中同一类型节点编辑\"}");

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(127);


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var b="function"===typeof Symbol&&Symbol.for,c=b?Symbol.for("react.element"):60103,d=b?Symbol.for("react.portal"):60106,e=b?Symbol.for("react.fragment"):60107,f=b?Symbol.for("react.strict_mode"):60108,g=b?Symbol.for("react.profiler"):60114,h=b?Symbol.for("react.provider"):60109,k=b?Symbol.for("react.context"):60110,l=b?Symbol.for("react.async_mode"):60111,m=b?Symbol.for("react.concurrent_mode"):60111,n=b?Symbol.for("react.forward_ref"):60112,p=b?Symbol.for("react.suspense"):60113,q=b?
Symbol.for("react.suspense_list"):60120,r=b?Symbol.for("react.memo"):60115,t=b?Symbol.for("react.lazy"):60116,v=b?Symbol.for("react.block"):60121,w=b?Symbol.for("react.fundamental"):60117,x=b?Symbol.for("react.responder"):60118,y=b?Symbol.for("react.scope"):60119;
function z(a){if("object"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;
exports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return"object"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};
exports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};
exports.isValidElementType=function(a){return"string"===typeof a||"function"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||"object"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/


/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};


/***/ }),
/* 70 */
/***/ (function(module, exports) {

module.exports = Function.call.bind(Object.prototype.hasOwnProperty);


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var printWarning = function() {};

if (false) { var has, loggedTypeFailures, ReactPropTypesSecret; }

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (false) { var stack, err, error, typeSpecName; }
}

/**
 * Resets warning cache when testing.
 *
 * @private
 */
checkPropTypes.resetWarningCache = function() {
  if (false) {}
}

module.exports = checkPropTypes;


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {


/**
 * This is the common logic for both the Node.js and web browser
 * implementations of `debug()`.
 */

function setup(env) {
	createDebug.debug = createDebug;
	createDebug.default = createDebug;
	createDebug.coerce = coerce;
	createDebug.disable = disable;
	createDebug.enable = enable;
	createDebug.enabled = enabled;
	createDebug.humanize = __webpack_require__(73);
	createDebug.destroy = destroy;

	Object.keys(env).forEach(key => {
		createDebug[key] = env[key];
	});

	/**
	* The currently active debug mode names, and names to skip.
	*/

	createDebug.names = [];
	createDebug.skips = [];

	/**
	* Map of special "%n" handling functions, for the debug "format" argument.
	*
	* Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
	*/
	createDebug.formatters = {};

	/**
	* Selects a color for a debug namespace
	* @param {String} namespace The namespace string for the debug instance to be colored
	* @return {Number|String} An ANSI color code for the given namespace
	* @api private
	*/
	function selectColor(namespace) {
		let hash = 0;

		for (let i = 0; i < namespace.length; i++) {
			hash = ((hash << 5) - hash) + namespace.charCodeAt(i);
			hash |= 0; // Convert to 32bit integer
		}

		return createDebug.colors[Math.abs(hash) % createDebug.colors.length];
	}
	createDebug.selectColor = selectColor;

	/**
	* Create a debugger with the given `namespace`.
	*
	* @param {String} namespace
	* @return {Function}
	* @api public
	*/
	function createDebug(namespace) {
		let prevTime;
		let enableOverride = null;
		let namespacesCache;
		let enabledCache;

		function debug(...args) {
			// Disabled?
			if (!debug.enabled) {
				return;
			}

			const self = debug;

			// Set `diff` timestamp
			const curr = Number(new Date());
			const ms = curr - (prevTime || curr);
			self.diff = ms;
			self.prev = prevTime;
			self.curr = curr;
			prevTime = curr;

			args[0] = createDebug.coerce(args[0]);

			if (typeof args[0] !== 'string') {
				// Anything else let's inspect with %O
				args.unshift('%O');
			}

			// Apply any `formatters` transformations
			let index = 0;
			args[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {
				// If we encounter an escaped % then don't increase the array index
				if (match === '%%') {
					return '%';
				}
				index++;
				const formatter = createDebug.formatters[format];
				if (typeof formatter === 'function') {
					const val = args[index];
					match = formatter.call(self, val);

					// Now we need to remove `args[index]` since it's inlined in the `format`
					args.splice(index, 1);
					index--;
				}
				return match;
			});

			// Apply env-specific formatting (colors, etc.)
			createDebug.formatArgs.call(self, args);

			const logFn = self.log || createDebug.log;
			logFn.apply(self, args);
		}

		debug.namespace = namespace;
		debug.useColors = createDebug.useColors();
		debug.color = createDebug.selectColor(namespace);
		debug.extend = extend;
		debug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.

		Object.defineProperty(debug, 'enabled', {
			enumerable: true,
			configurable: false,
			get: () => {
				if (enableOverride !== null) {
					return enableOverride;
				}
				if (namespacesCache !== createDebug.namespaces) {
					namespacesCache = createDebug.namespaces;
					enabledCache = createDebug.enabled(namespace);
				}

				return enabledCache;
			},
			set: v => {
				enableOverride = v;
			}
		});

		// Env-specific initialization logic for debug instances
		if (typeof createDebug.init === 'function') {
			createDebug.init(debug);
		}

		return debug;
	}

	function extend(namespace, delimiter) {
		const newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);
		newDebug.log = this.log;
		return newDebug;
	}

	/**
	* Enables a debug mode by namespaces. This can include modes
	* separated by a colon and wildcards.
	*
	* @param {String} namespaces
	* @api public
	*/
	function enable(namespaces) {
		createDebug.save(namespaces);
		createDebug.namespaces = namespaces;

		createDebug.names = [];
		createDebug.skips = [];

		const split = (typeof namespaces === 'string' ? namespaces : '')
			.trim()
			.replace(/\s+/g, ',')
			.split(',')
			.filter(Boolean);

		for (const ns of split) {
			if (ns[0] === '-') {
				createDebug.skips.push(ns.slice(1));
			} else {
				createDebug.names.push(ns);
			}
		}
	}

	/**
	 * Checks if the given string matches a namespace template, honoring
	 * asterisks as wildcards.
	 *
	 * @param {String} search
	 * @param {String} template
	 * @return {Boolean}
	 */
	function matchesTemplate(search, template) {
		let searchIndex = 0;
		let templateIndex = 0;
		let starIndex = -1;
		let matchIndex = 0;

		while (searchIndex < search.length) {
			if (templateIndex < template.length && (template[templateIndex] === search[searchIndex] || template[templateIndex] === '*')) {
				// Match character or proceed with wildcard
				if (template[templateIndex] === '*') {
					starIndex = templateIndex;
					matchIndex = searchIndex;
					templateIndex++; // Skip the '*'
				} else {
					searchIndex++;
					templateIndex++;
				}
			} else if (starIndex !== -1) { // eslint-disable-line no-negated-condition
				// Backtrack to the last '*' and try to match more characters
				templateIndex = starIndex + 1;
				matchIndex++;
				searchIndex = matchIndex;
			} else {
				return false; // No match
			}
		}

		// Handle trailing '*' in template
		while (templateIndex < template.length && template[templateIndex] === '*') {
			templateIndex++;
		}

		return templateIndex === template.length;
	}

	/**
	* Disable debug output.
	*
	* @return {String} namespaces
	* @api public
	*/
	function disable() {
		const namespaces = [
			...createDebug.names,
			...createDebug.skips.map(namespace => '-' + namespace)
		].join(',');
		createDebug.enable('');
		return namespaces;
	}

	/**
	* Returns true if the given mode name is enabled, false otherwise.
	*
	* @param {String} name
	* @return {Boolean}
	* @api public
	*/
	function enabled(name) {
		for (const skip of createDebug.skips) {
			if (matchesTemplate(name, skip)) {
				return false;
			}
		}

		for (const ns of createDebug.names) {
			if (matchesTemplate(name, ns)) {
				return true;
			}
		}

		return false;
	}

	/**
	* Coerce `val`.
	*
	* @param {Mixed} val
	* @return {Mixed}
	* @api private
	*/
	function coerce(val) {
		if (val instanceof Error) {
			return val.stack || val.message;
		}
		return val;
	}

	/**
	* XXX DO NOT USE. This is a temporary stub function.
	* XXX It WILL be removed in the next major release.
	*/
	function destroy() {
		console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');
	}

	createDebug.enable(createDebug.load());

	return createDebug;
}

module.exports = setup;


/***/ }),
/* 73 */
/***/ (function(module, exports) {

/**
 * Helpers.
 */

var s = 1000;
var m = s * 60;
var h = m * 60;
var d = h * 24;
var w = d * 7;
var y = d * 365.25;

/**
 * Parse or format the given `val`.
 *
 * Options:
 *
 *  - `long` verbose formatting [false]
 *
 * @param {String|Number} val
 * @param {Object} [options]
 * @throws {Error} throw an error if val is not a non-empty string or a number
 * @return {String|Number}
 * @api public
 */

module.exports = function (val, options) {
  options = options || {};
  var type = typeof val;
  if (type === 'string' && val.length > 0) {
    return parse(val);
  } else if (type === 'number' && isFinite(val)) {
    return options.long ? fmtLong(val) : fmtShort(val);
  }
  throw new Error(
    'val is not a non-empty string or a valid number. val=' +
      JSON.stringify(val)
  );
};

/**
 * Parse the given `str` and return milliseconds.
 *
 * @param {String} str
 * @return {Number}
 * @api private
 */

function parse(str) {
  str = String(str);
  if (str.length > 100) {
    return;
  }
  var match = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
    str
  );
  if (!match) {
    return;
  }
  var n = parseFloat(match[1]);
  var type = (match[2] || 'ms').toLowerCase();
  switch (type) {
    case 'years':
    case 'year':
    case 'yrs':
    case 'yr':
    case 'y':
      return n * y;
    case 'weeks':
    case 'week':
    case 'w':
      return n * w;
    case 'days':
    case 'day':
    case 'd':
      return n * d;
    case 'hours':
    case 'hour':
    case 'hrs':
    case 'hr':
    case 'h':
      return n * h;
    case 'minutes':
    case 'minute':
    case 'mins':
    case 'min':
    case 'm':
      return n * m;
    case 'seconds':
    case 'second':
    case 'secs':
    case 'sec':
    case 's':
      return n * s;
    case 'milliseconds':
    case 'millisecond':
    case 'msecs':
    case 'msec':
    case 'ms':
      return n;
    default:
      return undefined;
  }
}

/**
 * Short format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtShort(ms) {
  var msAbs = Math.abs(ms);
  if (msAbs >= d) {
    return Math.round(ms / d) + 'd';
  }
  if (msAbs >= h) {
    return Math.round(ms / h) + 'h';
  }
  if (msAbs >= m) {
    return Math.round(ms / m) + 'm';
  }
  if (msAbs >= s) {
    return Math.round(ms / s) + 's';
  }
  return ms + 'ms';
}

/**
 * Long format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtLong(ms) {
  var msAbs = Math.abs(ms);
  if (msAbs >= d) {
    return plural(ms, msAbs, d, 'day');
  }
  if (msAbs >= h) {
    return plural(ms, msAbs, h, 'hour');
  }
  if (msAbs >= m) {
    return plural(ms, msAbs, m, 'minute');
  }
  if (msAbs >= s) {
    return plural(ms, msAbs, s, 'second');
  }
  return ms + ' ms';
}

/**
 * Pluralization helper.
 */

function plural(ms, msAbs, n, name) {
  var isPlural = msAbs >= n * 1.5;
  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');
}


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

var util = __webpack_require__(19)
var slice = util.slice
var pluck = util.pluck
var each = util.each
var bind = util.bind
var create = util.create
var isList = util.isList
var isFunction = util.isFunction
var isObject = util.isObject

module.exports = {
	createStore: createStore
}

var storeAPI = {
	version: '2.0.12',
	enabled: false,

	// get returns the value of the given key. If that value
	// is undefined, it returns optionalDefaultValue instead.
	get: function(key, optionalDefaultValue) {
		var data = this.storage.read(this._namespacePrefix + key)
		return this._deserialize(data, optionalDefaultValue)
	},

	// set will store the given value at key and returns value.
	// Calling set with value === undefined is equivalent to calling remove.
	set: function(key, value) {
		if (value === undefined) {
			return this.remove(key)
		}
		this.storage.write(this._namespacePrefix + key, this._serialize(value))
		return value
	},

	// remove deletes the key and value stored at the given key.
	remove: function(key) {
		this.storage.remove(this._namespacePrefix + key)
	},

	// each will call the given callback once for each key-value pair
	// in this store.
	each: function(callback) {
		var self = this
		this.storage.each(function(val, namespacedKey) {
			callback.call(self, self._deserialize(val), (namespacedKey || '').replace(self._namespaceRegexp, ''))
		})
	},

	// clearAll will remove all the stored key-value pairs in this store.
	clearAll: function() {
		this.storage.clearAll()
	},

	// additional functionality that can't live in plugins
	// ---------------------------------------------------

	// hasNamespace returns true if this store instance has the given namespace.
	hasNamespace: function(namespace) {
		return (this._namespacePrefix == '__storejs_'+namespace+'_')
	},

	// createStore creates a store.js instance with the first
	// functioning storage in the list of storage candidates,
	// and applies the the given mixins to the instance.
	createStore: function() {
		return createStore.apply(this, arguments)
	},

	addPlugin: function(plugin) {
		this._addPlugin(plugin)
	},

	namespace: function(namespace) {
		return createStore(this.storage, this.plugins, namespace)
	}
}

function _warn() {
	var _console = (typeof console == 'undefined' ? null : console)
	if (!_console) { return }
	var fn = (_console.warn ? _console.warn : _console.log)
	fn.apply(_console, arguments)
}

function createStore(storages, plugins, namespace) {
	if (!namespace) {
		namespace = ''
	}
	if (storages && !isList(storages)) {
		storages = [storages]
	}
	if (plugins && !isList(plugins)) {
		plugins = [plugins]
	}

	var namespacePrefix = (namespace ? '__storejs_'+namespace+'_' : '')
	var namespaceRegexp = (namespace ? new RegExp('^'+namespacePrefix) : null)
	var legalNamespaces = /^[a-zA-Z0-9_\-]*$/ // alpha-numeric + underscore and dash
	if (!legalNamespaces.test(namespace)) {
		throw new Error('store.js namespaces can only have alphanumerics + underscores and dashes')
	}

	var _privateStoreProps = {
		_namespacePrefix: namespacePrefix,
		_namespaceRegexp: namespaceRegexp,

		_testStorage: function(storage) {
			try {
				var testStr = '__storejs__test__'
				storage.write(testStr, testStr)
				var ok = (storage.read(testStr) === testStr)
				storage.remove(testStr)
				return ok
			} catch(e) {
				return false
			}
		},

		_assignPluginFnProp: function(pluginFnProp, propName) {
			var oldFn = this[propName]
			this[propName] = function pluginFn() {
				var args = slice(arguments, 0)
				var self = this

				// super_fn calls the old function which was overwritten by
				// this mixin.
				function super_fn() {
					if (!oldFn) { return }
					each(arguments, function(arg, i) {
						args[i] = arg
					})
					return oldFn.apply(self, args)
				}

				// Give mixing function access to super_fn by prefixing all mixin function
				// arguments with super_fn.
				var newFnArgs = [super_fn].concat(args)

				return pluginFnProp.apply(self, newFnArgs)
			}
		},

		_serialize: function(obj) {
			return JSON.stringify(obj)
		},

		_deserialize: function(strVal, defaultVal) {
			if (!strVal) { return defaultVal }
			// It is possible that a raw string value has been previously stored
			// in a storage without using store.js, meaning it will be a raw
			// string value instead of a JSON serialized string. By defaulting
			// to the raw string value in case of a JSON parse error, we allow
			// for past stored values to be forwards-compatible with store.js
			var val = ''
			try { val = JSON.parse(strVal) }
			catch(e) { val = strVal }

			return (val !== undefined ? val : defaultVal)
		},

		_addStorage: function(storage) {
			if (this.enabled) { return }
			if (this._testStorage(storage)) {
				this.storage = storage
				this.enabled = true
			}
		},

		_addPlugin: function(plugin) {
			var self = this

			// If the plugin is an array, then add all plugins in the array.
			// This allows for a plugin to depend on other plugins.
			if (isList(plugin)) {
				each(plugin, function(plugin) {
					self._addPlugin(plugin)
				})
				return
			}

			// Keep track of all plugins we've seen so far, so that we
			// don't add any of them twice.
			var seenPlugin = pluck(this.plugins, function(seenPlugin) {
				return (plugin === seenPlugin)
			})
			if (seenPlugin) {
				return
			}
			this.plugins.push(plugin)

			// Check that the plugin is properly formed
			if (!isFunction(plugin)) {
				throw new Error('Plugins must be function values that return objects')
			}

			var pluginProperties = plugin.call(this)
			if (!isObject(pluginProperties)) {
				throw new Error('Plugins must return an object of function properties')
			}

			// Add the plugin function properties to this store instance.
			each(pluginProperties, function(pluginFnProp, propName) {
				if (!isFunction(pluginFnProp)) {
					throw new Error('Bad plugin property: '+propName+' from plugin '+plugin.name+'. Plugins should only return functions.')
				}
				self._assignPluginFnProp(pluginFnProp, propName)
			})
		},

		// Put deprecated properties in the private API, so as to not expose it to accidential
		// discovery through inspection of the store object.

		// Deprecated: addStorage
		addStorage: function(storage) {
			_warn('store.addStorage(storage) is deprecated. Use createStore([storages])')
			this._addStorage(storage)
		}
	}

	var store = create(_privateStoreProps, storeAPI, {
		plugins: []
	})
	store.raw = {}
	each(store, function(prop, propName) {
		if (isFunction(prop)) {
			store.raw[propName] = bind(store, prop)
		}
	})
	each(storages, function(storage) {
		store._addStorage(storage)
	})
	each(plugins, function(plugin) {
		store._addPlugin(plugin)
	})
	return store
}


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = [
	// Listed in order of usage preference
	__webpack_require__(76),
	__webpack_require__(77),
	__webpack_require__(78),
	__webpack_require__(79),
	__webpack_require__(80),
	__webpack_require__(81)
]


/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

var util = __webpack_require__(19)
var Global = util.Global

module.exports = {
	name: 'localStorage',
	read: read,
	write: write,
	each: each,
	remove: remove,
	clearAll: clearAll,
}

function localStorage() {
	return Global.localStorage
}

function read(key) {
	return localStorage().getItem(key)
}

function write(key, data) {
	return localStorage().setItem(key, data)
}

function each(fn) {
	for (var i = localStorage().length - 1; i >= 0; i--) {
		var key = localStorage().key(i)
		fn(read(key), key)
	}
}

function remove(key) {
	return localStorage().removeItem(key)
}

function clearAll() {
	return localStorage().clear()
}


/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

// oldFF-globalStorage provides storage for Firefox
// versions 6 and 7, where no localStorage, etc
// is available.

var util = __webpack_require__(19)
var Global = util.Global

module.exports = {
	name: 'oldFF-globalStorage',
	read: read,
	write: write,
	each: each,
	remove: remove,
	clearAll: clearAll,
}

var globalStorage = Global.globalStorage

function read(key) {
	return globalStorage[key]
}

function write(key, data) {
	globalStorage[key] = data
}

function each(fn) {
	for (var i = globalStorage.length - 1; i >= 0; i--) {
		var key = globalStorage.key(i)
		fn(globalStorage[key], key)
	}
}

function remove(key) {
	return globalStorage.removeItem(key)
}

function clearAll() {
	each(function(key, _) {
		delete globalStorage[key]
	})
}


/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

// oldIE-userDataStorage provides storage for Internet Explorer
// versions 6 and 7, where no localStorage, sessionStorage, etc
// is available.

var util = __webpack_require__(19)
var Global = util.Global

module.exports = {
	name: 'oldIE-userDataStorage',
	write: write,
	read: read,
	each: each,
	remove: remove,
	clearAll: clearAll,
}

var storageName = 'storejs'
var doc = Global.document
var _withStorageEl = _makeIEStorageElFunction()
var disable = (Global.navigator ? Global.navigator.userAgent : '').match(/ (MSIE 8|MSIE 9|MSIE 10)\./) // MSIE 9.x, MSIE 10.x

function write(unfixedKey, data) {
	if (disable) { return }
	var fixedKey = fixKey(unfixedKey)
	_withStorageEl(function(storageEl) {
		storageEl.setAttribute(fixedKey, data)
		storageEl.save(storageName)
	})
}

function read(unfixedKey) {
	if (disable) { return }
	var fixedKey = fixKey(unfixedKey)
	var res = null
	_withStorageEl(function(storageEl) {
		res = storageEl.getAttribute(fixedKey)
	})
	return res
}

function each(callback) {
	_withStorageEl(function(storageEl) {
		var attributes = storageEl.XMLDocument.documentElement.attributes
		for (var i=attributes.length-1; i>=0; i--) {
			var attr = attributes[i]
			callback(storageEl.getAttribute(attr.name), attr.name)
		}
	})
}

function remove(unfixedKey) {
	var fixedKey = fixKey(unfixedKey)
	_withStorageEl(function(storageEl) {
		storageEl.removeAttribute(fixedKey)
		storageEl.save(storageName)
	})
}

function clearAll() {
	_withStorageEl(function(storageEl) {
		var attributes = storageEl.XMLDocument.documentElement.attributes
		storageEl.load(storageName)
		for (var i=attributes.length-1; i>=0; i--) {
			storageEl.removeAttribute(attributes[i].name)
		}
		storageEl.save(storageName)
	})
}

// Helpers
//////////

// In IE7, keys cannot start with a digit or contain certain chars.
// See https://github.com/marcuswestin/store.js/issues/40
// See https://github.com/marcuswestin/store.js/issues/83
var forbiddenCharsRegex = new RegExp("[!\"#$%&'()*+,/\\\\:;<=>?@[\\]^`{|}~]", "g")
function fixKey(key) {
	return key.replace(/^\d/, '___$&').replace(forbiddenCharsRegex, '___')
}

function _makeIEStorageElFunction() {
	if (!doc || !doc.documentElement || !doc.documentElement.addBehavior) {
		return null
	}
	var scriptTag = 'script',
		storageOwner,
		storageContainer,
		storageEl

	// Since #userData storage applies only to specific paths, we need to
	// somehow link our data to a specific path.  We choose /favicon.ico
	// as a pretty safe option, since all browsers already make a request to
	// this URL anyway and being a 404 will not hurt us here.  We wrap an
	// iframe pointing to the favicon in an ActiveXObject(htmlfile) object
	// (see: http://msdn.microsoft.com/en-us/library/aa752574(v=VS.85).aspx)
	// since the iframe access rules appear to allow direct access and
	// manipulation of the document element, even for a 404 page.  This
	// document can be used instead of the current document (which would
	// have been limited to the current path) to perform #userData storage.
	try {
		/* global ActiveXObject */
		storageContainer = new ActiveXObject('htmlfile')
		storageContainer.open()
		storageContainer.write('<'+scriptTag+'>document.w=window</'+scriptTag+'><iframe src="/favicon.ico"></iframe>')
		storageContainer.close()
		storageOwner = storageContainer.w.frames[0].document
		storageEl = storageOwner.createElement('div')
	} catch(e) {
		// somehow ActiveXObject instantiation failed (perhaps some special
		// security settings or otherwse), fall back to per-path storage
		storageEl = doc.createElement('div')
		storageOwner = doc.body
	}

	return function(storeFunction) {
		var args = [].slice.call(arguments, 0)
		args.unshift(storageEl)
		// See http://msdn.microsoft.com/en-us/library/ms531081(v=VS.85).aspx
		// and http://msdn.microsoft.com/en-us/library/ms531424(v=VS.85).aspx
		storageOwner.appendChild(storageEl)
		storageEl.addBehavior('#default#userData')
		storageEl.load(storageName)
		storeFunction.apply(this, args)
		storageOwner.removeChild(storageEl)
		return
	}
}


/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

// cookieStorage is useful Safari private browser mode, where localStorage
// doesn't work but cookies do. This implementation is adopted from
// https://developer.mozilla.org/en-US/docs/Web/API/Storage/LocalStorage

var util = __webpack_require__(19)
var Global = util.Global
var trim = util.trim

module.exports = {
	name: 'cookieStorage',
	read: read,
	write: write,
	each: each,
	remove: remove,
	clearAll: clearAll,
}

var doc = Global.document

function read(key) {
	if (!key || !_has(key)) { return null }
	var regexpStr = "(?:^|.*;\\s*)" +
		escape(key).replace(/[\-\.\+\*]/g, "\\$&") +
		"\\s*\\=\\s*((?:[^;](?!;))*[^;]?).*"
	return unescape(doc.cookie.replace(new RegExp(regexpStr), "$1"))
}

function each(callback) {
	var cookies = doc.cookie.split(/; ?/g)
	for (var i = cookies.length - 1; i >= 0; i--) {
		if (!trim(cookies[i])) {
			continue
		}
		var kvp = cookies[i].split('=')
		var key = unescape(kvp[0])
		var val = unescape(kvp[1])
		callback(val, key)
	}
}

function write(key, data) {
	if(!key) { return }
	doc.cookie = escape(key) + "=" + escape(data) + "; expires=Tue, 19 Jan 2038 03:14:07 GMT; path=/"
}

function remove(key) {
	if (!key || !_has(key)) {
		return
	}
	doc.cookie = escape(key) + "=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/"
}

function clearAll() {
	each(function(_, key) {
		remove(key)
	})
}

function _has(key) {
	return (new RegExp("(?:^|;\\s*)" + escape(key).replace(/[\-\.\+\*]/g, "\\$&") + "\\s*\\=")).test(doc.cookie)
}


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

var util = __webpack_require__(19)
var Global = util.Global

module.exports = {
	name: 'sessionStorage',
	read: read,
	write: write,
	each: each,
	remove: remove,
	clearAll: clearAll
}

function sessionStorage() {
	return Global.sessionStorage
}

function read(key) {
	return sessionStorage().getItem(key)
}

function write(key, data) {
	return sessionStorage().setItem(key, data)
}

function each(fn) {
	for (var i = sessionStorage().length - 1; i >= 0; i--) {
		var key = sessionStorage().key(i)
		fn(read(key), key)
	}
}

function remove(key) {
	return sessionStorage().removeItem(key)
}

function clearAll() {
	return sessionStorage().clear()
}


/***/ }),
/* 81 */
/***/ (function(module, exports) {

// memoryStorage is a useful last fallback to ensure that the store
// is functions (meaning store.get(), store.set(), etc will all function).
// However, stored values will not persist when the browser navigates to
// a new page or reloads the current page.

module.exports = {
	name: 'memoryStorage',
	read: read,
	write: write,
	each: each,
	remove: remove,
	clearAll: clearAll,
}

var memoryStorage = {}

function read(key) {
	return memoryStorage[key]
}

function write(key, data) {
	memoryStorage[key] = data
}

function each(callback) {
	for (var key in memoryStorage) {
		if (memoryStorage.hasOwnProperty(key)) {
			callback(memoryStorage[key], key)
		}
	}
}

function remove(key) {
	delete memoryStorage[key]
}

function clearAll(key) {
	memoryStorage = {}
}


/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = json2Plugin

function json2Plugin() {
	__webpack_require__(83)
	return {}
}


/***/ }),
/* 83 */
/***/ (function(module, exports) {

/* eslint-disable */

//  json2.js
//  2016-10-28
//  Public Domain.
//  NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.
//  See http://www.JSON.org/js.html
//  This code should be minified before deployment.
//  See http://javascript.crockford.com/jsmin.html

//  USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO
//  NOT CONTROL.

//  This file creates a global JSON object containing two methods: stringify
//  and parse. This file provides the ES5 JSON capability to ES3 systems.
//  If a project might run on IE8 or earlier, then this file should be included.
//  This file does nothing on ES5 systems.

//      JSON.stringify(value, replacer, space)
//          value       any JavaScript value, usually an object or array.
//          replacer    an optional parameter that determines how object
//                      values are stringified for objects. It can be a
//                      function or an array of strings.
//          space       an optional parameter that specifies the indentation
//                      of nested structures. If it is omitted, the text will
//                      be packed without extra whitespace. If it is a number,
//                      it will specify the number of spaces to indent at each
//                      level. If it is a string (such as "\t" or "&nbsp;"),
//                      it contains the characters used to indent at each level.
//          This method produces a JSON text from a JavaScript value.
//          When an object value is found, if the object contains a toJSON
//          method, its toJSON method will be called and the result will be
//          stringified. A toJSON method does not serialize: it returns the
//          value represented by the name/value pair that should be serialized,
//          or undefined if nothing should be serialized. The toJSON method
//          will be passed the key associated with the value, and this will be
//          bound to the value.

//          For example, this would serialize Dates as ISO strings.

//              Date.prototype.toJSON = function (key) {
//                  function f(n) {
//                      // Format integers to have at least two digits.
//                      return (n < 10)
//                          ? "0" + n
//                          : n;
//                  }
//                  return this.getUTCFullYear()   + "-" +
//                       f(this.getUTCMonth() + 1) + "-" +
//                       f(this.getUTCDate())      + "T" +
//                       f(this.getUTCHours())     + ":" +
//                       f(this.getUTCMinutes())   + ":" +
//                       f(this.getUTCSeconds())   + "Z";
//              };

//          You can provide an optional replacer method. It will be passed the
//          key and value of each member, with this bound to the containing
//          object. The value that is returned from your method will be
//          serialized. If your method returns undefined, then the member will
//          be excluded from the serialization.

//          If the replacer parameter is an array of strings, then it will be
//          used to select the members to be serialized. It filters the results
//          such that only members with keys listed in the replacer array are
//          stringified.

//          Values that do not have JSON representations, such as undefined or
//          functions, will not be serialized. Such values in objects will be
//          dropped; in arrays they will be replaced with null. You can use
//          a replacer function to replace those with JSON values.

//          JSON.stringify(undefined) returns undefined.

//          The optional space parameter produces a stringification of the
//          value that is filled with line breaks and indentation to make it
//          easier to read.

//          If the space parameter is a non-empty string, then that string will
//          be used for indentation. If the space parameter is a number, then
//          the indentation will be that many spaces.

//          Example:

//          text = JSON.stringify(["e", {pluribus: "unum"}]);
//          // text is '["e",{"pluribus":"unum"}]'

//          text = JSON.stringify(["e", {pluribus: "unum"}], null, "\t");
//          // text is '[\n\t"e",\n\t{\n\t\t"pluribus": "unum"\n\t}\n]'

//          text = JSON.stringify([new Date()], function (key, value) {
//              return this[key] instanceof Date
//                  ? "Date(" + this[key] + ")"
//                  : value;
//          });
//          // text is '["Date(---current time---)"]'

//      JSON.parse(text, reviver)
//          This method parses a JSON text to produce an object or array.
//          It can throw a SyntaxError exception.

//          The optional reviver parameter is a function that can filter and
//          transform the results. It receives each of the keys and values,
//          and its return value is used instead of the original value.
//          If it returns what it received, then the structure is not modified.
//          If it returns undefined then the member is deleted.

//          Example:

//          // Parse the text. Values that look like ISO date strings will
//          // be converted to Date objects.

//          myData = JSON.parse(text, function (key, value) {
//              var a;
//              if (typeof value === "string") {
//                  a =
//   /^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)Z$/.exec(value);
//                  if (a) {
//                      return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4],
//                          +a[5], +a[6]));
//                  }
//              }
//              return value;
//          });

//          myData = JSON.parse('["Date(09/09/2001)"]', function (key, value) {
//              var d;
//              if (typeof value === "string" &&
//                      value.slice(0, 5) === "Date(" &&
//                      value.slice(-1) === ")") {
//                  d = new Date(value.slice(5, -1));
//                  if (d) {
//                      return d;
//                  }
//              }
//              return value;
//          });

//  This is a reference implementation. You are free to copy, modify, or
//  redistribute.

/*jslint
    eval, for, this
*/

/*property
    JSON, apply, call, charCodeAt, getUTCDate, getUTCFullYear, getUTCHours,
    getUTCMinutes, getUTCMonth, getUTCSeconds, hasOwnProperty, join,
    lastIndex, length, parse, prototype, push, replace, slice, stringify,
    test, toJSON, toString, valueOf
*/


// Create a JSON object only if one does not already exist. We create the
// methods in a closure to avoid creating global variables.

if (typeof JSON !== "object") {
    JSON = {};
}

(function () {
    "use strict";

    var rx_one = /^[\],:{}\s]*$/;
    var rx_two = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g;
    var rx_three = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
    var rx_four = /(?:^|:|,)(?:\s*\[)+/g;
    var rx_escapable = /[\\"\u0000-\u001f\u007f-\u009f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;
    var rx_dangerous = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;

    function f(n) {
        // Format integers to have at least two digits.
        return n < 10
            ? "0" + n
            : n;
    }

    function this_value() {
        return this.valueOf();
    }

    if (typeof Date.prototype.toJSON !== "function") {

        Date.prototype.toJSON = function () {

            return isFinite(this.valueOf())
                ? this.getUTCFullYear() + "-" +
                        f(this.getUTCMonth() + 1) + "-" +
                        f(this.getUTCDate()) + "T" +
                        f(this.getUTCHours()) + ":" +
                        f(this.getUTCMinutes()) + ":" +
                        f(this.getUTCSeconds()) + "Z"
                : null;
        };

        Boolean.prototype.toJSON = this_value;
        Number.prototype.toJSON = this_value;
        String.prototype.toJSON = this_value;
    }

    var gap;
    var indent;
    var meta;
    var rep;


    function quote(string) {

// If the string contains no control characters, no quote characters, and no
// backslash characters, then we can safely slap some quotes around it.
// Otherwise we must also replace the offending characters with safe escape
// sequences.

        rx_escapable.lastIndex = 0;
        return rx_escapable.test(string)
            ? "\"" + string.replace(rx_escapable, function (a) {
                var c = meta[a];
                return typeof c === "string"
                    ? c
                    : "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4);
            }) + "\""
            : "\"" + string + "\"";
    }


    function str(key, holder) {

// Produce a string from holder[key].

        var i;          // The loop counter.
        var k;          // The member key.
        var v;          // The member value.
        var length;
        var mind = gap;
        var partial;
        var value = holder[key];

// If the value has a toJSON method, call it to obtain a replacement value.

        if (value && typeof value === "object" &&
                typeof value.toJSON === "function") {
            value = value.toJSON(key);
        }

// If we were called with a replacer function, then call the replacer to
// obtain a replacement value.

        if (typeof rep === "function") {
            value = rep.call(holder, key, value);
        }

// What happens next depends on the value's type.

        switch (typeof value) {
        case "string":
            return quote(value);

        case "number":

// JSON numbers must be finite. Encode non-finite numbers as null.

            return isFinite(value)
                ? String(value)
                : "null";

        case "boolean":
        case "null":

// If the value is a boolean or null, convert it to a string. Note:
// typeof null does not produce "null". The case is included here in
// the remote chance that this gets fixed someday.

            return String(value);

// If the type is "object", we might be dealing with an object or an array or
// null.

        case "object":

// Due to a specification blunder in ECMAScript, typeof null is "object",
// so watch out for that case.

            if (!value) {
                return "null";
            }

// Make an array to hold the partial results of stringifying this object value.

            gap += indent;
            partial = [];

// Is the value an array?

            if (Object.prototype.toString.apply(value) === "[object Array]") {

// The value is an array. Stringify every element. Use null as a placeholder
// for non-JSON values.

                length = value.length;
                for (i = 0; i < length; i += 1) {
                    partial[i] = str(i, value) || "null";
                }

// Join all of the elements together, separated with commas, and wrap them in
// brackets.

                v = partial.length === 0
                    ? "[]"
                    : gap
                        ? "[\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "]"
                        : "[" + partial.join(",") + "]";
                gap = mind;
                return v;
            }

// If the replacer is an array, use it to select the members to be stringified.

            if (rep && typeof rep === "object") {
                length = rep.length;
                for (i = 0; i < length; i += 1) {
                    if (typeof rep[i] === "string") {
                        k = rep[i];
                        v = str(k, value);
                        if (v) {
                            partial.push(quote(k) + (
                                gap
                                    ? ": "
                                    : ":"
                            ) + v);
                        }
                    }
                }
            } else {

// Otherwise, iterate through all of the keys in the object.

                for (k in value) {
                    if (Object.prototype.hasOwnProperty.call(value, k)) {
                        v = str(k, value);
                        if (v) {
                            partial.push(quote(k) + (
                                gap
                                    ? ": "
                                    : ":"
                            ) + v);
                        }
                    }
                }
            }

// Join all of the member texts together, separated with commas,
// and wrap them in braces.

            v = partial.length === 0
                ? "{}"
                : gap
                    ? "{\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "}"
                    : "{" + partial.join(",") + "}";
            gap = mind;
            return v;
        }
    }

// If the JSON object does not yet have a stringify method, give it one.

    if (typeof JSON.stringify !== "function") {
        meta = {    // table of character substitutions
            "\b": "\\b",
            "\t": "\\t",
            "\n": "\\n",
            "\f": "\\f",
            "\r": "\\r",
            "\"": "\\\"",
            "\\": "\\\\"
        };
        JSON.stringify = function (value, replacer, space) {

// The stringify method takes a value and an optional replacer, and an optional
// space parameter, and returns a JSON text. The replacer can be a function
// that can replace values, or an array of strings that will select the keys.
// A default replacer method can be provided. Use of the space parameter can
// produce text that is more easily readable.

            var i;
            gap = "";
            indent = "";

// If the space parameter is a number, make an indent string containing that
// many spaces.

            if (typeof space === "number") {
                for (i = 0; i < space; i += 1) {
                    indent += " ";
                }

// If the space parameter is a string, it will be used as the indent string.

            } else if (typeof space === "string") {
                indent = space;
            }

// If there is a replacer, it must be a function or an array.
// Otherwise, throw an error.

            rep = replacer;
            if (replacer && typeof replacer !== "function" &&
                    (typeof replacer !== "object" ||
                    typeof replacer.length !== "number")) {
                throw new Error("JSON.stringify");
            }

// Make a fake root object containing our value under the key of "".
// Return the result of stringifying the value.

            return str("", {"": value});
        };
    }


// If the JSON object does not yet have a parse method, give it one.

    if (typeof JSON.parse !== "function") {
        JSON.parse = function (text, reviver) {

// The parse method takes a text and an optional reviver function, and returns
// a JavaScript value if the text is a valid JSON text.

            var j;

            function walk(holder, key) {

// The walk method is used to recursively walk the resulting structure so
// that modifications can be made.

                var k;
                var v;
                var value = holder[key];
                if (value && typeof value === "object") {
                    for (k in value) {
                        if (Object.prototype.hasOwnProperty.call(value, k)) {
                            v = walk(value, k);
                            if (v !== undefined) {
                                value[k] = v;
                            } else {
                                delete value[k];
                            }
                        }
                    }
                }
                return reviver.call(holder, key, value);
            }


// Parsing happens in four stages. In the first stage, we replace certain
// Unicode characters with escape sequences. JavaScript handles many characters
// incorrectly, either silently deleting them, or treating them as line endings.

            text = String(text);
            rx_dangerous.lastIndex = 0;
            if (rx_dangerous.test(text)) {
                text = text.replace(rx_dangerous, function (a) {
                    return "\\u" +
                            ("0000" + a.charCodeAt(0).toString(16)).slice(-4);
                });
            }

// In the second stage, we run the text against regular expressions that look
// for non-JSON patterns. We are especially concerned with "()" and "new"
// because they can cause invocation, and "=" because it can cause mutation.
// But just to be safe, we want to reject all unexpected forms.

// We split the second stage into 4 regexp operations in order to work around
// crippling inefficiencies in IE's and Safari's regexp engines. First we
// replace the JSON backslash pairs with "@" (a non-JSON character). Second, we
// replace all simple value tokens with "]" characters. Third, we delete all
// open brackets that follow a colon or comma or that begin the text. Finally,
// we look to see that the remaining characters are only whitespace or "]" or
// "," or ":" or "{" or "}". If that is so, then the text is safe for eval.

            if (
                rx_one.test(
                    text
                        .replace(rx_two, "@")
                        .replace(rx_three, "]")
                        .replace(rx_four, "")
                )
            ) {

// In the third stage we use the eval function to compile the text into a
// JavaScript structure. The "{" operator is subject to a syntactic ambiguity
// in JavaScript: it can begin a block or an object literal. We wrap the text
// in parens to eliminate the ambiguity.

                j = eval("(" + text + ")");

// In the optional fourth stage, we recursively walk the new structure, passing
// each name/value pair to a reviver function for possible transformation.

                return (typeof reviver === "function")
                    ? walk({"": j}, "")
                    : j;
            }

// If the text is not JSON parseable, then a SyntaxError is thrown.

            throw new SyntaxError("JSON.parse");
        };
    }
}());

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AlreadyRegistryError = exports.NoRegistryError = exports.NotfoundTypeError = exports.MultiImplementError = exports.IocContext = exports.DefaultRegisterOption = exports.Config = void 0;
var utils_1 = __webpack_require__(23);
var metadata_1 = __webpack_require__(13);
var ClassLoader_1 = __webpack_require__(25);
var guard_1 = __webpack_require__(46);
var aspect_1 = __webpack_require__(48);
var Config = /** @class */ (function () {
    function Config() {
        /** auto register class self, when class not found. default: false */
        this.autoRegisterSelf = false;
        /** constructor inject, MUST in TypeScript with emitDecoratorMetadata and use decorator with class, default: true */
        this.constructorInject = true;
        /** use class loader for autowired default: true */
        this.useClassLoader = true;
    }
    return Config;
}());
exports.Config = Config;
exports.DefaultRegisterOption = {
    singleton: true,
    autoNew: true,
};
/** ioc context */
var IocContext = /** @class */ (function () {
    function IocContext(config) {
        if (config === void 0) { config = {}; }
        this.config = config;
        this.components = new Map();
        this.setConfig(Object.assign(new Config(), config));
    }
    Object.defineProperty(IocContext.prototype, "classLoader", {
        get: function () {
            return this._classLoader;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IocContext, "DefaultInstance", {
        get: function () {
            return (this.defaultInstance || ((this.defaultInstance = new IocContext()), this.defaultInstance));
        },
        enumerable: false,
        configurable: true
    });
    /**
     * merge config
     * @param config new partial config
     */
    IocContext.prototype.setConfig = function (config) {
        Object.assign(this.config, config);
        this._classLoader =
            this.config.useClassLoader === true
                ? ClassLoader_1.classLoader
                : this.config.useClassLoader === false
                    ? undefined
                    : this.config.useClassLoader;
    };
    /**
     * remove instance of key
     * @param keyOrType key
     */
    IocContext.prototype.remove = function (keyOrType) {
        var key = (0, utils_1.getGlobalType)(keyOrType);
        var store = this.components.get(key);
        if (store) {
            this.preDestroyInstance(store);
            return this.components.delete(key);
        }
        return false;
    };
    /** clear all */
    IocContext.prototype.clear = function () {
        var _this = this;
        Array.from(this.components.values()).forEach(function (ele) {
            _this.preDestroyInstance(ele);
        });
        this.components.clear();
    };
    /**
     * get instance of key
     * @param keyOrType key
     * @param opt
     */
    IocContext.prototype.get = function (keyOrType, opt) {
        if (opt === void 0) { opt = {}; }
        var key = (0, utils_1.getGlobalType)(keyOrType);
        var store = this.components.get(key);
        if (store) {
            return this.returnValue(store, opt.forceNew);
        }
        if (this.config.notFoundHandler) {
            var data = this.config.notFoundHandler(keyOrType);
            if (data !== undefined) {
                return data;
            }
        }
        if (opt.useClassLoader !== false && this.classLoader) {
            var target = this.findClassByClassLoader(keyOrType, key, {
                sourceCls: opt.sourceCls,
                deep: opt.deep !== false,
            });
            if (target) {
                if (target.base) {
                    this.register(target.type);
                }
                return this.get(target.type, __assign(__assign({}, (target.ref
                    ? __assign(__assign({}, opt), { sourceType: opt.sourceType || keyOrType }) : opt)), { useClassLoader: target.final ? false : true }));
            }
        }
        if (this.config.parentContext && opt.deep !== false) {
            if (!this.config.newInstanceInThisContext || this.config.parentContext.has(key, true, true)) {
                return this.config.parentContext.get(opt.sourceType || keyOrType, opt);
            }
        }
        var canAutoRegister = (0, utils_1.isClass)(keyOrType) &&
            (this.config.autoRegisterSelf || (0, metadata_1.getMetadata)(keyOrType).injectable);
        if (canAutoRegister) {
            this.register(keyOrType);
            return this.get(keyOrType, opt);
        }
        throw new NotfoundTypeError(keyOrType, key);
    };
    IocContext.prototype.resolveConflict = function (type, classes, sourceCls, deep) {
        var _a;
        if (this.config.conflictHandler) {
            var one = this.config.conflictHandler(type, classes, sourceCls);
            if (one !== undefined) {
                return one;
            }
        }
        if (deep) {
            return (_a = this.config.parentContext) === null || _a === void 0 ? void 0 : _a.resolveConflict(type, classes, sourceCls);
        }
    };
    IocContext.prototype.findClassByClassLoader = function (type, key, opt) {
        var _this = this;
        var classes = this.classLoader.getImplementClasses(type);
        if (classes.length === 0) {
            return;
        }
        if (classes.length === 1) {
            // class loader is only responsible for matching and not for registration.
            return { type: classes[0].type, ref: true };
        }
        // if an instance of one of the classes already exists, the match takes precedence
        var instances = classes.filter(function (ele) { return _this.has(ele.type, true); });
        if (instances.length === 1) {
            return { type: instances[0].type, final: true };
        }
        var resolved = this.resolveConflict(type, classes, opt.sourceCls
            ? {
                type: opt.sourceCls,
                info: this.classLoader.getClassInfo(opt.sourceCls),
            }
            : undefined, opt.deep);
        if (resolved !== undefined) {
            return { type: resolved, final: true };
        }
        // BaseClass has @injectable
        if (this.isInjectableBaseClass(type)) {
            return { type: type, base: true };
        }
        throw new MultiImplementError(type, key);
    };
    IocContext.prototype.isInjectableBaseClass = function (type) {
        return (0, utils_1.isClass)(type) && (0, metadata_1.getMetadata)(type).injectable;
    };
    /**
     * get instances for key
     * @param keyOrType key (super class or interface, use `@classInfo`)
     * @param opt
     */
    IocContext.prototype.getImports = function (keyOrType, _a) {
        var _this = this;
        var _b = _a === void 0 ? {} : _a, cache = _b.cache, deep = _b.deep;
        var type = keyOrType;
        if (cache && this.has(type)) {
            return this.get(type);
        }
        if (!this.classLoader) {
            return [];
        }
        var data = this.classLoader.getImplementClasses(type).map(function (clsInfo) {
            return _this.get(clsInfo.type, { useClassLoader: false, deep: deep });
        });
        if (cache) {
            this.register(data, type);
        }
        return data;
    };
    /**
     * instance of key in context
     * @param keyOrType key
     * @param deep deep search from parent context
     * @param useClassLoader use classLoader
     */
    IocContext.prototype.has = function (keyOrType, deep, useClassLoader) {
        if (deep === void 0) { deep = false; }
        if (useClassLoader === void 0) { useClassLoader = false; }
        var key = (0, utils_1.getGlobalType)(keyOrType);
        if (this.components.has(key)) {
            return true;
        }
        if (useClassLoader && this.config.useClassLoader && this.classLoader) {
            var target = this.findClassByClassLoader(keyOrType, key, {
                deep: deep,
            });
            if (target) {
                return this.has(target.type, deep);
            }
        }
        if (deep && this.config.parentContext) {
            return this.config.parentContext.has(key, deep, useClassLoader);
        }
        return false;
    };
    IocContext.prototype.replace = function (keyOrType, newData, options, registerIfNotExist) {
        if (registerIfNotExist === void 0) { registerIfNotExist = false; }
        var key = (0, utils_1.getGlobalType)(keyOrType);
        var data = this.components.get(key);
        if (data) {
            this.components.set(key, this.newStore(newData, options || data.options));
        }
        else if (registerIfNotExist) {
            this.register(newData, keyOrType, options);
        }
        else {
            throw new NoRegistryError(key);
        }
    };
    /**
     * register key
     * @param data value of key (maybe instance, class, factory function or value)
     * @param key key
     * @param options register option
     */
    IocContext.prototype.register = function (data, key, options) {
        if (options === void 0) { options = exports.DefaultRegisterOption; }
        if (key) {
            if (!this.canBeKey(key)) {
                throw new Error('key require string, symbol or class.');
            }
        }
        else {
            if (!this.canBeKey(data)) {
                throw new Error('when data is not string, symbol or class, require a key.');
            }
        }
        var dataType = (key && (0, utils_1.getGlobalType)(key)) || (data && (0, utils_1.getGlobalType)(data));
        if (this.components.has(dataType)) {
            throw new AlreadyRegistryError(dataType);
        }
        options = __assign(__assign({}, exports.DefaultRegisterOption), options);
        var store = this.newStore(data, options);
        this.components.set(dataType, store);
    };
    /**
     * complete instance inject
     * @param instance
     * @param opt
     */
    IocContext.prototype.inject = function (instance, opt) {
        var _this = this;
        if (opt === void 0) { opt = {
            autoRunPostConstruct: true,
        }; }
        var iocSelf = this;
        var classType = instance.constructor;
        (0, metadata_1.getMetadataField)(classType, 'injects').forEach(function (inject) {
            var key = inject.key, typeCls = inject.typeCls, optional = inject.optional, singleton = inject.singleton;
            var descriptor = Object.getOwnPropertyDescriptor(instance, key);
            var defaultValue = descriptor && descriptor.value;
            var allowOptional = optional || defaultValue !== undefined;
            if ('inject' === inject.type) {
                Object.defineProperty(instance, key, {
                    configurable: true,
                    writable: true,
                    value: (0, guard_1.guard)(function () {
                        return _this.get(typeCls, __assign({ sourceCls: classType }, (singleton ? {} : { forceNew: true })));
                    }, {
                        defaultValue: defaultValue,
                        onError: function (err) {
                            if (!allowOptional) {
                                err.message += "\n\tSource: ".concat(classType.name, ".").concat(key.toString());
                                throw err;
                            }
                        },
                    }),
                });
            }
            if (['lazyInject', 'imports'].includes(inject.type)) {
                var always_1 = inject.always;
                Object.defineProperty(instance, key, {
                    configurable: true,
                    get: function () {
                        var hasErr = false;
                        var data = (0, guard_1.guard)(function () {
                            switch (inject.type) {
                                case 'lazyInject':
                                    return iocSelf.get(typeCls, __assign({ sourceCls: classType }, (singleton ? {} : { forceNew: true })));
                                case 'imports':
                                    return iocSelf.getImports(typeCls, { cache: !always_1 });
                            }
                        }, {
                            defaultValue: defaultValue,
                            onError: function (err) {
                                hasErr = true;
                                if (!allowOptional) {
                                    err.message += "\n\tSource: ".concat(classType.name, ".").concat(key.toString());
                                    throw err;
                                }
                            },
                        });
                        if (!hasErr && !always_1) {
                            Object.defineProperty(this, key, {
                                configurable: true,
                                writable: true,
                                value: data,
                            });
                        }
                        return data;
                    },
                    set: function (value) {
                        Object.defineProperty(this, key, {
                            configurable: true,
                            writable: true,
                            value: value,
                        });
                    },
                });
            }
        });
        (0, metadata_1.getMetadataField)(classType, 'aspects').forEach(function (aspect) {
            var oriFn = instance[aspect.key];
            var newFn = (0, aspect_1.genAspectWrapper)(_this, aspect.point, oriFn);
            Object.defineProperty(instance, aspect.key, {
                configurable: true,
                value: newFn,
            });
        });
        if (opt.autoRunPostConstruct) {
            this.runPostConstruct(instance);
        }
    };
    IocContext.prototype.runPostConstruct = function (instance) {
        Array.from(new Set((0, metadata_1.getMetadataField)(instance.constructor, 'postConstruct').map(function (p) { return p.key; }))).forEach(function (key) {
            instance[key]();
        });
    };
    IocContext.prototype.runPreDestroy = function (instance) {
        Array.from(new Set((0, metadata_1.getMetadataField)(instance.constructor, 'preDestroy').map(function (p) { return p.key; }))).forEach(function (key) {
            instance[key]();
        });
    };
    /**
     * create child context, inherit this context
     * @param config
     */
    IocContext.prototype.createChildContext = function (config) {
        return new IocContext(__assign(__assign(__assign({}, this.config), (config || {})), { parentContext: this }));
    };
    /**
     * run preDestroy method of instance
     * @param store instance store
     */
    IocContext.prototype.preDestroyInstance = function (store) {
        if (!store.inited) {
            return;
        }
        this.runPreDestroy(store.value);
    };
    IocContext.prototype.newStore = function (data, options) {
        var _this = this;
        var dataIsFunction = typeof data === 'function';
        var dataIsClass = dataIsFunction && (0, utils_1.isClass)(data);
        var needFactory = dataIsFunction && options.autoNew;
        return {
            inited: needFactory ? false : true,
            factory: needFactory
                ? function () {
                    if (dataIsClass) {
                        var ClsType_1 = data;
                        var args = [];
                        if (_this.config.constructorInject) {
                            var paramTypes = (0, utils_1.getReflectMetadata)('design:paramtypes', ClsType_1);
                            if (paramTypes) {
                                args = paramTypes.map(function (type) {
                                    if (type === ClsType_1 ||
                                        type === undefined ||
                                        type === null ||
                                        type === Number ||
                                        type === Error ||
                                        type === Object ||
                                        type === String ||
                                        type === Boolean ||
                                        type === Array ||
                                        type === Function) {
                                        return null;
                                    }
                                    return _this.get(type);
                                });
                            }
                        }
                        var value = new (ClsType_1.bind.apply(ClsType_1, __spreadArray([void 0], args, false)))();
                        _this.inject(value);
                        return _this.config.createInstanceHook
                            ? _this.config.createInstanceHook(value, _this)
                            : value;
                    }
                    else {
                        var func = data;
                        return func(_this);
                    }
                }
                : undefined,
            value: needFactory ? undefined : data,
            options: options,
        };
    };
    IocContext.prototype.canBeKey = function (obj) {
        var type = typeof obj;
        // ie11 symbol is object
        if (type === 'object') {
            return obj.toString() !== '[object Object]';
        }
        return ['function', 'string', 'symbol'].includes(type);
    };
    IocContext.prototype.returnValue = function (data, forceNew) {
        if (forceNew === void 0) { forceNew = false; }
        if (data.options.singleton && !forceNew) {
            return data.inited
                ? data.value
                : ((data.inited = true), (data.value = data.factory()), data.value);
        }
        else {
            // TODO use WeakMap collection for destroy
            return data.factory();
        }
    };
    IocContext.prototype.toJSON = function () {
        return { type: 'power-di.IocContext', message: 'NoSerializable' };
    };
    return IocContext;
}());
exports.IocContext = IocContext;
var MultiImplementError = /** @class */ (function (_super) {
    __extends(MultiImplementError, _super);
    function MultiImplementError(type, key) {
        return _super.call(this, "Has multi Classes of implement type: ".concat(type.name, "(").concat((0, utils_1.symbolString)(key), ")")) || this;
    }
    return MultiImplementError;
}(Error));
exports.MultiImplementError = MultiImplementError;
var NotfoundTypeError = /** @class */ (function (_super) {
    __extends(NotfoundTypeError, _super);
    function NotfoundTypeError(type, key) {
        return _super.call(this, "Notfound type: ".concat(type.name || (0, utils_1.symbolString)(type), "(").concat((0, utils_1.symbolString)(key), ")")) || this;
    }
    return NotfoundTypeError;
}(Error));
exports.NotfoundTypeError = NotfoundTypeError;
var NoRegistryError = /** @class */ (function (_super) {
    __extends(NoRegistryError, _super);
    function NoRegistryError(key) {
        return _super.call(this, "the key:[".concat((0, utils_1.symbolString)(key), "] is no registry.")) || this;
    }
    return NoRegistryError;
}(Error));
exports.NoRegistryError = NoRegistryError;
var AlreadyRegistryError = /** @class */ (function (_super) {
    __extends(AlreadyRegistryError, _super);
    function AlreadyRegistryError(key) {
        return _super.call(this, "the key:[".concat((0, utils_1.symbolString)(key), "] is already registry.")) || this;
    }
    return AlreadyRegistryError;
}(Error));
exports.AlreadyRegistryError = AlreadyRegistryError;
//# sourceMappingURL=IocContext.js.map

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.getGlobalTypeByDecorator = exports.getClsTypeByDecorator = exports.getReflectMetadata = void 0;
var getGlobalType_1 = __webpack_require__(24);
try {
    __webpack_require__(87);
}
catch (error) { }
function getReflectMetadata(metadataKey, target, key) {
    /* istanbul ignore else */
    if (Reflect && Reflect.getMetadata) {
        return Reflect.getMetadata(metadataKey, target, key);
    }
}
exports.getReflectMetadata = getReflectMetadata;
function getClsTypeByDecorator(type, target, key) {
    if (type === undefined) {
        type = getReflectMetadata('design:type', target, key);
    }
    return type;
}
exports.getClsTypeByDecorator = getClsTypeByDecorator;
function getGlobalTypeByDecorator(type, target, key) {
    return (0, getGlobalType_1.getGlobalType)(getClsTypeByDecorator(type, target, key));
}
exports.getGlobalTypeByDecorator = getGlobalTypeByDecorator;
//# sourceMappingURL=getByDecorator.js.map

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.nameSymbol = void 0;
/** class name */
exports.nameSymbol = Symbol('className');
//# sourceMappingURL=ClassInfo.js.map

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/*! *****************************************************************************
Copyright (C) Microsoft. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
var Reflect;
(function (Reflect) {
    // Metadata Proposal
    // https://rbuckton.github.io/reflect-metadata/
    (function (factory) {
        var root = typeof globalThis === "object" ? globalThis :
            typeof global === "object" ? global :
                typeof self === "object" ? self :
                    typeof this === "object" ? this :
                        sloppyModeThis();
        var exporter = makeExporter(Reflect);
        if (typeof root.Reflect !== "undefined") {
            exporter = makeExporter(root.Reflect, exporter);
        }
        factory(exporter, root);
        if (typeof root.Reflect === "undefined") {
            root.Reflect = Reflect;
        }
        function makeExporter(target, previous) {
            return function (key, value) {
                Object.defineProperty(target, key, { configurable: true, writable: true, value: value });
                if (previous)
                    previous(key, value);
            };
        }
        function functionThis() {
            try {
                return Function("return this;")();
            }
            catch (_) { }
        }
        function indirectEvalThis() {
            try {
                return (void 0, eval)("(function() { return this; })()");
            }
            catch (_) { }
        }
        function sloppyModeThis() {
            return functionThis() || indirectEvalThis();
        }
    })(function (exporter, root) {
        var hasOwn = Object.prototype.hasOwnProperty;
        // feature test for Symbol support
        var supportsSymbol = typeof Symbol === "function";
        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== "undefined" ? Symbol.toPrimitive : "@@toPrimitive";
        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== "undefined" ? Symbol.iterator : "@@iterator";
        var supportsCreate = typeof Object.create === "function"; // feature test for Object.create support
        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support
        var downLevel = !supportsCreate && !supportsProto;
        var HashMap = {
            // create an object in dictionary mode (a.k.a. "slow" mode in v8)
            create: supportsCreate
                ? function () { return MakeDictionary(Object.create(null)); }
                : supportsProto
                    ? function () { return MakeDictionary({ __proto__: null }); }
                    : function () { return MakeDictionary({}); },
            has: downLevel
                ? function (map, key) { return hasOwn.call(map, key); }
                : function (map, key) { return key in map; },
            get: downLevel
                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }
                : function (map, key) { return map[key]; },
        };
        // Load global or shim versions of Map, Set, and WeakMap
        var functionPrototype = Object.getPrototypeOf(Function);
        var _Map = typeof Map === "function" && typeof Map.prototype.entries === "function" ? Map : CreateMapPolyfill();
        var _Set = typeof Set === "function" && typeof Set.prototype.entries === "function" ? Set : CreateSetPolyfill();
        var _WeakMap = typeof WeakMap === "function" ? WeakMap : CreateWeakMapPolyfill();
        var registrySymbol = supportsSymbol ? Symbol.for("@reflect-metadata:registry") : undefined;
        var metadataRegistry = GetOrCreateMetadataRegistry();
        var metadataProvider = CreateMetadataProvider(metadataRegistry);
        /**
         * Applies a set of decorators to a property of a target object.
         * @param decorators An array of decorators.
         * @param target The target object.
         * @param propertyKey (Optional) The property key to decorate.
         * @param attributes (Optional) The property descriptor for the target key.
         * @remarks Decorators are applied in reverse order.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     Example = Reflect.decorate(decoratorsArray, Example);
         *
         *     // property (on constructor)
         *     Reflect.decorate(decoratorsArray, Example, "staticProperty");
         *
         *     // property (on prototype)
         *     Reflect.decorate(decoratorsArray, Example.prototype, "property");
         *
         *     // method (on constructor)
         *     Object.defineProperty(Example, "staticMethod",
         *         Reflect.decorate(decoratorsArray, Example, "staticMethod",
         *             Object.getOwnPropertyDescriptor(Example, "staticMethod")));
         *
         *     // method (on prototype)
         *     Object.defineProperty(Example.prototype, "method",
         *         Reflect.decorate(decoratorsArray, Example.prototype, "method",
         *             Object.getOwnPropertyDescriptor(Example.prototype, "method")));
         *
         */
        function decorate(decorators, target, propertyKey, attributes) {
            if (!IsUndefined(propertyKey)) {
                if (!IsArray(decorators))
                    throw new TypeError();
                if (!IsObject(target))
                    throw new TypeError();
                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))
                    throw new TypeError();
                if (IsNull(attributes))
                    attributes = undefined;
                propertyKey = ToPropertyKey(propertyKey);
                return DecorateProperty(decorators, target, propertyKey, attributes);
            }
            else {
                if (!IsArray(decorators))
                    throw new TypeError();
                if (!IsConstructor(target))
                    throw new TypeError();
                return DecorateConstructor(decorators, target);
            }
        }
        exporter("decorate", decorate);
        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)
        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata
        /**
         * A default metadata decorator factory that can be used on a class, class member, or parameter.
         * @param metadataKey The key for the metadata entry.
         * @param metadataValue The value for the metadata entry.
         * @returns A decorator function.
         * @remarks
         * If `metadataKey` is already defined for the target and target key, the
         * metadataValue for that key will be overwritten.
         * @example
         *
         *     // constructor
         *     @Reflect.metadata(key, value)
         *     class Example {
         *     }
         *
         *     // property (on constructor, TypeScript only)
         *     class Example {
         *         @Reflect.metadata(key, value)
         *         static staticProperty;
         *     }
         *
         *     // property (on prototype, TypeScript only)
         *     class Example {
         *         @Reflect.metadata(key, value)
         *         property;
         *     }
         *
         *     // method (on constructor)
         *     class Example {
         *         @Reflect.metadata(key, value)
         *         static staticMethod() { }
         *     }
         *
         *     // method (on prototype)
         *     class Example {
         *         @Reflect.metadata(key, value)
         *         method() { }
         *     }
         *
         */
        function metadata(metadataKey, metadataValue) {
            function decorator(target, propertyKey) {
                if (!IsObject(target))
                    throw new TypeError();
                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))
                    throw new TypeError();
                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);
            }
            return decorator;
        }
        exporter("metadata", metadata);
        /**
         * Define a unique metadata entry on the target.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param metadataValue A value that contains attached metadata.
         * @param target The target object on which to define metadata.
         * @param propertyKey (Optional) The property key for the target.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     Reflect.defineMetadata("custom:annotation", options, Example);
         *
         *     // property (on constructor)
         *     Reflect.defineMetadata("custom:annotation", options, Example, "staticProperty");
         *
         *     // property (on prototype)
         *     Reflect.defineMetadata("custom:annotation", options, Example.prototype, "property");
         *
         *     // method (on constructor)
         *     Reflect.defineMetadata("custom:annotation", options, Example, "staticMethod");
         *
         *     // method (on prototype)
         *     Reflect.defineMetadata("custom:annotation", options, Example.prototype, "method");
         *
         *     // decorator factory as metadata-producing annotation.
         *     function MyAnnotation(options): Decorator {
         *         return (target, key?) => Reflect.defineMetadata("custom:annotation", options, target, key);
         *     }
         *
         */
        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);
        }
        exporter("defineMetadata", defineMetadata);
        /**
         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.hasMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.hasMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.hasMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.hasMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.hasMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function hasMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryHasMetadata(metadataKey, target, propertyKey);
        }
        exporter("hasMetadata", hasMetadata);
        /**
         * Gets a value indicating whether the target object has the provided metadata key defined.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function hasOwnMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);
        }
        exporter("hasOwnMetadata", hasOwnMetadata);
        /**
         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.getMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.getMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.getMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.getMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.getMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function getMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryGetMetadata(metadataKey, target, propertyKey);
        }
        exporter("getMetadata", getMetadata);
        /**
         * Gets the metadata value for the provided metadata key on the target object.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.getOwnMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.getOwnMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.getOwnMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.getOwnMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.getOwnMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function getOwnMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);
        }
        exporter("getOwnMetadata", getOwnMetadata);
        /**
         * Gets the metadata keys defined on the target object or its prototype chain.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns An array of unique metadata keys.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.getMetadataKeys(Example);
         *
         *     // property (on constructor)
         *     result = Reflect.getMetadataKeys(Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.getMetadataKeys(Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.getMetadataKeys(Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.getMetadataKeys(Example.prototype, "method");
         *
         */
        function getMetadataKeys(target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryMetadataKeys(target, propertyKey);
        }
        exporter("getMetadataKeys", getMetadataKeys);
        /**
         * Gets the unique metadata keys defined on the target object.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns An array of unique metadata keys.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.getOwnMetadataKeys(Example);
         *
         *     // property (on constructor)
         *     result = Reflect.getOwnMetadataKeys(Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.getOwnMetadataKeys(Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.getOwnMetadataKeys(Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.getOwnMetadataKeys(Example.prototype, "method");
         *
         */
        function getOwnMetadataKeys(target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryOwnMetadataKeys(target, propertyKey);
        }
        exporter("getOwnMetadataKeys", getOwnMetadataKeys);
        /**
         * Deletes the metadata entry from the target object with the provided key.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns `true` if the metadata entry was found and deleted; otherwise, false.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.deleteMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.deleteMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.deleteMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.deleteMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.deleteMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function deleteMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            var provider = GetMetadataProvider(target, propertyKey, /*Create*/ false);
            if (IsUndefined(provider))
                return false;
            return provider.OrdinaryDeleteMetadata(metadataKey, target, propertyKey);
        }
        exporter("deleteMetadata", deleteMetadata);
        function DecorateConstructor(decorators, target) {
            for (var i = decorators.length - 1; i >= 0; --i) {
                var decorator = decorators[i];
                var decorated = decorator(target);
                if (!IsUndefined(decorated) && !IsNull(decorated)) {
                    if (!IsConstructor(decorated))
                        throw new TypeError();
                    target = decorated;
                }
            }
            return target;
        }
        function DecorateProperty(decorators, target, propertyKey, descriptor) {
            for (var i = decorators.length - 1; i >= 0; --i) {
                var decorator = decorators[i];
                var decorated = decorator(target, propertyKey, descriptor);
                if (!IsUndefined(decorated) && !IsNull(decorated)) {
                    if (!IsObject(decorated))
                        throw new TypeError();
                    descriptor = decorated;
                }
            }
            return descriptor;
        }
        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata
        function OrdinaryHasMetadata(MetadataKey, O, P) {
            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);
            if (hasOwn)
                return true;
            var parent = OrdinaryGetPrototypeOf(O);
            if (!IsNull(parent))
                return OrdinaryHasMetadata(MetadataKey, parent, P);
            return false;
        }
        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata
        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {
            var provider = GetMetadataProvider(O, P, /*Create*/ false);
            if (IsUndefined(provider))
                return false;
            return ToBoolean(provider.OrdinaryHasOwnMetadata(MetadataKey, O, P));
        }
        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata
        function OrdinaryGetMetadata(MetadataKey, O, P) {
            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);
            if (hasOwn)
                return OrdinaryGetOwnMetadata(MetadataKey, O, P);
            var parent = OrdinaryGetPrototypeOf(O);
            if (!IsNull(parent))
                return OrdinaryGetMetadata(MetadataKey, parent, P);
            return undefined;
        }
        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata
        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {
            var provider = GetMetadataProvider(O, P, /*Create*/ false);
            if (IsUndefined(provider))
                return;
            return provider.OrdinaryGetOwnMetadata(MetadataKey, O, P);
        }
        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata
        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {
            var provider = GetMetadataProvider(O, P, /*Create*/ true);
            provider.OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P);
        }
        // 3.1.6.1 OrdinaryMetadataKeys(O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys
        function OrdinaryMetadataKeys(O, P) {
            var ownKeys = OrdinaryOwnMetadataKeys(O, P);
            var parent = OrdinaryGetPrototypeOf(O);
            if (parent === null)
                return ownKeys;
            var parentKeys = OrdinaryMetadataKeys(parent, P);
            if (parentKeys.length <= 0)
                return ownKeys;
            if (ownKeys.length <= 0)
                return parentKeys;
            var set = new _Set();
            var keys = [];
            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {
                var key = ownKeys_1[_i];
                var hasKey = set.has(key);
                if (!hasKey) {
                    set.add(key);
                    keys.push(key);
                }
            }
            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {
                var key = parentKeys_1[_a];
                var hasKey = set.has(key);
                if (!hasKey) {
                    set.add(key);
                    keys.push(key);
                }
            }
            return keys;
        }
        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys
        function OrdinaryOwnMetadataKeys(O, P) {
            var provider = GetMetadataProvider(O, P, /*create*/ false);
            if (!provider) {
                return [];
            }
            return provider.OrdinaryOwnMetadataKeys(O, P);
        }
        // 6 ECMAScript Data Types and Values
        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values
        function Type(x) {
            if (x === null)
                return 1 /* Null */;
            switch (typeof x) {
                case "undefined": return 0 /* Undefined */;
                case "boolean": return 2 /* Boolean */;
                case "string": return 3 /* String */;
                case "symbol": return 4 /* Symbol */;
                case "number": return 5 /* Number */;
                case "object": return x === null ? 1 /* Null */ : 6 /* Object */;
                default: return 6 /* Object */;
            }
        }
        // 6.1.1 The Undefined Type
        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type
        function IsUndefined(x) {
            return x === undefined;
        }
        // 6.1.2 The Null Type
        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type
        function IsNull(x) {
            return x === null;
        }
        // 6.1.5 The Symbol Type
        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type
        function IsSymbol(x) {
            return typeof x === "symbol";
        }
        // 6.1.7 The Object Type
        // https://tc39.github.io/ecma262/#sec-object-type
        function IsObject(x) {
            return typeof x === "object" ? x !== null : typeof x === "function";
        }
        // 7.1 Type Conversion
        // https://tc39.github.io/ecma262/#sec-type-conversion
        // 7.1.1 ToPrimitive(input [, PreferredType])
        // https://tc39.github.io/ecma262/#sec-toprimitive
        function ToPrimitive(input, PreferredType) {
            switch (Type(input)) {
                case 0 /* Undefined */: return input;
                case 1 /* Null */: return input;
                case 2 /* Boolean */: return input;
                case 3 /* String */: return input;
                case 4 /* Symbol */: return input;
                case 5 /* Number */: return input;
            }
            var hint = PreferredType === 3 /* String */ ? "string" : PreferredType === 5 /* Number */ ? "number" : "default";
            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);
            if (exoticToPrim !== undefined) {
                var result = exoticToPrim.call(input, hint);
                if (IsObject(result))
                    throw new TypeError();
                return result;
            }
            return OrdinaryToPrimitive(input, hint === "default" ? "number" : hint);
        }
        // 7.1.1.1 OrdinaryToPrimitive(O, hint)
        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive
        function OrdinaryToPrimitive(O, hint) {
            if (hint === "string") {
                var toString_1 = O.toString;
                if (IsCallable(toString_1)) {
                    var result = toString_1.call(O);
                    if (!IsObject(result))
                        return result;
                }
                var valueOf = O.valueOf;
                if (IsCallable(valueOf)) {
                    var result = valueOf.call(O);
                    if (!IsObject(result))
                        return result;
                }
            }
            else {
                var valueOf = O.valueOf;
                if (IsCallable(valueOf)) {
                    var result = valueOf.call(O);
                    if (!IsObject(result))
                        return result;
                }
                var toString_2 = O.toString;
                if (IsCallable(toString_2)) {
                    var result = toString_2.call(O);
                    if (!IsObject(result))
                        return result;
                }
            }
            throw new TypeError();
        }
        // 7.1.2 ToBoolean(argument)
        // https://tc39.github.io/ecma262/2016/#sec-toboolean
        function ToBoolean(argument) {
            return !!argument;
        }
        // 7.1.12 ToString(argument)
        // https://tc39.github.io/ecma262/#sec-tostring
        function ToString(argument) {
            return "" + argument;
        }
        // 7.1.14 ToPropertyKey(argument)
        // https://tc39.github.io/ecma262/#sec-topropertykey
        function ToPropertyKey(argument) {
            var key = ToPrimitive(argument, 3 /* String */);
            if (IsSymbol(key))
                return key;
            return ToString(key);
        }
        // 7.2 Testing and Comparison Operations
        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations
        // 7.2.2 IsArray(argument)
        // https://tc39.github.io/ecma262/#sec-isarray
        function IsArray(argument) {
            return Array.isArray
                ? Array.isArray(argument)
                : argument instanceof Object
                    ? argument instanceof Array
                    : Object.prototype.toString.call(argument) === "[object Array]";
        }
        // 7.2.3 IsCallable(argument)
        // https://tc39.github.io/ecma262/#sec-iscallable
        function IsCallable(argument) {
            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.
            return typeof argument === "function";
        }
        // 7.2.4 IsConstructor(argument)
        // https://tc39.github.io/ecma262/#sec-isconstructor
        function IsConstructor(argument) {
            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.
            return typeof argument === "function";
        }
        // 7.2.7 IsPropertyKey(argument)
        // https://tc39.github.io/ecma262/#sec-ispropertykey
        function IsPropertyKey(argument) {
            switch (Type(argument)) {
                case 3 /* String */: return true;
                case 4 /* Symbol */: return true;
                default: return false;
            }
        }
        function SameValueZero(x, y) {
            return x === y || x !== x && y !== y;
        }
        // 7.3 Operations on Objects
        // https://tc39.github.io/ecma262/#sec-operations-on-objects
        // 7.3.9 GetMethod(V, P)
        // https://tc39.github.io/ecma262/#sec-getmethod
        function GetMethod(V, P) {
            var func = V[P];
            if (func === undefined || func === null)
                return undefined;
            if (!IsCallable(func))
                throw new TypeError();
            return func;
        }
        // 7.4 Operations on Iterator Objects
        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects
        function GetIterator(obj) {
            var method = GetMethod(obj, iteratorSymbol);
            if (!IsCallable(method))
                throw new TypeError(); // from Call
            var iterator = method.call(obj);
            if (!IsObject(iterator))
                throw new TypeError();
            return iterator;
        }
        // 7.4.4 IteratorValue(iterResult)
        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue
        function IteratorValue(iterResult) {
            return iterResult.value;
        }
        // 7.4.5 IteratorStep(iterator)
        // https://tc39.github.io/ecma262/#sec-iteratorstep
        function IteratorStep(iterator) {
            var result = iterator.next();
            return result.done ? false : result;
        }
        // 7.4.6 IteratorClose(iterator, completion)
        // https://tc39.github.io/ecma262/#sec-iteratorclose
        function IteratorClose(iterator) {
            var f = iterator["return"];
            if (f)
                f.call(iterator);
        }
        // 9.1 Ordinary Object Internal Methods and Internal Slots
        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots
        // 9.1.1.1 OrdinaryGetPrototypeOf(O)
        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof
        function OrdinaryGetPrototypeOf(O) {
            var proto = Object.getPrototypeOf(O);
            if (typeof O !== "function" || O === functionPrototype)
                return proto;
            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.
            // Try to determine the superclass constructor. Compatible implementations
            // must either set __proto__ on a subclass constructor to the superclass constructor,
            // or ensure each class has a valid `constructor` property on its prototype that
            // points back to the constructor.
            // If this is not the same as Function.[[Prototype]], then this is definately inherited.
            // This is the case when in ES6 or when using __proto__ in a compatible browser.
            if (proto !== functionPrototype)
                return proto;
            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.
            var prototype = O.prototype;
            var prototypeProto = prototype && Object.getPrototypeOf(prototype);
            if (prototypeProto == null || prototypeProto === Object.prototype)
                return proto;
            // If the constructor was not a function, then we cannot determine the heritage.
            var constructor = prototypeProto.constructor;
            if (typeof constructor !== "function")
                return proto;
            // If we have some kind of self-reference, then we cannot determine the heritage.
            if (constructor === O)
                return proto;
            // we have a pretty good guess at the heritage.
            return constructor;
        }
        // Global metadata registry
        // - Allows `import "reflect-metadata"` and `import "reflect-metadata/no-conflict"` to interoperate.
        // - Uses isolated metadata if `Reflect` is frozen before the registry can be installed.
        /**
         * Creates a registry used to allow multiple `reflect-metadata` providers.
         */
        function CreateMetadataRegistry() {
            var fallback;
            if (!IsUndefined(registrySymbol) &&
                typeof root.Reflect !== "undefined" &&
                !(registrySymbol in root.Reflect) &&
                typeof root.Reflect.defineMetadata === "function") {
                // interoperate with older version of `reflect-metadata` that did not support a registry.
                fallback = CreateFallbackProvider(root.Reflect);
            }
            var first;
            var second;
            var rest;
            var targetProviderMap = new _WeakMap();
            var registry = {
                registerProvider: registerProvider,
                getProvider: getProvider,
                setProvider: setProvider,
            };
            return registry;
            function registerProvider(provider) {
                if (!Object.isExtensible(registry)) {
                    throw new Error("Cannot add provider to a frozen registry.");
                }
                switch (true) {
                    case fallback === provider: break;
                    case IsUndefined(first):
                        first = provider;
                        break;
                    case first === provider: break;
                    case IsUndefined(second):
                        second = provider;
                        break;
                    case second === provider: break;
                    default:
                        if (rest === undefined)
                            rest = new _Set();
                        rest.add(provider);
                        break;
                }
            }
            function getProviderNoCache(O, P) {
                if (!IsUndefined(first)) {
                    if (first.isProviderFor(O, P))
                        return first;
                    if (!IsUndefined(second)) {
                        if (second.isProviderFor(O, P))
                            return first;
                        if (!IsUndefined(rest)) {
                            var iterator = GetIterator(rest);
                            while (true) {
                                var next = IteratorStep(iterator);
                                if (!next) {
                                    return undefined;
                                }
                                var provider = IteratorValue(next);
                                if (provider.isProviderFor(O, P)) {
                                    IteratorClose(iterator);
                                    return provider;
                                }
                            }
                        }
                    }
                }
                if (!IsUndefined(fallback) && fallback.isProviderFor(O, P)) {
                    return fallback;
                }
                return undefined;
            }
            function getProvider(O, P) {
                var providerMap = targetProviderMap.get(O);
                var provider;
                if (!IsUndefined(providerMap)) {
                    provider = providerMap.get(P);
                }
                if (!IsUndefined(provider)) {
                    return provider;
                }
                provider = getProviderNoCache(O, P);
                if (!IsUndefined(provider)) {
                    if (IsUndefined(providerMap)) {
                        providerMap = new _Map();
                        targetProviderMap.set(O, providerMap);
                    }
                    providerMap.set(P, provider);
                }
                return provider;
            }
            function hasProvider(provider) {
                if (IsUndefined(provider))
                    throw new TypeError();
                return first === provider || second === provider || !IsUndefined(rest) && rest.has(provider);
            }
            function setProvider(O, P, provider) {
                if (!hasProvider(provider)) {
                    throw new Error("Metadata provider not registered.");
                }
                var existingProvider = getProvider(O, P);
                if (existingProvider !== provider) {
                    if (!IsUndefined(existingProvider)) {
                        return false;
                    }
                    var providerMap = targetProviderMap.get(O);
                    if (IsUndefined(providerMap)) {
                        providerMap = new _Map();
                        targetProviderMap.set(O, providerMap);
                    }
                    providerMap.set(P, provider);
                }
                return true;
            }
        }
        /**
         * Gets or creates the shared registry of metadata providers.
         */
        function GetOrCreateMetadataRegistry() {
            var metadataRegistry;
            if (!IsUndefined(registrySymbol) && IsObject(root.Reflect) && Object.isExtensible(root.Reflect)) {
                metadataRegistry = root.Reflect[registrySymbol];
            }
            if (IsUndefined(metadataRegistry)) {
                metadataRegistry = CreateMetadataRegistry();
            }
            if (!IsUndefined(registrySymbol) && IsObject(root.Reflect) && Object.isExtensible(root.Reflect)) {
                Object.defineProperty(root.Reflect, registrySymbol, {
                    enumerable: false,
                    configurable: false,
                    writable: false,
                    value: metadataRegistry
                });
            }
            return metadataRegistry;
        }
        function CreateMetadataProvider(registry) {
            // [[Metadata]] internal slot
            // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots
            var metadata = new _WeakMap();
            var provider = {
                isProviderFor: function (O, P) {
                    var targetMetadata = metadata.get(O);
                    if (IsUndefined(targetMetadata))
                        return false;
                    return targetMetadata.has(P);
                },
                OrdinaryDefineOwnMetadata: OrdinaryDefineOwnMetadata,
                OrdinaryHasOwnMetadata: OrdinaryHasOwnMetadata,
                OrdinaryGetOwnMetadata: OrdinaryGetOwnMetadata,
                OrdinaryOwnMetadataKeys: OrdinaryOwnMetadataKeys,
                OrdinaryDeleteMetadata: OrdinaryDeleteMetadata,
            };
            metadataRegistry.registerProvider(provider);
            return provider;
            function GetOrCreateMetadataMap(O, P, Create) {
                var targetMetadata = metadata.get(O);
                var createdTargetMetadata = false;
                if (IsUndefined(targetMetadata)) {
                    if (!Create)
                        return undefined;
                    targetMetadata = new _Map();
                    metadata.set(O, targetMetadata);
                    createdTargetMetadata = true;
                }
                var metadataMap = targetMetadata.get(P);
                if (IsUndefined(metadataMap)) {
                    if (!Create)
                        return undefined;
                    metadataMap = new _Map();
                    targetMetadata.set(P, metadataMap);
                    if (!registry.setProvider(O, P, provider)) {
                        targetMetadata.delete(P);
                        if (createdTargetMetadata) {
                            metadata.delete(O);
                        }
                        throw new Error("Wrong provider for target.");
                    }
                }
                return metadataMap;
            }
            // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)
            // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata
            function OrdinaryHasOwnMetadata(MetadataKey, O, P) {
                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);
                if (IsUndefined(metadataMap))
                    return false;
                return ToBoolean(metadataMap.has(MetadataKey));
            }
            // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)
            // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata
            function OrdinaryGetOwnMetadata(MetadataKey, O, P) {
                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);
                if (IsUndefined(metadataMap))
                    return undefined;
                return metadataMap.get(MetadataKey);
            }
            // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)
            // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata
            function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {
                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);
                metadataMap.set(MetadataKey, MetadataValue);
            }
            // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)
            // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys
            function OrdinaryOwnMetadataKeys(O, P) {
                var keys = [];
                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);
                if (IsUndefined(metadataMap))
                    return keys;
                var keysObj = metadataMap.keys();
                var iterator = GetIterator(keysObj);
                var k = 0;
                while (true) {
                    var next = IteratorStep(iterator);
                    if (!next) {
                        keys.length = k;
                        return keys;
                    }
                    var nextValue = IteratorValue(next);
                    try {
                        keys[k] = nextValue;
                    }
                    catch (e) {
                        try {
                            IteratorClose(iterator);
                        }
                        finally {
                            throw e;
                        }
                    }
                    k++;
                }
            }
            function OrdinaryDeleteMetadata(MetadataKey, O, P) {
                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);
                if (IsUndefined(metadataMap))
                    return false;
                if (!metadataMap.delete(MetadataKey))
                    return false;
                if (metadataMap.size === 0) {
                    var targetMetadata = metadata.get(O);
                    if (!IsUndefined(targetMetadata)) {
                        targetMetadata.delete(P);
                        if (targetMetadata.size === 0) {
                            metadata.delete(targetMetadata);
                        }
                    }
                }
                return true;
            }
        }
        function CreateFallbackProvider(reflect) {
            var defineMetadata = reflect.defineMetadata, hasOwnMetadata = reflect.hasOwnMetadata, getOwnMetadata = reflect.getOwnMetadata, getOwnMetadataKeys = reflect.getOwnMetadataKeys, deleteMetadata = reflect.deleteMetadata;
            var metadataOwner = new _WeakMap();
            var provider = {
                isProviderFor: function (O, P) {
                    var metadataPropertySet = metadataOwner.get(O);
                    if (!IsUndefined(metadataPropertySet) && metadataPropertySet.has(P)) {
                        return true;
                    }
                    if (getOwnMetadataKeys(O, P).length) {
                        if (IsUndefined(metadataPropertySet)) {
                            metadataPropertySet = new _Set();
                            metadataOwner.set(O, metadataPropertySet);
                        }
                        metadataPropertySet.add(P);
                        return true;
                    }
                    return false;
                },
                OrdinaryDefineOwnMetadata: defineMetadata,
                OrdinaryHasOwnMetadata: hasOwnMetadata,
                OrdinaryGetOwnMetadata: getOwnMetadata,
                OrdinaryOwnMetadataKeys: getOwnMetadataKeys,
                OrdinaryDeleteMetadata: deleteMetadata,
            };
            return provider;
        }
        /**
         * Gets the metadata provider for an object. If the object has no metadata provider and this is for a create operation,
         * then this module's metadata provider is assigned to the object.
         */
        function GetMetadataProvider(O, P, Create) {
            var registeredProvider = metadataRegistry.getProvider(O, P);
            if (!IsUndefined(registeredProvider)) {
                return registeredProvider;
            }
            if (Create) {
                if (metadataRegistry.setProvider(O, P, metadataProvider)) {
                    return metadataProvider;
                }
                throw new Error("Illegal state.");
            }
            return undefined;
        }
        // naive Map shim
        function CreateMapPolyfill() {
            var cacheSentinel = {};
            var arraySentinel = [];
            var MapIterator = /** @class */ (function () {
                function MapIterator(keys, values, selector) {
                    this._index = 0;
                    this._keys = keys;
                    this._values = values;
                    this._selector = selector;
                }
                MapIterator.prototype["@@iterator"] = function () { return this; };
                MapIterator.prototype[iteratorSymbol] = function () { return this; };
                MapIterator.prototype.next = function () {
                    var index = this._index;
                    if (index >= 0 && index < this._keys.length) {
                        var result = this._selector(this._keys[index], this._values[index]);
                        if (index + 1 >= this._keys.length) {
                            this._index = -1;
                            this._keys = arraySentinel;
                            this._values = arraySentinel;
                        }
                        else {
                            this._index++;
                        }
                        return { value: result, done: false };
                    }
                    return { value: undefined, done: true };
                };
                MapIterator.prototype.throw = function (error) {
                    if (this._index >= 0) {
                        this._index = -1;
                        this._keys = arraySentinel;
                        this._values = arraySentinel;
                    }
                    throw error;
                };
                MapIterator.prototype.return = function (value) {
                    if (this._index >= 0) {
                        this._index = -1;
                        this._keys = arraySentinel;
                        this._values = arraySentinel;
                    }
                    return { value: value, done: true };
                };
                return MapIterator;
            }());
            var Map = /** @class */ (function () {
                function Map() {
                    this._keys = [];
                    this._values = [];
                    this._cacheKey = cacheSentinel;
                    this._cacheIndex = -2;
                }
                Object.defineProperty(Map.prototype, "size", {
                    get: function () { return this._keys.length; },
                    enumerable: true,
                    configurable: true
                });
                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };
                Map.prototype.get = function (key) {
                    var index = this._find(key, /*insert*/ false);
                    return index >= 0 ? this._values[index] : undefined;
                };
                Map.prototype.set = function (key, value) {
                    var index = this._find(key, /*insert*/ true);
                    this._values[index] = value;
                    return this;
                };
                Map.prototype.delete = function (key) {
                    var index = this._find(key, /*insert*/ false);
                    if (index >= 0) {
                        var size = this._keys.length;
                        for (var i = index + 1; i < size; i++) {
                            this._keys[i - 1] = this._keys[i];
                            this._values[i - 1] = this._values[i];
                        }
                        this._keys.length--;
                        this._values.length--;
                        if (SameValueZero(key, this._cacheKey)) {
                            this._cacheKey = cacheSentinel;
                            this._cacheIndex = -2;
                        }
                        return true;
                    }
                    return false;
                };
                Map.prototype.clear = function () {
                    this._keys.length = 0;
                    this._values.length = 0;
                    this._cacheKey = cacheSentinel;
                    this._cacheIndex = -2;
                };
                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };
                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };
                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };
                Map.prototype["@@iterator"] = function () { return this.entries(); };
                Map.prototype[iteratorSymbol] = function () { return this.entries(); };
                Map.prototype._find = function (key, insert) {
                    if (!SameValueZero(this._cacheKey, key)) {
                        this._cacheIndex = -1;
                        for (var i = 0; i < this._keys.length; i++) {
                            if (SameValueZero(this._keys[i], key)) {
                                this._cacheIndex = i;
                                break;
                            }
                        }
                    }
                    if (this._cacheIndex < 0 && insert) {
                        this._cacheIndex = this._keys.length;
                        this._keys.push(key);
                        this._values.push(undefined);
                    }
                    return this._cacheIndex;
                };
                return Map;
            }());
            return Map;
            function getKey(key, _) {
                return key;
            }
            function getValue(_, value) {
                return value;
            }
            function getEntry(key, value) {
                return [key, value];
            }
        }
        // naive Set shim
        function CreateSetPolyfill() {
            var Set = /** @class */ (function () {
                function Set() {
                    this._map = new _Map();
                }
                Object.defineProperty(Set.prototype, "size", {
                    get: function () { return this._map.size; },
                    enumerable: true,
                    configurable: true
                });
                Set.prototype.has = function (value) { return this._map.has(value); };
                Set.prototype.add = function (value) { return this._map.set(value, value), this; };
                Set.prototype.delete = function (value) { return this._map.delete(value); };
                Set.prototype.clear = function () { this._map.clear(); };
                Set.prototype.keys = function () { return this._map.keys(); };
                Set.prototype.values = function () { return this._map.keys(); };
                Set.prototype.entries = function () { return this._map.entries(); };
                Set.prototype["@@iterator"] = function () { return this.keys(); };
                Set.prototype[iteratorSymbol] = function () { return this.keys(); };
                return Set;
            }());
            return Set;
        }
        // naive WeakMap shim
        function CreateWeakMapPolyfill() {
            var UUID_SIZE = 16;
            var keys = HashMap.create();
            var rootKey = CreateUniqueKey();
            return /** @class */ (function () {
                function WeakMap() {
                    this._key = CreateUniqueKey();
                }
                WeakMap.prototype.has = function (target) {
                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);
                    return table !== undefined ? HashMap.has(table, this._key) : false;
                };
                WeakMap.prototype.get = function (target) {
                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);
                    return table !== undefined ? HashMap.get(table, this._key) : undefined;
                };
                WeakMap.prototype.set = function (target, value) {
                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);
                    table[this._key] = value;
                    return this;
                };
                WeakMap.prototype.delete = function (target) {
                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);
                    return table !== undefined ? delete table[this._key] : false;
                };
                WeakMap.prototype.clear = function () {
                    // NOTE: not a real clear, just makes the previous data unreachable
                    this._key = CreateUniqueKey();
                };
                return WeakMap;
            }());
            function CreateUniqueKey() {
                var key;
                do
                    key = "@@WeakMap@@" + CreateUUID();
                while (HashMap.has(keys, key));
                keys[key] = true;
                return key;
            }
            function GetOrCreateWeakMapTable(target, create) {
                if (!hasOwn.call(target, rootKey)) {
                    if (!create)
                        return undefined;
                    Object.defineProperty(target, rootKey, { value: HashMap.create() });
                }
                return target[rootKey];
            }
            function FillRandomBytes(buffer, size) {
                for (var i = 0; i < size; ++i)
                    buffer[i] = Math.random() * 0xff | 0;
                return buffer;
            }
            function GenRandomBytes(size) {
                if (typeof Uint8Array === "function") {
                    var array = new Uint8Array(size);
                    if (typeof crypto !== "undefined") {
                        crypto.getRandomValues(array);
                    }
                    else if (typeof msCrypto !== "undefined") {
                        msCrypto.getRandomValues(array);
                    }
                    else {
                        FillRandomBytes(array, size);
                    }
                    return array;
                }
                return FillRandomBytes(new Array(size), size);
            }
            function CreateUUID() {
                var data = GenRandomBytes(UUID_SIZE);
                // mark as random - RFC 4122 § 4.4
                data[6] = data[6] & 0x4f | 0x40;
                data[8] = data[8] & 0xbf | 0x80;
                var result = "";
                for (var offset = 0; offset < UUID_SIZE; ++offset) {
                    var byte = data[offset];
                    if (offset === 4 || offset === 6 || offset === 8)
                        result += "-";
                    if (byte < 16)
                        result += "0";
                    result += byte.toString(16).toLowerCase();
                }
                return result;
            }
        }
        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.
        function MakeDictionary(obj) {
            obj.__ = undefined;
            delete obj.__;
            return obj;
        }
    });
})(Reflect || (Reflect = {}));

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(33)))

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.getRefMap = void 0;
var getGlobalType_1 = __webpack_require__(24);
var metadata_1 = __webpack_require__(13);
function getRefMap(clsType, initMaps) {
    if (initMaps === void 0) { initMaps = {}; }
    var maps = initMaps;
    function scan(clsType) {
        var type = (0, getGlobalType_1.symbolString)((0, getGlobalType_1.getGlobalType)(clsType));
        if (maps[type]) {
            return;
        }
        var refs = (maps[type] = {
            count: 0,
            deps: [],
        });
        (0, metadata_1.getMetadataField)(clsType, 'injects').forEach(function (inj) {
            var globalType = (0, getGlobalType_1.symbolString)(inj.globalType);
            scan(inj.typeCls);
            maps[globalType].count++;
            refs.deps.push({
                prop: inj.key,
                type: globalType,
            });
        });
    }
    scan(clsType);
    return maps;
}
exports.getRefMap = getRefMap;
//# sourceMappingURL=getRefMap.js.map

/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
//# sourceMappingURL=types.js.map

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(__webpack_require__(91), exports);
__exportStar(__webpack_require__(92), exports);
__exportStar(__webpack_require__(93), exports);
__exportStar(__webpack_require__(94), exports);
__exportStar(__webpack_require__(95), exports);
__exportStar(__webpack_require__(48), exports);
__exportStar(__webpack_require__(96), exports);
//# sourceMappingURL=index.js.map

/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.classInfo = void 0;
var class_1 = __webpack_require__(34);
var metadata_1 = __webpack_require__(13);
var ClassLoader_1 = __webpack_require__(25);
function classInfo(info) {
    if (info === void 0) { info = {}; }
    return function (target) {
        if (info.name) {
            Object.defineProperty(target, class_1.nameSymbol, {
                enumerable: false,
                writable: false,
                configurable: false,
                value: info.name,
            });
        }
        // prevent cache is incorrect
        if (ClassLoader_1.classLoader.hasClass(target)) {
            ClassLoader_1.classLoader.unregisterClass(target);
        }
        Object.assign((0, metadata_1.getMetadata)(target).classInfo, {
        // default value
        }, info);
        ClassLoader_1.classLoader.registerClass(target);
    };
}
exports.classInfo = classInfo;
//# sourceMappingURL=classInfo.js.map

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.inject = void 0;
var utils_1 = __webpack_require__(23);
var metadata_1 = __webpack_require__(13);
/**
 * inject
 */
function inject(_a) {
    var _b = _a === void 0 ? {} : _a, type = _b.type, _c = _b.lazy, lazy = _c === void 0 ? true : _c, _d = _b.always, always = _d === void 0 ? false : _d, _e = _b.optional, optional = _e === void 0 ? false : _e, _f = _b.singleton, singleton = _f === void 0 ? true : _f;
    return function (target, key) {
        var typeCls = (0, utils_1.getClsTypeByDecorator)(type, target, key);
        if (typeCls === undefined || typeCls === Object) {
            throw new Error("CANNOT inject undefined! source: ".concat(target.constructor.name, ".").concat(key.toString()));
        }
        (0, metadata_1.getMetadata)(target.constructor).injects.push({
            key: key,
            globalType: (0, utils_1.getGlobalTypeByDecorator)(type, target, key),
            type: lazy ? 'lazyInject' : 'inject',
            always: always,
            typeCls: typeCls,
            optional: optional,
            singleton: singleton,
        });
    };
}
exports.inject = inject;
//# sourceMappingURL=inject.js.map

/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.injectable = void 0;
var ClassLoader_1 = __webpack_require__(25);
/** can be inject */
function injectable() {
    return function (target) {
        if (!ClassLoader_1.classLoader.hasClass(target)) {
            ClassLoader_1.classLoader.registerClass(target);
        }
    };
}
exports.injectable = injectable;
//# sourceMappingURL=injectable.js.map

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.imports = void 0;
var utils_1 = __webpack_require__(23);
var metadata_1 = __webpack_require__(13);
/** subClasses/implements inject */
function imports(_a) {
    var type = _a.type, _b = _a.always, always = _b === void 0 ? false : _b;
    return function (target, key) {
        // if (getClsTypeByDecorator(undefined, target, key) !== Array) {
        //   throw new Error(`${target.constructor.name}.${key.toString()}'s type need 'Array<T>' or 'T[]'.`);
        // }
        (0, metadata_1.getMetadata)(target.constructor).injects.push({
            key: key,
            globalType: (0, utils_1.getGlobalType)(type),
            type: 'imports',
            always: always,
            typeCls: type,
        });
    };
}
exports.imports = imports;
//# sourceMappingURL=imports.js.map

/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.postConstruct = void 0;
var metadata_1 = __webpack_require__(13);
/** run method after create instance */
function postConstruct() {
    return function (target, key) {
        (0, metadata_1.getMetadata)(target.constructor).postConstruct.push({ key: key });
    };
}
exports.postConstruct = postConstruct;
//# sourceMappingURL=postConstruct.js.map

/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.preDestroy = void 0;
var metadata_1 = __webpack_require__(13);
/** run method before destroy instance */
function preDestroy() {
    return function (target, key) {
        (0, metadata_1.getMetadata)(target.constructor).preDestroy.push({ key: key });
    };
}
exports.preDestroy = preDestroy;
//# sourceMappingURL=preDestroy.js.map

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


class LRUCache {
  constructor () {
    this.max = 1000
    this.map = new Map()
  }

  get (key) {
    const value = this.map.get(key)
    if (value === undefined) {
      return undefined
    } else {
      // Remove the key from the map and add it to the end
      this.map.delete(key)
      this.map.set(key, value)
      return value
    }
  }

  delete (key) {
    return this.map.delete(key)
  }

  set (key, value) {
    const deleted = this.delete(key)

    if (!deleted && value !== undefined) {
      // If cache is full, delete the least recently used item
      if (this.map.size >= this.max) {
        const firstKey = this.map.keys().next().value
        this.delete(firstKey)
      }

      this.map.set(key, value)
    }

    return this
  }
}

module.exports = LRUCache


/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const ANY = Symbol('SemVer ANY')
// hoisted class for cyclic dependency
class Comparator {
  static get ANY () {
    return ANY
  }

  constructor (comp, options) {
    options = parseOptions(options)

    if (comp instanceof Comparator) {
      if (comp.loose === !!options.loose) {
        return comp
      } else {
        comp = comp.value
      }
    }

    comp = comp.trim().split(/\s+/).join(' ')
    debug('comparator', comp, options)
    this.options = options
    this.loose = !!options.loose
    this.parse(comp)

    if (this.semver === ANY) {
      this.value = ''
    } else {
      this.value = this.operator + this.semver.version
    }

    debug('comp', this)
  }

  parse (comp) {
    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]
    const m = comp.match(r)

    if (!m) {
      throw new TypeError(`Invalid comparator: ${comp}`)
    }

    this.operator = m[1] !== undefined ? m[1] : ''
    if (this.operator === '=') {
      this.operator = ''
    }

    // if it literally is just '>' or '' then allow anything.
    if (!m[2]) {
      this.semver = ANY
    } else {
      this.semver = new SemVer(m[2], this.options.loose)
    }
  }

  toString () {
    return this.value
  }

  test (version) {
    debug('Comparator.test', version, this.options.loose)

    if (this.semver === ANY || version === ANY) {
      return true
    }

    if (typeof version === 'string') {
      try {
        version = new SemVer(version, this.options)
      } catch (er) {
        return false
      }
    }

    return cmp(version, this.operator, this.semver, this.options)
  }

  intersects (comp, options) {
    if (!(comp instanceof Comparator)) {
      throw new TypeError('a Comparator is required')
    }

    if (this.operator === '') {
      if (this.value === '') {
        return true
      }
      return new Range(comp.value, options).test(this.value)
    } else if (comp.operator === '') {
      if (comp.value === '') {
        return true
      }
      return new Range(this.value, options).test(comp.semver)
    }

    options = parseOptions(options)

    // Special cases where nothing can possibly be lower
    if (options.includePrerelease &&
      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {
      return false
    }
    if (!options.includePrerelease &&
      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {
      return false
    }

    // Same direction increasing (> or >=)
    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {
      return true
    }
    // Same direction decreasing (< or <=)
    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {
      return true
    }
    // same SemVer and both sides are inclusive (<= or >=)
    if (
      (this.semver.version === comp.semver.version) &&
      this.operator.includes('=') && comp.operator.includes('=')) {
      return true
    }
    // opposite directions less than
    if (cmp(this.semver, '<', comp.semver, options) &&
      this.operator.startsWith('>') && comp.operator.startsWith('<')) {
      return true
    }
    // opposite directions greater than
    if (cmp(this.semver, '>', comp.semver, options) &&
      this.operator.startsWith('<') && comp.operator.startsWith('>')) {
      return true
    }
    return false
  }
}

module.exports = Comparator

const parseOptions = __webpack_require__(35)
const { safeRe: re, t } = __webpack_require__(36)
const cmp = __webpack_require__(110)
const debug = __webpack_require__(26)
const SemVer = __webpack_require__(38)
const Range = __webpack_require__(51)


/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const eq = __webpack_require__(111)
const neq = __webpack_require__(113)
const gt = __webpack_require__(114)
const gte = __webpack_require__(115)
const lt = __webpack_require__(116)
const lte = __webpack_require__(117)

const cmp = (a, op, b, loose) => {
  switch (op) {
    case '===':
      if (typeof a === 'object') {
        a = a.version
      }
      if (typeof b === 'object') {
        b = b.version
      }
      return a === b

    case '!==':
      if (typeof a === 'object') {
        a = a.version
      }
      if (typeof b === 'object') {
        b = b.version
      }
      return a !== b

    case '':
    case '=':
    case '==':
      return eq(a, b, loose)

    case '!=':
      return neq(a, b, loose)

    case '>':
      return gt(a, b, loose)

    case '>=':
      return gte(a, b, loose)

    case '<':
      return lt(a, b, loose)

    case '<=':
      return lte(a, b, loose)

    default:
      throw new TypeError(`Invalid operator: ${op}`)
  }
}
module.exports = cmp


/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const compare = __webpack_require__(20)
const eq = (a, b, loose) => compare(a, b, loose) === 0
module.exports = eq


/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const numeric = /^[0-9]+$/
const compareIdentifiers = (a, b) => {
  const anum = numeric.test(a)
  const bnum = numeric.test(b)

  if (anum && bnum) {
    a = +a
    b = +b
  }

  return a === b ? 0
    : (anum && !bnum) ? -1
    : (bnum && !anum) ? 1
    : a < b ? -1
    : 1
}

const rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)

module.exports = {
  compareIdentifiers,
  rcompareIdentifiers,
}


/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const compare = __webpack_require__(20)
const neq = (a, b, loose) => compare(a, b, loose) !== 0
module.exports = neq


/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const compare = __webpack_require__(20)
const gt = (a, b, loose) => compare(a, b, loose) > 0
module.exports = gt


/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const compare = __webpack_require__(20)
const gte = (a, b, loose) => compare(a, b, loose) >= 0
module.exports = gte


/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const compare = __webpack_require__(20)
const lt = (a, b, loose) => compare(a, b, loose) < 0
module.exports = lt


/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const compare = __webpack_require__(20)
const lte = (a, b, loose) => compare(a, b, loose) <= 0
module.exports = lte


/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 125 */
/***/ (function(module, exports) {

module.exports = window.AliLowCodeEngineExt;

/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 127 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "skeleton", function() { return /* reexport */ engine_core_skeleton; });
__webpack_require__.d(__webpack_exports__, "plugins", function() { return /* reexport */ engine_core_plugins; });
__webpack_require__.d(__webpack_exports__, "project", function() { return /* reexport */ engine_core_project; });
__webpack_require__.d(__webpack_exports__, "setters", function() { return /* reexport */ engine_core_setters; });
__webpack_require__.d(__webpack_exports__, "material", function() { return /* reexport */ engine_core_material; });
__webpack_require__.d(__webpack_exports__, "config", function() { return /* reexport */ engine_core_config; });
__webpack_require__.d(__webpack_exports__, "event", function() { return /* reexport */ engine_core_event; });
__webpack_require__.d(__webpack_exports__, "logger", function() { return /* reexport */ engine_core_logger; });
__webpack_require__.d(__webpack_exports__, "hotkey", function() { return /* reexport */ engine_core_hotkey; });
__webpack_require__.d(__webpack_exports__, "common", function() { return /* reexport */ engine_core_common; });
__webpack_require__.d(__webpack_exports__, "workspace", function() { return /* reexport */ engine_core_workspace; });
__webpack_require__.d(__webpack_exports__, "canvas", function() { return /* reexport */ engine_core_canvas; });
__webpack_require__.d(__webpack_exports__, "commonUI", function() { return /* reexport */ engine_core_commonUI; });
__webpack_require__.d(__webpack_exports__, "command", function() { return /* reexport */ engine_core_command; });
__webpack_require__.d(__webpack_exports__, "isOpenSource", function() { return /* reexport */ isOpenSource; });
__webpack_require__.d(__webpack_exports__, "__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED", function() { return /* reexport */ __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED; });
__webpack_require__.d(__webpack_exports__, "version", function() { return /* reexport */ version; });
__webpack_require__.d(__webpack_exports__, "init", function() { return /* reexport */ engine_core_init; });
__webpack_require__.d(__webpack_exports__, "destroy", function() { return /* reexport */ engine_core_destroy; });

// NAMESPACE OBJECT: ./src/modules/classes.ts
var classes_namespaceObject = {};
__webpack_require__.r(classes_namespaceObject);
__webpack_require__.d(classes_namespaceObject, "Project", function() { return api_project_Project; });
__webpack_require__.d(classes_namespaceObject, "Skeleton", function() { return skeleton_Skeleton; });
__webpack_require__.d(classes_namespaceObject, "DocumentModel", function() { return model_document_model_DocumentModel; });
__webpack_require__.d(classes_namespaceObject, "Node", function() { return model_node_Node; });
__webpack_require__.d(classes_namespaceObject, "NodeChildren", function() { return model_node_children_NodeChildren; });
__webpack_require__.d(classes_namespaceObject, "History", function() { return model_history_History; });
__webpack_require__.d(classes_namespaceObject, "SettingPropEntry", function() { return model_setting_field_SettingField; });
__webpack_require__.d(classes_namespaceObject, "SettingTopEntry", function() { return model_setting_top_entry_SettingTopEntry; });
__webpack_require__.d(classes_namespaceObject, "Selection", function() { return model_selection_Selection; });
__webpack_require__.d(classes_namespaceObject, "Prop", function() { return model_prop_Prop; });
__webpack_require__.d(classes_namespaceObject, "SimulatorHost", function() { return simulator_host_SimulatorHost; });
__webpack_require__.d(classes_namespaceObject, "SkeletonItem", function() { return skeleton_item_SkeletonItem; });
__webpack_require__.d(classes_namespaceObject, "InnerNode", function() { return node_Node; });

// EXTERNAL MODULE: external "window.React"
var external_window_React_ = __webpack_require__(2);
var external_window_React_default = /*#__PURE__*/__webpack_require__.n(external_window_React_);

// EXTERNAL MODULE: external "window.ReactDOM"
var external_window_ReactDOM_ = __webpack_require__(10);

// EXTERNAL MODULE: ../editor-core/src/index.ts
var src = __webpack_require__(1);

// EXTERNAL MODULE: ../types/src/index.ts + 187 modules
var types_src = __webpack_require__(4);

// EXTERNAL MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/tslib/tslib.es6.js
var tslib_es6 = __webpack_require__(0);

// EXTERNAL MODULE: ../utils/src/index.ts + 63 modules
var utils_src = __webpack_require__(3);

// CONCATENATED MODULE: ../designer/src/document/node/props/value-to-source.ts
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function propertyNameRequiresQuotes(propertyName) {
  try {
    var context = {
      worksWithoutQuotes: false
    };
    // eslint-disable-next-line no-new-func
    new Function('ctx', "ctx.worksWithoutQuotes = {".concat(propertyName, ": true}['").concat(propertyName, "']"))();
    return !context.worksWithoutQuotes;
  } catch (ex) {
    return true;
  }
}
function quoteString(str, _ref) {
  var doubleQuote = _ref.doubleQuote;
  return doubleQuote ? "\"".concat(str.replace(/"/g, '\\"'), "\"") : "'".concat(str.replace(/'/g, "\\'"), "'");
}
function valueToSource(value) {
  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
    _ref2$circularReferen = _ref2.circularReferenceToken,
    circularReferenceToken = _ref2$circularReferen === void 0 ? 'CIRCULAR_REFERENCE' : _ref2$circularReferen,
    _ref2$doubleQuote = _ref2.doubleQuote,
    doubleQuote = _ref2$doubleQuote === void 0 ? true : _ref2$doubleQuote,
    _ref2$includeFunction = _ref2.includeFunctions,
    includeFunctions = _ref2$includeFunction === void 0 ? true : _ref2$includeFunction,
    _ref2$includeUndefine = _ref2.includeUndefinedProperties,
    includeUndefinedProperties = _ref2$includeUndefine === void 0 ? false : _ref2$includeUndefine,
    _ref2$indentLevel = _ref2.indentLevel,
    indentLevel = _ref2$indentLevel === void 0 ? 0 : _ref2$indentLevel,
    _ref2$indentString = _ref2.indentString,
    indentString = _ref2$indentString === void 0 ? '  ' : _ref2$indentString,
    _ref2$lineEnding = _ref2.lineEnding,
    lineEnding = _ref2$lineEnding === void 0 ? '\n' : _ref2$lineEnding,
    _ref2$visitedObjects = _ref2.visitedObjects,
    visitedObjects = _ref2$visitedObjects === void 0 ? new Set() : _ref2$visitedObjects;
  switch (_typeof(value)) {
    case 'boolean':
      return value ? "".concat(indentString.repeat(indentLevel), "true") : "".concat(indentString.repeat(indentLevel), "false");
    case 'function':
      if (includeFunctions) {
        return "".concat(indentString.repeat(indentLevel)).concat(value);
      }
      return null;
    case 'number':
      return "".concat(indentString.repeat(indentLevel)).concat(value);
    case 'object':
      if (!value) {
        return "".concat(indentString.repeat(indentLevel), "null");
      }
      if (visitedObjects.has(value)) {
        return "".concat(indentString.repeat(indentLevel)).concat(circularReferenceToken);
      }
      if (value instanceof Date) {
        return "".concat(indentString.repeat(indentLevel), "new Date(").concat(quoteString(value.toISOString(), {
          doubleQuote: doubleQuote
        }), ")");
      }
      if (value instanceof Map) {
        return value.size ? "".concat(indentString.repeat(indentLevel), "new Map(").concat(valueToSource(_toConsumableArray(value), {
          circularReferenceToken: circularReferenceToken,
          doubleQuote: doubleQuote,
          includeFunctions: includeFunctions,
          includeUndefinedProperties: includeUndefinedProperties,
          indentLevel: indentLevel,
          indentString: indentString,
          lineEnding: lineEnding,
          visitedObjects: new Set([value].concat(_toConsumableArray(visitedObjects)))
        }).slice(indentLevel * indentString.length), ")") : "".concat(indentString.repeat(indentLevel), "new Map()");
      }
      if (value instanceof RegExp) {
        return "".concat(indentString.repeat(indentLevel), "/").concat(value.source, "/").concat(value.flags);
      }
      if (value instanceof Set) {
        return value.size ? "".concat(indentString.repeat(indentLevel), "new Set(").concat(valueToSource(_toConsumableArray(value), {
          circularReferenceToken: circularReferenceToken,
          doubleQuote: doubleQuote,
          includeFunctions: includeFunctions,
          includeUndefinedProperties: includeUndefinedProperties,
          indentLevel: indentLevel,
          indentString: indentString,
          lineEnding: lineEnding,
          visitedObjects: new Set([value].concat(_toConsumableArray(visitedObjects)))
        }).slice(indentLevel * indentString.length), ")") : "".concat(indentString.repeat(indentLevel), "new Set()");
      }
      if (Array.isArray(value)) {
        if (!value.length) {
          return "".concat(indentString.repeat(indentLevel), "[]");
        }
        var itemsStayOnTheSameLine = value.every(function (item) {
          return _typeof(item) === 'object' && item && !(item instanceof Date) && !(item instanceof Map) && !(item instanceof RegExp) && !(item instanceof Set) && (Object.keys(item).length || value.length === 1);
        });
        var previousIndex = null;
        value = value.reduce(function (items, item, index) {
          if (previousIndex !== null) {
            for (var i = index - previousIndex - 1; i > 0; i -= 1) {
              items.push(indentString.repeat(indentLevel + 1));
            }
          }
          previousIndex = index;
          item = valueToSource(item, {
            circularReferenceToken: circularReferenceToken,
            doubleQuote: doubleQuote,
            includeFunctions: includeFunctions,
            includeUndefinedProperties: includeUndefinedProperties,
            indentLevel: itemsStayOnTheSameLine ? indentLevel : indentLevel + 1,
            indentString: indentString,
            lineEnding: lineEnding,
            visitedObjects: new Set([value].concat(_toConsumableArray(visitedObjects)))
          });
          if (item === null) {
            items.push(indentString.repeat(indentLevel + 1));
          } else if (itemsStayOnTheSameLine) {
            items.push(item.slice(indentLevel * indentString.length));
          } else {
            items.push(item);
          }
          return items;
        }, []);
        return itemsStayOnTheSameLine ? "".concat(indentString.repeat(indentLevel), "[").concat(value.join(', '), "]") : "".concat(indentString.repeat(indentLevel), "[").concat(lineEnding).concat(value.join(",".concat(lineEnding))).concat(lineEnding).concat(indentString.repeat(indentLevel), "]");
      }
      value = Object.keys(value).reduce(function (entries, propertyName) {
        var propertyValue = value[propertyName];
        var propertyValueString = typeof propertyValue !== 'undefined' || includeUndefinedProperties ? valueToSource(value[propertyName], {
          circularReferenceToken: circularReferenceToken,
          doubleQuote: doubleQuote,
          includeFunctions: includeFunctions,
          includeUndefinedProperties: includeUndefinedProperties,
          indentLevel: indentLevel + 1,
          indentString: indentString,
          lineEnding: lineEnding,
          visitedObjects: new Set([value].concat(_toConsumableArray(visitedObjects)))
        }) : null;
        if (propertyValueString) {
          var quotedPropertyName = propertyNameRequiresQuotes(propertyName) ? quoteString(propertyName, {
            doubleQuote: doubleQuote
          }) : propertyName;
          var trimmedPropertyValueString = propertyValueString.slice((indentLevel + 1) * indentString.length);
          if (typeof propertyValue === 'function' && trimmedPropertyValueString.startsWith("".concat(propertyName, "()"))) {
            entries.push("".concat(indentString.repeat(indentLevel + 1)).concat(quotedPropertyName, " ").concat(trimmedPropertyValueString.slice(propertyName.length)));
          } else {
            entries.push("".concat(indentString.repeat(indentLevel + 1)).concat(quotedPropertyName, ": ").concat(trimmedPropertyValueString));
          }
        }
        return entries;
      }, []);
      return value.length ? "".concat(indentString.repeat(indentLevel), "{").concat(lineEnding).concat(value.join(",".concat(lineEnding))).concat(lineEnding).concat(indentString.repeat(indentLevel), "}") : "".concat(indentString.repeat(indentLevel), "{}");
    case 'string':
      return "".concat(indentString.repeat(indentLevel)).concat(quoteString(value, {
        doubleQuote: doubleQuote
      }));
    case 'symbol':
      {
        var key = Symbol.keyFor(value);
        if (typeof key === 'string') {
          return "".concat(indentString.repeat(indentLevel), "Symbol.for(").concat(quoteString(key, {
            doubleQuote: doubleQuote
          }), ")");
        }
        key = value.toString().slice(7, -1);
        if (key) {
          return "".concat(indentString.repeat(indentLevel), "Symbol(").concat(quoteString(key, {
            doubleQuote: doubleQuote
          }), ")");
        }
        return "".concat(indentString.repeat(indentLevel), "Symbol()");
      }
    case 'undefined':
      return "".concat(indentString.repeat(indentLevel), "undefined");
    default:
      return "".concat(indentString.repeat(indentLevel), "undefined");
  }
}
function getSource(value) {
  if (value && value.__source) {
    return value.__source;
  }
  var source = valueToSource(value);
  if (source === 'undefined') {
    source = '';
  }
  if (value) {
    try {
      value.__source = source;
    } catch (ex) {
      console.error(ex);
    }
  }
  return source;
}
// CONCATENATED MODULE: ../designer/src/document/node/props/prop.ts
function prop_typeof(o) { "@babel/helpers - typeof"; return prop_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, prop_typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == prop_typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != prop_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != prop_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var _a, _b;





// import { TransformStage } from '../transform-stage';
var mobxSet = src["mobx"].set,
  isObservableArray = src["mobx"].isObservableArray;
var UNSET = Symbol.for('unset');
var prop_Prop = /*#__PURE__*/function () {
  function Prop(parent) {
    var _this = this;
    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : UNSET;
    var key = arguments.length > 2 ? arguments[2] : undefined;
    var spread = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
    _classCallCheck(this, Prop);
    this.parent = void 0;
    this.isProp = true;
    this.owner = void 0;
    /**
     * 键值
     */
    this.key = void 0;
    /**
     * 扩展值
     */
    this.spread = void 0;
    this.props = void 0;
    this.options = void 0;
    this.id = Object(utils_src["ib" /* uniqueId */])('prop$');
    this._type = 'unset';
    this._value = UNSET;
    this._code = null;
    this._slotNode = void 0;
    this._items = null;
    /**
     * 作为一层缓存机制，主要是复用部分已存在的 Prop，保持响应式关系，比如：
     * 当前 Prop#_value 值为 { a: 1 }，当调用 setValue({ a: 2 }) 时，所有原来的子 Prop 均被销毁，
     * 导致假如外部有 mobx reaction（常见于 observer），此时响应式链路会被打断，
     * 因为 reaction 监听的是原 Prop(a) 的 _value，而不是新 Prop(a) 的 _value。
     */
    this._maps = null;
    this.purged = false;
    this.emitChange = function (_ref) {
      var _this$owner$document, _this$owner, _this$owner$emitPropC;
      var oldValue = _ref.oldValue;
      var editor = (_this$owner$document = _this.owner.document) === null || _this$owner$document === void 0 ? void 0 : _this$owner$document.designer.editor;
      var propsInfo = {
        key: _this.key,
        prop: _this,
        oldValue: oldValue,
        newValue: _this.type === 'unset' ? undefined : _this._value
      };
      editor === null || editor === void 0 ? void 0 : editor.eventBus.emit(types_src["e" /* GlobalEvent */].Node.Prop.InnerChange, _objectSpread({
        node: _this.owner
      }, propsInfo));
      (_this$owner = _this.owner) === null || _this$owner === void 0 ? void 0 : (_this$owner$emitPropC = _this$owner.emitPropChange) === null || _this$owner$emitPropC === void 0 ? void 0 : _this$owner$emitPropC.call(_this$owner, propsInfo);
    };
    this.parent = parent;
    Object(src["makeObservable"])(this);
    this.owner = parent.owner;
    this.props = parent.props;
    this.key = key;
    this.spread = spread;
    this.options = options;
    if (value !== UNSET) {
      this.setValue(value);
    }
    this.setupItems();
  }
  // TODO: 先用调用方式触发子 prop 的初始化，后续须重构
  return _createClass(Prop, [{
    key: "type",
    get:
    /**
     * 属性类型
     */
    function get() {
      return this._type;
    }
  }, {
    key: "value",
    get:
    /**
     * 属性值
     */
    function get() {
      return this.export(types_src["i" /* IPublicEnumTransformStage */].Serilize);
    }
  }, {
    key: "code",
    get:
    /**
     * 获得表达式值
     */
    function get() {
      if (Object(utils_src["J" /* isJSExpression */])(this.value)) {
        return this.value.value;
      }
      // todo: JSFunction ...
      if (this.type === 'slot') {
        return JSON.stringify(this._slotNode.export(types_src["i" /* IPublicEnumTransformStage */].Save));
      }
      return this._code != null ? this._code : JSON.stringify(this.value);
    }
    /**
     * 设置表达式值
     */,
    set: function set(code) {
      if (Object(utils_src["J" /* isJSExpression */])(this._value)) {
        this.setValue(_objectSpread(_objectSpread({}, this._value), {}, {
          value: code
        }));
        this._code = code;
        return;
      }
      try {
        var v = JSON.parse(code);
        this.setValue(v);
        this._code = code;
        return;
      } catch (e) {
        // ignore
      }
      this.setValue({
        type: 'JSExpression',
        value: code,
        mock: this._value
      });
      this._code = code;
    }
  }, {
    key: "slotNode",
    get: function get() {
      return this._slotNode || null;
    }
  }, {
    key: "items",
    get:
    /**
     * 构造 items 属性，同时构造 maps 属性
     */
    function get() {
      var _this2 = this;
      if (this._items) return this._items;
      return Object(src["runInAction"])(function () {
        var items = null;
        if (_this2._type === 'list') {
          var maps = new Map();
          var data = _this2._value;
          data.forEach(function (item, idx) {
            var _this2$_maps;
            items = items || [];
            var prop;
            if ((_this2$_maps = _this2._maps) !== null && _this2$_maps !== void 0 && _this2$_maps.has(idx.toString())) {
              prop = _this2._maps.get(idx.toString());
              prop.setValue(item);
            } else {
              prop = new Prop(_this2, item, idx);
            }
            maps.set(idx.toString(), prop);
            items.push(prop);
          });
          _this2._maps = maps;
        } else if (_this2._type === 'map') {
          var _data = _this2._value;
          var _maps = new Map();
          var keys = Object.keys(_data);
          for (var _i = 0, _keys = keys; _i < _keys.length; _i++) {
            var _this2$_maps2;
            var key = _keys[_i];
            var prop = void 0;
            if ((_this2$_maps2 = _this2._maps) !== null && _this2$_maps2 !== void 0 && _this2$_maps2.has(key)) {
              prop = _this2._maps.get(key);
              prop.setValue(_data[key]);
            } else {
              prop = new Prop(_this2, _data[key], key);
            }
            items = items || [];
            items.push(prop);
            _maps.set(key, prop);
          }
          _this2._maps = _maps;
        } else {
          items = null;
          _this2._maps = null;
        }
        _this2._items = items;
        return _this2._items;
      });
    }
  }, {
    key: "maps",
    get: function get() {
      if (!this.items) {
        return null;
      }
      return this._maps;
    }
  }, {
    key: "path",
    get: function get() {
      return (this.parent.path || []).concat(this.key);
    }
    /**
     * 元素个数
     */
  }, {
    key: "size",
    get: function get() {
      var _this$items;
      return ((_this$items = this.items) === null || _this$items === void 0 ? void 0 : _this$items.length) || 0;
    }
  }, {
    key: "setupItems",
    value: function setupItems() {
      return this.items;
    }
    /**
     * @see SettingTarget
     */
  }, {
    key: "getPropValue",
    value: function getPropValue(propName) {
      return this.get(propName).getValue();
    }
    /**
     * @see SettingTarget
     */
  }, {
    key: "setPropValue",
    value: function setPropValue(propName, value) {
      this.set(propName, value);
    }
    /**
     * @see SettingTarget
     */
  }, {
    key: "clearPropValue",
    value: function clearPropValue(propName) {
      var _this$get;
      (_this$get = this.get(propName, false)) === null || _this$get === void 0 ? void 0 : _this$get.unset();
    }
  }, {
    key: "export",
    value: function _export() {
      var stage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : types_src["i" /* IPublicEnumTransformStage */].Save;
      stage = Object(utils_src["l" /* compatStage */])(stage);
      var type = this._type;
      if (stage === types_src["i" /* IPublicEnumTransformStage */].Render && this.key === '___condition___') {
        // 在设计器里，所有组件默认需要展示，除非开启了 enableCondition 配置
        if ((src["engineConfig"] === null || src["engineConfig"] === void 0 ? void 0 : src["engineConfig"].get('enableCondition')) !== true) {
          return true;
        }
        return this._value;
      }
      if (type === 'unset') {
        return undefined;
      }
      if (type === 'literal' || type === 'expression') {
        return this._value;
      }
      if (type === 'slot') {
        var _this$_slotNode;
        var schema = ((_this$_slotNode = this._slotNode) === null || _this$_slotNode === void 0 ? void 0 : _this$_slotNode.export(stage)) || {};
        if (stage === types_src["i" /* IPublicEnumTransformStage */].Render) {
          return {
            type: 'JSSlot',
            params: schema.params,
            value: schema,
            id: schema.id
          };
        }
        return {
          type: 'JSSlot',
          params: schema.params,
          value: schema.children,
          title: schema.title,
          name: schema.name,
          id: schema.id
        };
      }
      if (type === 'map') {
        if (!this._items) {
          return this._value;
        }
        var maps;
        this.items.forEach(function (prop, key) {
          if (!prop.isUnset()) {
            var v = prop.export(stage);
            if (v != null) {
              maps = maps || {};
              maps[prop.key || key] = v;
            }
          }
        });
        return maps;
      }
      if (type === 'list') {
        if (!this._items) {
          return this._value;
        }
        return this.items.map(function (prop) {
          return prop === null || prop === void 0 ? void 0 : prop.export(stage);
        });
      }
    }
  }, {
    key: "getAsString",
    value: function getAsString() {
      if (this.type === 'literal') {
        return this._value ? String(this._value) : '';
      }
      return '';
    }
    /**
     * set value, val should be JSON Object
     */
  }, {
    key: "setValue",
    value: function setValue(val) {
      if (val === this._value) return;
      var oldValue = this._value;
      this._value = val;
      this._code = null;
      var t = prop_typeof(val);
      if (val == null) {
        // this._value = undefined;
        this._type = 'literal';
      } else if (t === 'string' || t === 'number' || t === 'boolean') {
        this._type = 'literal';
      } else if (Array.isArray(val)) {
        this._type = 'list';
      } else if (Object(utils_src["R" /* isPlainObject */])(val)) {
        if (Object(utils_src["L" /* isJSSlot */])(val)) {
          this.setAsSlot(val);
        } else if (Object(utils_src["J" /* isJSExpression */])(val)) {
          this._type = 'expression';
        } else {
          this._type = 'map';
        }
      } else /* istanbul ignore next */{
          this._type = 'expression';
          this._value = {
            type: 'JSExpression',
            value: valueToSource(val)
          };
        }
      this.dispose();
      // setValue 的时候，如果不重新建立 items，items 的 setValue 没有触发，会导致子项的响应式逻辑不能被触发
      this.setupItems();
      if (oldValue !== this._value) {
        this.emitChange({
          oldValue: oldValue
        });
      }
    }
  }, {
    key: "getValue",
    value: function getValue() {
      return this.export(types_src["i" /* IPublicEnumTransformStage */].Serilize);
    }
  }, {
    key: "dispose",
    value: function dispose() {
      var _this3 = this;
      var items = Object(src["untracked"])(function () {
        return _this3._items;
      });
      if (items) {
        items.forEach(function (prop) {
          return prop.purge();
        });
      }
      this._items = null;
      if (this._type !== 'slot' && this._slotNode) {
        this._slotNode.remove();
        this._slotNode = undefined;
      }
    }
  }, {
    key: "setAsSlot",
    value: function setAsSlot(data) {
      var _data$value;
      this._type = 'slot';
      var slotSchema;
      // 当 data.value 的结构为 { componentName: 'Slot' } 时，复用部分 slotSchema 数据
      if (Object(utils_src["R" /* isPlainObject */])(data.value) && Object(utils_src["Q" /* isNodeSchema */])(data.value) && ((_data$value = data.value) === null || _data$value === void 0 ? void 0 : _data$value.componentName) === 'Slot') {
        var _value$props, _value$props2, _value$props3;
        var value = data.value;
        slotSchema = {
          componentName: 'Slot',
          title: value.title || ((_value$props = value.props) === null || _value$props === void 0 ? void 0 : _value$props.slotTitle),
          id: value.id,
          name: value.name || ((_value$props2 = value.props) === null || _value$props2 === void 0 ? void 0 : _value$props2.slotName),
          params: value.params || ((_value$props3 = value.props) === null || _value$props3 === void 0 ? void 0 : _value$props3.slotParams),
          children: value.children
        };
      } else {
        slotSchema = {
          componentName: 'Slot',
          title: data.title,
          id: data.id,
          name: data.name,
          params: data.params,
          children: data.value
        };
      }
      if (this._slotNode) {
        this._slotNode.import(slotSchema);
      } else {
        var _owner$document;
        var owner = this.props.owner;
        this._slotNode = (_owner$document = owner.document) === null || _owner$document === void 0 ? void 0 : _owner$document.createNode(slotSchema);
        if (this._slotNode) {
          owner.addSlot(this._slotNode);
          this._slotNode.internalSetSlotFor(this);
        }
      }
    }
    /**
     * 取消设置值
     */
  }, {
    key: "unset",
    value: function unset() {
      if (this._type !== 'unset') {
        this._type = 'unset';
        this.emitChange({
          oldValue: this._value
        });
      }
    }
    /**
     * 是否未设置值
     */
  }, {
    key: "isUnset",
    value: function isUnset() {
      return this._type === 'unset';
    }
  }, {
    key: "isVirtual",
    value: function isVirtual() {
      return typeof this.key === 'string' && this.key.charAt(0) === '!';
    }
    /**
     * @returns  0: the same 1: maybe & like 2: not the same
     */
  }, {
    key: "compare",
    value: function compare(other) {
      if (!other || other.isUnset()) {
        return this.isUnset() ? 0 : 2;
      }
      if (other.type !== this.type) {
        return 2;
      }
      // list
      if (this.type === 'list') {
        return this.size === other.size ? 1 : 2;
      }
      if (this.type === 'map') {
        return 1;
      }
      // 'literal' | 'map' | 'expression' | 'slot'
      return this.code === other.code ? 0 : 2;
    }
    /**
     * 获取某个属性
     * @param createIfNone 当没有的时候，是否创建一个
     */
  }, {
    key: "get",
    value: function get(path) {
      var createIfNone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var type = this._type;
      if (type !== 'map' && type !== 'list' && type !== 'unset' && !createIfNone) {
        return null;
      }
      var maps = type === 'map' ? this.maps : null;
      var items = type === 'list' ? this.items : null;
      var entry = path;
      var nest = '';
      if (typeof path !== 'number') {
        var i = path.indexOf('.');
        if (i > 0) {
          nest = path.slice(i + 1);
          if (nest) {
            entry = path.slice(0, i);
          }
        }
      }
      var prop;
      if (type === 'list') {
        if (isValidArrayIndex(entry, this.size)) {
          prop = items[entry];
        }
      } else if (type === 'map') {
        prop = maps === null || maps === void 0 ? void 0 : maps.get(entry);
      }
      if (prop) {
        return nest ? prop.get(nest, createIfNone) : prop;
      }
      if (createIfNone) {
        prop = new Prop(this, UNSET, entry);
        this.set(entry, prop, true);
        if (nest) {
          return prop.get(nest, true);
        }
        return prop;
      }
      return null;
    }
    /**
     * 从父级移除本身
     */
  }, {
    key: "remove",
    value: function remove() {
      this.parent.delete(this);
      this.unset();
    }
    /**
     * 删除项
     */
  }, {
    key: "delete",
    value: function _delete(prop) {
      /* istanbul ignore else */
      if (this._items) {
        var i = this._items.indexOf(prop);
        if (i > -1) {
          this._items.splice(i, 1);
          prop.purge();
        }
        if (this._maps && prop.key) {
          this._maps.delete(String(prop.key));
        }
      }
    }
    /**
     * 删除 key
     */
  }, {
    key: "deleteKey",
    value: function deleteKey(key) {
      /* istanbul ignore else */
      if (this.maps) {
        var prop = this.maps.get(key);
        if (prop) {
          this.delete(prop);
        }
      }
    }
    /**
     * 添加值到列表
     *
     * @param force 强制
     */
  }, {
    key: "add",
    value: function add(value) {
      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var type = this._type;
      if (type !== 'list' && type !== 'unset' && !force) {
        return null;
      }
      if (type === 'unset' || force && type !== 'list') {
        this.setValue([]);
      }
      var prop = new Prop(this, value);
      this._items = this._items || [];
      this._items.push(prop);
      return prop;
    }
    /**
     * 设置值到字典
     *
     * @param force 强制
     */
  }, {
    key: "set",
    value: function set(key, value) {
      var force = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      var type = this._type;
      if (type !== 'map' && type !== 'list' && type !== 'unset' && !force) {
        return null;
      }
      if (type === 'unset' || force && type !== 'map') {
        if (isValidArrayIndex(key)) {
          if (type !== 'list') {
            this.setValue([]);
          }
        } else {
          this.setValue({});
        }
      }
      var prop = isProp(value) ? value : new Prop(this, value, key);
      var items = this._items || [];
      if (this.type === 'list') {
        if (!isValidArrayIndex(key)) {
          return null;
        }
        if (isObservableArray(items)) {
          mobxSet(items, key, prop);
        } else {
          items[key] = prop;
        }
        this._items = items;
      } else if (this.type === 'map') {
        var maps = this._maps || new Map();
        var orig = maps === null || maps === void 0 ? void 0 : maps.get(key);
        if (orig) {
          // replace
          var i = items.indexOf(orig);
          if (i > -1) {
            items.splice(i, 1, prop)[0].purge();
          }
          maps === null || maps === void 0 ? void 0 : maps.set(key, prop);
        } else {
          // push
          items.push(prop);
          this._items = items;
          maps === null || maps === void 0 ? void 0 : maps.set(key, prop);
        }
        this._maps = maps;
      } /* istanbul ignore next */else {
        return null;
      }
      return prop;
    }
    /**
     * 是否存在 key
     */
  }, {
    key: "has",
    value: function has(key) {
      if (this._type !== 'map') {
        return false;
      }
      if (this._maps) {
        return this._maps.has(key);
      }
      return Object(utils_src["v" /* hasOwnProperty */])(this._value, key);
    }
    /**
     * 回收销毁
     */
  }, {
    key: "purge",
    value: function purge() {
      if (this.purged) {
        return;
      }
      this.purged = true;
      if (this._items) {
        this._items.forEach(function (item) {
          return item.purge();
        });
      }
      this._items = null;
      this._maps = null;
      if (this._slotNode && this._slotNode.slotFor === this) {
        this._slotNode.remove();
        this._slotNode = undefined;
      }
    }
    /**
     * 迭代器
     */
  }, {
    key: Symbol.iterator,
    value: function value() {
      var index = 0;
      var items = this.items;
      var length = (items === null || items === void 0 ? void 0 : items.length) || 0;
      return {
        next: function next() {
          if (index < length) {
            return {
              value: items[index++],
              done: false
            };
          }
          return {
            value: undefined,
            done: true
          };
        }
      };
    }
    /**
     * 遍历
     */
  }, {
    key: "forEach",
    value: function forEach(fn) {
      var items = this.items;
      if (!items) {
        return;
      }
      var isMap = this._type === 'map';
      items.forEach(function (item, index) {
        return isMap ? fn(item, item.key) : fn(item, index);
      });
    }
    /**
     * 遍历
     */
  }, {
    key: "map",
    value: function map(fn) {
      var items = this.items;
      if (!items) {
        return null;
      }
      var isMap = this._type === 'map';
      return items.map(function (item, index) {
        return isMap ? fn(item, item.key) : fn(item, index);
      });
    }
  }, {
    key: "getProps",
    value: function getProps() {
      return this.props;
    }
  }, {
    key: "getNode",
    value: function getNode() {
      return this.owner;
    }
  }]);
}();
Object(tslib_es6["b" /* __decorate */])([src["obx"], Object(tslib_es6["d" /* __metadata */])("design:type", Object)], prop_Prop.prototype, "key", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"], Object(tslib_es6["d" /* __metadata */])("design:type", Boolean)], prop_Prop.prototype, "spread", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", String)], prop_Prop.prototype, "_type", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"], Object(tslib_es6["d" /* __metadata */])("design:type", Object)], prop_Prop.prototype, "_value", void 0);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], prop_Prop.prototype, "value", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", String), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [String])], prop_Prop.prototype, "code", null);
Object(tslib_es6["b" /* __decorate */])([src["obx"].shallow, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], prop_Prop.prototype, "_items", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"].shallow, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], prop_Prop.prototype, "_maps", void 0);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], prop_Prop.prototype, "maps", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", []), Object(tslib_es6["d" /* __metadata */])("design:returntype", void 0)], prop_Prop.prototype, "setupItems", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Object]), Object(tslib_es6["d" /* __metadata */])("design:returntype", Object)], prop_Prop.prototype, "getPropValue", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Object, Object]), Object(tslib_es6["d" /* __metadata */])("design:returntype", void 0)], prop_Prop.prototype, "setPropValue", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Object]), Object(tslib_es6["d" /* __metadata */])("design:returntype", void 0)], prop_Prop.prototype, "clearPropValue", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Object]), Object(tslib_es6["d" /* __metadata */])("design:returntype", void 0)], prop_Prop.prototype, "setValue", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", []), Object(tslib_es6["d" /* __metadata */])("design:returntype", void 0)], prop_Prop.prototype, "dispose", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Object]), Object(tslib_es6["d" /* __metadata */])("design:returntype", void 0)], prop_Prop.prototype, "setAsSlot", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", []), Object(tslib_es6["d" /* __metadata */])("design:returntype", void 0)], prop_Prop.prototype, "unset", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", []), Object(tslib_es6["d" /* __metadata */])("design:returntype", void 0)], prop_Prop.prototype, "isUnset", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Object, Object]), Object(tslib_es6["d" /* __metadata */])("design:returntype", Object)], prop_Prop.prototype, "get", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", []), Object(tslib_es6["d" /* __metadata */])("design:returntype", void 0)], prop_Prop.prototype, "remove", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Object]), Object(tslib_es6["d" /* __metadata */])("design:returntype", void 0)], prop_Prop.prototype, "delete", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [String]), Object(tslib_es6["d" /* __metadata */])("design:returntype", void 0)], prop_Prop.prototype, "deleteKey", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Object, Object]), Object(tslib_es6["d" /* __metadata */])("design:returntype", Object)], prop_Prop.prototype, "add", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Object, Object, Object]), Object(tslib_es6["d" /* __metadata */])("design:returntype", void 0)], prop_Prop.prototype, "set", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", []), Object(tslib_es6["d" /* __metadata */])("design:returntype", void 0)], prop_Prop.prototype, "purge", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Function]), Object(tslib_es6["d" /* __metadata */])("design:returntype", void 0)], prop_Prop.prototype, "forEach", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Function]), Object(tslib_es6["d" /* __metadata */])("design:returntype", Object)], prop_Prop.prototype, "map", null);
function isProp(obj) {
  return obj && obj.isProp;
}
function isValidArrayIndex(key) {
  var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;
  var n = parseFloat(String(key));
  return n >= 0 && Math.floor(n) === n && isFinite(n) && (limit < 0 || n < limit);
}
// CONCATENATED MODULE: ../designer/src/document/node/props/props.ts
function props_typeof(o) { "@babel/helpers - typeof"; return props_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, props_typeof(o); }
function props_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function props_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, props_toPropertyKey(o.key), o); } }
function props_createClass(e, r, t) { return r && props_defineProperties(e.prototype, r), t && props_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function props_toPropertyKey(t) { var i = props_toPrimitive(t, "string"); return "symbol" == props_typeof(i) ? i : i + ""; }
function props_toPrimitive(t, r) { if ("object" != props_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != props_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var props_a, props_b;





var EXTRA_KEY_PREFIX = '___';
function props_getConvertedExtraKey(key) {
  if (!key) {
    return '';
  }
  var _key = key;
  if (key.indexOf('.') > 0) {
    _key = key.split('.')[0];
  }
  return EXTRA_KEY_PREFIX + _key + EXTRA_KEY_PREFIX + key.slice(_key.length);
}
function props_getOriginalExtraKey(key) {
  return key.replace(new RegExp("".concat(EXTRA_KEY_PREFIX), 'g'), '');
}
var props_Props = /*#__PURE__*/function () {
  function Props(owner, value, extras) {
    var _this = this;
    props_classCallCheck(this, Props);
    this.id = Object(utils_src["ib" /* uniqueId */])('props');
    this.items = [];
    this.path = [];
    this.owner = void 0;
    this.type = 'map';
    this.purged = false;
    Object(src["makeObservable"])(this);
    this.owner = owner;
    if (Array.isArray(value)) {
      this.type = 'list';
      this.items = value.map(function (item, idx) {
        return new prop_Prop(_this, item.value, item.name || idx, item.spread);
      });
    } else if (value != null) {
      this.items = Object.keys(value).map(function (key) {
        return new prop_Prop(_this, value[key], key, false);
      });
    }
    if (extras) {
      Object.keys(extras).forEach(function (key) {
        _this.items.push(new prop_Prop(_this, extras[key], props_getConvertedExtraKey(key)));
      });
    }
  }
  return props_createClass(Props, [{
    key: "maps",
    get: function get() {
      var maps = new Map();
      if (this.items.length > 0) {
        this.items.forEach(function (prop) {
          if (prop.key) {
            maps.set(prop.key, prop);
          }
        });
      }
      return maps;
    }
  }, {
    key: "props",
    get: function get() {
      return this;
    }
  }, {
    key: "size",
    get:
    /**
     * 元素个数
     */
    function get() {
      return this.items.length;
    }
  }, {
    key: "import",
    value: function _import(value, extras) {
      var _this2 = this;
      var originItems = this.items;
      if (Array.isArray(value)) {
        this.type = 'list';
        this.items = value.map(function (item, idx) {
          return new prop_Prop(_this2, item.value, item.name || idx, item.spread);
        });
      } else if (value != null) {
        this.type = 'map';
        this.items = Object.keys(value).map(function (key) {
          return new prop_Prop(_this2, value[key], key);
        });
      } else {
        this.type = 'map';
        this.items = [];
      }
      if (extras) {
        Object.keys(extras).forEach(function (key) {
          _this2.items.push(new prop_Prop(_this2, extras[key], props_getConvertedExtraKey(key)));
        });
      }
      originItems.forEach(function (item) {
        return item.purge();
      });
    }
  }, {
    key: "merge",
    value: function merge(value, extras) {
      var _this3 = this;
      Object.keys(value).forEach(function (key) {
        _this3.query(key, true).setValue(value[key]);
        _this3.query(key, true).setupItems();
      });
      if (extras) {
        Object.keys(extras).forEach(function (key) {
          _this3.query(props_getConvertedExtraKey(key), true).setValue(extras[key]);
          _this3.query(props_getConvertedExtraKey(key), true).setupItems();
        });
      }
    }
  }, {
    key: "export",
    value: function _export() {
      var stage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : types_src["i" /* IPublicEnumTransformStage */].Save;
      stage = Object(utils_src["l" /* compatStage */])(stage);
      if (this.items.length < 1) {
        return {};
      }
      var allProps = {};
      var props = {};
      var extras = {};
      if (this.type === 'list') {
        props = [];
        this.items.forEach(function (item) {
          var value = item.export(stage);
          var name = item.key;
          if (name && typeof name === 'string' && name.startsWith(EXTRA_KEY_PREFIX)) {
            name = props_getOriginalExtraKey(name);
            extras[name] = value;
          } else {
            props.push({
              spread: item.spread,
              name: name,
              value: value
            });
          }
        });
      } else {
        this.items.forEach(function (item) {
          var name = item.key;
          if (name == null || item.isUnset() || item.isVirtual()) return;
          var value = item.export(stage);
          if (value != null) {
            allProps[name] = value;
          }
        });
        // compatible vision
        var transformedProps = this.transformToStatic(allProps);
        Object.keys(transformedProps).forEach(function (name) {
          var value = transformedProps[name];
          if (typeof name === 'string' && name.startsWith(EXTRA_KEY_PREFIX)) {
            name = props_getOriginalExtraKey(name);
            extras[name] = value;
          } else {
            props[name] = value;
          }
        });
      }
      return {
        props: props,
        extras: extras
      };
    }
    /**
     * @deprecated
     */
    /* istanbul ignore next */
  }, {
    key: "transformToStatic",
    value: function transformToStatic(props) {
      var _this$owner$component, _this$owner$component2, _this$owner$component3;
      var transducers = (_this$owner$component = this.owner.componentMeta) === null || _this$owner$component === void 0 ? void 0 : (_this$owner$component2 = _this$owner$component.prototype) === null || _this$owner$component2 === void 0 ? void 0 : (_this$owner$component3 = _this$owner$component2.options) === null || _this$owner$component3 === void 0 ? void 0 : _this$owner$component3.transducers;
      if (!transducers) {
        return props;
      }
      if (!Array.isArray(transducers)) {
        transducers = [transducers];
      }
      props = transducers.reduce(function (xprops, transducer) {
        if (transducer && typeof transducer.toStatic === 'function') {
          return transducer.toStatic(xprops);
        }
        return xprops;
      }, props);
      return props;
    }
    /**
     * 根据 path 路径查询属性
     *
     * @param createIfNone 当没有的时候，是否创建一个
     */
  }, {
    key: "query",
    value: function query(path) {
      var createIfNone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      return this.get(path, createIfNone);
    }
    /**
     * 获取某个属性，如果不存在，临时获取一个待写入
     * @param createIfNone 当没有的时候，是否创建一个
     */
  }, {
    key: "get",
    value: function get(path) {
      var createIfNone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var entry = path;
      var nest = '';
      var i = path.indexOf('.');
      if (i > 0) {
        nest = path.slice(i + 1);
        if (nest) {
          entry = path.slice(0, i);
        }
      }
      var prop = this.maps.get(entry);
      if (!prop && createIfNone) {
        prop = new prop_Prop(this, UNSET, entry);
        this.items.push(prop);
      }
      if (prop) {
        return nest ? prop.get(nest, createIfNone) : prop;
      }
      return null;
    }
    /**
     * 删除项
     */
  }, {
    key: "delete",
    value: function _delete(prop) {
      var i = this.items.indexOf(prop);
      if (i > -1) {
        this.items.splice(i, 1);
        prop.purge();
      }
    }
    /**
     * 删除 key
     */
  }, {
    key: "deleteKey",
    value: function deleteKey(key) {
      var _this4 = this;
      this.items = this.items.filter(function (item, i) {
        if (item.key === key) {
          item.purge();
          _this4.items.splice(i, 1);
          return false;
        }
        return true;
      });
    }
    /**
     * 添加值
     */
  }, {
    key: "add",
    value: function add(value, key) {
      var spread = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
      var prop = new prop_Prop(this, value, key, spread, options);
      this.items.push(prop);
      return prop;
    }
    /**
     * 是否存在 key
     */
  }, {
    key: "has",
    value: function has(key) {
      return this.maps.has(key);
    }
    /**
     * 迭代器
     */
  }, {
    key: Symbol.iterator,
    value: function value() {
      var index = 0;
      var items = this.items;
      var length = items.length || 0;
      return {
        next: function next() {
          if (index < length) {
            return {
              value: items[index++],
              done: false
            };
          }
          return {
            value: undefined,
            done: true
          };
        }
      };
    }
    /**
     * 遍历
     */
  }, {
    key: "forEach",
    value: function forEach(fn) {
      this.items.forEach(function (item) {
        return fn(item, item.key);
      });
    }
    /**
     * 遍历
     */
  }, {
    key: "map",
    value: function map(fn) {
      return this.items.map(function (item) {
        return fn(item, item.key);
      });
    }
  }, {
    key: "filter",
    value: function filter(fn) {
      return this.items.filter(function (item) {
        return fn(item, item.key);
      });
    }
    /**
     * 回收销毁
     */
  }, {
    key: "purge",
    value: function purge() {
      if (this.purged) {
        return;
      }
      this.purged = true;
      this.items.forEach(function (item) {
        return item.purge();
      });
    }
    /**
     * 获取某个属性, 如果不存在，临时获取一个待写入
     * @param createIfNone 当没有的时候，是否创建一个
     */
  }, {
    key: "getProp",
    value: function getProp(path) {
      var createIfNone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      return this.query(path, createIfNone) || null;
    }
    /**
     * 获取单个属性值
     */
  }, {
    key: "getPropValue",
    value: function getPropValue(path) {
      var _this$getProp;
      return (_this$getProp = this.getProp(path, false)) === null || _this$getProp === void 0 ? void 0 : _this$getProp.value;
    }
    /**
     * 设置单个属性值
     */
  }, {
    key: "setPropValue",
    value: function setPropValue(path, value) {
      this.getProp(path, true).setValue(value);
    }
    /**
     * 获取 props 对应的 node
     */
  }, {
    key: "getNode",
    value: function getNode() {
      return this.owner;
    }
    /**
     * @deprecated
     * 获取 props 对应的 node
     */
  }, {
    key: "toData",
    value: function toData() {
      var _this$export;
      return (_this$export = this.export()) === null || _this$export === void 0 ? void 0 : _this$export.props;
    }
  }]);
}();
Object(tslib_es6["b" /* __decorate */])([src["obx"].shallow, Object(tslib_es6["d" /* __metadata */])("design:type", Array)], props_Props.prototype, "items", void 0);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", typeof (props_a = typeof Map !== "undefined" && Map) === "function" ? props_a : Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], props_Props.prototype, "maps", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], props_Props.prototype, "size", null);
Object(tslib_es6["b" /* __decorate */])([src["obx"], Object(tslib_es6["d" /* __metadata */])("design:type", String)], props_Props.prototype, "type", void 0);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Object, Object]), Object(tslib_es6["d" /* __metadata */])("design:returntype", void 0)], props_Props.prototype, "import", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Object, Object]), Object(tslib_es6["d" /* __metadata */])("design:returntype", void 0)], props_Props.prototype, "merge", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [String, Object]), Object(tslib_es6["d" /* __metadata */])("design:returntype", Object)], props_Props.prototype, "query", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [String, Object]), Object(tslib_es6["d" /* __metadata */])("design:returntype", Object)], props_Props.prototype, "get", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Object]), Object(tslib_es6["d" /* __metadata */])("design:returntype", void 0)], props_Props.prototype, "delete", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [String]), Object(tslib_es6["d" /* __metadata */])("design:returntype", void 0)], props_Props.prototype, "deleteKey", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Object, Object, Object, Object]), Object(tslib_es6["d" /* __metadata */])("design:returntype", Object)], props_Props.prototype, "add", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Function]), Object(tslib_es6["d" /* __metadata */])("design:returntype", void 0)], props_Props.prototype, "forEach", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Function]), Object(tslib_es6["d" /* __metadata */])("design:returntype", Object)], props_Props.prototype, "map", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Function]), Object(tslib_es6["d" /* __metadata */])("design:returntype", void 0)], props_Props.prototype, "filter", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", []), Object(tslib_es6["d" /* __metadata */])("design:returntype", void 0)], props_Props.prototype, "purge", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [String, Object]), Object(tslib_es6["d" /* __metadata */])("design:returntype", Object)], props_Props.prototype, "getProp", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [String]), Object(tslib_es6["d" /* __metadata */])("design:returntype", Object)], props_Props.prototype, "getPropValue", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [String, Object]), Object(tslib_es6["d" /* __metadata */])("design:returntype", void 0)], props_Props.prototype, "setPropValue", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", []), Object(tslib_es6["d" /* __metadata */])("design:returntype", void 0)], props_Props.prototype, "toData", null);
// CONCATENATED MODULE: ../designer/src/utils/tree.ts
function foreachReverse(arr, action, getter) {
  var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
  for (var i = arr.length - 1; i >= 0; i--) {
    action.call(context, getter(arr, i));
  }
}
// CONCATENATED MODULE: ../designer/src/document/node/node-children.ts
function node_children_typeof(o) { "@babel/helpers - typeof"; return node_children_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, node_children_typeof(o); }
function node_children_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function node_children_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? node_children_ownKeys(Object(t), !0).forEach(function (r) { node_children_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : node_children_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function node_children_defineProperty(e, r, t) { return (r = node_children_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function node_children_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function node_children_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, node_children_toPropertyKey(o.key), o); } }
function node_children_createClass(e, r, t) { return r && node_children_defineProperties(e.prototype, r), t && node_children_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function node_children_toPropertyKey(t) { var i = node_children_toPrimitive(t, "string"); return "symbol" == node_children_typeof(i) ? i : i + ""; }
function node_children_toPrimitive(t, r) { if ("object" != node_children_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != node_children_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }





var node_children_NodeChildren = /*#__PURE__*/function () {
  function NodeChildren(owner, data) {
    var _this = this;
    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    node_children_classCallCheck(this, NodeChildren);
    this.owner = void 0;
    this.children = void 0;
    this.emitter = Object(src["createModuleEventBus"])('NodeChildren');
    this.purged = false;
    this.owner = owner;
    Object(src["makeObservable"])(this);
    this.children = (Array.isArray(data) ? data : [data]).filter(function (child) {
      return !!child;
    }).map(function (child) {
      var _this$owner$document;
      return (_this$owner$document = _this.owner.document) === null || _this$owner$document === void 0 ? void 0 : _this$owner$document.createNode(child, options.checkId);
    });
  }
  return node_children_createClass(NodeChildren, [{
    key: "size",
    get:
    /**
     * 元素个数
     */
    function get() {
      return this.children.length;
    }
  }, {
    key: "isEmptyNode",
    get: function get() {
      return this.size < 1;
    }
  }, {
    key: "notEmptyNode",
    get: function get() {
      return this.size > 0;
    }
  }, {
    key: "length",
    get: function get() {
      return this.children.length;
    }
  }, {
    key: Symbol.toStringTag,
    get: function get() {
      // 保证向前兼容性
      return 'Array';
    }
  }, {
    key: "internalInitParent",
    value: function internalInitParent() {
      var _this2 = this;
      this.children.forEach(function (child) {
        return child.internalSetParent(_this2.owner);
      });
    }
    /**
     * 导出 schema
     */
  }, {
    key: "export",
    value: function _export() {
      var stage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : types_src["i" /* IPublicEnumTransformStage */].Save;
      stage = Object(utils_src["l" /* compatStage */])(stage);
      return this.children.map(function (node) {
        var data = node.export(stage);
        if (node.isLeafNode && types_src["i" /* IPublicEnumTransformStage */].Save === stage) {
          // FIXME: filter empty
          return data.children;
        }
        return data;
      });
    }
  }, {
    key: "import",
    value: function _import(data) {
      var checkId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      data = (data ? Array.isArray(data) ? data : [data] : []).filter(function (d) {
        return !!d;
      });
      var originChildren = this.children.slice();
      this.children.forEach(function (child) {
        return child.internalSetParent(null);
      });
      var children = new Array(data.length);
      for (var i = 0, l = data.length; i < l; i++) {
        var child = originChildren[i];
        var item = data[i];
        var node = void 0;
        if (Object(utils_src["Q" /* isNodeSchema */])(item) && !checkId && child && child.componentName === item.componentName) {
          node = child;
          node.import(item);
        } else {
          var _this$owner$document2;
          node = (_this$owner$document2 = this.owner.document) === null || _this$owner$document2 === void 0 ? void 0 : _this$owner$document2.createNode(item, checkId);
        }
        children[i] = node;
      }
      this.children = children;
      this.internalInitParent();
      if (!Object(utils_src["fb" /* shallowEqual */])(children, originChildren)) {
        this.emitter.emit('change');
      }
    }
    /**
     * @deprecated
     * @param nodes
     */
  }, {
    key: "concat",
    value: function concat(nodes) {
      return this.children.concat(nodes);
    }
    /**
     *
     */
  }, {
    key: "isEmpty",
    value: function isEmpty() {
      return this.isEmptyNode;
    }
  }, {
    key: "notEmpty",
    value: function notEmpty() {
      return this.notEmptyNode;
    }
    /**
     * 回收销毁
     */
  }, {
    key: "purge",
    value: function purge() {
      var useMutator = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      if (this.purged) {
        return;
      }
      this.purged = true;
      this.children.forEach(function (child) {
        child.purge(useMutator);
      });
    }
  }, {
    key: "unlinkChild",
    value: function unlinkChild(node) {
      var i = this.children.map(function (d) {
        return d.id;
      }).indexOf(node.id);
      if (i < 0) {
        return false;
      }
      this.children.splice(i, 1);
      this.emitter.emit('change', {
        type: 'unlink',
        node: node
      });
    }
    /**
     * 删除一个节点
     */
  }, {
    key: "delete",
    value: function _delete(node) {
      return this.internalDelete(node);
    }
    /**
     * 删除一个节点
     */
  }, {
    key: "internalDelete",
    value: function internalDelete(node) {
      var _node$document;
      var purge = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var useMutator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
      node.internalPurgeStart();
      if (node.isParentalNode) {
        foreachReverse(node.children, function (subNode) {
          subNode.remove(useMutator, purge, options);
        }, function (iterable, idx) {
          return iterable.get(idx);
        });
        foreachReverse(node.slots, function (slotNode) {
          slotNode.remove(useMutator, purge);
        }, function (iterable, idx) {
          return iterable[idx];
        });
      }
      // 需要在从 children 中删除 node 前记录下 index，internalSetParent 中会执行删除 (unlink) 操作
      var i = this.children.map(function (d) {
        return d.id;
      }).indexOf(node.id);
      if (purge) {
        // should set parent null
        node.internalSetParent(null, useMutator);
        try {
          node.purge();
        } catch (err) {
          console.error(err);
        }
      }
      var document = node.document;
      /* istanbul ignore next */
      var editor = (_node$document = node.document) === null || _node$document === void 0 ? void 0 : _node$document.designer.editor;
      editor === null || editor === void 0 ? void 0 : editor.eventBus.emit('node.remove', {
        node: node,
        index: i
      });
      document === null || document === void 0 ? void 0 : document.unlinkNode(node);
      document === null || document === void 0 ? void 0 : document.selection.remove(node.id);
      document === null || document === void 0 ? void 0 : document.destroyNode(node);
      this.emitter.emit('change', {
        type: 'delete',
        node: node
      });
      if (useMutator) {
        this.reportModified(node, this.owner, {
          type: 'remove',
          propagated: false,
          isSubDeleting: this.owner.isPurging,
          removeIndex: i,
          removeNode: node
        });
      }
      // purge 为 true 时，已在 internalSetParent 中删除了子节点
      if (i > -1 && !purge) {
        this.children.splice(i, 1);
      }
      return false;
    }
  }, {
    key: "insert",
    value: function insert(node, at) {
      this.internalInsert(node, at, true);
    }
    /**
     * 插入一个节点，返回新长度
     */
  }, {
    key: "internalInsert",
    value: function internalInsert(node, at) {
      var _node$document3;
      var useMutator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
      var children = this.children;
      var index = at == null || at === -1 ? children.length : at;
      var i = children.map(function (d) {
        return d.id;
      }).indexOf(node.id);
      if (node.parent) {
        var _node$document2;
        var _editor = (_node$document2 = node.document) === null || _node$document2 === void 0 ? void 0 : _node$document2.designer.editor;
        _editor === null || _editor === void 0 ? void 0 : _editor.eventBus.emit('node.remove.topLevel', {
          node: node,
          index: node.index
        });
      }
      if (i < 0) {
        if (index < children.length) {
          children.splice(index, 0, node);
        } else {
          children.push(node);
        }
        node.internalSetParent(this.owner, useMutator);
      } else {
        if (index > i) {
          index -= 1;
        }
        if (index === i) {
          return;
        }
        children.splice(i, 1);
        children.splice(index, 0, node);
      }
      this.emitter.emit('change', {
        type: 'insert',
        node: node
      });
      this.emitter.emit('insert', node);
      /* istanbul ignore next */
      var editor = (_node$document3 = node.document) === null || _node$document3 === void 0 ? void 0 : _node$document3.designer.editor;
      editor === null || editor === void 0 ? void 0 : editor.eventBus.emit('node.add', {
        node: node
      });
      if (useMutator) {
        this.reportModified(node, this.owner, {
          type: 'insert'
        });
      }
      // check condition group
      if (node.conditionGroup) {
        if (!(
        // just sort at condition group
        node.prevSibling && node.prevSibling.conditionGroup === node.conditionGroup || node.nextSibling && node.nextSibling.conditionGroup === node.conditionGroup)) {
          node.setConditionGroup(null);
        }
      }
      if (node.prevSibling && node.nextSibling) {
        var conditionGroup = node.prevSibling.conditionGroup;
        // insert at condition group
        if (conditionGroup && conditionGroup === node.nextSibling.conditionGroup) {
          node.setConditionGroup(conditionGroup);
        }
      }
    }
    /**
     * 取得节点索引编号
     */
  }, {
    key: "indexOf",
    value: function indexOf(node) {
      return this.children.map(function (d) {
        return d.id;
      }).indexOf(node.id);
    }
    /**
     *
     */
  }, {
    key: "splice",
    value: function splice(start, deleteCount, node) {
      if (node) {
        return this.children.splice(start, deleteCount, node);
      }
      return this.children.splice(start, deleteCount);
    }
    /**
     * 根据索引获得节点
     */
  }, {
    key: "get",
    value: function get(index) {
      return this.children.length > index ? this.children[index] : null;
    }
    /**
     * 是否存在节点
     */
  }, {
    key: "has",
    value: function has(node) {
      return this.indexOf(node) > -1;
    }
    /**
     * 迭代器
     */
  }, {
    key: Symbol.iterator,
    value: function value() {
      var index = 0;
      var children = this.children;
      var length = children.length || 0;
      return {
        next: function next() {
          if (index < length) {
            return {
              value: children[index++],
              done: false
            };
          }
          return {
            value: undefined,
            done: true
          };
        }
      };
    }
    /**
     * 遍历
     */
  }, {
    key: "forEach",
    value: function forEach(fn) {
      this.children.forEach(function (child, index) {
        return fn(child, index);
      });
    }
    /**
     * 遍历
     */
  }, {
    key: "map",
    value: function map(fn) {
      return this.children.map(function (child, index) {
        return fn(child, index);
      });
    }
  }, {
    key: "every",
    value: function every(fn) {
      return this.children.every(function (child, index) {
        return fn(child, index);
      });
    }
  }, {
    key: "some",
    value: function some(fn) {
      return this.children.some(function (child, index) {
        return fn(child, index);
      });
    }
  }, {
    key: "filter",
    value: function filter(fn) {
      return this.children.filter(fn);
    }
  }, {
    key: "find",
    value: function find(fn) {
      return this.children.find(fn);
    }
  }, {
    key: "reduce",
    value: function reduce(fn, initialValue) {
      return this.children.reduce(fn, initialValue);
    }
  }, {
    key: "reverse",
    value: function reverse() {
      return this.children.reverse();
    }
  }, {
    key: "mergeChildren",
    value: function mergeChildren(remover, adder, sorter) {
      var _this3 = this;
      var changed = false;
      if (remover) {
        var willRemove = this.children.filter(remover);
        if (willRemove.length > 0) {
          willRemove.forEach(function (node) {
            var i = _this3.children.map(function (d) {
              return d.id;
            }).indexOf(node.id);
            if (i > -1) {
              _this3.children.splice(i, 1);
              node.remove(false);
            }
          });
          changed = true;
        }
      }
      if (adder) {
        var items = adder(this.children);
        if (items && items.length > 0) {
          items.forEach(function (child) {
            var _this3$owner$document, _node$document4;
            var node = (_this3$owner$document = _this3.owner.document) === null || _this3$owner$document === void 0 ? void 0 : _this3$owner$document.createNode(child);
            _this3.children.push(node);
            node.internalSetParent(_this3.owner);
            /* istanbul ignore next */
            var editor = (_node$document4 = node.document) === null || _node$document4 === void 0 ? void 0 : _node$document4.designer.editor;
            editor === null || editor === void 0 ? void 0 : editor.eventBus.emit('node.add', {
              node: node
            });
          });
          changed = true;
        }
      }
      if (sorter) {
        this.children = this.children.sort(sorter);
        changed = true;
      }
      if (changed) {
        this.emitter.emit('change');
      }
    }
  }, {
    key: "onChange",
    value: function onChange(fn) {
      var _this4 = this;
      this.emitter.on('change', fn);
      return function () {
        _this4.emitter.removeListener('change', fn);
      };
    }
  }, {
    key: "onInsert",
    value: function onInsert(fn) {
      var _this5 = this;
      this.emitter.on('insert', fn);
      return function () {
        _this5.emitter.removeListener('insert', fn);
      };
    }
  }, {
    key: "reportModified",
    value: function reportModified(node, owner) {
      var _owner$componentMeta;
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      if (!node) {
        return;
      }
      if (node.isRootNode) {
        return;
      }
      var callbacks = (_owner$componentMeta = owner.componentMeta) === null || _owner$componentMeta === void 0 ? void 0 : _owner$componentMeta.advanced.callbacks;
      if (callbacks !== null && callbacks !== void 0 && callbacks.onSubtreeModified) {
        try {
          callbacks === null || callbacks === void 0 ? void 0 : callbacks.onSubtreeModified.call(node.internalToShellNode(), owner.internalToShellNode(), options);
        } catch (e) {
          console.error('error when execute advanced.callbacks.onSubtreeModified', e);
        }
      }
      if (owner.parent && !owner.parent.isRootNode) {
        this.reportModified(node, owner.parent, node_children_objectSpread(node_children_objectSpread({}, options), {}, {
          propagated: true
        }));
      }
    }
  }]);
}();
Object(tslib_es6["b" /* __decorate */])([src["obx"].shallow, Object(tslib_es6["d" /* __metadata */])("design:type", Array)], node_children_NodeChildren.prototype, "children", void 0);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Number), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], node_children_NodeChildren.prototype, "size", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Number), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], node_children_NodeChildren.prototype, "length", null);
// EXTERNAL MODULE: ../designer/src/locale/en-US.json
var en_US = __webpack_require__(60);

// EXTERNAL MODULE: ../designer/src/locale/zh-CN.json
var zh_CN = __webpack_require__(61);

// CONCATENATED MODULE: ../designer/src/locale/index.ts



var _createIntl = Object(src["createIntl"])({
    'en-US': en_US,
    'zh-CN': zh_CN
  }),
  locale_intl = _createIntl.intl,
  locale_intlNode = _createIntl.intlNode,
  locale_getLocale = _createIntl.getLocale,
  setLocale = _createIntl.setLocale;

// CONCATENATED MODULE: ../designer/src/document/node/exclusive-group.ts
function exclusive_group_typeof(o) { "@babel/helpers - typeof"; return exclusive_group_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, exclusive_group_typeof(o); }
function exclusive_group_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function exclusive_group_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, exclusive_group_toPropertyKey(o.key), o); } }
function exclusive_group_createClass(e, r, t) { return r && exclusive_group_defineProperties(e.prototype, r), t && exclusive_group_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function exclusive_group_toPropertyKey(t) { var i = exclusive_group_toPrimitive(t, "string"); return "symbol" == exclusive_group_typeof(i) ? i : i + ""; }
function exclusive_group_toPrimitive(t, r) { if ("object" != exclusive_group_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != exclusive_group_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }




// modals assoc x-hide value, initial: check is Modal, yes will put it in modals, cross levels
// if-else-if assoc conditionGroup value, should be the same level,
// and siblings, need renderEngine support
var exclusive_group_ExclusiveGroup = /*#__PURE__*/function () {
  function ExclusiveGroup(name, title) {
    exclusive_group_classCallCheck(this, ExclusiveGroup);
    this.name = void 0;
    this.isExclusiveGroup = true;
    this.id = Object(utils_src["ib" /* uniqueId */])('exclusive');
    this.title = void 0;
    this.children = [];
    this.visibleIndex = 0;
    this.name = name;
    Object(src["makeObservable"])(this);
    this.title = title || {
      type: 'i18n',
      intl: locale_intl('Condition Group')
    };
  }
  return exclusive_group_createClass(ExclusiveGroup, [{
    key: "document",
    get: function get() {
      return this.visibleNode.document;
    }
  }, {
    key: "zLevel",
    get: function get() {
      return this.visibleNode.zLevel;
    }
  }, {
    key: "length",
    get: function get() {
      return this.children.length;
    }
  }, {
    key: "visibleNode",
    get: function get() {
      return this.children[this.visibleIndex];
    }
  }, {
    key: "firstNode",
    get: function get() {
      return this.children[0];
    }
  }, {
    key: "index",
    get: function get() {
      return this.firstNode.index;
    }
  }, {
    key: "add",
    value: function add(node) {
      var _node$nextSibling$con;
      if (node.nextSibling && ((_node$nextSibling$con = node.nextSibling.conditionGroup) === null || _node$nextSibling$con === void 0 ? void 0 : _node$nextSibling$con.id) === this.id) {
        var i = this.children.indexOf(node.nextSibling);
        this.children.splice(i, 0, node);
      } else {
        this.children.push(node);
      }
    }
  }, {
    key: "remove",
    value: function remove(node) {
      var i = this.children.indexOf(node);
      if (i > -1) {
        this.children.splice(i, 1);
        if (this.visibleIndex > i) {
          this.visibleIndex -= 1;
        } else if (this.visibleIndex >= this.children.length) {
          this.visibleIndex = this.children.length - 1;
        }
      }
    }
  }, {
    key: "setVisible",
    value: function setVisible(node) {
      var i = this.children.indexOf(node);
      if (i > -1) {
        this.visibleIndex = i;
      }
    }
  }, {
    key: "isVisible",
    value: function isVisible(node) {
      var i = this.children.indexOf(node);
      return i === this.visibleIndex;
    }
  }]);
}();
Object(tslib_es6["b" /* __decorate */])([src["obx"].shallow, Object(tslib_es6["d" /* __metadata */])("design:type", Array)], exclusive_group_ExclusiveGroup.prototype, "children", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"], Object(tslib_es6["d" /* __metadata */])("design:type", Object)], exclusive_group_ExclusiveGroup.prototype, "visibleIndex", void 0);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], exclusive_group_ExclusiveGroup.prototype, "document", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], exclusive_group_ExclusiveGroup.prototype, "zLevel", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], exclusive_group_ExclusiveGroup.prototype, "length", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], exclusive_group_ExclusiveGroup.prototype, "visibleNode", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], exclusive_group_ExclusiveGroup.prototype, "firstNode", null);
function isExclusiveGroup(obj) {
  return obj && obj.isExclusiveGroup;
}
// CONCATENATED MODULE: ../designer/src/utils/slot.ts
function includeSlot(node, slotName) {
  var _node$slots = node.slots,
    slots = _node$slots === void 0 ? [] : _node$slots;
  return slots.some(function (slot) {
    var _slot$getExtraProp;
    return slotName && slotName === (slot === null || slot === void 0 ? void 0 : (_slot$getExtraProp = slot.getExtraProp('name')) === null || _slot$getExtraProp === void 0 ? void 0 : _slot$getExtraProp.getAsString());
  });
}
function removeSlot(node, slotName) {
  var _node$slots2 = node.slots,
    slots = _node$slots2 === void 0 ? [] : _node$slots2;
  return slots.some(function (slot, idx) {
    var _slot$getExtraProp2;
    if (slotName && slotName === (slot === null || slot === void 0 ? void 0 : (_slot$getExtraProp2 = slot.getExtraProp('name')) === null || _slot$getExtraProp2 === void 0 ? void 0 : _slot$getExtraProp2.getAsString())) {
      slot.remove();
      slots.splice(idx, 1);
      return true;
    }
    return false;
  });
}
// CONCATENATED MODULE: ../designer/src/types/index.ts

var types_utils = {
  isNodeSchema: utils_src["Q" /* isNodeSchema */],
  isFormEvent: utils_src["H" /* isFormEvent */],
  compatibleLegaoSchema: utils_src["m" /* compatibleLegaoSchema */],
  getNodeSchemaById: utils_src["u" /* getNodeSchemaById */]
};
var EDITOR_EVENT;
(function (EDITOR_EVENT) {
  EDITOR_EVENT["NODE_CHILDREN_CHANGE"] = "node.children.change";
  EDITOR_EVENT["NODE_VISIBLE_CHANGE"] = "node.visible.change";
})(EDITOR_EVENT || (EDITOR_EVENT = {}));
// CONCATENATED MODULE: ../designer/src/document/node/node.ts
var _excluded = ["componentName", "id", "children", "props"],
  _excluded2 = ["componentName", "id", "children", "props"];
function node_typeof(o) { "@babel/helpers - typeof"; return node_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, node_typeof(o); }
function node_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function node_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? node_ownKeys(Object(t), !0).forEach(function (r) { node_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : node_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function node_defineProperty(e, r, t) { return (r = node_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _readOnlyError(r) { throw new TypeError('"' + r + '" is read-only'); }
function _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }
function _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }
function node_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function node_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, node_toPropertyKey(o.key), o); } }
function node_createClass(e, r, t) { return r && node_defineProperties(e.prototype, r), t && node_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function node_toPropertyKey(t) { var i = node_toPrimitive(t, "string"); return "symbol" == node_typeof(i) ? i : i + ""; }
function node_toPrimitive(t, r) { if ("object" != node_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != node_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var node_a, node_b, _c;










/**
 * 基础节点
 *
 * [Node Properties]
 *  componentName: Page/Block/Component
 *  props
 *  children
 *
 * [Directives]
 *  loop
 *  loopArgs
 *  condition
 *  ------- addition support -----
 *  conditionGroup use for condition, for exclusive
 *  title          display on outline
 *  ignored        ignore this node will not publish to render, but will store
 *  isLocked       can not select/hover/ item on canvas and outline
 *  hidden         not visible on canvas
 *  slotArgs       like loopArgs, for slot node
 *
 * 根容器节点
 *
 * [Node Properties]
 *  componentName: Page/Block/Component
 *  props
 *  children
 *
 * [Root Container Extra Properties]
 *  fileName
 *  meta
 *  state
 *  defaultProps
 *  dataSource
 *  lifeCycles
 *  methods
 *  css
 *
 * [Directives **not used**]
 *  loop
 *  loopArgs
 *  condition
 *  ------- future support -----
 *  conditionGroup
 *  title
 *  ignored
 *  isLocked
 *  hidden
 */
var node_Node = /*#__PURE__*/function () {
  function Node(document, nodeSchema) {
    var _this = this;
    node_classCallCheck(this, Node);
    this.document = void 0;
    this.emitter = void 0;
    /**
     * 是节点实例
     */
    this.isNode = true;
    /**
     * 节点 id
     */
    this.id = void 0;
    /**
     * 节点组件类型
     * 特殊节点：
     *  * Page 页面
     *  * Block 区块
     *  * Component 组件/元件
     *  * Fragment 碎片节点，无 props，有指令
     *  * Leaf 文字节点 | 表达式节点，无 props，无指令？
     *  * Slot 插槽节点，无 props，正常 children，有 slotArgs，有指令
     */
    this.componentName = void 0;
    /**
     * 属性抽象
     */
    this.props = void 0;
    this._children = void 0;
    /**
     * @deprecated
     */
    this._addons = {};
    this._parent = null;
    this.isInited = false;
    this._settingEntry = void 0;
    this.autoruns = void 0;
    this._isRGLContainer = false;
    this._slotFor = null;
    this._slots = [];
    /* istanbul ignore next */
    this._conditionGroup = null;
    this.purged = false;
    this.purging = false;
    this.status = {
      inPlaceEditing: false,
      locking: false,
      pseudo: false
    };
    this.document = document;
    Object(src["makeObservable"])(this);
    var componentName = nodeSchema.componentName,
      id = nodeSchema.id,
      children = nodeSchema.children,
      props = nodeSchema.props,
      extras = _objectWithoutProperties(nodeSchema, _excluded);
    this.id = document.nextId(id);
    this.componentName = componentName;
    if (this.componentName === 'Leaf') {
      this.props = new props_Props(this, {
        children: Object(utils_src["B" /* isDOMText */])(children) || Object(utils_src["J" /* isJSExpression */])(children) ? children : ''
      });
    } else {
      this.props = new props_Props(this, props, extras);
      this._children = new node_children_NodeChildren(this, this.initialChildren(children));
      this._children.internalInitParent();
      this.props.merge(this.upgradeProps(this.initProps(props || {})), this.upgradeProps(extras));
      this.setupAutoruns();
    }
    this.initBuiltinProps();
    this.isInited = true;
    this.emitter = Object(src["createModuleEventBus"])('Node');
    var editor = this.document.designer.editor;
    this.onVisibleChange(function (visible) {
      editor === null || editor === void 0 ? void 0 : editor.eventBus.emit(EDITOR_EVENT.NODE_VISIBLE_CHANGE, _this, visible);
    });
    this.onChildrenChange(function (info) {
      editor === null || editor === void 0 ? void 0 : editor.eventBus.emit(EDITOR_EVENT.NODE_CHILDREN_CHANGE, {
        type: info === null || info === void 0 ? void 0 : info.type,
        node: _this
      });
    });
  }
  /**
   * 节点初始化期间就把内置的一些 prop 初始化好，避免后续不断构造实例导致 reaction 执行多次
   */
  return node_createClass(Node, [{
    key: "parent",
    get:
    /**
     * 父级节点
     */
    function get() {
      return this._parent;
    }
    /**
     * 当前节点子集
     */
  }, {
    key: "children",
    get: function get() {
      return this._children || null;
    }
    /**
     * 当前节点深度
     */
  }, {
    key: "zLevel",
    get: function get() {
      if (this._parent) {
        return this._parent.zLevel + 1;
      }
      return 0;
    }
  }, {
    key: "title",
    get: function get() {
      var t = this.getExtraProp('title');
      // TODO: 暂时走不到这个分支
      // if (!t && this.componentMeta.descriptor) {
      //   t = this.getProp(this.componentMeta.descriptor, false);
      // }
      if (t) {
        var v = t.getAsString();
        if (v) {
          return v;
        }
      }
      return this.componentMeta.title;
    }
  }, {
    key: "icon",
    get: function get() {
      return this.componentMeta.icon;
    }
  }, {
    key: "settingEntry",
    get: function get() {
      if (this._settingEntry) return this._settingEntry;
      this._settingEntry = this.document.designer.createSettingEntry([this]);
      return this._settingEntry;
    }
  }, {
    key: "isRGLContainer",
    get: function get() {
      return !!this._isRGLContainer;
    },
    set: function set(status) {
      this._isRGLContainer = status;
    }
  }, {
    key: "isRGLContainerNode",
    get: function get() {
      return !!this._isRGLContainer;
    },
    set: function set(status) {
      this._isRGLContainer = status;
    }
  }, {
    key: "isEmptyNode",
    get: function get() {
      return this.isEmpty();
    }
  }, {
    key: "slots",
    get: function get() {
      return this._slots;
    }
  }, {
    key: "conditionGroup",
    get: /* istanbul ignore next */
    function get() {
      return this._conditionGroup;
    }
  }, {
    key: "isPurged",
    get:
    /**
     * 是否已销毁
     */
    function get() {
      return this.purged;
    }
  }, {
    key: "isPurging",
    get:
    /**
     * 是否正在销毁
     */
    function get() {
      return this.purging;
    }
  }, {
    key: "initBuiltinProps",
    value: function initBuiltinProps() {
      this.props.has(props_getConvertedExtraKey('hidden')) || this.props.add(false, props_getConvertedExtraKey('hidden'));
      this.props.has(props_getConvertedExtraKey('title')) || this.props.add('', props_getConvertedExtraKey('title'));
      this.props.has(props_getConvertedExtraKey('isLocked')) || this.props.add(false, props_getConvertedExtraKey('isLocked'));
      this.props.has(props_getConvertedExtraKey('condition')) || this.props.add(true, props_getConvertedExtraKey('condition'));
      this.props.has(props_getConvertedExtraKey('conditionGroup')) || this.props.add('', props_getConvertedExtraKey('conditionGroup'));
      this.props.has(props_getConvertedExtraKey('loop')) || this.props.add(undefined, props_getConvertedExtraKey('loop'));
    }
  }, {
    key: "initProps",
    value: function initProps(props) {
      return this.document.designer.transformProps(props, this, types_src["i" /* IPublicEnumTransformStage */].Init);
    }
  }, {
    key: "upgradeProps",
    value: function upgradeProps(props) {
      return this.document.designer.transformProps(props, this, types_src["i" /* IPublicEnumTransformStage */].Upgrade);
    }
  }, {
    key: "setupAutoruns",
    value: function setupAutoruns() {
      var _this2 = this;
      var autoruns = this.componentMeta.advanced.autoruns;
      if (!autoruns || autoruns.length < 1) {
        return;
      }
      this.autoruns = autoruns.map(function (item) {
        return Object(src["autorun"])(function () {
          var _this2$props$getNode$;
          item.autorun((_this2$props$getNode$ = _this2.props.getNode().settingEntry.get(item.name)) === null || _this2$props$getNode$ === void 0 ? void 0 : _this2$props$getNode$.internalToShellField());
        });
      });
    }
  }, {
    key: "initialChildren",
    value: function initialChildren(children) {
      var initialChildren = this.componentMeta.advanced.initialChildren;
      if (children == null) {
        if (initialChildren) {
          if (typeof initialChildren === 'function') {
            return initialChildren(this.internalToShellNode()) || [];
          }
          return initialChildren;
        }
        return [];
      }
      if (Array.isArray(children)) {
        return children;
      }
      return [children];
    }
  }, {
    key: "isContainer",
    value: function isContainer() {
      return this.isContainerNode;
    }
  }, {
    key: "isContainerNode",
    get: function get() {
      return this.isParentalNode && this.componentMeta.isContainer;
    }
  }, {
    key: "isModal",
    value: function isModal() {
      return this.isModalNode;
    }
  }, {
    key: "isModalNode",
    get: function get() {
      return this.componentMeta.isModal;
    }
  }, {
    key: "isRoot",
    value: function isRoot() {
      return this.isRootNode;
    }
  }, {
    key: "isRootNode",
    get: function get() {
      return this.document.rootNode === this;
    }
  }, {
    key: "isPage",
    value: function isPage() {
      return this.isPageNode;
    }
  }, {
    key: "isPageNode",
    get: function get() {
      return this.isRootNode && this.componentName === 'Page';
    }
  }, {
    key: "isComponent",
    value: function isComponent() {
      return this.isComponentNode;
    }
  }, {
    key: "isComponentNode",
    get: function get() {
      return this.isRootNode && this.componentName === 'Component';
    }
  }, {
    key: "isSlot",
    value: function isSlot() {
      return this.isSlotNode;
    }
  }, {
    key: "isSlotNode",
    get: function get() {
      return this._slotFor != null && this.componentName === 'Slot';
    }
    /**
     * 是否一个父亲类节点
     */
  }, {
    key: "isParental",
    value: function isParental() {
      return this.isParentalNode;
    }
  }, {
    key: "isParentalNode",
    get: function get() {
      return !this.isLeafNode;
    }
    /**
     * 终端节点，内容一般为 文字 或者 表达式
     */
  }, {
    key: "isLeaf",
    value: function isLeaf() {
      return this.isLeafNode;
    }
  }, {
    key: "isLeafNode",
    get: function get() {
      return this.componentName === 'Leaf';
    }
  }, {
    key: "internalSetWillPurge",
    value: function internalSetWillPurge() {
      this.internalSetParent(null);
      this.document.addWillPurge(this);
    }
  }, {
    key: "didDropIn",
    value: function didDropIn(dragment) {
      var callbacks = this.componentMeta.advanced.callbacks;
      if (callbacks !== null && callbacks !== void 0 && callbacks.onNodeAdd) {
        var cbThis = this.internalToShellNode();
        callbacks === null || callbacks === void 0 ? void 0 : callbacks.onNodeAdd.call(cbThis, dragment.internalToShellNode(), cbThis);
      }
      if (this._parent) {
        this._parent.didDropIn(dragment);
      }
    }
  }, {
    key: "didDropOut",
    value: function didDropOut(dragment) {
      var callbacks = this.componentMeta.advanced.callbacks;
      if (callbacks !== null && callbacks !== void 0 && callbacks.onNodeRemove) {
        var cbThis = this.internalToShellNode();
        callbacks === null || callbacks === void 0 ? void 0 : callbacks.onNodeRemove.call(cbThis, dragment.internalToShellNode(), cbThis);
      }
      if (this._parent) {
        this._parent.didDropOut(dragment);
      }
    }
    /**
     * 内部方法，请勿使用
     * @param useMutator 是否触发联动逻辑
     */
  }, {
    key: "internalSetParent",
    value: function internalSetParent(parent) {
      var useMutator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      if (this._parent === parent) {
        return;
      }
      // 解除老的父子关系，但不需要真的删除节点
      if (this._parent) {
        if (this.isSlot()) {
          this._parent.unlinkSlot(this);
        } else {
          var _this$_parent$childre;
          (_this$_parent$childre = this._parent.children) === null || _this$_parent$childre === void 0 ? void 0 : _this$_parent$childre.unlinkChild(this);
        }
      }
      if (useMutator) {
        var _this$_parent;
        (_this$_parent = this._parent) === null || _this$_parent === void 0 ? void 0 : _this$_parent.didDropOut(this);
      }
      if (parent) {
        // 建立新的父子关系，尤其注意：对于 parent 为 null 的场景，不会赋值，因为 subtreeModified 等事件可能需要知道该 node 被删除前的父子关系
        this._parent = parent;
        this.document.removeWillPurge(this);
        /* istanbul ignore next */
        if (!this.conditionGroup) {
          var _this$getExtraProp;
          // initial conditionGroup
          var grp = (_this$getExtraProp = this.getExtraProp('conditionGroup', false)) === null || _this$getExtraProp === void 0 ? void 0 : _this$getExtraProp.getAsString();
          if (grp) {
            this.setConditionGroup(grp);
          }
        }
        if (useMutator) {
          parent.didDropIn(this);
        }
      }
    }
  }, {
    key: "internalSetSlotFor",
    value: function internalSetSlotFor(slotFor) {
      this._slotFor = slotFor;
    }
  }, {
    key: "internalToShellNode",
    value: function internalToShellNode() {
      return this.document.designer.shellModelFactory.createNode(this);
    }
    /**
     * 关联属性
     */
  }, {
    key: "slotFor",
    get: function get() {
      return this._slotFor;
    }
    /**
     * 移除当前节点
     */
  }, {
    key: "remove",
    value: function remove() {
      var useMutator = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var purge = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
        suppressRemoveEvent: false
      };
      if (this.parent) {
        if (!options.suppressRemoveEvent) {
          var _this$document$design, _this$parent, _this$parent$children;
          (_this$document$design = this.document.designer.editor) === null || _this$document$design === void 0 ? void 0 : _this$document$design.eventBus.emit('node.remove.topLevel', {
            node: this,
            index: (_this$parent = this.parent) === null || _this$parent === void 0 ? void 0 : (_this$parent$children = _this$parent.children) === null || _this$parent$children === void 0 ? void 0 : _this$parent$children.indexOf(this)
          });
        }
        if (this.isSlot()) {
          var _this$parent$children2;
          this.parent.removeSlot(this);
          (_this$parent$children2 = this.parent.children) === null || _this$parent$children2 === void 0 ? void 0 : _this$parent$children2.internalDelete(this, purge, useMutator, {
            suppressRemoveEvent: true
          });
        } else {
          var _this$parent$children3;
          (_this$parent$children3 = this.parent.children) === null || _this$parent$children3 === void 0 ? void 0 : _this$parent$children3.internalDelete(this, purge, useMutator, {
            suppressRemoveEvent: true
          });
        }
      }
    }
    /**
     * 锁住当前节点
     */
  }, {
    key: "lock",
    value: function lock() {
      var flag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      this.setExtraProp('isLocked', flag);
    }
    /**
     * 获取当前节点的锁定状态
     */
  }, {
    key: "isLocked",
    get: function get() {
      var _this$getExtraProp2;
      return !!((_this$getExtraProp2 = this.getExtraProp('isLocked')) !== null && _this$getExtraProp2 !== void 0 && _this$getExtraProp2.getValue());
    }
  }, {
    key: "canSelect",
    value: function canSelect() {
      var _this$componentMeta, _this$componentMeta$a, _this$componentMeta$a2;
      var onSelectHook = (_this$componentMeta = this.componentMeta) === null || _this$componentMeta === void 0 ? void 0 : (_this$componentMeta$a = _this$componentMeta.advanced) === null || _this$componentMeta$a === void 0 ? void 0 : (_this$componentMeta$a2 = _this$componentMeta$a.callbacks) === null || _this$componentMeta$a2 === void 0 ? void 0 : _this$componentMeta$a2.onSelectHook;
      var canSelect = typeof onSelectHook === 'function' ? onSelectHook(this.internalToShellNode()) : true;
      return canSelect;
    }
    /**
     * 选择当前节点
     */
  }, {
    key: "select",
    value: function select() {
      this.document.selection.select(this.id);
    }
    /**
     * 悬停高亮
     */
  }, {
    key: "hover",
    value: function hover() {
      var flag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      if (flag) {
        this.document.designer.detecting.capture(this);
      } else {
        this.document.designer.detecting.release(this);
      }
    }
    /**
     * 节点组件描述
     */
  }, {
    key: "componentMeta",
    get: function get() {
      return this.document.getComponentMeta(this.componentName);
    }
  }, {
    key: "propsData",
    get: function get() {
      if (!this.isParental() || this.componentName === 'Fragment') {
        return null;
      }
      return this.props.export(types_src["i" /* IPublicEnumTransformStage */].Serilize).props || null;
    }
  }, {
    key: "hasSlots",
    value: function hasSlots() {
      return this._slots.length > 0;
    }
    /* istanbul ignore next */
  }, {
    key: "setConditionGroup",
    value: function setConditionGroup(grp) {
      var _grp = null;
      if (!grp) {
        var _this$getExtraProp3;
        (_this$getExtraProp3 = this.getExtraProp('conditionGroup', false)) === null || _this$getExtraProp3 === void 0 ? void 0 : _this$getExtraProp3.remove();
        if (this._conditionGroup) {
          this._conditionGroup.remove(this);
          this._conditionGroup = null;
        }
        return;
      }
      if (!isExclusiveGroup(grp)) {
        var _this$prevSibling, _this$prevSibling$con, _this$nextSibling, _this$nextSibling$con;
        if (((_this$prevSibling = this.prevSibling) === null || _this$prevSibling === void 0 ? void 0 : (_this$prevSibling$con = _this$prevSibling.conditionGroup) === null || _this$prevSibling$con === void 0 ? void 0 : _this$prevSibling$con.name) === grp) {
          _grp = this.prevSibling.conditionGroup;
        } else if (((_this$nextSibling = this.nextSibling) === null || _this$nextSibling === void 0 ? void 0 : (_this$nextSibling$con = _this$nextSibling.conditionGroup) === null || _this$nextSibling$con === void 0 ? void 0 : _this$nextSibling$con.name) === grp) {
          _grp = this.nextSibling.conditionGroup;
        } else if (typeof grp === 'string') {
          _grp = new exclusive_group_ExclusiveGroup(grp);
        }
      }
      if (_grp && this._conditionGroup !== _grp) {
        var _this$getExtraProp4, _grp2;
        (_this$getExtraProp4 = this.getExtraProp('conditionGroup', true)) === null || _this$getExtraProp4 === void 0 ? void 0 : _this$getExtraProp4.setValue(_grp.name);
        if (this._conditionGroup) {
          this._conditionGroup.remove(this);
        }
        this._conditionGroup = _grp;
        (_grp2 = _grp) === null || _grp2 === void 0 ? void 0 : _grp2.add(this);
      }
    }
    /* istanbul ignore next */
  }, {
    key: "isConditionalVisible",
    value: function isConditionalVisible() {
      var _this$_conditionGroup;
      return (_this$_conditionGroup = this._conditionGroup) === null || _this$_conditionGroup === void 0 ? void 0 : _this$_conditionGroup.isVisible(this);
    }
    /* istanbul ignore next */
  }, {
    key: "setConditionalVisible",
    value: function setConditionalVisible() {
      var _this$_conditionGroup2;
      (_this$_conditionGroup2 = this._conditionGroup) === null || _this$_conditionGroup2 === void 0 ? void 0 : _this$_conditionGroup2.setVisible(this);
    }
  }, {
    key: "hasCondition",
    value: function hasCondition() {
      var _this$getExtraProp5;
      var v = (_this$getExtraProp5 = this.getExtraProp('condition', false)) === null || _this$getExtraProp5 === void 0 ? void 0 : _this$getExtraProp5.getValue();
      return v != null && v !== '' && v !== true;
    }
    /**
     * has loop when 1. loop is validArray with length > 1 ; OR  2. loop is variable object
     * @return boolean, has loop config or not
     */
  }, {
    key: "hasLoop",
    value: function hasLoop() {
      var _this$getExtraProp6;
      var value = (_this$getExtraProp6 = this.getExtraProp('loop', false)) === null || _this$getExtraProp6 === void 0 ? void 0 : _this$getExtraProp6.getValue();
      if (value === undefined || value === null) {
        return false;
      }
      if (Array.isArray(value)) {
        return true;
      }
      if (Object(utils_src["J" /* isJSExpression */])(value)) {
        return true;
      }
      return false;
    }
    /* istanbul ignore next */
  }, {
    key: "wrapWith",
    value: function wrapWith(schema) {
      var wrappedNode = this.replaceWith(node_objectSpread(node_objectSpread({}, schema), {}, {
        children: [this.export()]
      }));
      return wrappedNode.children.get(0);
    }
  }, {
    key: "replaceWith",
    value: function replaceWith(schema) {
      var _this$parent2;
      var migrate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      // reuse the same id? or replaceSelection
      schema = Object.assign({}, migrate ? this.export() : {}, schema);
      return (_this$parent2 = this.parent) === null || _this$parent2 === void 0 ? void 0 : _this$parent2.replaceChild(this, schema);
    }
    /**
     * 替换子节点
     *
     * @param {INode} node
     * @param {object} data
     */
  }, {
    key: "replaceChild",
    value: function replaceChild(node, data) {
      var _this$children;
      if ((_this$children = this.children) !== null && _this$children !== void 0 && _this$children.has(node)) {
        var selected = this.document.selection.has(node.id);
        delete data.id;
        var newNode = this.document.createNode(data);
        if (!Object(utils_src["P" /* isNode */])(newNode)) {
          return null;
        }
        this.insertBefore(newNode, node, false);
        node.remove(false);
        if (selected) {
          this.document.selection.select(newNode.id);
        }
        return newNode;
      }
      return node;
    }
  }, {
    key: "setVisible",
    value: function setVisible(flag) {
      var _this$getExtraProp7;
      (_this$getExtraProp7 = this.getExtraProp('hidden')) === null || _this$getExtraProp7 === void 0 ? void 0 : _this$getExtraProp7.setValue(!flag);
      this.emitter.emit('visibleChange', flag);
    }
  }, {
    key: "getVisible",
    value: function getVisible() {
      var _this$getExtraProp8;
      return !((_this$getExtraProp8 = this.getExtraProp('hidden')) !== null && _this$getExtraProp8 !== void 0 && _this$getExtraProp8.getValue());
    }
  }, {
    key: "onVisibleChange",
    value: function onVisibleChange(func) {
      var _this3 = this;
      var wrappedFunc = Object(src["wrapWithEventSwitch"])(func);
      this.emitter.on('visibleChange', wrappedFunc);
      return function () {
        _this3.emitter.removeListener('visibleChange', wrappedFunc);
      };
    }
  }, {
    key: "getProp",
    value: function getProp(path) {
      var createIfNone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      return this.props.query(path, createIfNone) || null;
    }
  }, {
    key: "getExtraProp",
    value: function getExtraProp(key) {
      var createIfNone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      return this.props.get(props_getConvertedExtraKey(key), createIfNone) || null;
    }
  }, {
    key: "setExtraProp",
    value: function setExtraProp(key, value) {
      var _this$getProp;
      (_this$getProp = this.getProp(props_getConvertedExtraKey(key), true)) === null || _this$getProp === void 0 ? void 0 : _this$getProp.setValue(value);
    }
    /**
     * 获取单个属性值
     */
  }, {
    key: "getPropValue",
    value: function getPropValue(path) {
      var _this$getProp2;
      return (_this$getProp2 = this.getProp(path, false)) === null || _this$getProp2 === void 0 ? void 0 : _this$getProp2.value;
    }
    /**
     * 设置单个属性值
     */
  }, {
    key: "setPropValue",
    value: function setPropValue(path, value) {
      this.getProp(path, true).setValue(value);
    }
    /**
     * 清除已设置的值
     */
  }, {
    key: "clearPropValue",
    value: function clearPropValue(path) {
      var _this$getProp3;
      (_this$getProp3 = this.getProp(path, false)) === null || _this$getProp3 === void 0 ? void 0 : _this$getProp3.unset();
    }
    /**
     * 设置多个属性值，和原有值合并
     */
  }, {
    key: "mergeProps",
    value: function mergeProps(props) {
      this.props.merge(props);
    }
    /**
     * 设置多个属性值，替换原有值
     */
  }, {
    key: "setProps",
    value: function setProps(props) {
      if (props instanceof props_Props) {
        this.props = props;
        return;
      }
      this.props.import(props);
    }
    /**
     * 获取节点在父容器中的索引
     */
  }, {
    key: "index",
    get: function get() {
      var _this$parent$children4;
      if (!this.parent) {
        return -1;
      }
      return (_this$parent$children4 = this.parent.children) === null || _this$parent$children4 === void 0 ? void 0 : _this$parent$children4.indexOf(this);
    }
    /**
     * 获取下一个兄弟节点
     */
  }, {
    key: "nextSibling",
    get: function get() {
      var _this$parent$children5;
      if (!this.parent) {
        return null;
      }
      var index = this.index;
      if (typeof index !== 'number') {
        return null;
      }
      if (index < 0) {
        return null;
      }
      return (_this$parent$children5 = this.parent.children) === null || _this$parent$children5 === void 0 ? void 0 : _this$parent$children5.get(index + 1);
    }
    /**
     * 获取上一个兄弟节点
     */
  }, {
    key: "prevSibling",
    get: function get() {
      var _this$parent$children6;
      if (!this.parent) {
        return null;
      }
      var index = this.index;
      if (typeof index !== 'number') {
        return null;
      }
      if (index < 1) {
        return null;
      }
      return (_this$parent$children6 = this.parent.children) === null || _this$parent$children6 === void 0 ? void 0 : _this$parent$children6.get(index - 1);
    }
    /**
     * 获取符合搭建协议-节点 schema 结构
     */
  }, {
    key: "schema",
    get: function get() {
      return this.export(types_src["i" /* IPublicEnumTransformStage */].Save);
    },
    set: function set(data) {
      var _this4 = this;
      Object(src["runInAction"])(function () {
        return _this4.import(data);
      });
    }
  }, {
    key: "import",
    value: function _import(data) {
      var checkId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var componentName = data.componentName,
        id = data.id,
        children = data.children,
        props = data.props,
        extras = _objectWithoutProperties(data, _excluded2);
      if (this.isSlot()) {
        foreachReverse(this.children, function (subNode) {
          subNode.remove(true, true);
        }, function (iterable, idx) {
          return iterable.get(idx);
        });
      }
      if (this.isParental()) {
        var _this$_children;
        this.props.import(props, extras);
        (_this$_children = this._children) === null || _this$_children === void 0 ? void 0 : _this$_children.import(children, checkId);
      } else {
        this.props.get('children', true).setValue(Object(utils_src["B" /* isDOMText */])(children) || Object(utils_src["J" /* isJSExpression */])(children) ? children : '');
      }
    }
  }, {
    key: "toData",
    value: function toData() {
      return this.export();
    }
    /**
     * 导出 schema
     */
  }, {
    key: "export",
    value: function _export() {
      var _this5 = this;
      var stage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : types_src["i" /* IPublicEnumTransformStage */].Save;
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      stage = Object(utils_src["l" /* compatStage */])(stage);
      var baseSchema = {
        componentName: this.componentName
      };
      if (stage !== types_src["i" /* IPublicEnumTransformStage */].Clone) {
        baseSchema.id = this.id;
      }
      if (stage === types_src["i" /* IPublicEnumTransformStage */].Render) {
        baseSchema.docId = this.document.id;
      }
      if (this.isLeaf()) {
        if (!options.bypassChildren) {
          var _this$props$get;
          baseSchema.children = (_this$props$get = this.props.get('children')) === null || _this$props$get === void 0 ? void 0 : _this$props$get.export(stage);
        }
        return baseSchema;
      }
      var _ref = this.props.export(stage) || {},
        _ref$props = _ref.props,
        props = _ref$props === void 0 ? {} : _ref$props,
        extras = _ref.extras;
      var _extras_ = node_objectSpread({}, extras);
      /* istanbul ignore next */
      Object.keys(this._addons).forEach(function (key) {
        var addon = _this5._addons[key];
        if (addon) {
          if (addon.isProp) {
            props[props_getConvertedExtraKey(key)] = addon.exportData();
          } else {
            _extras_[key] = addon.exportData();
          }
        }
      });
      var schema = node_objectSpread(node_objectSpread({}, baseSchema), {}, {
        props: this.document.designer.transformProps(props, this, stage)
      }, this.document.designer.transformProps(_extras_, this, stage));
      if (this.isParental() && this.children && this.children.size > 0 && !options.bypassChildren) {
        schema.children = this.children.export(stage);
      }
      return schema;
    }
    /**
     * 判断是否包含特定节点
     */
  }, {
    key: "contains",
    value: function contains(node) {
      return _contains(this, node);
    }
    /**
     * 获取特定深度的父亲节点
     */
  }, {
    key: "getZLevelTop",
    value: function getZLevelTop(zLevel) {
      return _getZLevelTop(this, zLevel);
    }
    /**
     * 判断与其它节点的位置关系
     *
     *  16 thisNode contains otherNode
     *  8  thisNode contained_by otherNode
     *  2  thisNode before or after otherNode
     *  0  thisNode same as otherNode
     */
  }, {
    key: "comparePosition",
    value: function comparePosition(otherNode) {
      return _comparePosition(this, otherNode);
    }
  }, {
    key: "unlinkSlot",
    value: function unlinkSlot(slotNode) {
      var i = this._slots.indexOf(slotNode);
      if (i < 0) {
        return false;
      }
      this._slots.splice(i, 1);
    }
    /**
     * 删除一个Slot节点
     */
  }, {
    key: "removeSlot",
    value: function removeSlot(slotNode) {
      // if (purge) {
      //   // should set parent null
      //   slotNode?.internalSetParent(null, false);
      //   slotNode?.purge();
      // }
      // this.document.unlinkNode(slotNode);
      // this.document.selection.remove(slotNode.id);
      var i = this._slots.indexOf(slotNode);
      if (i < 0) {
        return false;
      }
      this._slots.splice(i, 1);
      return false;
    }
  }, {
    key: "addSlot",
    value: function addSlot(slotNode) {
      var _slotNode$getExtraPro;
      var slotName = slotNode === null || slotNode === void 0 ? void 0 : (_slotNode$getExtraPro = slotNode.getExtraProp('name')) === null || _slotNode$getExtraPro === void 0 ? void 0 : _slotNode$getExtraPro.getAsString();
      // 一个组件下的所有 slot，相同 slotName 的 slot 应该是唯一的
      if (includeSlot(this, slotName)) {
        removeSlot(this, slotName);
      }
      slotNode.internalSetParent(this, true);
      this._slots.push(slotNode);
    }
    /**
     * 当前node对应组件是否已注册可用
     */
  }, {
    key: "isValidComponent",
    value: function isValidComponent() {
      var _this$document, _this$document$design2;
      var allComponents = (_this$document = this.document) === null || _this$document === void 0 ? void 0 : (_this$document$design2 = _this$document.designer) === null || _this$document$design2 === void 0 ? void 0 : _this$document$design2.componentsMap;
      if (allComponents && allComponents[this.componentName]) {
        return true;
      }
      return false;
    }
    /**
     * 删除一个节点
     * @param node
     */
  }, {
    key: "removeChild",
    value: function removeChild(node) {
      var _this$children2;
      (_this$children2 = this.children) === null || _this$children2 === void 0 ? void 0 : _this$children2.delete(node);
    }
    /**
     * 销毁
     */
  }, {
    key: "purge",
    value: function purge() {
      var _this$autoruns, _this$settingEntry;
      if (this.purged) {
        return;
      }
      this.purged = true;
      (_this$autoruns = this.autoruns) === null || _this$autoruns === void 0 ? void 0 : _this$autoruns.forEach(function (dispose) {
        return dispose();
      });
      this.props.purge();
      (_this$settingEntry = this.settingEntry) === null || _this$settingEntry === void 0 ? void 0 : _this$settingEntry.purge();
      // this.document.destroyNode(this);
    }
  }, {
    key: "internalPurgeStart",
    value: function internalPurgeStart() {
      this.purging = true;
    }
    /**
     * 是否可执行某 action
     */
  }, {
    key: "canPerformAction",
    value: function canPerformAction(actionName) {
      var _this$componentMeta2,
        _this$componentMeta2$,
        _this6 = this;
      var availableActions = ((_this$componentMeta2 = this.componentMeta) === null || _this$componentMeta2 === void 0 ? void 0 : (_this$componentMeta2$ = _this$componentMeta2.availableActions) === null || _this$componentMeta2$ === void 0 ? void 0 : _this$componentMeta2$.filter(function (action) {
        var condition = action.condition;
        return typeof condition === 'function' ? condition(_this6) !== false : condition !== false;
      }).map(function (action) {
        return action.name;
      })) || [];
      return availableActions.indexOf(actionName) >= 0;
    }
    // ======= compatible apis ====
  }, {
    key: "isEmpty",
    value: function isEmpty() {
      return this.children ? this.children.isEmpty() : true;
    }
  }, {
    key: "getChildren",
    value: function getChildren() {
      return this.children;
    }
  }, {
    key: "getComponentName",
    value: function getComponentName() {
      return this.componentName;
    }
  }, {
    key: "insert",
    value: function insert(node, ref) {
      var useMutator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
      this.insertAfter(node, ref, useMutator);
    }
  }, {
    key: "insertBefore",
    value: function insertBefore(node, ref) {
      var _this$children3;
      var useMutator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
      var nodeInstance = ensureNode(node, this.document);
      (_this$children3 = this.children) === null || _this$children3 === void 0 ? void 0 : _this$children3.internalInsert(nodeInstance, ref ? ref.index : null, useMutator);
    }
  }, {
    key: "insertAfter",
    value: function insertAfter(node, ref) {
      var _this$children4;
      var useMutator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
      var nodeInstance = ensureNode(node, this.document);
      (_this$children4 = this.children) === null || _this$children4 === void 0 ? void 0 : _this$children4.internalInsert(nodeInstance, ref ? (ref.index || 0) + 1 : null, useMutator);
    }
  }, {
    key: "getParent",
    value: function getParent() {
      return this.parent;
    }
  }, {
    key: "getId",
    value: function getId() {
      return this.id;
    }
  }, {
    key: "getIndex",
    value: function getIndex() {
      return this.index;
    }
  }, {
    key: "getNode",
    value: function getNode() {
      return this;
    }
  }, {
    key: "getRoot",
    value: function getRoot() {
      return this.document.rootNode;
    }
  }, {
    key: "getProps",
    value: function getProps() {
      return this.props;
    }
  }, {
    key: "onChildrenChange",
    value: function onChildrenChange(fn) {
      var _this$children5;
      var wrappedFunc = Object(src["wrapWithEventSwitch"])(fn);
      return (_this$children5 = this.children) === null || _this$children5 === void 0 ? void 0 : _this$children5.onChange(wrappedFunc);
    }
  }, {
    key: "mergeChildren",
    value: function mergeChildren(remover, adder, sorter) {
      var _this$children6;
      (_this$children6 = this.children) === null || _this$children6 === void 0 ? void 0 : _this$children6.mergeChildren(remover, adder, sorter);
    }
    /**
     * @deprecated
     */
  }, {
    key: "getStatus",
    value: function getStatus(field) {
      if (field && this.status[field] != null) {
        return this.status[field];
      }
      return this.status;
    }
    /**
     * @deprecated
     */
  }, {
    key: "setStatus",
    value: function setStatus(field, flag) {
      if (!this.status.hasOwnProperty(field)) {
        return;
      }
      if (flag !== this.status[field]) {
        this.status[field] = flag;
      }
    }
    /**
     * @deprecated
     */
  }, {
    key: "getDOMNode",
    value: function getDOMNode() {
      var _this$document$simula, _this$document$simula2, _this$document$simula3, _this$document$simula4;
      var instance = (_this$document$simula = this.document.simulator) === null || _this$document$simula === void 0 ? void 0 : (_this$document$simula2 = _this$document$simula.getComponentInstances(this)) === null || _this$document$simula2 === void 0 ? void 0 : _this$document$simula2[0];
      if (!instance) {
        return;
      }
      return (_this$document$simula3 = this.document.simulator) === null || _this$document$simula3 === void 0 ? void 0 : (_this$document$simula4 = _this$document$simula3.findDOMNodes(instance)) === null || _this$document$simula4 === void 0 ? void 0 : _this$document$simula4[0];
    }
    /**
     * @deprecated
     */
  }, {
    key: "getPage",
    value: function getPage() {
      console.warn('getPage is deprecated, use document instead');
      return this.document;
    }
    /**
     * 获取磁贴相关信息
     */
  }, {
    key: "getRGL",
    value: function getRGL() {
      var _this$getParent;
      var isContainerNode = this.isContainer();
      var isEmptyNode = this.isEmpty();
      var isRGLContainerNode = this.isRGLContainer;
      var isRGLNode = (_this$getParent = this.getParent()) === null || _this$getParent === void 0 ? void 0 : _this$getParent.isRGLContainer;
      var isRGL = isRGLContainerNode || isRGLNode && (!isContainerNode || !isEmptyNode);
      var rglNode = isRGLContainerNode ? this : isRGL ? this === null || this === void 0 ? void 0 : this.getParent() : null;
      return {
        isContainerNode: isContainerNode,
        isEmptyNode: isEmptyNode,
        isRGLContainerNode: isRGLContainerNode,
        isRGLNode: isRGLNode,
        isRGL: isRGL,
        rglNode: rglNode
      };
    }
    /**
     * @deprecated no one is using this, will be removed in a future release
     */
  }, {
    key: "getSuitablePlace",
    value: function getSuitablePlace(node, ref) {
      var _this$document2, _node$componentMeta, _this$componentMeta4, _this$componentMeta4$, _this$componentMeta4$2;
      var focusNode = (_this$document2 = this.document) === null || _this$document2 === void 0 ? void 0 : _this$document2.focusNode;
      // 如果节点是模态框，插入到根节点下
      if (node !== null && node !== void 0 && (_node$componentMeta = node.componentMeta) !== null && _node$componentMeta !== void 0 && _node$componentMeta.isModal) {
        return {
          container: focusNode,
          ref: ref
        };
      }
      if (!ref && focusNode && this.contains(focusNode)) {
        var _focusNode$componentM, _focusNode$componentM2, _focusNode$componentM3;
        var rootCanDropIn = (_focusNode$componentM = focusNode.componentMeta) === null || _focusNode$componentM === void 0 ? void 0 : (_focusNode$componentM2 = _focusNode$componentM.prototype) === null || _focusNode$componentM2 === void 0 ? void 0 : (_focusNode$componentM3 = _focusNode$componentM2.options) === null || _focusNode$componentM3 === void 0 ? void 0 : _focusNode$componentM3.canDropIn;
        if (rootCanDropIn === undefined || rootCanDropIn === true || typeof rootCanDropIn === 'function' && rootCanDropIn(node)) {
          return {
            container: focusNode
          };
        }
        return null;
      }
      if (this.isRoot() && this.children) {
        var _this$componentMeta3, _this$componentMeta3$, _this$componentMeta3$2;
        var dropElement = this.children.filter(function (c) {
          var _c$componentMeta, _c$componentMeta$prot, _c$componentMeta$prot2;
          if (!c.isContainerNode) {
            return false;
          }
          var canDropIn = (_c$componentMeta = c.componentMeta) === null || _c$componentMeta === void 0 ? void 0 : (_c$componentMeta$prot = _c$componentMeta.prototype) === null || _c$componentMeta$prot === void 0 ? void 0 : (_c$componentMeta$prot2 = _c$componentMeta$prot.options) === null || _c$componentMeta$prot2 === void 0 ? void 0 : _c$componentMeta$prot2.canDropIn;
          if (canDropIn === undefined || canDropIn === true || typeof canDropIn === 'function' && canDropIn(node)) {
            return true;
          }
          return false;
        })[0];
        if (dropElement) {
          return {
            container: dropElement,
            ref: ref
          };
        }
        var _rootCanDropIn = (_this$componentMeta3 = this.componentMeta) === null || _this$componentMeta3 === void 0 ? void 0 : (_this$componentMeta3$ = _this$componentMeta3.prototype) === null || _this$componentMeta3$ === void 0 ? void 0 : (_this$componentMeta3$2 = _this$componentMeta3$.options) === null || _this$componentMeta3$2 === void 0 ? void 0 : _this$componentMeta3$2.canDropIn;
        if (_rootCanDropIn === undefined || _rootCanDropIn === true || typeof _rootCanDropIn === 'function' && _rootCanDropIn(node)) {
          return {
            container: this,
            ref: ref
          };
        }
        return null;
      }
      var canDropIn = (_this$componentMeta4 = this.componentMeta) === null || _this$componentMeta4 === void 0 ? void 0 : (_this$componentMeta4$ = _this$componentMeta4.prototype) === null || _this$componentMeta4$ === void 0 ? void 0 : (_this$componentMeta4$2 = _this$componentMeta4$.options) === null || _this$componentMeta4$2 === void 0 ? void 0 : _this$componentMeta4$2.canDropIn;
      if (this.isContainer()) {
        if (canDropIn === undefined || typeof canDropIn === 'boolean' && canDropIn || typeof canDropIn === 'function' && canDropIn(node)) {
          return {
            container: this,
            ref: ref
          };
        }
      }
      if (this.parent) {
        return this.parent.getSuitablePlace(node, {
          index: this.index
        });
      }
      return null;
    }
    /**
     * @deprecated
     */
  }, {
    key: "getAddonData",
    value: function getAddonData(key) {
      var _this$getExtraProp9;
      var addon = this._addons[key];
      if (addon) {
        return addon.exportData();
      }
      return (_this$getExtraProp9 = this.getExtraProp(key)) === null || _this$getExtraProp9 === void 0 ? void 0 : _this$getExtraProp9.getValue();
    }
    /**
     * @deprecated
     */
  }, {
    key: "registerAddon",
    value: function registerAddon(key, exportData) {
      var isProp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      this._addons[key] = {
        exportData: exportData,
        isProp: isProp
      };
    }
  }, {
    key: "getRect",
    value: function getRect() {
      var _this$document$simula6;
      if (this.isRoot()) {
        var _this$document$simula5;
        return ((_this$document$simula5 = this.document.simulator) === null || _this$document$simula5 === void 0 ? void 0 : _this$document$simula5.viewport.contentBounds) || null;
      }
      return ((_this$document$simula6 = this.document.simulator) === null || _this$document$simula6 === void 0 ? void 0 : _this$document$simula6.computeRect(this)) || null;
    }
    /**
     * @deprecated
     */
  }, {
    key: "getPrototype",
    value: function getPrototype() {
      return this.componentMeta.prototype;
    }
    /**
     * @deprecated
     */
  }, {
    key: "setPrototype",
    value: function setPrototype(proto) {
      this.componentMeta.prototype = proto;
    }
  }, {
    key: "getIcon",
    value: function getIcon() {
      return this.icon;
    }
  }, {
    key: "toString",
    value: function toString() {
      return this.id;
    }
  }, {
    key: "emitPropChange",
    value: function emitPropChange(val) {
      var _this$emitter;
      (_this$emitter = this.emitter) === null || _this$emitter === void 0 ? void 0 : _this$emitter.emit('propChange', val);
    }
  }, {
    key: "onPropChange",
    value: function onPropChange(func) {
      var _this7 = this;
      var wrappedFunc = Object(src["wrapWithEventSwitch"])(func);
      this.emitter.on('propChange', wrappedFunc);
      return function () {
        _this7.emitter.removeListener('propChange', wrappedFunc);
      };
    }
  }]);
}();
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], node_Node.prototype, "_parent", void 0);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Number), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], node_Node.prototype, "zLevel", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], node_Node.prototype, "title", null);
Object(tslib_es6["b" /* __decorate */])([src["obx"].shallow, Object(tslib_es6["d" /* __metadata */])("design:type", Array)], node_Node.prototype, "_slots", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], node_Node.prototype, "_conditionGroup", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"].shallow, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], node_Node.prototype, "status", void 0);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", []), Object(tslib_es6["d" /* __metadata */])("design:returntype", void 0)], node_Node.prototype, "initBuiltinProps", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Object]), Object(tslib_es6["d" /* __metadata */])("design:returntype", Object)], node_Node.prototype, "initProps", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Object]), Object(tslib_es6["d" /* __metadata */])("design:returntype", Object)], node_Node.prototype, "upgradeProps", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], node_Node.prototype, "componentMeta", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], node_Node.prototype, "propsData", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], node_Node.prototype, "index", null);
function ensureNode(node, document) {
  var nodeInstance = node;
  if (!Object(utils_src["P" /* isNode */])(node)) {
    if (node.getComponentName) {
      nodeInstance = document.createNode({
        componentName: node.getComponentName()
      });
    } else {
      nodeInstance = document.createNode(node);
    }
  }
  return nodeInstance;
}
function node_isRootNode(node) {
  return node && node.isRootNode;
}
function isLowCodeComponent(node) {
  var _node$componentMeta2;
  return ((_node$componentMeta2 = node.componentMeta) === null || _node$componentMeta2 === void 0 ? void 0 : _node$componentMeta2.getMetadata().devMode) === 'lowCode';
}
function _getZLevelTop(child, zLevel) {
  var l = child.zLevel;
  if (l < zLevel || zLevel < 0) {
    return null;
  }
  if (l === zLevel) {
    return child;
  }
  var r = child;
  while (r && l-- > zLevel) {
    r = r.parent;
  }
  return r;
}
/**
 * 测试两个节点是否为包含关系
 * @param node1 测试的父节点
 * @param node2 测试的被包含节点
 * @returns 是否包含
 */

function _contains(node1, node2) {
  if (node1 === node2) {
    return true;
  }
  if (!node1.isParentalNode || !node2.parent) {
    return false;
  }
  var p = _getZLevelTop(node2, node1.zLevel);
  if (!p) {
    return false;
  }
  return node1 === p;
}
// 16 node1 contains node2
// 8  node1 contained_by node2
// 2  node1 before or after node2
// 0  node1 same as node2

var PositionNO;
(function (PositionNO) {
  PositionNO[PositionNO["Contains"] = 16] = "Contains";
  PositionNO[PositionNO["ContainedBy"] = 8] = "ContainedBy";
  PositionNO[PositionNO["BeforeOrAfter"] = 2] = "BeforeOrAfter";
  PositionNO[PositionNO["TheSame"] = 0] = "TheSame";
})(PositionNO || (PositionNO = {}));
function _comparePosition(node1, node2) {
  if (node1 === node2) {
    return PositionNO.TheSame;
  }
  var l1 = node1.zLevel;
  var l2 = node2.zLevel;
  if (l1 === l2) {
    return PositionNO.BeforeOrAfter;
  }
  var p;
  if (l1 < l2) {
    p = _getZLevelTop(node2, l1);
    if (p && p === node1) {
      return PositionNO.Contains;
    }
    return PositionNO.BeforeOrAfter;
  }
  p = _getZLevelTop(node1, l2);
  if (p && p === node2) {
    return PositionNO.ContainedBy;
  }
  return PositionNO.BeforeOrAfter;
}

function insertChild(container, thing, at, copy) {
  var node;
  var nodeSchema;
  if (Object(utils_src["P" /* isNode */])(thing) && (copy || thing.isSlot())) {
    var _container$document;
    nodeSchema = thing.export(types_src["i" /* IPublicEnumTransformStage */].Clone);
    node = (_container$document = container.document) === null || _container$document === void 0 ? void 0 : _container$document.createNode(nodeSchema);
  } else if (Object(utils_src["P" /* isNode */])(thing)) {
    node = thing;
  } else if (Object(utils_src["Q" /* isNodeSchema */])(thing)) {
    var _container$document2;
    node = (_container$document2 = container.document) === null || _container$document2 === void 0 ? void 0 : _container$document2.createNode(thing);
  }
  if (Object(utils_src["P" /* isNode */])(node)) {
    var _container$children;
    (_container$children = container.children) === null || _container$children === void 0 ? void 0 : _container$children.insert(node, at);
    return node;
  }
  return null;
}
function insertChildren(container, nodes, at, copy) {
  var index = at;
  var node;
  var results = [];
  // eslint-disable-next-line no-cond-assign
  while (node = nodes.pop()) {
    node = insertChild(container, node, index, copy);
    results.push(node);
    index = node.index;
  }
  return results;
}
// CONCATENATED MODULE: ../designer/src/document/selection.ts
function selection_typeof(o) { "@babel/helpers - typeof"; return selection_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, selection_typeof(o); }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = selection_unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t.return || t.return(); } finally { if (u) throw o; } } }; }
function selection_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return selection_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? selection_arrayLikeToArray(r, a) : void 0; } }
function selection_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function selection_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function selection_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, selection_toPropertyKey(o.key), o); } }
function selection_createClass(e, r, t) { return r && selection_defineProperties(e.prototype, r), t && selection_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function selection_toPropertyKey(t) { var i = selection_toPrimitive(t, "string"); return "symbol" == selection_typeof(i) ? i : i + ""; }
function selection_toPrimitive(t, r) { if ("object" != selection_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != selection_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }



var selection_Selection = /*#__PURE__*/function () {
  function Selection(doc) {
    selection_classCallCheck(this, Selection);
    this.doc = void 0;
    this.emitter = Object(src["createModuleEventBus"])('Selection');
    this._selected = [];
    this.doc = doc;
    Object(src["makeObservable"])(this);
  }
  /**
   * 选中的节点 id
   */
  return selection_createClass(Selection, [{
    key: "selected",
    get: function get() {
      return this._selected;
    }
    /**
     * 选中
     */
  }, {
    key: "select",
    value: function select(id) {
      if (this._selected.length === 1 && this._selected.indexOf(id) > -1) {
        // avoid cause reaction
        return;
      }
      var node = this.doc.getNode(id);
      if (!(node !== null && node !== void 0 && node.canSelect())) {
        return;
      }
      this._selected = [id];
      this.emitter.emit('selectionchange', this._selected);
    }
    /**
     * 批量选中
     */
  }, {
    key: "selectAll",
    value: function selectAll(ids) {
      var _this = this;
      var selectIds = [];
      ids.forEach(function (d) {
        var node = _this.doc.getNode(d);
        if (node !== null && node !== void 0 && node.canSelect()) {
          selectIds.push(d);
        }
      });
      this._selected = selectIds;
      this.emitter.emit('selectionchange', this._selected);
    }
    /**
     * 清除选中
     */
  }, {
    key: "clear",
    value: function clear() {
      if (this._selected.length < 1) {
        return;
      }
      this._selected = [];
      this.emitter.emit('selectionchange', this._selected);
    }
    /**
     * 整理选中
     */
  }, {
    key: "dispose",
    value: function dispose() {
      var l = this._selected.length;
      var i = l;
      while (i-- > 0) {
        var id = this._selected[i];
        if (!this.doc.hasNode(id)) {
          this._selected.splice(i, 1);
        }
      }
      if (this._selected.length !== l) {
        this.emitter.emit('selectionchange', this._selected);
      }
    }
    /**
     * 添加选中
     */
  }, {
    key: "add",
    value: function add(id) {
      if (this._selected.indexOf(id) > -1) {
        return;
      }
      this._selected.push(id);
      this.emitter.emit('selectionchange', this._selected);
    }
    /**
     * 是否选中
     */
  }, {
    key: "has",
    value: function has(id) {
      return this._selected.indexOf(id) > -1;
    }
    /**
     * 移除选中
     */
  }, {
    key: "remove",
    value: function remove(id) {
      var i = this._selected.indexOf(id);
      if (i > -1) {
        this._selected.splice(i, 1);
        this.emitter.emit('selectionchange', this._selected);
      }
    }
    /**
     * 选区是否包含节点
     */
  }, {
    key: "containsNode",
    value: function containsNode(node) {
      var excludeRoot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var _iterator = _createForOfIteratorHelper(this._selected),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var id = _step.value;
          var parent = this.doc.getNode(id);
          if (excludeRoot && parent !== null && parent !== void 0 && parent.contains(this.doc.focusNode)) {
            continue;
          }
          if (parent !== null && parent !== void 0 && parent.contains(node)) {
            return true;
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      return false;
    }
    /**
     * 获取选中的节点
     */
  }, {
    key: "getNodes",
    value: function getNodes() {
      var nodes = [];
      var _iterator2 = _createForOfIteratorHelper(this._selected),
        _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var id = _step2.value;
          var node = this.doc.getNode(id);
          if (node) {
            nodes.push(node);
          }
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
      return nodes;
    }
    /**
     * 获取顶层选区节点，场景：拖拽时，建立蒙层，只蒙在最上层
     */
  }, {
    key: "getTopNodes",
    value: function getTopNodes() {
      var includeRoot = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      var nodes = [];
      var _iterator3 = _createForOfIteratorHelper(this._selected),
        _step3;
      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var id = _step3.value;
          var node = this.doc.getNode(id);
          // 排除根节点
          if (!node || !includeRoot && node.contains(this.doc.focusNode)) {
            continue;
          }
          var i = nodes.length;
          var isTop = true;
          while (i-- > 0) {
            var n = _comparePosition(nodes[i], node);
            // nodes[i] contains node
            if (n === PositionNO.Contains || n === PositionNO.TheSame) {
              isTop = false;
              break;
            } else if (n === PositionNO.ContainedBy) {
              // node contains nodes[i], delete nodes[i]
              nodes.splice(i, 1);
            }
          }
          // node is top item, push to nodes
          if (isTop) {
            nodes.push(node);
          }
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
      return nodes;
    }
  }, {
    key: "onSelectionChange",
    value: function onSelectionChange(fn) {
      var _this2 = this;
      this.emitter.on('selectionchange', fn);
      return function () {
        _this2.emitter.removeListener('selectionchange', fn);
      };
    }
  }]);
}();
Object(tslib_es6["b" /* __decorate */])([src["obx"].shallow, Object(tslib_es6["d" /* __metadata */])("design:type", Array)], selection_Selection.prototype, "_selected", void 0);
// CONCATENATED MODULE: ../designer/src/document/history.ts
function history_typeof(o) { "@babel/helpers - typeof"; return history_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, history_typeof(o); }
function history_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function history_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, history_toPropertyKey(o.key), o); } }
function history_createClass(e, r, t) { return r && history_defineProperties(e.prototype, r), t && history_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function history_toPropertyKey(t) { var i = history_toPrimitive(t, "string"); return "symbol" == history_typeof(i) ? i : i + ""; }
function history_toPrimitive(t, r) { if ("object" != history_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != history_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }


var history_logger = new utils_src["e" /* Logger */]({
  level: 'warn',
  bizName: 'history'
});
var history_History = /*#__PURE__*/function () {
  function History(dataFn, redoer, document) {
    var _this = this;
    history_classCallCheck(this, History);
    this.redoer = void 0;
    this.document = void 0;
    this.session = void 0;
    this.records = void 0;
    this.point = 0;
    this.emitter = Object(src["createModuleEventBus"])('History');
    this.asleep = false;
    this.currentSerialization = {
      serialize: function serialize(data) {
        return JSON.stringify(data);
      },
      unserialize: function unserialize(data) {
        return JSON.parse(data);
      }
    };
    this.timeGap = 1000;
    this.redoer = redoer;
    this.document = document;
    this.session = new Session(0, null, this.timeGap);
    this.records = [this.session];
    Object(src["reaction"])(function () {
      return dataFn();
    }, function (data) {
      if (_this.asleep) return;
      Object(src["untracked"])(function () {
        var log = _this.currentSerialization.serialize(data);
        // do not record unchanged data
        if (_this.session.data === log) {
          return;
        }
        if (_this.session.isActive()) {
          _this.session.log(log);
        } else {
          _this.session.end();
          var lastState = _this.getState();
          var cursor = _this.session.cursor + 1;
          var session = new Session(cursor, log, _this.timeGap);
          _this.session = session;
          _this.records.splice(cursor, _this.records.length - cursor, session);
          var currentState = _this.getState();
          if (currentState !== lastState) {
            _this.emitter.emit('statechange', currentState);
          }
        }
      });
    }, {
      fireImmediately: true
    });
  }
  return history_createClass(History, [{
    key: "hotData",
    get: function get() {
      return this.session.data;
    }
  }, {
    key: "setSerialization",
    value: function setSerialization(serialization) {
      this.currentSerialization = serialization;
    }
  }, {
    key: "isSavePoint",
    value: function isSavePoint() {
      return this.point !== this.session.cursor;
    }
  }, {
    key: "sleep",
    value: function sleep() {
      this.asleep = true;
    }
  }, {
    key: "wakeup",
    value: function wakeup() {
      this.asleep = false;
    }
  }, {
    key: "go",
    value: function go(originalCursor) {
      this.session.end();
      var cursor = originalCursor;
      cursor = +cursor;
      if (cursor < 0) {
        cursor = 0;
      } else if (cursor >= this.records.length) {
        cursor = this.records.length - 1;
      }
      var currentCursor = this.session.cursor;
      if (cursor === currentCursor) {
        return;
      }
      var session = this.records[cursor];
      var hotData = session.data;
      this.sleep();
      try {
        this.redoer(this.currentSerialization.unserialize(hotData));
        this.emitter.emit('cursor', hotData);
      } catch (e) /* istanbul ignore next */{
        history_logger.error(e);
      }
      this.wakeup();
      this.session = session;
      this.emitter.emit('statechange', this.getState());
    }
  }, {
    key: "back",
    value: function back() {
      var _this$document;
      if (!this.session) {
        return;
      }
      var cursor = this.session.cursor - 1;
      this.go(cursor);
      var editor = (_this$document = this.document) === null || _this$document === void 0 ? void 0 : _this$document.designer.editor;
      if (!editor) {
        return;
      }
      editor.eventBus.emit('history.back', cursor);
    }
  }, {
    key: "forward",
    value: function forward() {
      var _this$document2;
      if (!this.session) {
        return;
      }
      var cursor = this.session.cursor + 1;
      this.go(cursor);
      var editor = (_this$document2 = this.document) === null || _this$document2 === void 0 ? void 0 : _this$document2.designer.editor;
      if (!editor) {
        return;
      }
      editor.eventBus.emit('history.forward', cursor);
    }
  }, {
    key: "savePoint",
    value: function savePoint() {
      if (!this.session) {
        return;
      }
      this.session.end();
      this.point = this.session.cursor;
      this.emitter.emit('statechange', this.getState());
    }
    /**
     *  |    1     |     1    |    1     |
     *  | -------- | -------- | -------- |
     *  | modified | redoable | undoable |
     */
  }, {
    key: "getState",
    value: function getState() {
      var cursor = this.session.cursor;
      var state = 7;
      // undoable ?
      if (cursor <= 0) {
        state -= 1;
      }
      // redoable ?
      if (cursor >= this.records.length - 1) {
        state -= 2;
      }
      // modified ?
      if (this.point === cursor) {
        state -= 4;
      }
      return state;
    }
    /**
     * 监听 state 变更事件
     * @param func
     * @returns
     */
  }, {
    key: "onChangeState",
    value: function onChangeState(func) {
      return this.onStateChange(func);
    }
  }, {
    key: "onStateChange",
    value: function onStateChange(func) {
      var _this2 = this;
      this.emitter.on('statechange', func);
      return function () {
        _this2.emitter.removeListener('statechange', func);
      };
    }
    /**
     * 监听历史记录游标位置变更事件
     * @param func
     * @returns
     */
  }, {
    key: "onChangeCursor",
    value: function onChangeCursor(func) {
      return this.onCursor(func);
    }
  }, {
    key: "onCursor",
    value: function onCursor(func) {
      var _this3 = this;
      this.emitter.on('cursor', func);
      return function () {
        _this3.emitter.removeListener('cursor', func);
      };
    }
  }, {
    key: "destroy",
    value: function destroy() {
      this.emitter.removeAllListeners();
      this.records = [];
    }
    /**
     *
     * @deprecated
     * @returns
     * @memberof History
     */
  }, {
    key: "isModified",
    value: function isModified() {
      return this.isSavePoint();
    }
  }]);
}();
var Session = /*#__PURE__*/function () {
  function Session(cursor, data) {
    var timeGap = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1000;
    history_classCallCheck(this, Session);
    this.cursor = void 0;
    this.timeGap = void 0;
    this._data = void 0;
    this.activeTimer = void 0;
    this.cursor = cursor;
    this.timeGap = timeGap;
    this.setTimer();
    this.log(data);
  }
  return history_createClass(Session, [{
    key: "data",
    get: function get() {
      return this._data;
    }
  }, {
    key: "log",
    value: function log(data) {
      if (!this.isActive()) {
        return;
      }
      this._data = data;
      this.setTimer();
    }
  }, {
    key: "isActive",
    value: function isActive() {
      return this.activeTimer != null;
    }
  }, {
    key: "end",
    value: function end() {
      if (this.isActive()) {
        this.clearTimer();
      }
    }
  }, {
    key: "setTimer",
    value: function setTimer() {
      var _this4 = this;
      this.clearTimer();
      this.activeTimer = setTimeout(function () {
        return _this4.end();
      }, this.timeGap);
    }
  }, {
    key: "clearTimer",
    value: function clearTimer() {
      if (this.activeTimer) {
        clearTimeout(this.activeTimer);
      }
      this.activeTimer = null;
    }
  }]);
}();
// CONCATENATED MODULE: ../designer/src/document/node/transform-stage.ts

// CONCATENATED MODULE: ../designer/src/document/node/modal-nodes-manager.ts
function modal_nodes_manager_typeof(o) { "@babel/helpers - typeof"; return modal_nodes_manager_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, modal_nodes_manager_typeof(o); }
function modal_nodes_manager_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function modal_nodes_manager_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, modal_nodes_manager_toPropertyKey(o.key), o); } }
function modal_nodes_manager_createClass(e, r, t) { return r && modal_nodes_manager_defineProperties(e.prototype, r), t && modal_nodes_manager_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function modal_nodes_manager_toPropertyKey(t) { var i = modal_nodes_manager_toPrimitive(t, "string"); return "symbol" == modal_nodes_manager_typeof(i) ? i : i + ""; }
function modal_nodes_manager_toPrimitive(t, r) { if ("object" != modal_nodes_manager_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != modal_nodes_manager_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

function modal_nodes_manager_getModalNodes(node) {
  if (!node) return [];
  var nodes = [];
  if (node.componentMeta.isModal) {
    nodes.push(node);
  }
  var children = node.children;
  if (children) {
    children.forEach(function (child) {
      nodes = nodes.concat(modal_nodes_manager_getModalNodes(child));
    });
  }
  return nodes;
}
var modal_nodes_manager_ModalNodesManager = /*#__PURE__*/function () {
  function ModalNodesManager(page) {
    var _this = this;
    modal_nodes_manager_classCallCheck(this, ModalNodesManager);
    this.willDestroy = void 0;
    this.page = void 0;
    this.modalNodes = void 0;
    this.nodeRemoveEvents = void 0;
    this.emitter = void 0;
    this.page = page;
    this.emitter = Object(src["createModuleEventBus"])('ModalNodesManager');
    this.nodeRemoveEvents = {};
    this.setNodes();
    this.hideModalNodes();
    this.willDestroy = [page.onNodeCreate(function (node) {
      return _this.addNode(node);
    }), page.onNodeDestroy(function (node) {
      return _this.removeNode(node);
    })];
  }
  return modal_nodes_manager_createClass(ModalNodesManager, [{
    key: "getModalNodes",
    value: function getModalNodes() {
      return this.modalNodes;
    }
  }, {
    key: "getVisibleModalNode",
    value: function getVisibleModalNode() {
      var visibleNode = this.getModalNodes().find(function (node) {
        return node.getVisible();
      });
      return visibleNode || null;
    }
  }, {
    key: "hideModalNodes",
    value: function hideModalNodes() {
      this.modalNodes.forEach(function (node) {
        node.setVisible(false);
      });
    }
  }, {
    key: "setVisible",
    value: function setVisible(node) {
      this.hideModalNodes();
      node.setVisible(true);
    }
  }, {
    key: "setInvisible",
    value: function setInvisible(node) {
      node.setVisible(false);
    }
  }, {
    key: "onVisibleChange",
    value: function onVisibleChange(func) {
      var _this2 = this;
      this.emitter.on('visibleChange', func);
      return function () {
        _this2.emitter.removeListener('visibleChange', func);
      };
    }
  }, {
    key: "onModalNodesChange",
    value: function onModalNodesChange(func) {
      var _this3 = this;
      this.emitter.on('modalNodesChange', func);
      return function () {
        _this3.emitter.removeListener('modalNodesChange', func);
      };
    }
  }, {
    key: "addNode",
    value: function addNode(node) {
      if (node !== null && node !== void 0 && node.componentMeta.isModal) {
        this.hideModalNodes();
        this.modalNodes.push(node);
        this.addNodeEvent(node);
        this.emitter.emit('modalNodesChange');
        this.emitter.emit('visibleChange');
      }
    }
  }, {
    key: "removeNode",
    value: function removeNode(node) {
      if (node.componentMeta.isModal) {
        var index = this.modalNodes.indexOf(node);
        if (index >= 0) {
          this.modalNodes.splice(index, 1);
        }
        this.removeNodeEvent(node);
        this.emitter.emit('modalNodesChange');
        if (node.getVisible()) {
          this.emitter.emit('visibleChange');
        }
      }
    }
  }, {
    key: "addNodeEvent",
    value: function addNodeEvent(node) {
      var _this4 = this;
      this.nodeRemoveEvents[node.id] = node.onVisibleChange(function () {
        _this4.emitter.emit('visibleChange');
      });
    }
  }, {
    key: "removeNodeEvent",
    value: function removeNodeEvent(node) {
      if (this.nodeRemoveEvents[node.id]) {
        this.nodeRemoveEvents[node.id]();
        delete this.nodeRemoveEvents[node.id];
      }
    }
  }, {
    key: "setNodes",
    value: function setNodes() {
      var _this5 = this;
      var nodes = modal_nodes_manager_getModalNodes(this.page.rootNode);
      this.modalNodes = nodes;
      this.modalNodes.forEach(function (node) {
        _this5.addNodeEvent(node);
      });
      this.emitter.emit('modalNodesChange');
    }
  }]);
}();
// CONCATENATED MODULE: ../designer/src/document/node/index.ts







// CONCATENATED MODULE: ../designer/src/document/document-model.ts
function document_model_typeof(o) { "@babel/helpers - typeof"; return document_model_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, document_model_typeof(o); }
function document_model_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function document_model_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? document_model_ownKeys(Object(t), !0).forEach(function (r) { document_model_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : document_model_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function document_model_defineProperty(e, r, t) { return (r = document_model_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function document_model_createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = document_model_unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t.return || t.return(); } finally { if (u) throw o; } } }; }
function document_model_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return document_model_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? document_model_arrayLikeToArray(r, a) : void 0; } }
function document_model_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function document_model_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function document_model_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, document_model_toPropertyKey(o.key), o); } }
function document_model_createClass(e, r, t) { return r && document_model_defineProperties(e.prototype, r), t && document_model_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function document_model_toPropertyKey(t) { var i = document_model_toPrimitive(t, "string"); return "symbol" == document_model_typeof(i) ? i : i + ""; }
function document_model_toPrimitive(t, r) { if ("object" != document_model_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != document_model_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var document_model_a;









var document_model_DocumentModel = /*#__PURE__*/function () {
  function DocumentModel(project, schema) {
    var _this$project,
      _project$getSchema,
      _this = this;
    document_model_classCallCheck(this, DocumentModel);
    /**
     * 根节点 类型有：Page/Component/Block
     */
    this.rootNode = void 0;
    /**
     * 文档编号
     */
    this.id = Object(utils_src["ib" /* uniqueId */])('doc');
    /**
     * 选区控制
     */
    this.selection = new selection_Selection(this);
    /**
     * 操作记录控制
     */
    this.history = void 0;
    /**
     * 模态节点管理
     */
    this.modalNodesManager = void 0;
    this._nodesMap = new Map();
    this.project = void 0;
    this.designer = void 0;
    this.nodes = new Set();
    this.seqId = 0;
    this.emitter = void 0;
    this.rootNodeVisitorMap = {};
    /**
     * @deprecated
     */
    this._addons = [];
    this._drillDownNode = null;
    this._modalNode = void 0;
    this._blank = void 0;
    this.inited = false;
    this.willPurgeSpace = [];
    this.activeNodes = void 0;
    this._dropLocation = null;
    this._opened = false;
    this._suspensed = false;
    Object(src["makeObservable"])(this);
    this.project = project;
    this.designer = (_this$project = this.project) === null || _this$project === void 0 ? void 0 : _this$project.designer;
    this.emitter = Object(src["createModuleEventBus"])('DocumentModel');
    if (!schema) {
      this._blank = true;
    }
    // 兼容 vision
    this.id = ((_project$getSchema = project.getSchema()) === null || _project$getSchema === void 0 ? void 0 : _project$getSchema.id) || this.id;
    this.rootNode = this.createNode(schema || {
      componentName: 'Page',
      id: 'root',
      fileName: ''
    });
    this.history = new history_History(function () {
      return _this.export(types_src["i" /* IPublicEnumTransformStage */].Serilize);
    }, function (schema) {
      var _this$simulator;
      _this.import(schema, true);
      (_this$simulator = _this.simulator) === null || _this$simulator === void 0 ? void 0 : _this$simulator.rerender();
    }, this);
    this.setupListenActiveNodes();
    this.modalNodesManager = new modal_nodes_manager_ModalNodesManager(this);
    this.inited = true;
  }
  return document_model_createClass(DocumentModel, [{
    key: "simulator",
    get:
    /**
     * 模拟器
     */
    function get() {
      return this.project.simulator;
    }
  }, {
    key: "nodesMap",
    get: function get() {
      return this._nodesMap;
    }
  }, {
    key: "fileName",
    get: function get() {
      var _this$rootNode, _this$rootNode$getExt;
      return ((_this$rootNode = this.rootNode) === null || _this$rootNode === void 0 ? void 0 : (_this$rootNode$getExt = _this$rootNode.getExtraProp('fileName', false)) === null || _this$rootNode$getExt === void 0 ? void 0 : _this$rootNode$getExt.getAsString()) || this.id;
    },
    set: function set(fileName) {
      var _this$rootNode2, _this$rootNode2$getEx;
      (_this$rootNode2 = this.rootNode) === null || _this$rootNode2 === void 0 ? void 0 : (_this$rootNode2$getEx = _this$rootNode2.getExtraProp('fileName', true)) === null || _this$rootNode2$getEx === void 0 ? void 0 : _this$rootNode2$getEx.setValue(fileName);
    }
  }, {
    key: "focusNode",
    get: function get() {
      if (this._drillDownNode) {
        return this._drillDownNode;
      }
      var selector = src["engineConfig"].get('focusNodeSelector');
      if (selector && typeof selector === 'function') {
        return selector(this.rootNode);
      }
      return this.rootNode;
    }
  }, {
    key: "modalNode",
    get: function get() {
      return this._modalNode;
    }
  }, {
    key: "currentRoot",
    get: function get() {
      return this.modalNode || this.focusNode;
    }
  }, {
    key: "dropLocation",
    get:
    /**
     * 投放插入位置标记
     */
    function get() {
      return this._dropLocation;
    }
    /**
     * 导出 schema 数据
     */,
    set: function set(loc) {
      this._dropLocation = loc;
      // pub event
      this.designer.editor.eventBus.emit('document.dropLocation.changed', {
        document: this,
        location: loc
      });
    }
  }, {
    key: "schema",
    get: function get() {
      var _this$rootNode3;
      return (_this$rootNode3 = this.rootNode) === null || _this$rootNode3 === void 0 ? void 0 : _this$rootNode3.schema;
    }
  }, {
    key: "suspensed",
    get:
    /**
     * 是否为非激活状态
     */
    function get() {
      return this._suspensed || !this._opened;
    }
    /**
     * 与 suspensed 相反，是否为激活状态，这个函数可能用的更多一点
     */
  }, {
    key: "active",
    get: function get() {
      return !this._suspensed;
    }
    /**
     * @deprecated 兼容
     */
  }, {
    key: "actived",
    get: function get() {
      return this.active;
    }
    /**
     * 是否打开
     */
  }, {
    key: "opened",
    get: function get() {
      return this._opened;
    }
  }, {
    key: "root",
    get: function get() {
      return this.rootNode;
    }
  }, {
    key: "drillDown",
    value: function drillDown(node) {
      this._drillDownNode = node;
    }
  }, {
    key: "onChangeNodeVisible",
    value: function onChangeNodeVisible(fn) {
      var _this$designer$editor,
        _this2 = this;
      (_this$designer$editor = this.designer.editor) === null || _this$designer$editor === void 0 ? void 0 : _this$designer$editor.eventBus.on(EDITOR_EVENT.NODE_VISIBLE_CHANGE, fn);
      return function () {
        var _this2$designer$edito;
        (_this2$designer$edito = _this2.designer.editor) === null || _this2$designer$edito === void 0 ? void 0 : _this2$designer$edito.eventBus.off(EDITOR_EVENT.NODE_VISIBLE_CHANGE, fn);
      };
    }
  }, {
    key: "onChangeNodeChildren",
    value: function onChangeNodeChildren(fn) {
      var _this$designer$editor2,
        _this3 = this;
      (_this$designer$editor2 = this.designer.editor) === null || _this$designer$editor2 === void 0 ? void 0 : _this$designer$editor2.eventBus.on(EDITOR_EVENT.NODE_CHILDREN_CHANGE, fn);
      return function () {
        var _this3$designer$edito;
        (_this3$designer$edito = _this3.designer.editor) === null || _this3$designer$edito === void 0 ? void 0 : _this3$designer$edito.eventBus.off(EDITOR_EVENT.NODE_CHILDREN_CHANGE, fn);
      };
    }
  }, {
    key: "addWillPurge",
    value: function addWillPurge(node) {
      this.willPurgeSpace.push(node);
    }
  }, {
    key: "removeWillPurge",
    value: function removeWillPurge(node) {
      var i = this.willPurgeSpace.indexOf(node);
      if (i > -1) {
        this.willPurgeSpace.splice(i, 1);
      }
    }
  }, {
    key: "isBlank",
    value: function isBlank() {
      return !!(this._blank && !this.isModified());
    }
    /**
     * 生成唯一 id
     */
  }, {
    key: "nextId",
    value: function nextId(possibleId) {
      var id = possibleId;
      while (!id || this.nodesMap.get(id)) {
        id = "node_".concat((String(this.id).slice(-10) + (++this.seqId).toString(36)).toLocaleLowerCase());
      }
      return id;
    }
    /**
     * 根据 id 获取节点
     */
  }, {
    key: "getNode",
    value: function getNode(id) {
      return this._nodesMap.get(id) || null;
    }
    /**
     * 根据 id 获取节点
     */
  }, {
    key: "getNodeCount",
    value: function getNodeCount() {
      var _this$_nodesMap;
      return (_this$_nodesMap = this._nodesMap) === null || _this$_nodesMap === void 0 ? void 0 : _this$_nodesMap.size;
    }
    /**
     * 是否存在节点
     */
  }, {
    key: "hasNode",
    value: function hasNode(id) {
      var node = this.getNode(id);
      return node ? !node.isPurged : false;
    }
  }, {
    key: "onMountNode",
    value: function onMountNode(fn) {
      var _this4 = this;
      this.designer.editor.eventBus.on('node.add', fn);
      return function () {
        _this4.designer.editor.eventBus.off('node.add', fn);
      };
    }
    /**
     * 根据 schema 创建一个节点
     */
  }, {
    key: "createNode",
    value: function createNode(data) {
      var _schema;
      var schema;
      if (Object(utils_src["B" /* isDOMText */])(data) || Object(utils_src["J" /* isJSExpression */])(data)) {
        schema = {
          componentName: 'Leaf',
          children: data
        };
      } else {
        schema = data;
      }
      var node = null;
      if (this.hasNode((_schema = schema) === null || _schema === void 0 ? void 0 : _schema.id)) {
        schema.id = null;
      }
      /* istanbul ignore next */
      if (schema.id) {
        node = this.getNode(schema.id);
        // TODO: 底下这几段代码似乎永远都进不去
        if (node && node.componentName === schema.componentName) {
          if (node.parent) {
            node.internalSetParent(null, false);
            // will move to another position
            // todo: this.activeNodes?.push(node);
          }
          node.import(schema, true);
        } else if (node) {
          node = null;
        }
      }
      if (!node) {
        node = new node_Node(this, schema);
        // will add
        // todo: this.activeNodes?.push(node);
      }
      this._nodesMap.set(node.id, node);
      this.nodes.add(node);
      this.emitter.emit('nodecreate', node);
      return node;
    }
  }, {
    key: "destroyNode",
    value: function destroyNode(node) {
      this.emitter.emit('nodedestroy', node);
    }
    /**
     * 插入一个节点
     */
  }, {
    key: "insertNode",
    value: function insertNode(parent, thing, at, copy) {
      return insertChild(parent, thing, at, copy);
    }
    /**
     * 插入多个节点
     */
  }, {
    key: "insertNodes",
    value: function insertNodes(parent, thing, at, copy) {
      return insertChildren(parent, thing, at, copy);
    }
    /**
     * 移除一个节点
     */
  }, {
    key: "removeNode",
    value: function removeNode(idOrNode) {
      var id;
      var node = null;
      if (typeof idOrNode === 'string') {
        id = idOrNode;
        node = this.getNode(id);
      } else if (idOrNode.id) {
        id = idOrNode.id;
        node = this.getNode(id);
      }
      if (!node) {
        return;
      }
      this.internalRemoveAndPurgeNode(node, true);
    }
    /**
     * 内部方法，请勿调用
     */
  }, {
    key: "internalRemoveAndPurgeNode",
    value: function internalRemoveAndPurgeNode(node) {
      var useMutator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      if (!this.nodes.has(node)) {
        return;
      }
      node.remove(useMutator);
    }
  }, {
    key: "unlinkNode",
    value: function unlinkNode(node) {
      this.nodes.delete(node);
      this._nodesMap.delete(node.id);
    }
    /**
     * 包裹当前选区中的节点
     */
  }, {
    key: "wrapWith",
    value: function wrapWith(schema) {
      var nodes = this.selection.getTopNodes();
      if (nodes.length < 1) {
        return null;
      }
      var wrapper = this.createNode(schema);
      if (wrapper.isParental()) {
        var first = nodes[0];
        // TODO: check nesting rules x 2
        insertChild(first.parent, wrapper, first.index);
        insertChildren(wrapper, nodes);
        this.selection.select(wrapper.id);
        return wrapper;
      }
      this.removeNode(wrapper);
      return null;
    }
  }, {
    key: "import",
    value: function _import(schema) {
      var _this$_drillDownNode,
        _this5 = this;
      var checkId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var drillDownNodeId = (_this$_drillDownNode = this._drillDownNode) === null || _this$_drillDownNode === void 0 ? void 0 : _this$_drillDownNode.id;
      Object(src["runWithGlobalEventOff"])(function () {
        var _this5$rootNode;
        // TODO: 暂时用饱和式删除，原因是 Slot 节点并不是树节点，无法正常递归删除
        _this5.nodes.forEach(function (node) {
          if (node.isRoot()) return;
          _this5.internalRemoveAndPurgeNode(node, true);
        });
        (_this5$rootNode = _this5.rootNode) === null || _this5$rootNode === void 0 ? void 0 : _this5$rootNode.import(schema, checkId);
        _this5.modalNodesManager = new modal_nodes_manager_ModalNodesManager(_this5);
        // todo: select added and active track added
        if (drillDownNodeId) {
          _this5.drillDown(_this5.getNode(drillDownNodeId));
        }
      });
    }
  }, {
    key: "export",
    value: function _export() {
      var _this$rootNode4, _currentSchema$childr, _currentSchema$childr2;
      var stage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : types_src["i" /* IPublicEnumTransformStage */].Serilize;
      stage = Object(utils_src["l" /* compatStage */])(stage);
      // 置顶只作用于 Page 的第一级子节点，目前还用不到里层的置顶；如果后面有需要可以考虑将这段写到 node-children 中的 export
      var currentSchema = (_this$rootNode4 = this.rootNode) === null || _this$rootNode4 === void 0 ? void 0 : _this$rootNode4.export(stage);
      if (Array.isArray(currentSchema === null || currentSchema === void 0 ? void 0 : currentSchema.children) && currentSchema !== null && currentSchema !== void 0 && (_currentSchema$childr = currentSchema.children) !== null && _currentSchema$childr !== void 0 && _currentSchema$childr.length && (currentSchema === null || currentSchema === void 0 ? void 0 : (_currentSchema$childr2 = currentSchema.children) === null || _currentSchema$childr2 === void 0 ? void 0 : _currentSchema$childr2.length) > 0) {
        var FixedTopNodeIndex = currentSchema === null || currentSchema === void 0 ? void 0 : currentSchema.children.filter(function (i) {
          return Object(utils_src["R" /* isPlainObject */])(i);
        }).findIndex(function (i) {
          var _i$props;
          return (_i$props = i.props) === null || _i$props === void 0 ? void 0 : _i$props.__isTopFixed__;
        });
        if (FixedTopNodeIndex > 0) {
          var FixedTopNode = currentSchema === null || currentSchema === void 0 ? void 0 : currentSchema.children.splice(FixedTopNodeIndex, 1);
          currentSchema === null || currentSchema === void 0 ? void 0 : currentSchema.children.unshift(FixedTopNode[0]);
        }
      }
      return currentSchema;
    }
    /**
     * 导出节点数据
     */
  }, {
    key: "getNodeSchema",
    value: function getNodeSchema(id) {
      var node = this.getNode(id);
      if (node) {
        return node.schema;
      }
      return null;
    }
    /**
     * 是否已修改
     */
  }, {
    key: "isModified",
    value: function isModified() {
      return this.history.isSavePoint();
    }
    // FIXME: does needed?
  }, {
    key: "getComponent",
    value: function getComponent(componentName) {
      return this.simulator.getComponent(componentName);
    }
  }, {
    key: "getComponentMeta",
    value: function getComponentMeta(componentName) {
      var _this6 = this;
      return this.designer.getComponentMeta(componentName, function () {
        var _this6$simulator;
        return ((_this6$simulator = _this6.simulator) === null || _this6$simulator === void 0 ? void 0 : _this6$simulator.generateComponentMetadata(componentName)) || null;
      });
    }
    /**
     * 切换激活，只有打开的才能激活
     * 不激活，打开之后切换到另外一个时发生，比如 tab 视图，切换到另外一个标签页
     */
  }, {
    key: "setSuspense",
    value: function setSuspense(flag) {
      var _this$simulator2;
      if (!this._opened && !flag) {
        return;
      }
      this._suspensed = flag;
      (_this$simulator2 = this.simulator) === null || _this$simulator2 === void 0 ? void 0 : _this$simulator2.setSuspense(flag);
      if (!flag) {
        this.project.checkExclusive(this);
      }
    }
  }, {
    key: "suspense",
    value: function suspense() {
      this.setSuspense(true);
    }
  }, {
    key: "activate",
    value: function activate() {
      this.setSuspense(false);
    }
    /**
     * 打开，已载入，默认建立时就打开状态，除非手动关闭
     */
  }, {
    key: "open",
    value: function open() {
      var originState = this._opened;
      this._opened = true;
      if (originState === false) {
        this.designer.postEvent('document-open', this);
      }
      if (this._suspensed) {
        this.setSuspense(false);
      } else {
        this.project.checkExclusive(this);
      }
      return this;
    }
    /**
     * 关闭，相当于 sleep，仍然缓存，停止一切响应，如果有发生的变更没被保存，仍然需要去取数据保存
     */
  }, {
    key: "close",
    value: function close() {
      this.setSuspense(true);
      this._opened = false;
    }
    /**
     * 从项目中移除
     */
  }, {
    key: "remove",
    value: function remove() {
      this.designer.postEvent('document.remove', {
        id: this.id
      });
      this.purge();
      this.project.removeDocument(this);
    }
  }, {
    key: "purge",
    value: function purge() {
      var _this$rootNode5;
      (_this$rootNode5 = this.rootNode) === null || _this$rootNode5 === void 0 ? void 0 : _this$rootNode5.purge();
      this.nodes.clear();
      this._nodesMap.clear();
      this.rootNode = null;
    }
  }, {
    key: "checkNesting",
    value: function checkNesting(dropTarget, dragObject) {
      var _this7 = this;
      var items;
      if (Object(utils_src["D" /* isDragNodeDataObject */])(dragObject)) {
        items = Array.isArray(dragObject.data) ? dragObject.data : [dragObject.data];
      } else if (Object(utils_src["E" /* isDragNodeObject */])(dragObject)) {
        items = dragObject.nodes;
      } else if (Object(utils_src["P" /* isNode */])(dragObject) || Object(utils_src["Q" /* isNodeSchema */])(dragObject)) {
        items = [dragObject];
      } else {
        console.warn('the dragObject is not in the correct type, dragObject:', dragObject);
        return true;
      }
      return items.every(function (item) {
        return _this7.checkNestingDown(dropTarget, item) && _this7.checkNestingUp(dropTarget, item);
      });
    }
    /**
     * @deprecated since version 1.0.16.
     * Will be deleted in version 2.0.0.
     * Use checkNesting method instead.
     */
  }, {
    key: "checkDropTarget",
    value: function checkDropTarget(dropTarget, dragObject) {
      var _this8 = this;
      var items;
      if (Object(utils_src["D" /* isDragNodeDataObject */])(dragObject)) {
        items = Array.isArray(dragObject.data) ? dragObject.data : [dragObject.data];
      } else if (Object(utils_src["E" /* isDragNodeObject */])(dragObject)) {
        items = dragObject.nodes;
      } else {
        return false;
      }
      return items.every(function (item) {
        return _this8.checkNestingUp(dropTarget, item);
      });
    }
    /**
     * 检查对象对父级的要求，涉及配置 parentWhitelist
     */
  }, {
    key: "checkNestingUp",
    value: function checkNestingUp(parent, obj) {
      if (Object(utils_src["P" /* isNode */])(obj) || Object(utils_src["Q" /* isNodeSchema */])(obj)) {
        var config = Object(utils_src["P" /* isNode */])(obj) ? obj.componentMeta : this.getComponentMeta(obj.componentName);
        if (config) {
          return config.checkNestingUp(obj, parent);
        }
      }
      return true;
    }
    /**
     * 检查投放位置对子级的要求，涉及配置 childWhitelist
     */
  }, {
    key: "checkNestingDown",
    value: function checkNestingDown(parent, obj) {
      var config = parent.componentMeta;
      return config.checkNestingDown(parent, obj);
    }
    // ======= compatibles for vision
  }, {
    key: "getRoot",
    value: function getRoot() {
      return this.rootNode;
    }
    // add toData
  }, {
    key: "toData",
    value: function toData(extraComps) {
      var node = this.export(types_src["i" /* IPublicEnumTransformStage */].Save);
      var data = {
        componentsMap: this.getComponentsMap(extraComps),
        utils: this.getUtilsMap(),
        componentsTree: [node]
      };
      return data;
    }
  }, {
    key: "getHistory",
    value: function getHistory() {
      return this.history;
    }
    /**
     * @deprecated
     */
    /* istanbul ignore next */
  }, {
    key: "getAddonData",
    value: function getAddonData(name) {
      var addon = this._addons.find(function (item) {
        return item.name === name;
      });
      if (addon) {
        return addon.exportData();
      }
    }
    /**
     * @deprecated
    */
    /* istanbul ignore next */
  }, {
    key: "exportAddonData",
    value: function exportAddonData() {
      var addons = {};
      this._addons.forEach(function (addon) {
        var data = addon.exportData();
        if (data === null) {
          delete addons[addon.name];
        } else {
          addons[addon.name] = data;
        }
      });
      return addons;
    }
    /**
     * @deprecated
     */
    /* istanbul ignore next */
  }, {
    key: "registerAddon",
    value: function registerAddon(name, exportData) {
      if (['id', 'params', 'layout'].indexOf(name) > -1) {
        throw new Error('addon name cannot be id, params, layout');
      }
      var i = this._addons.findIndex(function (item) {
        return item.name === name;
      });
      if (i > -1) {
        this._addons.splice(i, 1);
      }
      this._addons.push({
        exportData: exportData,
        name: name
      });
    }
    /* istanbul ignore next */
  }, {
    key: "acceptRootNodeVisitor",
    value: function acceptRootNodeVisitor() {
      var visitorName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';
      var visitorFn = arguments.length > 1 ? arguments[1] : undefined;
      var visitorResult = {};
      if (!visitorName) {
        /* eslint-disable-next-line no-console */
        console.warn('Invalid or empty RootNodeVisitor name.');
      }
      try {
        if (this.rootNode) {
          visitorResult = visitorFn.call(this, this.rootNode);
          this.rootNodeVisitorMap[visitorName] = visitorResult;
        }
      } catch (e) {
        console.error('RootNodeVisitor is not valid.');
        console.error(e);
      }
      return visitorResult;
    }
    /* istanbul ignore next */
  }, {
    key: "getRootNodeVisitor",
    value: function getRootNodeVisitor(name) {
      return this.rootNodeVisitorMap[name];
    }
  }, {
    key: "getComponentsMap",
    value: function getComponentsMap(extraComps) {
      var _this9 = this;
      var componentsMap = [];
      // 组件去重
      var exsitingMap = {};
      var _iterator = document_model_createForOfIteratorHelper(this._nodesMap.values()),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var node = _step.value;
          var _ref = node || {},
            componentName = _ref.componentName;
          if (componentName === 'Slot') continue;
          if (!exsitingMap[componentName]) {
            var _node$componentMeta, _node$componentMeta$n;
            exsitingMap[componentName] = true;
            if ((_node$componentMeta = node.componentMeta) !== null && _node$componentMeta !== void 0 && (_node$componentMeta$n = _node$componentMeta.npm) !== null && _node$componentMeta$n !== void 0 && _node$componentMeta$n.package) {
              componentsMap.push(document_model_objectSpread(document_model_objectSpread({}, node.componentMeta.npm), {}, {
                componentName: componentName
              }));
            } else {
              componentsMap.push({
                devMode: 'lowCode',
                componentName: componentName
              });
            }
          }
        }
        // 合并外界传入的自定义渲染的组件
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      if (Array.isArray(extraComps)) {
        extraComps.forEach(function (componentName) {
          if (componentName && !exsitingMap[componentName]) {
            var _meta$npm;
            var meta = _this9.getComponentMeta(componentName);
            if (meta !== null && meta !== void 0 && (_meta$npm = meta.npm) !== null && _meta$npm !== void 0 && _meta$npm.package) {
              componentsMap.push(document_model_objectSpread(document_model_objectSpread({}, meta === null || meta === void 0 ? void 0 : meta.npm), {}, {
                componentName: componentName
              }));
            } else {
              componentsMap.push({
                devMode: 'lowCode',
                componentName: componentName
              });
            }
          }
        });
      }
      return componentsMap;
    }
    /**
     * 获取 schema 中的 utils 节点，当前版本不判断页面中使用了哪些 utils，直接返回资产包中所有的 utils
     * @returns
     */
  }, {
    key: "getUtilsMap",
    value: function getUtilsMap() {
      var _this$designer, _this$designer$editor3, _this$designer$editor4, _this$designer$editor5;
      return (_this$designer = this.designer) === null || _this$designer === void 0 ? void 0 : (_this$designer$editor3 = _this$designer.editor) === null || _this$designer$editor3 === void 0 ? void 0 : (_this$designer$editor4 = _this$designer$editor3.get('assets')) === null || _this$designer$editor4 === void 0 ? void 0 : (_this$designer$editor5 = _this$designer$editor4.utils) === null || _this$designer$editor5 === void 0 ? void 0 : _this$designer$editor5.map(function (item) {
        return {
          name: item.name,
          type: item.type || 'npm',
          // TODO 当前只有 npm 类型，content 直接设置为 item.npm，有 function 类型之后需要处理
          content: item.npm
        };
      });
    }
  }, {
    key: "onNodeCreate",
    value: function onNodeCreate(func) {
      var _this0 = this;
      var wrappedFunc = Object(src["wrapWithEventSwitch"])(func);
      this.emitter.on('nodecreate', wrappedFunc);
      return function () {
        _this0.emitter.removeListener('nodecreate', wrappedFunc);
      };
    }
  }, {
    key: "onNodeDestroy",
    value: function onNodeDestroy(func) {
      var _this1 = this;
      var wrappedFunc = Object(src["wrapWithEventSwitch"])(func);
      this.emitter.on('nodedestroy', wrappedFunc);
      return function () {
        _this1.emitter.removeListener('nodedestroy', wrappedFunc);
      };
    }
    /**
     * @deprecated
     */
  }, {
    key: "refresh",
    value: function refresh() {
      console.warn('refresh method is deprecated');
    }
    /**
     * @deprecated
     */
  }, {
    key: "onRefresh",
    value: function onRefresh(/* func: () => void */
    ) {
      console.warn('onRefresh method is deprecated');
    }
  }, {
    key: "onReady",
    value: function onReady(fn) {
      var _this10 = this;
      this.designer.editor.eventBus.on('document-open', fn);
      return function () {
        _this10.designer.editor.eventBus.off('document-open', fn);
      };
    }
  }, {
    key: "setupListenActiveNodes",
    value: function setupListenActiveNodes() {
      // todo:
    }
  }]);
}();
Object(tslib_es6["b" /* __decorate */])([src["obx"].shallow, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], document_model_DocumentModel.prototype, "nodes", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], document_model_DocumentModel.prototype, "_drillDownNode", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"].shallow, Object(tslib_es6["d" /* __metadata */])("design:type", Array)], document_model_DocumentModel.prototype, "willPurgeSpace", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"].shallow, Object(tslib_es6["d" /* __metadata */])("design:type", Array)], document_model_DocumentModel.prototype, "activeNodes", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], document_model_DocumentModel.prototype, "_dropLocation", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], document_model_DocumentModel.prototype, "_opened", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], document_model_DocumentModel.prototype, "_suspensed", void 0);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Object]), Object(tslib_es6["d" /* __metadata */])("design:returntype", typeof (document_model_a = typeof T !== "undefined" && T) === "function" ? document_model_a : Object)], document_model_DocumentModel.prototype, "createNode", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Object, Object]), Object(tslib_es6["d" /* __metadata */])("design:returntype", void 0)], document_model_DocumentModel.prototype, "import", null);
function isDocumentModel(obj) {
  return obj && obj.rootNode;
}
function isPageSchema(obj) {
  return (obj === null || obj === void 0 ? void 0 : obj.componentName) === 'Page';
}
// CONCATENATED MODULE: ../designer/src/document/index.ts




// CONCATENATED MODULE: ../designer/src/icons/lock.tsx
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

function IconLock(props) {
  return /*#__PURE__*/React.createElement(utils_src["f" /* SVGIcon */], _extends({
    viewBox: "0 0 1024 1024"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M704 480v-160c0-105.6-86.4-192-192-192s-192 86.4-192 192v160H160v416h704V480h-160z m-320-160c0-70.4 57.6-128 128-128s128 57.6 128 128v160h-256v-160z m416 512H224v-288h576v288z",
    fill: "#ffffff",
    "p-id": "2680"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M480 768h64v-160h-64z",
    fill: "#ffffff",
    "p-id": "2681"
  }));
}
IconLock.displayName = 'IconLock';
// CONCATENATED MODULE: ../designer/src/icons/hidden.tsx
function hidden_extends() { return hidden_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, hidden_extends.apply(null, arguments); }

function IconHidden(props) {
  return /*#__PURE__*/React.createElement(utils_src["f" /* SVGIcon */], hidden_extends({
    viewBox: "0 0 1024 1024"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M183.423543 657.078213l163.499771-98.484012c-4.233418-14.908548-6.646374-30.585599-6.646374-46.852074 0-94.665033 76.739778-171.404812 171.404812-171.404812 45.983287 0 87.641059 18.20871 118.42518 47.679929l129.791042-78.17957c-73.254398-41.73145-157.866471-65.812915-248.216221-65.812915-192.742792 0-360.068705 108.505249-444.453604 267.715321C96.636944 567.228859 136.301316 616.355743 183.423543 657.078213zM841.253886 367.552144l-164.382884 99.015108c3.934612 14.415314 6.215562 29.513174 6.215562 45.174875 0 94.665033-76.739778 171.404812-171.404812 171.404812-45.361117 0-86.484723-17.747199-117.142977-46.515407l-129.419582 77.955466c72.874751 41.149189 156.893306 64.871473 246.563582 64.871473 192.742792 0 360.068705-108.505249 444.453604-267.717368C927.000805 456.773188 887.794875 408.054603 841.253886 367.552144zM420.280042 511.741104c0 0.550539 0.152473 1.060145 0.161682 1.608637l135.080511-81.366146c-13.065574-7.198959-27.854395-11.658528-43.826158-11.658528C461.20922 420.325068 420.280042 461.254246 420.280042 511.741104zM447.739441 576.947198l69.02098-41.574884L948.364369 275.395234c10.812253-6.512321 14.297634-20.558222 7.785314-31.369452-6.512321-10.812253-20.556175-14.296611-31.368428-7.785314L575.654762 446.537056l0 0-151.20577 91.078345 0 0L75.027787 748.090043c-10.812253 6.512321-14.297634 20.556175-7.785314 31.368428 6.512321 10.812253 20.556175 14.297634 31.369452 7.785314L447.739441 576.947198 447.739441 576.947198zM511.696078 603.157139c50.487881 0 91.416036-40.928155 91.416036-91.416036 0-0.549515-0.152473-1.057075-0.161682-1.605567l-135.079488 81.364099C480.935494 598.699618 495.724315 603.157139 511.696078 603.157139z"
  }));
}
IconHidden.displayName = 'Hidden';
// CONCATENATED MODULE: ../designer/src/icons/remove.tsx
function remove_extends() { return remove_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, remove_extends.apply(null, arguments); }

function IconRemove(props) {
  return /*#__PURE__*/React.createElement(utils_src["f" /* SVGIcon */], remove_extends({
    viewBox: "0 0 1024 1024"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M224 256v639.84A64 64 0 0 0 287.84 960h448.32A64 64 0 0 0 800 895.84V256h64a32 32 0 1 0 0-64H160a32 32 0 1 0 0 64h64zM384 96c0-17.664 14.496-32 31.904-32h192.192C625.696 64 640 78.208 640 96c0 17.664-14.496 32-31.904 32H415.904A31.872 31.872 0 0 1 384 96z m-96 191.744C288 270.208 302.4 256 320.224 256h383.552C721.6 256 736 270.56 736 287.744v576.512C736 881.792 721.6 896 703.776 896H320.224A32.224 32.224 0 0 1 288 864.256V287.744zM352 352c0-17.696 14.208-32.032 32-32.032 17.664 0 32 14.24 32 32v448c0 17.664-14.208 32-32 32-17.664 0-32-14.24-32-32V352z m128 0c0-17.696 14.208-32.032 32-32.032 17.664 0 32 14.24 32 32v448c0 17.664-14.208 32-32 32-17.664 0-32-14.24-32-32V352z m128 0c0-17.696 14.208-32.032 32-32.032 17.664 0 32 14.24 32 32v448c0 17.664-14.208 32-32 32-17.664 0-32-14.24-32-32V352z"
  }));
}
IconRemove.displayName = 'Remove';
// CONCATENATED MODULE: ../designer/src/icons/setting.tsx
function setting_extends() { return setting_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, setting_extends.apply(null, arguments); }

function IconSetting(props) {
  return /*#__PURE__*/React.createElement(utils_src["f" /* SVGIcon */], setting_extends({
    viewBox: "0 0 1024 1024"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M965.824 405.952a180.48 180.48 0 0 1-117.12-85.376 174.464 174.464 0 0 1-16-142.08 22.208 22.208 0 0 0-7.04-23.552 480.576 480.576 0 0 0-153.6-89.216 23.104 23.104 0 0 0-24.32 5.76 182.208 182.208 0 0 1-135.68 57.92 182.208 182.208 0 0 1-133.12-56.64 23.104 23.104 0 0 0-26.88-7.04 478.656 478.656 0 0 0-153.6 89.856 22.208 22.208 0 0 0-7.04 23.552 174.464 174.464 0 0 1-16 141.44A180.48 180.48 0 0 1 58.24 405.952a22.4 22.4 0 0 0-17.28 17.792 455.08 455.08 0 0 0 0 176.512 22.4 22.4 0 0 0 17.28 17.792 180.48 180.48 0 0 1 117.12 84.736c25.408 42.944 31.232 94.592 16 142.08a22.208 22.208 0 0 0 7.04 23.552A480.576 480.576 0 0 0 352 957.632h7.68a23.04 23.04 0 0 0 16.64-7.04 184.128 184.128 0 0 1 266.944 0c6.592 8.96 18.752 11.968 28.8 7.04a479.36 479.36 0 0 0 156.16-88.576 22.208 22.208 0 0 0 7.04-23.552 174.464 174.464 0 0 1 13.44-142.72 180.48 180.48 0 0 1 117.12-84.736 22.4 22.4 0 0 0 17.28-17.792 452.613 452.613 0 0 0 0-176.512 23.04 23.04 0 0 0-17.28-17.792z m-42.88 169.408a218.752 218.752 0 0 0-128 98.112 211.904 211.904 0 0 0-21.76 156.736 415.936 415.936 0 0 1-112 63.68 217.472 217.472 0 0 0-149.12-63.68 221.312 221.312 0 0 0-149.12 63.68 414.592 414.592 0 0 1-112-63.68c12.8-53.12 4.288-109.12-23.68-156.096A218.752 218.752 0 0 0 101.12 575.36a386.176 386.176 0 0 1 0-127.36 218.752 218.752 0 0 0 128-98.112c27.2-47.552 34.944-103.68 21.76-156.8a415.296 415.296 0 0 1 112-63.68A221.44 221.44 0 0 0 512 187.392a218.24 218.24 0 0 0 149.12-57.984 413.952 413.952 0 0 1 112 63.744 211.904 211.904 0 0 0 23.04 156.096 218.752 218.752 0 0 0 128 98.112 386.65 386.65 0 0 1 0 127.36l-1.28 0.64z"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M512 320.576c-105.984 0-192 85.568-192 191.104a191.552 191.552 0 0 0 192 191.104c106.112 0 192.064-85.568 192.064-191.104a190.72 190.72 0 0 0-56.256-135.168 192.448 192.448 0 0 0-135.744-55.936z m0 318.528c-70.656 0-128-57.088-128-127.424 0-70.4 57.344-127.36 128-127.36 70.72 0 128 56.96 128 127.36 0 33.792-13.44 66.176-37.44 90.112a128.32 128.32 0 0 1-90.496 37.312z"
  }));
}
IconSetting.displayName = 'Setting';
// CONCATENATED MODULE: ../designer/src/icons/component.tsx
function component_extends() { return component_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, component_extends.apply(null, arguments); }

function IconComponent(props) {
  return /*#__PURE__*/React.createElement(utils_src["f" /* SVGIcon */], component_extends({
    viewBox: "0 0 1024 1024"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M783.5648 437.4528h-18.0224V336.6912c0-43.8272-35.6352-79.4624-79.4624-79.4624h-110.592V241.664c0-90.9312-73.728-164.6592-164.6592-164.6592-90.9312 0-164.6592 73.728-164.6592 164.6592v15.5648H155.2384c-43.8272 0-79.4624 35.6352-79.4624 79.4624v131.4816c0 16.7936 13.9264 30.72 30.72 30.72h56.1152c56.9344 0 103.2192 46.2848 103.2192 103.2192s-46.2848 103.2192-103.2192 103.2192H106.496c-16.7936 0-30.72 13.9264-30.72 30.72v131.4816c0 43.8272 35.6352 79.4624 79.4624 79.4624h531.2512c43.8272 0 79.4624-35.6352 79.4624-79.4624v-100.7616h18.0224c90.9312 0 164.6592-73.728 164.6592-164.6592-0.4096-90.9312-74.1376-164.6592-165.0688-164.6592z m0 267.8784h-48.7424c-16.7936 0-30.72 13.9264-30.72 30.72v131.4816c0 9.8304-8.192 18.0224-18.0224 18.0224H155.2384c-9.8304 0-18.0224-8.192-18.0224-18.0224v-100.7616h25.3952c90.9312 0 164.6592-73.728 164.6592-164.6592 0-90.9312-73.728-164.6592-164.6592-164.6592h-25.3952V336.6912c0-9.8304 8.192-18.0224 18.0224-18.0224h121.6512c16.7936 0 30.72-13.9264 30.72-30.72V241.664c0-56.9344 46.2848-103.2192 103.2192-103.2192s103.2192 46.2848 103.2192 103.2192v46.2848c0 16.7936 13.9264 30.72 30.72 30.72h141.312c9.8304 0 18.0224 8.192 18.0224 18.0224v131.4816c0 16.7936 13.9264 30.72 30.72 30.72h48.7424c56.9344 0 103.2192 46.2848 103.2192 103.2192s-46.2848 103.2192-103.2192 103.2192z"
  }));
}
IconComponent.displayName = 'Component';
// CONCATENATED MODULE: ../designer/src/icons/clone.tsx
function clone_extends() { return clone_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, clone_extends.apply(null, arguments); }

function IconClone(props) {
  return /*#__PURE__*/React.createElement(utils_src["f" /* SVGIcon */], clone_extends({
    viewBox: "0 0 1024 1024"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M192 256.16C192 220.736 220.704 192 256.16 192h639.68C931.264 192 960 220.704 960 256.16v639.68A64.16 64.16 0 0 1 895.84 960H256.16A64.16 64.16 0 0 1 192 895.84V256.16z m64 31.584v576.512a32 32 0 0 0 31.744 31.744h576.512a32 32 0 0 0 31.744-31.744V287.744A32 32 0 0 0 864.256 256H287.744A32 32 0 0 0 256 287.744zM288 192v64h64V192H288z m128 0v64h64V192h-64z m128 0v64h64V192h-64z m128 0v64h64V192h-64z m128 0v64h64V192h-64z m96 96v64h64V288h-64z m0 128v64h64v-64h-64z m0 128v64h64v-64h-64z m0 128v64h64v-64h-64z m0 128v64h64v-64h-64z m-96 96v64h64v-64h-64z m-128 0v64h64v-64h-64z m-128 0v64h64v-64h-64z m-128 0v64h64v-64h-64z m-128 0v64h64v-64H288z m-96-96v64h64v-64H192z m0-128v64h64v-64H192z m0-128v64h64v-64H192z m0-128v64h64v-64H192z m0-128v64h64V288H192z m160 416c0-17.664 14.592-32 32.064-32h319.872a31.968 31.968 0 1 1 0 64h-319.872A31.968 31.968 0 0 1 352 704z m0-128c0-17.664 14.4-32 32.224-32h383.552c17.792 0 32.224 14.208 32.224 32 0 17.664-14.4 32-32.224 32H384.224A32.032 32.032 0 0 1 352 576z m0-128c0-17.664 14.4-32 32.224-32h383.552c17.792 0 32.224 14.208 32.224 32 0 17.664-14.4 32-32.224 32H384.224A32.032 32.032 0 0 1 352 448z m512 47.936V192h-64V159.968A31.776 31.776 0 0 0 768.032 128H160A31.776 31.776 0 0 0 128 159.968V768c0 17.92 14.304 31.968 31.968 31.968H192v64h303.936H128.128A63.968 63.968 0 0 1 64 799.872V128.128C64 92.704 92.48 64 128.128 64h671.744C835.296 64 864 92.48 864 128.128v367.808z"
  }));
}
IconClone.displayName = 'Clone';
// CONCATENATED MODULE: ../designer/src/icons/page.tsx
function page_extends() { return page_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, page_extends.apply(null, arguments); }

function IconPage(props) {
  return /*#__PURE__*/React.createElement(utils_src["f" /* SVGIcon */], page_extends({
    viewBox: "0 0 1024 1024"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M381.6 864H162.4c-6.9 0-12.4 4.6-12.4 10.3v19.3c0 5.7 5.6 10.3 12.4 10.3h219.1c6.8 0 12.4-4.6 12.4-10.3v-19.3c0.1-5.7-5.5-10.3-12.3-10.3zM382 780.6H162c-6.9 0-12.5 4.6-12.5 10.3v19.3c0 5.7 5.6 10.3 12.5 10.3h220c6.9 0 12.5-4.6 12.5-10.3v-19.3c0-5.7-5.6-10.3-12.5-10.3zM162.4 737.2h219.1c6.8 0 12.4-4.6 12.4-10.3v-19.3c0-5.7-5.6-10.3-12.4-10.3H162.4c-6.9 0-12.4 4.6-12.4 10.3v19.3c0 5.7 5.6 10.3 12.4 10.3z"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M977.1 0H46.9C21 0 0 21 0 46.9v930.2c0 25.9 21 46.9 46.9 46.9h930.2c25.9 0 46.9-21 46.9-46.9V46.9C1024 21 1003 0 977.1 0z m-18.7 911.6c0 25.9-21 46.9-46.9 46.9H112.4c-25.9 0-46.9-21-46.9-47V112.4c0-25.9 21-46.9 46.9-46.9h799.1c25.9 0 46.9 21 46.9 46.9v799.2z"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M207.9 342.7h608.2c32 0 57.9-25.9 57.9-57.9v-83c0-32-25.9-57.9-57.9-57.9H207.9c-32 0-57.9 25.9-57.9 57.9v83c0 32 25.9 57.9 57.9 57.9zM200 201.8c0-4.4 3.5-7.9 7.9-7.9h608.2c4.4 0 7.9 3.5 7.9 7.9v83c0 4.4-3.5 7.9-7.9 7.9H207.9c-4.4 0-7.9-3.5-7.9-7.9v-83zM806.4 405.7h-277c-37.3 0-67.6 30.2-67.6 67.6v363.2c0 37.3 30.2 67.6 67.6 67.6h277c37.3 0 67.6-30.2 67.6-67.6V473.3c0-37.4-30.2-67.6-67.6-67.6zM824 836.4c0 9.7-7.9 17.6-17.6 17.6h-277c-9.7 0-17.6-7.9-17.6-17.6V473.3c0-9.7 7.9-17.6 17.6-17.6h277c9.7 0 17.6 7.9 17.6 17.6v363.1zM272 649.7c67.4 0 122-54.6 122-122s-54.6-122-122-122-122 54.6-122 122 54.6 122 122 122z m0-204c45.2 0 82 36.8 82 82s-36.8 82-82 82-82-36.8-82-82 36.8-82 82-82z"
  }));
}
IconPage.displayName = 'Page';
// CONCATENATED MODULE: ../designer/src/icons/container.tsx
function container_extends() { return container_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, container_extends.apply(null, arguments); }

function IconContainer(props) {
  return /*#__PURE__*/React.createElement(utils_src["f" /* SVGIcon */], container_extends({
    viewBox: "0 0 1024 1024"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M800 800h64v64h-64v-64z m-128 0h64v64h-64v-64z m-128 0h64v64h-64v-64z m-128 0h64v64h-64v-64z m-256 0h64v64h-64v-64z m0-640h64v64h-64v-64z m128 640h64v64h-64v-64zM160 672h64v64h-64v-64z m0-128h64v64h-64v-64z m0-128h64v64h-64v-64z m0-128h64v64h-64v-64z m640 384h64v64h-64v-64z m0-128h64v64h-64v-64z m0-128h64v64h-64v-64z m0-128h64v64h-64v-64z m0-128h64v64h-64v-64z m-128 0h64v64h-64v-64z m-128 0h64v64h-64v-64z m-128 0h64v64h-64v-64z m-128 0h64v64h-64v-64z"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M896 64H128c-35.2 0-64 28.8-64 64v768c0 35.2 28.8 64 64 64h768c35.2 0 64-28.8 64-64V128c0-35.2-28.8-64-64-64z m0 800c0 19.2-12.8 32-32 32H160c-19.2 0-32-12.8-32-32V160c0-19.2 12.8-32 32-32h704c19.2 0 32 12.8 32 32v704z"
  }));
}
IconContainer.displayName = 'Container';
// CONCATENATED MODULE: ../designer/src/icons/unlock.tsx
function unlock_extends() { return unlock_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, unlock_extends.apply(null, arguments); }

function IconUnlock(props) {
  return /*#__PURE__*/React.createElement(utils_src["f" /* SVGIcon */], unlock_extends({
    viewBox: "0 0 1024 1024"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M384 480v-160c0-70.4 57.6-128 128-128s128 57.6 128 128v64h64v-64c0-105.6-86.4-192-192-192s-192 86.4-192 192v160H160v416h704V480H384z m416 352H224v-288h576v288z",
    fill: "#ffffff",
    "p-id": "2813"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M416 736h192v-64h-192z",
    fill: "#ffffff",
    "p-id": "2814"
  }));
}
IconUnlock.displayName = 'IconUnlock';
// CONCATENATED MODULE: ../designer/src/icons/index.ts









// CONCATENATED MODULE: ../designer/src/component-meta.ts
var component_meta_excluded = ["componentName", "npm"];
function component_meta_typeof(o) { "@babel/helpers - typeof"; return component_meta_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, component_meta_typeof(o); }
function component_meta_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function component_meta_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? component_meta_ownKeys(Object(t), !0).forEach(function (r) { component_meta_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : component_meta_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function component_meta_defineProperty(e, r, t) { return (r = component_meta_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function component_meta_objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = component_meta_objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }
function component_meta_objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }
function component_meta_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function component_meta_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, component_meta_toPropertyKey(o.key), o); } }
function component_meta_createClass(e, r, t) { return r && component_meta_defineProperties(e.prototype, r), t && component_meta_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function component_meta_toPropertyKey(t) { var i = component_meta_toPrimitive(t, "string"); return "symbol" == component_meta_typeof(i) ? i : i + ""; }
function component_meta_toPrimitive(t, r) { if ("object" != component_meta_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != component_meta_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }





function ensureAList(list) {
  if (!list) {
    return null;
  }
  if (!Array.isArray(list)) {
    if (typeof list !== 'string') {
      return null;
    }
    list = list.split(/ *[ ,|] */).filter(Boolean);
  }
  if (list.length < 1) {
    return null;
  }
  return list;
}
function buildFilter(rule) {
  if (!rule) {
    return null;
  }
  if (typeof rule === 'function') {
    return rule;
  }
  if (Object(utils_src["W" /* isRegExp */])(rule)) {
    return function (testNode) {
      return rule.test(testNode.componentName);
    };
  }
  var list = ensureAList(rule);
  if (!list) {
    return null;
  }
  return function (testNode) {
    return list.includes(testNode.componentName);
  };
}
var component_meta_ComponentMeta = /*#__PURE__*/function () {
  function ComponentMeta(designer, metadata) {
    component_meta_classCallCheck(this, ComponentMeta);
    this.designer = void 0;
    this.isComponentMeta = true;
    this._npm = void 0;
    this.emitter = Object(src["createModuleEventBus"])('ComponentMeta');
    this._componentName = void 0;
    this._isContainer = void 0;
    this._isModal = void 0;
    this._descriptor = void 0;
    this._rootSelector = void 0;
    this._transformedMetadata = void 0;
    this._liveTextEditing = void 0;
    this._isTopFixed = void 0;
    this.parentWhitelist = void 0;
    this.childWhitelist = void 0;
    this._title = void 0;
    this._isMinimalRenderUnit = void 0;
    this._acceptable = void 0;
    /**
     * @legacy compatiable for vision
     * @deprecated
     */
    this.prototype = void 0;
    this.designer = designer;
    this.parseMetadata(metadata);
  }
  return component_meta_createClass(ComponentMeta, [{
    key: "npm",
    get: function get() {
      return this._npm;
    },
    set: function set(_npm) {
      this.setNpm(_npm);
    }
  }, {
    key: "componentName",
    get: function get() {
      return this._componentName;
    }
  }, {
    key: "isContainer",
    get: function get() {
      return this._isContainer || this.isRootComponent();
    }
  }, {
    key: "isMinimalRenderUnit",
    get: function get() {
      return this._isMinimalRenderUnit || false;
    }
  }, {
    key: "isModal",
    get: function get() {
      return this._isModal;
    }
  }, {
    key: "descriptor",
    get: function get() {
      return this._descriptor;
    }
  }, {
    key: "rootSelector",
    get: function get() {
      return this._rootSelector;
    }
  }, {
    key: "configure",
    get: function get() {
      var _this$_transformedMet;
      var config = (_this$_transformedMet = this._transformedMetadata) === null || _this$_transformedMet === void 0 ? void 0 : _this$_transformedMet.configure;
      return (config === null || config === void 0 ? void 0 : config.combined) || (config === null || config === void 0 ? void 0 : config.props) || [];
    }
  }, {
    key: "liveTextEditing",
    get: function get() {
      return this._liveTextEditing;
    }
  }, {
    key: "isTopFixed",
    get: function get() {
      return !!this._isTopFixed;
    }
  }, {
    key: "title",
    get: function get() {
      // string | i18nData | ReactElement
      // TitleConfig title.label
      if (Object(utils_src["ab" /* isTitleConfig */])(this._title)) {
        var _this$_title;
        return ((_this$_title = this._title) === null || _this$_title === void 0 ? void 0 : _this$_title.label) || this.componentName;
      }
      return this._title || this.componentName;
    }
  }, {
    key: "icon",
    get: function get() {
      var _this$_transformedMet2;
      // give Slot default icon
      // if _title is TitleConfig  get _title.icon
      return ((_this$_transformedMet2 = this._transformedMetadata) === null || _this$_transformedMet2 === void 0 ? void 0 : _this$_transformedMet2.icon) || (
      // eslint-disable-next-line
      this.componentName === 'Page' ? IconPage : this.isContainer ? IconContainer : IconComponent);
    }
  }, {
    key: "acceptable",
    get: function get() {
      return this._acceptable;
    }
  }, {
    key: "advanced",
    get: function get() {
      return this.getMetadata().configure.advanced || {};
    }
  }, {
    key: "setNpm",
    value: function setNpm(info) {
      if (!this._npm) {
        this._npm = info;
      }
    }
  }, {
    key: "parseMetadata",
    value: function parseMetadata(metadata) {
      var componentName = metadata.componentName,
        npm = metadata.npm,
        others = component_meta_objectWithoutProperties(metadata, component_meta_excluded);
      var _metadata = metadata;
      if (metadata.prototype) {
        this.prototype = metadata.prototype;
      }
      if (!npm && !Object.keys(others).length) {
        // 没有注册的组件，只能删除，不支持复制、移动等操作
        _metadata = {
          componentName: componentName,
          configure: {
            component: {
              disableBehaviors: ['copy', 'move', 'lock', 'unlock']
            },
            advanced: {
              callbacks: {
                onMoveHook: function onMoveHook() {
                  return false;
                }
              }
            }
          }
        };
      }
      this._npm = npm || this._npm;
      this._componentName = componentName;
      // 额外转换逻辑
      this._transformedMetadata = this.transformMetadata(_metadata);
      var title = this._transformedMetadata.title;
      if (title) {
        this._title = typeof title === 'string' ? {
          type: 'i18n',
          'en-US': this.componentName,
          'zh-CN': title
        } : title;
      }
      var liveTextEditing = this.advanced.liveTextEditing || [];
      function collectLiveTextEditing(items) {
        items.forEach(function (config) {
          if (config !== null && config !== void 0 && config.items) {
            collectLiveTextEditing(config.items);
          } else {
            var _config$extraProps;
            var liveConfig = config.liveTextEditing || ((_config$extraProps = config.extraProps) === null || _config$extraProps === void 0 ? void 0 : _config$extraProps.liveTextEditing);
            if (liveConfig) {
              liveTextEditing.push(component_meta_objectSpread({
                propTarget: String(config.name)
              }, liveConfig));
            }
          }
        });
      }
      collectLiveTextEditing(this.configure);
      this._liveTextEditing = liveTextEditing.length > 0 ? liveTextEditing : undefined;
      var isTopFixed = this.advanced.isTopFixed;
      if (isTopFixed) {
        this._isTopFixed = isTopFixed;
      }
      var _this$_transformedMet3 = this._transformedMetadata.configure,
        configure = _this$_transformedMet3 === void 0 ? {} : _this$_transformedMet3;
      this._acceptable = false;
      var component = configure.component;
      if (component) {
        this._isContainer = !!component.isContainer;
        this._isModal = !!component.isModal;
        this._descriptor = component.descriptor;
        this._rootSelector = component.rootSelector;
        this._isMinimalRenderUnit = component.isMinimalRenderUnit;
        if (component.nestingRule) {
          var _component$nestingRul = component.nestingRule,
            parentWhitelist = _component$nestingRul.parentWhitelist,
            childWhitelist = _component$nestingRul.childWhitelist;
          this.parentWhitelist = buildFilter(parentWhitelist);
          this.childWhitelist = buildFilter(childWhitelist);
        }
      } else {
        this._isContainer = false;
        this._isModal = false;
      }
      this.emitter.emit('metadata_change');
    }
  }, {
    key: "refreshMetadata",
    value: function refreshMetadata() {
      this.parseMetadata(this.getMetadata());
    }
  }, {
    key: "transformMetadata",
    value: function transformMetadata(metadta) {
      var registeredTransducers = this.designer.componentActions.getRegisteredMetadataTransducers();
      var result = registeredTransducers.reduce(function (prevMetadata, current) {
        return current(prevMetadata);
      }, preprocessMetadata(metadta));
      if (!result.configure) {
        result.configure = {};
      }
      if (result.experimental && !result.configure.advanced) {
        Object(utils_src["r" /* deprecate */])(result.experimental, '.experimental', '.configure.advanced');
        result.configure.advanced = result.experimental;
      }
      return result;
    }
  }, {
    key: "isRootComponent",
    value: function isRootComponent() {
      var includeBlock = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      return this.componentName === 'Page' || this.componentName === 'Component' || includeBlock && this.componentName === 'Block';
    }
  }, {
    key: "availableActions",
    get: function get() {
      var _this$_transformedMet4;
      // eslint-disable-next-line prefer-const
      var _ref = ((_this$_transformedMet4 = this._transformedMetadata) === null || _this$_transformedMet4 === void 0 ? void 0 : _this$_transformedMet4.configure.component) || {},
        disableBehaviors = _ref.disableBehaviors,
        actions = _ref.actions;
      var disabled = ensureAList(disableBehaviors) || (this.isRootComponent(false) ? ['copy', 'remove', 'lock', 'unlock'] : null);
      actions = this.designer.componentActions.actions.concat(this.designer.getGlobalComponentActions() || [], actions || []);
      if (disabled) {
        if (disabled.includes('*')) {
          return actions.filter(function (action) {
            return action.condition === 'always';
          });
        }
        return actions.filter(function (action) {
          return disabled.indexOf(action.name) < 0;
        });
      }
      return actions;
    }
  }, {
    key: "setMetadata",
    value: function setMetadata(metadata) {
      this.parseMetadata(metadata);
    }
  }, {
    key: "getMetadata",
    value: function getMetadata() {
      return this._transformedMetadata;
    }
  }, {
    key: "checkNestingUp",
    value: function checkNestingUp(my, parent) {
      // 检查父子关系，直接约束型，在画布中拖拽直接掠过目标容器
      if (this.parentWhitelist) {
        return this.parentWhitelist(parent.internalToShellNode(), Object(utils_src["P" /* isNode */])(my) ? my.internalToShellNode() : my);
      }
      return true;
    }
  }, {
    key: "checkNestingDown",
    value: function checkNestingDown(my, target) {
      var _this = this;
      // 检查父子关系，直接约束型，在画布中拖拽直接掠过目标容器
      if (this.childWhitelist) {
        var _target = !Array.isArray(target) ? [target] : target;
        return _target.every(function (item) {
          var _item = !Object(utils_src["P" /* isNode */])(item) ? new node_Node(my.document, item) : item;
          return _this.childWhitelist && _this.childWhitelist(_item.internalToShellNode(), my.internalToShellNode());
        });
      }
      return true;
    }
  }, {
    key: "onMetadataChange",
    value: function onMetadataChange(fn) {
      var _this2 = this;
      this.emitter.on('metadata_change', fn);
      return function () {
        _this2.emitter.removeListener('metadata_change', fn);
      };
    }
  }]);
}();
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], component_meta_ComponentMeta.prototype, "icon", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], component_meta_ComponentMeta.prototype, "availableActions", null);
function component_meta_isComponentMeta(obj) {
  return obj && obj.isComponentMeta;
}
function preprocessMetadata(metadata) {
  if (metadata.configure) {
    if (Array.isArray(metadata.configure)) {
      return component_meta_objectSpread(component_meta_objectSpread({}, metadata), {}, {
        configure: {
          props: metadata.configure
        }
      });
    }
    return metadata;
  }
  return component_meta_objectSpread(component_meta_objectSpread({}, metadata), {}, {
    configure: {}
  });
}
// CONCATENATED MODULE: ../designer/src/simulator.ts
// eslint-disable-next-line no-redeclare
var AutoFit = '100%';
function isSimulatorHost(obj) {
  return obj && obj.isSimulator;
}
// CONCATENATED MODULE: ../designer/src/project/project.ts
function project_typeof(o) { "@babel/helpers - typeof"; return project_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, project_typeof(o); }
function project_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function project_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? project_ownKeys(Object(t), !0).forEach(function (r) { project_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : project_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function project_defineProperty(e, r, t) { return (r = project_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function project_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function project_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, project_toPropertyKey(o.key), o); } }
function project_createClass(e, r, t) { return r && project_defineProperties(e.prototype, r), t && project_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function project_toPropertyKey(t) { var i = project_toPrimitive(t, "string"); return "symbol" == project_typeof(i) ? i : i + ""; }
function project_toPrimitive(t, r) { if ("object" != project_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != project_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }





var project_Project = /*#__PURE__*/function () {
  function Project(designer, schema) {
    var viewName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'global';
    project_classCallCheck(this, Project);
    this.designer = void 0;
    this.viewName = void 0;
    this.emitter = Object(src["createModuleEventBus"])('Project');
    this.documents = [];
    this.data = {
      version: '1.0.0',
      componentsMap: [],
      componentsTree: [],
      i18n: {}
    };
    this._simulator = void 0;
    this.isRendererReady = false;
    this._config = {};
    this._i18n = {};
    this.documentsMap = new Map();
    this.designer = designer;
    this.viewName = viewName;
    Object(src["makeObservable"])(this);
    this.load(schema);
  }
  return project_createClass(Project, [{
    key: "simulator",
    get:
    /**
     * 模拟器
     */
    function get() {
      return this._simulator || null;
    }
  }, {
    key: "currentDocument",
    get: function get() {
      return this.documents.find(function (doc) {
        return doc.active;
      });
    }
  }, {
    key: "config",
    get: function get() {
      // TODO: parse layout Component
      return this._config;
    },
    set: function set(value) {
      this._config = value;
    }
  }, {
    key: "i18n",
    get: function get() {
      return this._i18n;
    },
    set: function set(value) {
      this._i18n = value || {};
    }
  }, {
    key: "getComponentsMap",
    value: function getComponentsMap() {
      return this.documents.reduce(function (componentsMap, curDoc) {
        var curComponentsMap = curDoc.getComponentsMap();
        if (Array.isArray(curComponentsMap)) {
          curComponentsMap.forEach(function (item) {
            var found = componentsMap.find(function (eItem) {
              if (Object(utils_src["T" /* isProCodeComponentType */])(eItem) && Object(utils_src["T" /* isProCodeComponentType */])(item) && eItem.package === item.package && eItem.componentName === item.componentName) {
                return true;
              } else if (Object(utils_src["O" /* isLowCodeComponentType */])(eItem) && eItem.componentName === item.componentName) {
                return true;
              }
              return false;
            });
            if (found) return;
            componentsMap.push(item);
          });
        }
        return componentsMap;
      }, []);
    }
    /**
     * 获取项目整体 schema
     */
  }, {
    key: "getSchema",
    value: function getSchema() {
      var stage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : types_src["i" /* IPublicEnumTransformStage */].Save;
      return project_objectSpread(project_objectSpread({}, this.data), {}, {
        componentsMap: this.getComponentsMap(),
        componentsTree: this.documents.filter(function (doc) {
          return !doc.isBlank();
        }).map(function (doc) {
          return doc.export(stage) || {};
        }),
        i18n: this.i18n
      });
    }
    /**
     * 替换当前 document 的 schema，并触发渲染器的 render
     * @param schema
     */
  }, {
    key: "setSchema",
    value: function setSchema(schema) {
      var _this$simulator;
      // FIXME: 这里的行为和 getSchema 并不对等，感觉不太对
      var doc = this.documents.find(function (doc) {
        return doc.active;
      });
      doc && (schema === null || schema === void 0 ? void 0 : schema.componentsTree[0]) && doc.import(schema === null || schema === void 0 ? void 0 : schema.componentsTree[0]);
      (_this$simulator = this.simulator) === null || _this$simulator === void 0 ? void 0 : _this$simulator.rerender();
    }
    /**
     * 整体设置项目 schema
     *
     * @param autoOpen true 自动打开文档 string 指定打开的文件
     */
  }, {
    key: "load",
    value: function load(schema, autoOpen) {
      var _this = this;
      this.unload();
      // load new document
      this.data = project_objectSpread({
        version: '1.0.0',
        componentsMap: [],
        componentsTree: [],
        i18n: {}
      }, schema);
      this.config = (schema === null || schema === void 0 ? void 0 : schema.config) || this.config;
      this.i18n = (schema === null || schema === void 0 ? void 0 : schema.i18n) || this.i18n;
      if (autoOpen) {
        if (autoOpen === true) {
          var _this$config, _this$config$layout, _this$config$layout$p, _this$config$layout$p2, _this$config$layout$p3;
          // auto open first document or open a blank page
          // this.open(this.data.componentsTree[0]);
          var documentInstances = this.data.componentsTree.map(function (data) {
            return _this.createDocument(data);
          });
          // TODO: 暂时先读 config tabBar 里的值，后面看整个 layout 结构是否能作为引擎规范
          if (((_this$config = this.config) === null || _this$config === void 0 ? void 0 : (_this$config$layout = _this$config.layout) === null || _this$config$layout === void 0 ? void 0 : (_this$config$layout$p = _this$config$layout.props) === null || _this$config$layout$p === void 0 ? void 0 : (_this$config$layout$p2 = _this$config$layout$p.tabBar) === null || _this$config$layout$p2 === void 0 ? void 0 : (_this$config$layout$p3 = _this$config$layout$p2.items) === null || _this$config$layout$p3 === void 0 ? void 0 : _this$config$layout$p3.length) > 0) {
            var _documentInstances$fi;
            // slice(1) 这个贼不雅，默认任务 fileName 是类'/fileName'的形式
            (_documentInstances$fi = documentInstances.find(function (i) {
              var _this$config$layout$p4;
              return i.fileName === ((_this$config$layout$p4 = _this.config.layout.props.tabBar.items[0].path) === null || _this$config$layout$p4 === void 0 ? void 0 : _this$config$layout$p4.slice(1));
            })) === null || _documentInstances$fi === void 0 ? void 0 : _documentInstances$fi.open();
          } else {
            documentInstances[0].open();
          }
        } else {
          // auto open should be string of fileName
          this.open(autoOpen);
        }
      }
    }
    /**
     * 卸载当前项目数据
     */
  }, {
    key: "unload",
    value: function unload() {
      if (this.documents.length < 1) {
        return;
      }
      for (var i = this.documents.length - 1; i >= 0; i--) {
        this.documents[i].remove();
      }
    }
  }, {
    key: "removeDocument",
    value: function removeDocument(doc) {
      var index = this.documents.indexOf(doc);
      if (index < 0) {
        return;
      }
      this.documents.splice(index, 1);
      this.documentsMap.delete(doc.id);
    }
  }, {
    key: "set",
    value: function set(key, value) {
      if (key === 'config') {
        this.config = value;
      }
      if (key === 'i18n') {
        this.i18n = value;
      }
      Object.assign(this.data, project_defineProperty({}, key, value));
    }
  }, {
    key: "get",
    value: function get(key) {
      if (key === 'config') {
        return this.config;
      }
      if (key === 'i18n') {
        return this.i18n;
      }
      return Reflect.get(this.data, key);
    }
  }, {
    key: "getDocument",
    value: function getDocument(id) {
      // 此处不能使用 this.documentsMap.get(id)，因为在乐高 rollback 场景，document.id 会被改成其他值
      return this.documents.find(function (doc) {
        return doc.id === id;
      }) || null;
    }
  }, {
    key: "getDocumentByFileName",
    value: function getDocumentByFileName(fileName) {
      return this.documents.find(function (doc) {
        return doc.fileName === fileName;
      }) || null;
    }
  }, {
    key: "createDocument",
    value: function createDocument(data) {
      var _this$data, _this$data$components;
      var doc = new document_model_DocumentModel(this, data || (this === null || this === void 0 ? void 0 : (_this$data = this.data) === null || _this$data === void 0 ? void 0 : (_this$data$components = _this$data.componentsTree) === null || _this$data$components === void 0 ? void 0 : _this$data$components[0]));
      this.documents.push(doc);
      this.documentsMap.set(doc.id, doc);
      return doc;
    }
  }, {
    key: "open",
    value: function open(doc) {
      if (!doc) {
        var got = this.documents.find(function (item) {
          return item.isBlank();
        });
        if (got) {
          return got.open();
        }
        doc = this.createDocument();
        return doc.open();
      }
      if (typeof doc === 'string' || typeof doc === 'number') {
        var _got = this.documents.find(function (item) {
          return item.fileName === String(doc) || String(item.id) === String(doc);
        });
        if (_got) {
          return _got.open();
        }
        var data = this.data.componentsTree.find(function (data) {
          return data.fileName === String(doc);
        });
        if (data) {
          doc = this.createDocument(data);
          return doc.open();
        }
        return null;
      } else if (isDocumentModel(doc)) {
        return doc.open();
      }
      //  else if (isPageSchema(doc)) {
      // 暂时注释掉，影响了 diff 功能
      // const foundDoc = this.documents.find(curDoc => curDoc?.rootNode?.id && curDoc?.rootNode?.id === doc?.id);
      // if (foundDoc) {
      //   foundDoc.remove();
      // }
      // }
      doc = this.createDocument(doc);
      return doc.open();
    }
  }, {
    key: "checkExclusive",
    value: function checkExclusive(activeDoc) {
      this.documents.forEach(function (doc) {
        if (doc !== activeDoc) {
          doc.suspense();
        }
      });
      this.emitter.emit('current-document.change', activeDoc);
    }
  }, {
    key: "closeOthers",
    value: function closeOthers(opened) {
      this.documents.forEach(function (doc) {
        if (doc !== opened) {
          doc.close();
        }
      });
    }
  }, {
    key: "mountSimulator",
    value: function mountSimulator(simulator) {
      // TODO: 多设备 simulator 支持
      this._simulator = simulator;
      this.emitter.emit('lowcode_engine_simulator_ready', simulator);
    }
  }, {
    key: "setRendererReady",
    value: function setRendererReady(renderer) {
      this.isRendererReady = true;
      this.emitter.emit('lowcode_engine_renderer_ready', renderer);
    }
  }, {
    key: "onSimulatorReady",
    value: function onSimulatorReady(fn) {
      var _this2 = this;
      if (this._simulator) {
        fn(this._simulator);
        return function () {};
      }
      this.emitter.on('lowcode_engine_simulator_ready', fn);
      return function () {
        _this2.emitter.removeListener('lowcode_engine_simulator_ready', fn);
      };
    }
  }, {
    key: "onRendererReady",
    value: function onRendererReady(fn) {
      var _this3 = this;
      if (this.isRendererReady) {
        fn();
      }
      this.emitter.on('lowcode_engine_renderer_ready', fn);
      return function () {
        _this3.emitter.removeListener('lowcode_engine_renderer_ready', fn);
      };
    }
  }, {
    key: "onCurrentDocumentChange",
    value: function onCurrentDocumentChange(fn) {
      var _this4 = this;
      this.emitter.on('current-document.change', fn);
      return function () {
        _this4.emitter.removeListener('current-document.change', fn);
      };
    }
  }]);
}();
Object(tslib_es6["b" /* __decorate */])([src["obx"].shallow, Object(tslib_es6["d" /* __metadata */])("design:type", Array)], project_Project.prototype, "documents", void 0);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], project_Project.prototype, "currentDocument", null);
Object(tslib_es6["b" /* __decorate */])([src["obx"], Object(tslib_es6["d" /* __metadata */])("design:type", Object)], project_Project.prototype, "_config", void 0);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Object])], project_Project.prototype, "config", null);
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], project_Project.prototype, "_i18n", void 0);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Object])], project_Project.prototype, "i18n", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Object, Object]), Object(tslib_es6["d" /* __metadata */])("design:returntype", void 0)], project_Project.prototype, "load", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Object]), Object(tslib_es6["d" /* __metadata */])("design:returntype", Object)], project_Project.prototype, "createDocument", null);
// CONCATENATED MODULE: ../designer/src/builtin-simulator/viewport.ts
function viewport_typeof(o) { "@babel/helpers - typeof"; return viewport_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, viewport_typeof(o); }
function viewport_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function viewport_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, viewport_toPropertyKey(o.key), o); } }
function viewport_createClass(e, r, t) { return r && viewport_defineProperties(e.prototype, r), t && viewport_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function viewport_toPropertyKey(t) { var i = viewport_toPrimitive(t, "string"); return "symbol" == viewport_typeof(i) ? i : i + ""; }
function viewport_toPrimitive(t, r) { if ("object" != viewport_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != viewport_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var viewport_a, viewport_b, viewport_c, _d, _e, _f, _g;




var viewport_Viewport = /*#__PURE__*/function () {
  function Viewport() {
    viewport_classCallCheck(this, Viewport);
    this.rect = void 0;
    this._bounds = void 0;
    this.viewportElement = void 0;
    this._scale = 1;
    this._contentWidth = AutoFit;
    this._contentHeight = AutoFit;
    this._scrollX = 0;
    this._scrollY = 0;
    this._scrollTarget = void 0;
    this._scrolling = false;
    Object(src["makeObservable"])(this);
  }
  return viewport_createClass(Viewport, [{
    key: "bounds",
    get: function get() {
      var _this = this;
      if (this._bounds) {
        return this._bounds;
      }
      this._bounds = this.viewportElement.getBoundingClientRect();
      requestAnimationFrame(function () {
        _this._bounds = undefined;
      });
      return this._bounds;
    }
  }, {
    key: "contentBounds",
    get: function get() {
      var bounds = this.bounds,
        scale = this.scale;
      return new DOMRect(0, 0, bounds.width / scale, bounds.height / scale);
    }
  }, {
    key: "mount",
    value: function mount(viewportElement) {
      if (!viewportElement || this.viewportElement === viewportElement) {
        return;
      }
      this.viewportElement = viewportElement;
      this.touch();
    }
  }, {
    key: "touch",
    value: function touch() {
      if (this.viewportElement) {
        this.rect = this.bounds;
      }
    }
  }, {
    key: "height",
    get: function get() {
      if (!this.rect) {
        return 600;
      }
      return this.rect.height;
    },
    set: function set(newHeight) {
      this._contentHeight = newHeight / this.scale;
      if (this.viewportElement) {
        this.viewportElement.style.height = "".concat(newHeight, "px");
        this.touch();
      }
    }
  }, {
    key: "width",
    get: function get() {
      if (!this.rect) {
        return 1000;
      }
      return this.rect.width;
    },
    set: function set(newWidth) {
      this._contentWidth = newWidth / this.scale;
      if (this.viewportElement) {
        this.viewportElement.style.width = "".concat(newWidth, "px");
        this.touch();
      }
    }
  }, {
    key: "scale",
    get:
    /**
     * 缩放比例
     */
    function get() {
      return this._scale;
    },
    set: function set(newScale) {
      if (isNaN(newScale) || newScale <= 0) {
        throw new Error("invalid new scale \"".concat(newScale, "\""));
      }
      this._scale = newScale;
      this._contentWidth = this.width / this.scale;
      this._contentHeight = this.height / this.scale;
    }
  }, {
    key: "contentHeight",
    get: function get() {
      return this._contentHeight;
    },
    set: function set(newContentHeight) {
      this._contentHeight = newContentHeight;
    }
  }, {
    key: "contentWidth",
    get: function get() {
      return this._contentWidth;
    },
    set: function set(val) {
      this._contentWidth = val;
    }
  }, {
    key: "scrollX",
    get: function get() {
      return this._scrollX;
    }
  }, {
    key: "scrollY",
    get: function get() {
      return this._scrollY;
    }
  }, {
    key: "scrollTarget",
    get:
    /**
     * 滚动对象
     */
    function get() {
      return this._scrollTarget;
    }
  }, {
    key: "scrolling",
    get: function get() {
      return this._scrolling;
    }
  }, {
    key: "setScrollTarget",
    value: function setScrollTarget(target) {
      var _this2 = this;
      var scrollTarget = new ScrollTarget(target);
      this._scrollX = scrollTarget.left;
      this._scrollY = scrollTarget.top;
      var scrollTimer;
      target.addEventListener('scroll', function () {
        _this2._scrollX = scrollTarget.left;
        _this2._scrollY = scrollTarget.top;
        _this2._scrolling = true;
        if (scrollTimer) {
          clearTimeout(scrollTimer);
        }
        scrollTimer = setTimeout(function () {
          _this2._scrolling = false;
        }, 80);
      });
      target.addEventListener('resize', function () {
        return _this2.touch();
      });
      this._scrollTarget = scrollTarget;
    }
  }, {
    key: "toGlobalPoint",
    value: function toGlobalPoint(point) {
      if (!this.viewportElement) {
        return point;
      }
      var rect = this.bounds;
      return {
        clientX: point.clientX * this.scale + rect.left,
        clientY: point.clientY * this.scale + rect.top
      };
    }
  }, {
    key: "toLocalPoint",
    value: function toLocalPoint(point) {
      if (!this.viewportElement) {
        return point;
      }
      var rect = this.bounds;
      return {
        clientX: (point.clientX - rect.left) / this.scale,
        clientY: (point.clientY - rect.top) / this.scale
      };
    }
  }]);
}();

Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", typeof (viewport_a = typeof DOMRect !== "undefined" && DOMRect) === "function" ? viewport_a : Object)], viewport_Viewport.prototype, "rect", void 0);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Number), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Number])], viewport_Viewport.prototype, "height", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Number), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Number])], viewport_Viewport.prototype, "width", null);
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], viewport_Viewport.prototype, "_scale", void 0);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Number), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Number])], viewport_Viewport.prototype, "scale", null);
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], viewport_Viewport.prototype, "_contentWidth", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], viewport_Viewport.prototype, "_contentHeight", void 0);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Object])], viewport_Viewport.prototype, "contentHeight", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Object])], viewport_Viewport.prototype, "contentWidth", null);
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], viewport_Viewport.prototype, "_scrollX", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], viewport_Viewport.prototype, "_scrollY", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"], Object(tslib_es6["d" /* __metadata */])("design:type", Object)], viewport_Viewport.prototype, "_scrolling", void 0);
// CONCATENATED MODULE: ../designer/src/builtin-simulator/create-simulator.ts
function create_simulator_createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = create_simulator_unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t.return || t.return(); } finally { if (u) throw o; } } }; }
function create_simulator_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return create_simulator_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? create_simulator_arrayLikeToArray(r, a) : void 0; } }
function create_simulator_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }

function createSimulator(host, iframe) {
  var vendors = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
  var win = iframe.contentWindow;
  var doc = iframe.contentDocument;
  var innerPlugins = host.designer.editor.get('innerPlugins');
  win.AliLowCodeEngine = innerPlugins._getLowCodePluginContext({});
  win.LCSimulatorHost = host;
  win._ = window._;
  var styles = {};
  var scripts = {};
  utils_src["b" /* AssetLevels */].forEach(function (lv) {
    styles[lv] = [];
    scripts[lv] = [];
  });
  function parseAssetList(assets, level) {
    var _iterator = create_simulator_createForOfIteratorHelper(assets),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var asset = _step.value;
        if (!asset) {
          continue;
        }
        if (Object(utils_src["x" /* isAssetBundle */])(asset)) {
          if (asset.assets) {
            parseAssetList(Array.isArray(asset.assets) ? asset.assets : [asset.assets], asset.level || level);
          }
          continue;
        }
        if (Array.isArray(asset)) {
          parseAssetList(asset, level);
          continue;
        }
        if (!Object(utils_src["y" /* isAssetItem */])(asset)) {
          asset = Object(utils_src["h" /* assetItem */])(Object(utils_src["z" /* isCSSUrl */])(asset) ? utils_src["d" /* AssetType */].CSSUrl : utils_src["d" /* AssetType */].JSUrl, asset, level);
        }
        var id = asset.id ? " data-id=\"".concat(asset.id, "\"") : '';
        var lv = asset.level || level || utils_src["a" /* AssetLevel */].Environment;
        var scriptType = asset.scriptType ? " type=\"".concat(asset.scriptType, "\"") : '';
        if (asset.type === utils_src["d" /* AssetType */].JSUrl) {
          scripts[lv].push("<script src=\"".concat(asset.content, "\"").concat(id).concat(scriptType, "></script>"));
        } else if (asset.type === utils_src["d" /* AssetType */].JSText) {
          scripts[lv].push("<script".concat(id).concat(scriptType, ">").concat(asset.content, "</script>"));
        } else if (asset.type === utils_src["d" /* AssetType */].CSSUrl) {
          styles[lv].push("<link rel=\"stylesheet\" href=\"".concat(asset.content, "\"").concat(id, " />"));
        } else if (asset.type === utils_src["d" /* AssetType */].CSSText) {
          styles[lv].push("<style type=\"text/css\"".concat(id, ">").concat(asset.content, "</style>"));
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }
  parseAssetList(vendors);
  var styleFrags = Object.keys(styles).map(function (key) {
    return "".concat(styles[key].join('\n'), "<meta level=\"").concat(key, "\" />");
  }).join('');
  var scriptFrags = Object.keys(scripts).map(function (key) {
    return scripts[key].join('\n');
  }).join('');
  doc.open();
  doc.write("\n<!doctype html>\n<html class=\"engine-design-mode\">\n  <head><meta charset=\"utf-8\"/>\n    ".concat(styleFrags, "\n  </head>\n  <body>\n    ").concat(scriptFrags, "\n  </body>\n</html>"));
  doc.close();
  return new Promise(function (resolve) {
    var renderer = win.SimulatorRenderer;
    if (renderer) {
      return resolve(renderer);
    }
    var _loaded = function loaded() {
      resolve(win.SimulatorRenderer || host.renderer);
      win.removeEventListener('load', _loaded);
    };
    win.addEventListener('load', _loaded);
  });
}
// CONCATENATED MODULE: ../designer/src/builtin-simulator/renderer.ts
function isSimulatorRenderer(obj) {
  return obj && obj.isSimulatorRenderer;
}
// CONCATENATED MODULE: ../designer/src/builtin-simulator/resource-consumer.ts
function resource_consumer_typeof(o) { "@babel/helpers - typeof"; return resource_consumer_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, resource_consumer_typeof(o); }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i.return) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function resource_consumer_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function resource_consumer_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, resource_consumer_toPropertyKey(o.key), o); } }
function resource_consumer_createClass(e, r, t) { return r && resource_consumer_defineProperties(e.prototype, r), t && resource_consumer_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function resource_consumer_toPropertyKey(t) { var i = resource_consumer_toPrimitive(t, "string"); return "symbol" == resource_consumer_typeof(i) ? i : i + ""; }
function resource_consumer_toPrimitive(t, r) { if ("object" != resource_consumer_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != resource_consumer_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }



var resource_consumer_UNSET = Symbol('unset');
// master 进程
//  0. 初始化该对象，因为需要响应变更发生在 master 进程
//  1. 提供消费数据或数据提供器，比如 Asset 资源，如果不是数据提供器，会持续提供
//  2. 收到成功通知
// renderer 进程
//  1. 持续消费，并持续监听数据
//  2. 消费
// 这里涉及俩个自定义项
//  1. 被消费数据协议
//  2. 消费机制（渲染进程自定 + 传递进入）
var resource_consumer_ResourceConsumer = /*#__PURE__*/function () {
  function ResourceConsumer(provider, consumer) {
    var _this = this;
    resource_consumer_classCallCheck(this, ResourceConsumer);
    this.consumer = void 0;
    this.emitter = Object(src["createModuleEventBus"])('ResourceConsumer');
    this._data = resource_consumer_UNSET;
    this._providing = void 0;
    this._consuming = void 0;
    this._firstConsumed = false;
    this.resolveFirst = void 0;
    this.consumer = consumer;
    Object(src["makeObservable"])(this);
    this._providing = Object(src["autorun"])(function () {
      _this._data = provider();
    });
  }
  return resource_consumer_createClass(ResourceConsumer, [{
    key: "consume",
    value: function consume(consumerOrRenderer) {
      var _this2 = this;
      if (this._consuming) {
        return;
      }
      var consumer;
      if (isSimulatorRenderer(consumerOrRenderer)) {
        if (!this.consumer) {
          // TODO: throw error
          return;
        }
        var rendererConsumer = this.consumer;
        consumer = function consumer(data) {
          return rendererConsumer(consumerOrRenderer, data);
        };
      } else {
        consumer = consumerOrRenderer;
      }
      this._consuming = Object(src["autorun"])(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {
        return _regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              if (!(_this2._data === resource_consumer_UNSET)) {
                _context.n = 1;
                break;
              }
              return _context.a(2);
            case 1:
              _context.n = 2;
              return consumer(_this2._data);
            case 2:
              // TODO: catch error and report
              if (_this2.resolveFirst) {
                _this2.resolveFirst();
              } else {
                _this2._firstConsumed = true;
              }
            case 3:
              return _context.a(2);
          }
        }, _callee);
      })));
    }
  }, {
    key: "dispose",
    value: function dispose() {
      if (this._providing) {
        this._providing();
      }
      if (this._consuming) {
        this._consuming();
      }
      this.emitter.removeAllListeners();
    }
  }, {
    key: "waitFirstConsume",
    value: function waitFirstConsume() {
      var _this3 = this;
      if (this._firstConsumed) {
        return Promise.resolve();
      }
      return new Promise(function (resolve) {
        _this3.resolveFirst = resolve;
      });
    }
  }]);
}();

Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], resource_consumer_ResourceConsumer.prototype, "_data", void 0);
// EXTERNAL MODULE: external "window.PropTypes"
var external_window_PropTypes_ = __webpack_require__(12);
var external_window_PropTypes_default = /*#__PURE__*/__webpack_require__.n(external_window_PropTypes_);

// CONCATENATED MODULE: ../designer/src/builtin-simulator/utils/parse-metadata.ts
function parse_metadata_typeof(o) { "@babel/helpers - typeof"; return parse_metadata_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, parse_metadata_typeof(o); }
function parse_metadata_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function parse_metadata_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? parse_metadata_ownKeys(Object(t), !0).forEach(function (r) { parse_metadata_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : parse_metadata_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function parse_metadata_defineProperty(e, r, t) { return (r = parse_metadata_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function parse_metadata_toPropertyKey(t) { var i = parse_metadata_toPrimitive(t, "string"); return "symbol" == parse_metadata_typeof(i) ? i : i + ""; }
function parse_metadata_toPrimitive(t, r) { if ("object" != parse_metadata_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != parse_metadata_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }



var primitiveTypes = ['string', 'number', 'array', 'bool', 'func', 'object', 'node', 'element', 'symbol', 'any'];
// eslint-disable-next-line @typescript-eslint/ban-types
function makeRequired(propType, lowcodeType) {
  function lowcodeCheckTypeIsRequired() {
    return propType.isRequired.apply(propType, arguments);
  }
  if (typeof lowcodeType === 'string') {
    lowcodeType = {
      type: lowcodeType
    };
  }
  lowcodeCheckTypeIsRequired.lowcodeType = parse_metadata_objectSpread(parse_metadata_objectSpread({}, lowcodeType), {}, {
    isRequired: true
  });
  return lowcodeCheckTypeIsRequired;
}
// eslint-disable-next-line @typescript-eslint/ban-types
function define() {
  var propType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : external_window_PropTypes_default.a.any;
  var lowcodeType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  if (!propType._inner && propType.name !== 'lowcodeCheckType') {
    propType.lowcodeType = lowcodeType;
  }
  function lowcodeCheckType() {
    return propType.apply(void 0, arguments);
  }
  lowcodeCheckType.lowcodeType = lowcodeType;
  lowcodeCheckType.isRequired = makeRequired(propType, lowcodeType);
  return lowcodeCheckType;
}
var LowcodeTypes = parse_metadata_objectSpread(parse_metadata_objectSpread({}, external_window_PropTypes_default.a), {}, {
  define: define
});
window.PropTypes = LowcodeTypes;
if (window.React) {
  window.React.PropTypes = LowcodeTypes;
}
// override primitive type checkers
primitiveTypes.forEach(function (type) {
  var propType = external_window_PropTypes_default.a[type];
  if (!propType) {
    return;
  }
  propType._inner = true;
  LowcodeTypes[type] = define(propType, type);
});
// You can ensure that your prop is limited to specific values by treating
// it as an enum.
LowcodeTypes.oneOf = function (list) {
  return define(external_window_PropTypes_default.a.oneOf(list), {
    type: 'oneOf',
    value: list
  });
};
// An array of a certain type
LowcodeTypes.arrayOf = function (type) {
  return define(external_window_PropTypes_default.a.arrayOf(type), {
    type: 'arrayOf',
    value: type.lowcodeType || 'any'
  });
};
// An object with property values of a certain type
LowcodeTypes.objectOf = function (type) {
  return define(external_window_PropTypes_default.a.objectOf(type), {
    type: 'objectOf',
    value: type.lowcodeType || 'any'
  });
};
// An object that could be one of many types
LowcodeTypes.oneOfType = function (types) {
  var itemTypes = types.map(function (type) {
    return type.lowcodeType || 'any';
  });
  return define(external_window_PropTypes_default.a.oneOfType(types), {
    type: 'oneOfType',
    value: itemTypes
  });
};
// An object with warnings on extra properties
LowcodeTypes.exact = function (typesMap) {
  var configs = Object.keys(typesMap).map(function (key) {
    var _typesMap$key;
    return {
      name: key,
      propType: ((_typesMap$key = typesMap[key]) === null || _typesMap$key === void 0 ? void 0 : _typesMap$key.lowcodeType) || 'any'
    };
  });
  return define(external_window_PropTypes_default.a.exact(typesMap), {
    type: 'exact',
    value: configs
  });
};
// An object taking on a particular shape
LowcodeTypes.shape = function () {
  var typesMap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var configs = Object.keys(typesMap).map(function (key) {
    var _typesMap$key2;
    return {
      name: key,
      propType: ((_typesMap$key2 = typesMap[key]) === null || _typesMap$key2 === void 0 ? void 0 : _typesMap$key2.lowcodeType) || 'any'
    };
  });
  return define(external_window_PropTypes_default.a.shape(typesMap), {
    type: 'shape',
    value: configs
  });
};
var BasicTypes = ['string', 'number', 'object'];
function parseProps(component) {
  if (!component) {
    return [];
  }
  var propTypes = component.propTypes || {};
  var defaultProps = component.defaultProps || {};
  var result = {};
  if (!propTypes) return [];
  Object.keys(propTypes).forEach(function (key) {
    var propTypeItem = propTypes[key];
    var defaultValue = defaultProps[key];
    var lowcodeType = propTypeItem.lowcodeType;
    if (lowcodeType) {
      result[key] = {
        name: key,
        propType: lowcodeType
      };
      if (defaultValue != null) {
        result[key].defaultValue = defaultValue;
      }
      return;
    }
    var i = primitiveTypes.length;
    while (i-- > 0) {
      var k = primitiveTypes[i];
      if (LowcodeTypes[k] === propTypeItem) {
        result[key] = {
          name: key,
          propType: k
        };
        if (defaultValue != null) {
          result[key].defaultValue = defaultValue;
        }
        return;
      }
    }
    result[key] = {
      name: key,
      propType: 'any'
    };
    if (defaultValue != null) {
      result[key].defaultValue = defaultValue;
    }
  });
  Object.keys(defaultProps).forEach(function (key) {
    if (result[key]) return;
    var defaultValue = defaultProps[key];
    var type = parse_metadata_typeof(defaultValue);
    if (type === 'boolean') {
      type = 'bool';
    } else if (type === 'function') {
      type = 'func';
    } else if (type === 'object' && Array.isArray(defaultValue)) {
      type = 'array';
    } else if (defaultValue && /*#__PURE__*/Object(external_window_React_["isValidElement"])(defaultValue)) {
      type = 'node';
    } else if (defaultValue && Object(utils_src["G" /* isElement */])(defaultValue)) {
      type = 'element';
    } else if (!BasicTypes.includes(type)) {
      type = 'any';
    }
    result[key] = {
      name: key,
      propType: type || 'any',
      defaultValue: defaultValue
    };
  });
  return Object.keys(result).map(function (key) {
    return result[key];
  });
}
function parseMetadata(component) {
  return parse_metadata_objectSpread({
    props: parseProps(component)
  }, component.componentMetadata);
}
// CONCATENATED MODULE: ../designer/src/builtin-simulator/utils/clickable.ts

/**
 * 获取离当前节点最近的可点击节点
 * @param currentNode
 * @param event
 */
var clickable_getClosestClickableNode = function getClosestClickableNode(currentNode, event) {
  var node = currentNode;
  while (node) {
    // 判断当前节点是否可点击
    var canClick = Object(utils_src["i" /* canClickNode */])(node, event);
    // eslint-disable-next-line no-loop-func
    var lockedNode = Object(utils_src["s" /* getClosestNode */])(node, function (n) {
      var _node, _n$parent;
      // 假如当前节点就是 locked 状态，要从当前节点的父节点开始查找
      return !!((_node = node) !== null && _node !== void 0 && _node.isLocked ? (_n$parent = n.parent) === null || _n$parent === void 0 ? void 0 : _n$parent.isLocked : n.isLocked);
    });
    if (lockedNode && lockedNode.getId() !== node.getId()) {
      canClick = false;
    }
    if (canClick) {
      break;
    }
    // 对于不可点击的节点，继续向上找
    node = node.parent;
  }
  return node;
};
// CONCATENATED MODULE: ../designer/src/designer/clipboard.ts
function clipboard_typeof(o) { "@babel/helpers - typeof"; return clipboard_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, clipboard_typeof(o); }
function clipboard_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function clipboard_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, clipboard_toPropertyKey(o.key), o); } }
function clipboard_createClass(e, r, t) { return r && clipboard_defineProperties(e.prototype, r), t && clipboard_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function clipboard_toPropertyKey(t) { var i = clipboard_toPrimitive(t, "string"); return "symbol" == clipboard_typeof(i) ? i : i + ""; }
function clipboard_toPrimitive(t, r) { if ("object" != clipboard_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != clipboard_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function getDataFromPasteEvent(event) {
  var clipboardData = event.clipboardData;
  if (!clipboardData) {
    return null;
  }
  try {
    // { componentsMap, componentsTree, ... }
    var data = JSON.parse(clipboardData.getData('text/plain'));
    if (!data) {
      return {};
    }
    if (data.componentsTree) {
      return data;
    } else if (data.componentName) {
      return {
        componentsTree: [data]
      };
    }
  } catch (error) {
    // TODO: open the parser implement
    return {};
  }
}
var clipboard_Clipboard = /*#__PURE__*/function () {
  function Clipboard() {
    clipboard_classCallCheck(this, Clipboard);
    this.copyPasters = [];
    this.waitFn = void 0;
    this.injectCopyPaster(document);
  }
  return clipboard_createClass(Clipboard, [{
    key: "isCopyPasteEvent",
    value: function isCopyPasteEvent(e) {
      this.isCopyPaster(e.target);
    }
  }, {
    key: "isCopyPaster",
    value: function isCopyPaster(el) {
      return this.copyPasters.includes(el);
    }
  }, {
    key: "initCopyPaster",
    value: function initCopyPaster(el) {
      var _this = this;
      this.copyPasters.push(el);
      var onPaste = function onPaste(e) {
        if (_this.waitFn) {
          _this.waitFn(getDataFromPasteEvent(e), e);
          _this.waitFn = undefined;
        }
        el.blur();
      };
      el.addEventListener('paste', onPaste, false);
      return function () {
        el.removeEventListener('paste', onPaste, false);
        var i = _this.copyPasters.indexOf(el);
        if (i > -1) {
          _this.copyPasters.splice(i, 1);
        }
      };
    }
  }, {
    key: "injectCopyPaster",
    value: function injectCopyPaster(document) {
      if (this.copyPasters.find(function (x) {
        return x.ownerDocument === document;
      })) {
        return;
      }
      var copyPaster = document.createElement('textarea');
      copyPaster.style.cssText = 'position: absolute;left: -9999px;top:-100px';
      if (document.body) {
        document.body.appendChild(copyPaster);
      } else {
        document.addEventListener('DOMContentLoaded', function () {
          document.body.appendChild(copyPaster);
        });
      }
      var dispose = this.initCopyPaster(copyPaster);
      return function () {
        dispose();
        document.removeChild(copyPaster);
      };
    }
  }, {
    key: "setData",
    value: function setData(data) {
      var copyPaster = this.copyPasters.find(function (x) {
        return x.ownerDocument;
      });
      if (!copyPaster) {
        return;
      }
      copyPaster.value = typeof data === 'string' ? data : JSON.stringify(data);
      copyPaster.select();
      copyPaster.ownerDocument.execCommand('copy');
      copyPaster.blur();
    }
  }, {
    key: "waitPasteData",
    value: function waitPasteData(keyboardEvent, cb) {
      var win = keyboardEvent.view;
      if (!win) {
        return;
      }
      var copyPaster = this.copyPasters.find(function (cp) {
        return cp.ownerDocument === win.document;
      });
      if (copyPaster) {
        copyPaster.select();
        this.waitFn = cb;
      }
    }
  }]);
}();
var clipboard_clipboard = new clipboard_Clipboard();
// CONCATENATED MODULE: ../designer/src/builtin-simulator/live-editing/live-editing.ts
function live_editing_typeof(o) { "@babel/helpers - typeof"; return live_editing_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, live_editing_typeof(o); }
function live_editing_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function live_editing_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, live_editing_toPropertyKey(o.key), o); } }
function live_editing_createClass(e, r, t) { return r && live_editing_defineProperties(e.prototype, r), t && live_editing_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function live_editing_toPropertyKey(t) { var i = live_editing_toPrimitive(t, "string"); return "symbol" == live_editing_typeof(i) ? i : i + ""; }
function live_editing_toPrimitive(t, r) { if ("object" != live_editing_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != live_editing_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var live_editing_a;


var EDITOR_KEY = 'data-setter-prop';
function getSetterPropElement(ele, root) {
  var box = ele.closest("[".concat(EDITOR_KEY, "]"));
  if (!box || !root.contains(box)) {
    return null;
  }
  return box;
}
function defaultSaveContent(content, prop) {
  prop.setValue(content);
}
var saveHandlers = [];
function addLiveEditingSaveHandler(handler) {
  saveHandlers.push(handler);
}
function clearLiveEditingSaveHandler() {
  saveHandlers = [];
}
var specificRules = [];
function addLiveEditingSpecificRule(rule) {
  specificRules.push(rule);
}
function clearLiveEditingSpecificRule() {
  specificRules = [];
}
var LiveEditing = /*#__PURE__*/function () {
  function LiveEditing() {
    live_editing_classCallCheck(this, LiveEditing);
    this._editing = null;
    this._dispose = void 0;
    this._save = void 0;
  }
  return live_editing_createClass(LiveEditing, [{
    key: "apply",
    value: function apply(target) {
      var _node$document,
        _node$componentMeta,
        _node$componentMeta2,
        _setterPropElement,
        _this = this;
      var node = target.node,
        event = target.event,
        rootElement = target.rootElement;
      var targetElement = event.target;
      var liveTextEditing = node.componentMeta.liveTextEditing;
      var editor = (_node$document = node.document) === null || _node$document === void 0 ? void 0 : _node$document.designer.editor;
      var npm = node === null || node === void 0 ? void 0 : (_node$componentMeta = node.componentMeta) === null || _node$componentMeta === void 0 ? void 0 : _node$componentMeta.npm;
      var selected = [npm === null || npm === void 0 ? void 0 : npm.package, npm === null || npm === void 0 ? void 0 : npm.componentName].filter(function (item) {
        return !!item;
      }).join('-') || (node === null || node === void 0 ? void 0 : (_node$componentMeta2 = node.componentMeta) === null || _node$componentMeta2 === void 0 ? void 0 : _node$componentMeta2.componentName) || '';
      editor === null || editor === void 0 ? void 0 : editor.eventBus.emit('designer.builtinSimulator.liveEditing', {
        selected: selected
      });
      var setterPropElement = getSetterPropElement(targetElement, rootElement);
      var propTarget = (_setterPropElement = setterPropElement) === null || _setterPropElement === void 0 ? void 0 : _setterPropElement.dataset.setterProp;
      var matched;
      if (liveTextEditing) {
        if (propTarget) {
          // 已埋点命中 data-setter-prop="proptarget", 从 liveTextEditing 读取配置（mode|onSaveContent）
          matched = liveTextEditing.find(function (config) {
            return config.propTarget == propTarget;
          });
        } else {
          var _matched;
          // 执行 embedTextEditing selector 规则，获得第一个节点 是否 contains e.target，若匹配，读取配置
          matched = liveTextEditing.find(function (config) {
            if (!config.selector) {
              return false;
            }
            setterPropElement = queryPropElement(rootElement, targetElement, config.selector);
            return !!setterPropElement;
          });
          propTarget = (_matched = matched) === null || _matched === void 0 ? void 0 : _matched.propTarget;
        }
      } else {
        specificRules.some(function (rule) {
          matched = rule(target);
          return !!matched;
        });
        if (matched) {
          propTarget = matched.propTarget;
          setterPropElement = matched.propElement || queryPropElement(rootElement, targetElement, matched.selector);
        }
      }
      // if (!propTarget) {
      //   // 自动纯文本编辑满足一下情况：
      //   //  1. children 内容都是 Leaf 且都是文本（一期）
      //   //  2. DOM 节点是单层容器，子集都是文本节点 (已满足)
      //   const isAllText = node.children?.every(item => {
      //     return item.isLeaf() && item.getProp('children')?.type === 'literal';
      //   });
      //   // TODO:
      // }
      if (propTarget && setterPropElement) {
        var _matched2, _saveHandlers$find, _matched3;
        var prop = node.getProp(propTarget, true);
        if (this._editing === prop) {
          return;
        }
        // 进入编辑
        //  1. 设置 contentEditable="plaintext|..."
        //  2. 添加类名
        //  3. focus & cursor locate
        //  4. 监听 blur 事件
        //  5. 设置编辑锁定：disable hover | disable select | disable canvas drag
        var onSaveContent = ((_matched2 = matched) === null || _matched2 === void 0 ? void 0 : _matched2.onSaveContent) || ((_saveHandlers$find = saveHandlers.find(function (item) {
          return item.condition(prop);
        })) === null || _saveHandlers$find === void 0 ? void 0 : _saveHandlers$find.onSaveContent) || defaultSaveContent;
        setterPropElement.setAttribute('contenteditable', (_matched3 = matched) !== null && _matched3 !== void 0 && _matched3.mode && matched.mode !== 'plaintext' ? 'true' : 'plaintext-only');
        setterPropElement.classList.add('engine-live-editing');
        // be sure
        setterPropElement.focus();
        setCaret(event);
        this._save = function () {
          onSaveContent(setterPropElement.innerText, prop);
        };
        var keydown = function keydown(e) {
          var _setterPropElement2;
          console.info(e.code);
          switch (e.code) {
            case 'Enter':
              break;
            // TODO: check is richtext?
            case 'Escape':
              break;
            case 'Tab':
              (_setterPropElement2 = setterPropElement) === null || _setterPropElement2 === void 0 ? void 0 : _setterPropElement2.blur();
          }
          // esc
          // enter
          // tab
        };
        var focusout = function focusout(/* e: FocusEvent */
        ) {
          _this.saveAndDispose();
        };
        setterPropElement.addEventListener('focusout', focusout);
        setterPropElement.addEventListener('keydown', keydown, true);
        this._dispose = function () {
          setterPropElement.classList.remove('engine-live-editing');
          setterPropElement.removeAttribute('contenteditable');
          setterPropElement.removeEventListener('focusout', focusout);
          setterPropElement.removeEventListener('keydown', keydown, true);
        };
        this._editing = prop;
      }
      // TODO: process enter | esc events & joint the FocusTracker
      // TODO: upward testing for b/i/a html elements
    }
  }, {
    key: "editing",
    get: function get() {
      return this._editing;
    }
  }, {
    key: "saveAndDispose",
    value: function saveAndDispose() {
      if (this._save) {
        this._save();
        this._save = undefined;
      }
      this.dispose();
    }
  }, {
    key: "dispose",
    value: function dispose() {
      if (this._dispose) {
        this._dispose();
        this._dispose = undefined;
      }
      this._editing = null;
    }
  }]);
}();
LiveEditing.addLiveEditingSpecificRule = addLiveEditingSpecificRule;
LiveEditing.clearLiveEditingSpecificRule = clearLiveEditingSpecificRule;
LiveEditing.addLiveEditingSaveHandler = addLiveEditingSaveHandler;
LiveEditing.clearLiveEditingSaveHandler = clearLiveEditingSaveHandler;
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], LiveEditing.prototype, "_editing", void 0);
function setCaret(event) {
  var _event$view;
  var doc = (_event$view = event.view) === null || _event$view === void 0 ? void 0 : _event$view.document;
  if (!doc) return;
  var range = doc.caretRangeFromPoint(event.clientX, event.clientY);
  if (range) {
    selectRange(doc, range);
    setTimeout(function () {
      return selectRange(doc, range);
    }, 1);
  }
}
function selectRange(doc, range) {
  var selection = doc.getSelection();
  if (selection) {
    selection.removeAllRanges();
    selection.addRange(range);
  }
}
function queryPropElement(rootElement, targetElement, selector) {
  if (!selector) {
    return null;
  }
  var propElement = selector === ':root' ? rootElement : rootElement.querySelector(selector);
  if (!propElement) {
    return null;
  }
  if (!propElement.contains(targetElement)) {
    // try selectorAll
    propElement = Array.from(rootElement.querySelectorAll(selector)).find(function (item) {
      return item.contains(targetElement);
    });
    if (!propElement) {
      return null;
    }
  }
  return propElement;
}
// CONCATENATED MODULE: ../designer/src/utils/misc.ts
function isElementNode(domNode) {
  return domNode.nodeType === Node.ELEMENT_NODE;
}
/**
 * 判断节点是否在 viewport 内，判断依据：只要节点有一部分在 viewport 内，都算 true，其余情况 false
 * @param domNode 待检测的节点
 * @param viewport 画布 viewport
 * @returns 是否在 viewport 内
 */
function isDOMNodeVisible(domNode, viewport) {
  var domNodeRect = domNode.getBoundingClientRect();
  var _viewport$contentBoun = viewport.contentBounds,
    width = _viewport$contentBoun.width,
    height = _viewport$contentBoun.height;
  var left = domNodeRect.left,
    right = domNodeRect.right,
    top = domNodeRect.top,
    bottom = domNodeRect.bottom,
    nodeWidth = domNodeRect.width,
    nodeHeight = domNodeRect.height;
  return left >= -nodeWidth && top >= -nodeHeight && bottom <= height + nodeHeight && right <= width + nodeWidth;
}
/**
 * normalize triggers
 * @param triggers
 */
function normalizeTriggers(triggers) {
  return triggers.map(function (trigger) {
    return trigger === null || trigger === void 0 ? void 0 : trigger.toUpperCase();
  });
}
/**
 * make a handler that listen all sensors:document, avoid frame lost
 */
function makeEventsHandler(boostEvent, sensors) {
  var _boostEvent$view;
  var topDoc = window.document;
  var sourceDoc = ((_boostEvent$view = boostEvent.view) === null || _boostEvent$view === void 0 ? void 0 : _boostEvent$view.document) || topDoc;
  var docs = new Set();
  docs.add(topDoc);
  docs.add(sourceDoc);
  sensors.forEach(function (sim) {
    var sdoc = sim.contentDocument;
    if (sdoc) {
      docs.add(sdoc);
    }
  });
  return function (handle) {
    docs.forEach(function (doc) {
      return handle(doc);
    });
  };
}
// EXTERNAL MODULE: external "_"
var external_ = __webpack_require__(8);

// CONCATENATED MODULE: ../designer/src/builtin-simulator/host.ts
function host_typeof(o) { "@babel/helpers - typeof"; return host_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, host_typeof(o); }
function host_createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = host_unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t.return || t.return(); } finally { if (u) throw o; } } }; }
function host_regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return host_regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i.return) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (host_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, host_regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, host_regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), host_regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", host_regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), host_regeneratorDefine2(u), host_regeneratorDefine2(u, o, "Generator"), host_regeneratorDefine2(u, n, function () { return this; }), host_regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (host_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function host_regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } host_regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { host_regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, host_regeneratorDefine2(e, r, n, t); }
function host_asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function host_asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { host_asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { host_asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function host_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function host_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? host_ownKeys(Object(t), !0).forEach(function (r) { host_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : host_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function host_defineProperty(e, r, t) { return (r = host_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function host_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function host_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, host_toPropertyKey(o.key), o); } }
function host_createClass(e, r, t) { return r && host_defineProperties(e.prototype, r), t && host_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function host_toPropertyKey(t) { var i = host_toPrimitive(t, "string"); return "symbol" == host_typeof(i) ? i : i + ""; }
function host_toPrimitive(t, r) { if ("object" != host_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != host_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || host_unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function host_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return host_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? host_arrayLikeToArray(r, a) : void 0; } }
function host_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
var host_a, host_b, host_c, host_d;















var host_logger = new utils_src["e" /* Logger */]({
  level: 'warn',
  bizName: 'designer'
});
var defaultSimulatorUrl = function () {
  var publicPath = Object(src["getPublicPath"])();
  var urls;
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  var _ref = /^(.+?)(\/js)?\/?$/.exec(publicPath) || [],
    _ref2 = _slicedToArray(_ref, 3),
    _ = _ref2[0],
    _ref2$ = _ref2[1],
    prefix = _ref2$ === void 0 ? '' : _ref2$,
    dev = _ref2[2];
  if (dev) {
    urls = ["".concat(prefix, "/css/react-simulator-renderer.css"), "".concat(prefix, "/js/react-simulator-renderer.js")];
  } else if (true) {
    urls = ["".concat(prefix, "/react-simulator-renderer.css"), "".concat(prefix, "/react-simulator-renderer.js")];
  } else {}
  return urls;
}();
var defaultEnvironment = [
// https://g.alicdn.com/mylib/??react/16.11.0/umd/react.production.min.js,react-dom/16.8.6/umd/react-dom.production.min.js,prop-types/15.7.2/prop-types.min.js
Object(utils_src["h" /* assetItem */])(utils_src["d" /* AssetType */].JSText, 'window.React=parent.React;window.ReactDOM=parent.ReactDOM;window.__is_simulator_env__=true;', undefined, 'react'), Object(utils_src["h" /* assetItem */])(utils_src["d" /* AssetType */].JSText, 'window.PropTypes=parent.PropTypes;React.PropTypes=parent.PropTypes; window.__REACT_DEVTOOLS_GLOBAL_HOOK__ = window.parent.__REACT_DEVTOOLS_GLOBAL_HOOK__;')];
var host_BuiltinSimulatorHost = /*#__PURE__*/function () {
  function BuiltinSimulatorHost(project, designer) {
    var _this = this;
    host_classCallCheck(this, BuiltinSimulatorHost);
    this.isSimulator = true;
    this.project = void 0;
    this.designer = void 0;
    this.viewport = new viewport_Viewport();
    this.scroller = void 0;
    this.emitter = Object(src["createModuleEventBus"])('BuiltinSimulatorHost');
    this.componentsConsumer = void 0;
    this.injectionConsumer = void 0;
    this.i18nConsumer = void 0;
    /**
     * 是否为画布自动渲染
     */
    this.autoRender = true;
    this._props = {};
    this._contentWindow = void 0;
    this._contentDocument = void 0;
    this._appHelper = void 0;
    this._renderer = void 0;
    this.asyncLibraryMap = {};
    this.libraryMap = {};
    this._iframe = void 0;
    this.disableHovering = void 0;
    this.disableDetecting = void 0;
    this.liveEditing = new LiveEditing();
    this.instancesMap = {};
    this.tryScrollAgain = null;
    this._sensorAvailable = true;
    this.sensing = false;
    Object(src["makeObservable"])(this);
    this.project = project;
    this.designer = designer;
    this.scroller = this.designer.createScroller(this.viewport);
    this.autoRender = !src["engineConfig"].get('disableAutoRender', false);
    this._appHelper = src["engineConfig"].get('appHelper');
    this.componentsConsumer = new resource_consumer_ResourceConsumer(function () {
      return _this.componentsAsset;
    });
    this.injectionConsumer = new resource_consumer_ResourceConsumer(function () {
      return {
        appHelper: _this._appHelper
      };
    });
    src["engineConfig"].onGot('appHelper', function (data) {
      // appHelper被config.set修改后触发injectionConsumer.consume回调
      _this._appHelper = data;
    });
    this.i18nConsumer = new resource_consumer_ResourceConsumer(function () {
      return _this.project.i18n;
    });
    utils_src["hb" /* transactionManager */].onStartTransaction(function () {
      _this.stopAutoRepaintNode();
    }, types_src["j" /* IPublicEnumTransitionType */].REPAINT);
    // 防止批量调用 transaction 时，执行多次 rerender
    var rerender = Object(external_["debounce"])(this.rerender.bind(this), 28);
    utils_src["hb" /* transactionManager */].onEndTransaction(function () {
      rerender();
      _this.enableAutoRepaintNode();
    }, types_src["j" /* IPublicEnumTransitionType */].REPAINT);
  }
  return host_createClass(BuiltinSimulatorHost, [{
    key: "currentDocument",
    get: function get() {
      return this.project.currentDocument;
    }
  }, {
    key: "renderEnv",
    get: function get() {
      return this.get('renderEnv') || 'default';
    }
  }, {
    key: "device",
    get: function get() {
      return this.get('device') || 'default';
    }
  }, {
    key: "locale",
    get: function get() {
      return this.get('locale') || src["globalLocale"].getLocale();
    }
  }, {
    key: "deviceClassName",
    get: function get() {
      return this.get('deviceClassName');
    }
  }, {
    key: "designMode",
    get: function get() {
      // renderer 依赖
      // TODO: 需要根据 design mode 不同切换鼠标响应情况
      return this.get('designMode') || 'design';
    }
  }, {
    key: "requestHandlersMap",
    get: function get() {
      // renderer 依赖
      // TODO: 需要根据 design mode 不同切换鼠标响应情况
      return this.get('requestHandlersMap') || null;
    }
  }, {
    key: "thisRequiredInJSE",
    get: function get() {
      var _engineConfig$get;
      return (_engineConfig$get = src["engineConfig"].get('thisRequiredInJSE')) !== null && _engineConfig$get !== void 0 ? _engineConfig$get : true;
    }
  }, {
    key: "enableStrictNotFoundMode",
    get: function get() {
      var _engineConfig$get2;
      return (_engineConfig$get2 = src["engineConfig"].get('enableStrictNotFoundMode')) !== null && _engineConfig$get2 !== void 0 ? _engineConfig$get2 : false;
    }
  }, {
    key: "notFoundComponent",
    get: function get() {
      var _engineConfig$get3;
      return (_engineConfig$get3 = src["engineConfig"].get('notFoundComponent')) !== null && _engineConfig$get3 !== void 0 ? _engineConfig$get3 : null;
    }
  }, {
    key: "faultComponent",
    get: function get() {
      var _engineConfig$get4;
      return (_engineConfig$get4 = src["engineConfig"].get('faultComponent')) !== null && _engineConfig$get4 !== void 0 ? _engineConfig$get4 : null;
    }
  }, {
    key: "faultComponentMap",
    get: function get() {
      var _engineConfig$get5;
      return (_engineConfig$get5 = src["engineConfig"].get('faultComponentMap')) !== null && _engineConfig$get5 !== void 0 ? _engineConfig$get5 : null;
    }
  }, {
    key: "componentsAsset",
    get: function get() {
      return this.get('componentsAsset');
    }
  }, {
    key: "theme",
    get: function get() {
      return this.get('theme');
    }
  }, {
    key: "componentsMap",
    get: function get() {
      // renderer 依赖
      return this.designer.componentsMap;
    }
  }, {
    key: "deviceStyle",
    get: function get() {
      return this.get('deviceStyle');
    }
  }, {
    key: "contentWindow",
    get: function get() {
      return this._contentWindow;
    }
  }, {
    key: "contentDocument",
    get: function get() {
      return this._contentDocument;
    }
  }, {
    key: "renderer",
    get: function get() {
      return this._renderer;
    }
  }, {
    key: "sensorAvailable",
    get:
    /**
     * @see IPublicModelSensor
     */
    function get() {
      return this._sensorAvailable;
    }
  }, {
    key: "stopAutoRepaintNode",
    value: function stopAutoRepaintNode() {
      var _this$renderer;
      (_this$renderer = this.renderer) === null || _this$renderer === void 0 ? void 0 : _this$renderer.stopAutoRepaintNode();
    }
  }, {
    key: "enableAutoRepaintNode",
    value: function enableAutoRepaintNode() {
      var _this$renderer2;
      (_this$renderer2 = this.renderer) === null || _this$renderer2 === void 0 ? void 0 : _this$renderer2.enableAutoRepaintNode();
    }
    /**
     * @see ISimulator
     */
  }, {
    key: "setProps",
    value: function setProps(props) {
      this._props = props;
    }
  }, {
    key: "set",
    value: function set(key, value) {
      this._props = host_objectSpread(host_objectSpread({}, this._props), {}, host_defineProperty({}, key, value));
    }
  }, {
    key: "get",
    value: function get(key) {
      if (key === 'device') {
        var _this$designer, _this$designer$editor, _this$designer$editor2, _this$designer$editor3;
        return ((_this$designer = this.designer) === null || _this$designer === void 0 ? void 0 : (_this$designer$editor = _this$designer.editor) === null || _this$designer$editor === void 0 ? void 0 : (_this$designer$editor2 = _this$designer$editor.get('deviceMapper')) === null || _this$designer$editor2 === void 0 ? void 0 : (_this$designer$editor3 = _this$designer$editor2.transform) === null || _this$designer$editor3 === void 0 ? void 0 : _this$designer$editor3.call(_this$designer$editor2, this._props.device)) || this._props.device;
      }
      return this._props[key];
    }
    /**
     * 有 Renderer 进程连接进来，设置同步机制
     */
  }, {
    key: "connect",
    value: function connect(renderer, effect, options) {
      this._renderer = renderer;
      return Object(src["autorun"])(effect, options);
    }
  }, {
    key: "reaction",
    value: function reaction(expression, effect, opts) {
      return Object(src["reaction"])(expression, effect, opts);
    }
  }, {
    key: "autorun",
    value: function autorun(effect, options) {
      return Object(src["autorun"])(effect, options);
    }
  }, {
    key: "purge",
    value: function purge() {
      // todo
    }
  }, {
    key: "mountViewport",
    value: function mountViewport(viewport) {
      this.viewport.mount(viewport);
    }
    /**
     * {
     *   "title":"BizCharts",
     *   "package":"bizcharts",
     *   "exportName":"bizcharts",
     *   "version":"4.0.14",
     *   "urls":[
     *      "https://g.alicdn.com/code/lib/bizcharts/4.0.14/BizCharts.js"
     *   ],
     *   "library":"BizCharts"
     * }
     * package：String 资源 npm 包名
     * exportName：String umd 包导出名字，用于适配部分物料包 define name 不一致的问题，例如把 BizCharts 改成 bizcharts，用来兼容物料用 define 声明的 bizcharts
     * version：String 版本号
     * urls：Array 资源 cdn 地址，必须是 umd 类型，可以是.js 或者.css
     * library：String umd 包直接导出的 name
     */
  }, {
    key: "buildLibrary",
    value: function buildLibrary(library) {
      var _this2 = this;
      var _library = library || this.get('library');
      var libraryAsset = [];
      var libraryExportList = [];
      var functionCallLibraryExportList = [];
      if (_library && _library.length) {
        _library.forEach(function (item) {
          var exportMode = item.exportMode,
            exportSourceLibrary = item.exportSourceLibrary;
          _this2.libraryMap[item.package] = item.library;
          if (item.async) {
            _this2.asyncLibraryMap[item.package] = item;
          }
          if (item.exportName && item.library) {
            libraryExportList.push("Object.defineProperty(window,'".concat(item.exportName, "',{get:()=>window.").concat(item.library, "});"));
          }
          if (exportMode === 'functionCall' && exportSourceLibrary) {
            functionCallLibraryExportList.push("window[\"".concat(item.library, "\"] = window[\"").concat(exportSourceLibrary, "\"](\"").concat(item.library, "\", \"").concat(item.package, "\");"));
          }
          if (item.editUrls) {
            libraryAsset.push(item.editUrls);
          } else if (item.urls) {
            libraryAsset.push(item.urls);
          }
        });
      }
      libraryAsset.unshift(Object(utils_src["h" /* assetItem */])(utils_src["d" /* AssetType */].JSText, libraryExportList.join('')));
      libraryAsset.push(Object(utils_src["h" /* assetItem */])(utils_src["d" /* AssetType */].JSText, functionCallLibraryExportList.join('')));
      return libraryAsset;
    }
  }, {
    key: "rerender",
    value: function rerender() {
      var _this$renderer3, _this$renderer3$reren;
      this.designer.refreshComponentMetasMap();
      (_this$renderer3 = this.renderer) === null || _this$renderer3 === void 0 ? void 0 : (_this$renderer3$reren = _this$renderer3.rerender) === null || _this$renderer3$reren === void 0 ? void 0 : _this$renderer3$reren.call(_this$renderer3);
    }
  }, {
    key: "mountContentFrame",
    value: function () {
      var _mountContentFrame = host_asyncToGenerator(/*#__PURE__*/host_regenerator().m(function _callee(iframe) {
        var _this3 = this;
        var libraryAsset, vendors, renderer, hotkey, innerSkeleton;
        return host_regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              if (!(!iframe || this._iframe === iframe)) {
                _context.n = 1;
                break;
              }
              return _context.a(2);
            case 1:
              this._iframe = iframe;
              this._contentWindow = iframe.contentWindow;
              this._contentDocument = this._contentWindow.document;
              libraryAsset = this.buildLibrary();
              if (this.renderEnv === 'rax') {
                host_logger.error('After LowcodeEngine v1.3.0, Rax is no longer supported.');
              }
              vendors = [
              // required & use once
              Object(utils_src["g" /* assetBundle */])(this.get('environment') || defaultEnvironment, utils_src["a" /* AssetLevel */].Environment),
              // required & use once
              Object(utils_src["g" /* assetBundle */])(this.get('extraEnvironment'), utils_src["a" /* AssetLevel */].Environment),
              // required & use once
              Object(utils_src["g" /* assetBundle */])(libraryAsset, utils_src["a" /* AssetLevel */].Library),
              // required & TODO: think of update
              Object(utils_src["g" /* assetBundle */])(this.theme, utils_src["a" /* AssetLevel */].Theme),
              // required & use once
              Object(utils_src["g" /* assetBundle */])(this.get('simulatorUrl') || defaultSimulatorUrl, utils_src["a" /* AssetLevel */].Runtime)]; // wait 准备 iframe 内容、依赖库注入
              _context.n = 2;
              return createSimulator(this, iframe, vendors);
            case 2:
              renderer = _context.v;
              _context.n = 3;
              return this.componentsConsumer.waitFirstConsume();
            case 3:
              _context.n = 4;
              return this.injectionConsumer.waitFirstConsume();
            case 4:
              if (!(Object.keys(this.asyncLibraryMap).length > 0)) {
                _context.n = 6;
                break;
              }
              _context.n = 5;
              return renderer.loadAsyncLibrary(this.asyncLibraryMap);
            case 5:
              Object.keys(this.asyncLibraryMap).forEach(function (key) {
                delete _this3.asyncLibraryMap[key];
              });
            case 6:
              // step 5 ready & render
              renderer.run();
              // init events, overlays
              this.viewport.setScrollTarget(this._contentWindow);
              this.setupEvents();
              // bind hotkey & clipboard
              hotkey = this.designer.editor.get('innerHotkey');
              hotkey.mount(this._contentWindow);
              innerSkeleton = this.designer.editor.get('skeleton');
              innerSkeleton.focusTracker.mount(this._contentWindow);
              clipboard_clipboard.injectCopyPaster(this._contentDocument);
              // TODO: dispose the bindings
            case 7:
              return _context.a(2);
          }
        }, _callee, this);
      }));
      function mountContentFrame(_x) {
        return _mountContentFrame.apply(this, arguments);
      }
      return mountContentFrame;
    }()
  }, {
    key: "setupComponents",
    value: function () {
      var _setupComponents = host_asyncToGenerator(/*#__PURE__*/host_regenerator().m(function _callee2(library) {
        var _this$renderer4,
          _this4 = this;
        var libraryAsset, _this$renderer5;
        return host_regenerator().w(function (_context2) {
          while (1) switch (_context2.n) {
            case 0:
              libraryAsset = this.buildLibrary(library);
              _context2.n = 1;
              return (_this$renderer4 = this.renderer) === null || _this$renderer4 === void 0 ? void 0 : _this$renderer4.load(libraryAsset);
            case 1:
              if (!(Object.keys(this.asyncLibraryMap).length > 0)) {
                _context2.n = 3;
                break;
              }
              _context2.n = 2;
              return (_this$renderer5 = this.renderer) === null || _this$renderer5 === void 0 ? void 0 : _this$renderer5.loadAsyncLibrary(this.asyncLibraryMap);
            case 2:
              Object.keys(this.asyncLibraryMap).forEach(function (key) {
                delete _this4.asyncLibraryMap[key];
              });
            case 3:
              return _context2.a(2);
          }
        }, _callee2, this);
      }));
      function setupComponents(_x2) {
        return _setupComponents.apply(this, arguments);
      }
      return setupComponents;
    }()
  }, {
    key: "setupEvents",
    value: function setupEvents() {
      // TODO: Thinkof move events control to simulator renderer
      //       just listen special callback
      // because iframe maybe reload
      this.setupDragAndClick();
      this.setupDetecting();
      this.setupLiveEditing();
      this.setupContextMenu();
    }
  }, {
    key: "postEvent",
    value: function postEvent(eventName) {
      var _this$emitter;
      for (var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        data[_key - 1] = arguments[_key];
      }
      (_this$emitter = this.emitter).emit.apply(_this$emitter, [eventName].concat(data));
    }
  }, {
    key: "setupDragAndClick",
    value: function setupDragAndClick() {
      var _this5 = this;
      var designer = this.designer;
      var doc = this.contentDocument;
      // TODO: think of lock when edit a node
      // 事件路由
      doc.addEventListener('mousedown', function (downEvent) {
        var _downEvent$target, _node$componentMeta$a;
        // fix for popups close logic
        document.dispatchEvent(new Event('mousedown'));
        var documentModel = _this5.project.currentDocument;
        if (_this5.liveEditing.editing || !documentModel) {
          return;
        }
        var selection = documentModel.selection;
        var isMulti = false;
        if (_this5.designMode === 'design') {
          isMulti = downEvent.metaKey || downEvent.ctrlKey;
        } else if (!downEvent.metaKey) {
          return;
        }
        // FIXME: dirty fix remove label-for fro liveEditing
        (_downEvent$target = downEvent.target) === null || _downEvent$target === void 0 ? void 0 : _downEvent$target.removeAttribute('for');
        var nodeInst = _this5.getNodeInstanceFromElement(downEvent.target);
        var focusNode = documentModel.focusNode;
        var node = clickable_getClosestClickableNode((nodeInst === null || nodeInst === void 0 ? void 0 : nodeInst.node) || focusNode, downEvent);
        // 如果找不到可点击的节点，直接返回
        if (!node) {
          return;
        }
        // 触发 onMouseDownHook 钩子
        var onMouseDownHook = (_node$componentMeta$a = node.componentMeta.advanced.callbacks) === null || _node$componentMeta$a === void 0 ? void 0 : _node$componentMeta$a.onMouseDownHook;
        if (onMouseDownHook) {
          onMouseDownHook(downEvent, node.internalToShellNode());
        }
        var rglNode = node === null || node === void 0 ? void 0 : node.getParent();
        var isRGLNode = rglNode === null || rglNode === void 0 ? void 0 : rglNode.isRGLContainer;
        if (isRGLNode) {
          var _downEvent$target2;
          // 如果拖拽的是磁铁块的右下角 handle，则直接跳过
          if ((_downEvent$target2 = downEvent.target) !== null && _downEvent$target2 !== void 0 && _downEvent$target2.classList.contains('react-resizable-handle')) return;
          // 禁止多选
          isMulti = false;
          designer.dragon.emitter.emit('rgl.switch', {
            action: 'start',
            rglNode: rglNode
          });
        } else {
          // stop response document focus event
          // 禁止原生拖拽
          downEvent.stopPropagation();
          downEvent.preventDefault();
        }
        // if (!node?.isValidComponent()) {
        //   // 对于未注册组件直接返回
        //   return;
        // }
        var isLeftButton = downEvent.which === 1 || downEvent.button === 0;
        var _checkSelect = function checkSelect(e) {
          doc.removeEventListener('mouseup', _checkSelect, true);
          // 取消移动;
          designer.dragon.emitter.emit('rgl.switch', {
            action: 'end',
            rglNode: rglNode
          });
          // 鼠标是否移动 ? - 鼠标抖动应该也需要支持选中事件，偶尔点击不能选中，磁帖块移除 shaken 检测
          if (!isShaken(downEvent, e) || isRGLNode) {
            var id = node.id;
            designer.activeTracker.track({
              node: node,
              instance: nodeInst === null || nodeInst === void 0 ? void 0 : nodeInst.instance
            });
            if (isMulti && focusNode && !node.contains(focusNode) && selection.has(id)) {
              selection.remove(id);
            } else {
              var _node$getChildren, _this5$designer, _node$componentMeta, _node$componentMeta2;
              // TODO: 避免选中 Page 组件，默认选中第一个子节点；新增规则 或 判断 Live 模式
              if (node.isPage() && (_node$getChildren = node.getChildren()) !== null && _node$getChildren !== void 0 && _node$getChildren.notEmpty() && _this5.designMode === 'live') {
                var _node$getChildren2, _node$getChildren2$ge;
                var firstChildId = (_node$getChildren2 = node.getChildren()) === null || _node$getChildren2 === void 0 ? void 0 : (_node$getChildren2$ge = _node$getChildren2.get(0)) === null || _node$getChildren2$ge === void 0 ? void 0 : _node$getChildren2$ge.getId();
                if (firstChildId) id = firstChildId;
              }
              if (focusNode) {
                selection.select(node.contains(focusNode) ? focusNode.id : id);
              }
              // dirty code should refector
              var editor = (_this5$designer = _this5.designer) === null || _this5$designer === void 0 ? void 0 : _this5$designer.editor;
              var npm = node === null || node === void 0 ? void 0 : (_node$componentMeta = node.componentMeta) === null || _node$componentMeta === void 0 ? void 0 : _node$componentMeta.npm;
              var selected = [npm === null || npm === void 0 ? void 0 : npm.package, npm === null || npm === void 0 ? void 0 : npm.componentName].filter(function (item) {
                return !!item;
              }).join('-') || (node === null || node === void 0 ? void 0 : (_node$componentMeta2 = node.componentMeta) === null || _node$componentMeta2 === void 0 ? void 0 : _node$componentMeta2.componentName) || '';
              editor === null || editor === void 0 ? void 0 : editor.eventBus.emit('designer.builtinSimulator.select', {
                selected: selected
              });
            }
          }
        };
        if (isLeftButton && focusNode && !node.contains(focusNode)) {
          var nodes = [node];
          var ignoreUpSelected = false;
          if (isMulti) {
            // multi select mode, directily add
            if (!selection.has(node.id)) {
              designer.activeTracker.track({
                node: node,
                instance: nodeInst === null || nodeInst === void 0 ? void 0 : nodeInst.instance
              });
              selection.add(node.id);
              ignoreUpSelected = true;
            }
            (focusNode === null || focusNode === void 0 ? void 0 : focusNode.id) && selection.remove(focusNode.id);
            // 获得顶层 nodes
            nodes = selection.getTopNodes();
          } else if (selection.containsNode(node, true)) {
            nodes = selection.getTopNodes();
          } else {
            // will clear current selection & select dragment in dragstart
          }
          designer.dragon.boost({
            type: types_src["g" /* IPublicEnumDragObjectType */].Node,
            nodes: nodes
          }, downEvent, isRGLNode ? rglNode : undefined);
          if (ignoreUpSelected) {
            // multi select mode has add selected, should return
            return;
          }
        }
        doc.addEventListener('mouseup', _checkSelect, true);
      }, true);
      doc.addEventListener('click', function (e) {
        var _this5$_iframe;
        // fix for popups close logic
        var x = new Event('click');
        x.initEvent('click', true);
        (_this5$_iframe = _this5._iframe) === null || _this5$_iframe === void 0 ? void 0 : _this5$_iframe.dispatchEvent(x);
        var target = e.target;
        var customizeIgnoreSelectors = src["engineConfig"].get('customizeIgnoreSelectors');
        // TODO: need more elegant solution to ignore click events of components in designer
        var defaultIgnoreSelectors = ['.next-input-group', '.next-checkbox-group', '.next-checkbox-wrapper', '.next-date-picker', '.next-input', '.next-month-picker', '.next-number-picker', '.next-radio-group', '.next-range', '.next-range-picker', '.next-rating', '.next-select', '.next-switch', '.next-time-picker', '.next-upload', '.next-year-picker', '.next-breadcrumb-item', '.next-calendar-header', '.next-calendar-table', '.editor-container' // 富文本组件
        ];
        var ignoreSelectors = (customizeIgnoreSelectors === null || customizeIgnoreSelectors === void 0 ? void 0 : customizeIgnoreSelectors(defaultIgnoreSelectors, e)) || defaultIgnoreSelectors;
        var ignoreSelectorsString = ignoreSelectors.join(',');
        // 提供了 customizeIgnoreSelectors 的情况下，忽略 isFormEvent() 判断
        if (!customizeIgnoreSelectors && Object(utils_src["H" /* isFormEvent */])(e) || target !== null && target !== void 0 && target.closest(ignoreSelectorsString)) {
          e.preventDefault();
          e.stopPropagation();
        }
        // stop response document click event
        // todo: catch link redirect
      }, true);
    }
    /**
     * 设置悬停处理
     */
  }, {
    key: "setupDetecting",
    value: function setupDetecting() {
      var _this6 = this;
      var doc = this.contentDocument;
      var _this$designer2 = this.designer,
        detecting = _this$designer2.detecting,
        dragon = _this$designer2.dragon;
      var hover = function hover(e) {
        if (!detecting.enable || _this6.designMode !== 'design') {
          return;
        }
        var nodeInst = _this6.getNodeInstanceFromElement(e.target);
        if (nodeInst !== null && nodeInst !== void 0 && nodeInst.node) {
          var _node$document;
          var node = nodeInst.node;
          var focusNode = (_node$document = node.document) === null || _node$document === void 0 ? void 0 : _node$document.focusNode;
          if (focusNode && node.contains(focusNode)) {
            node = focusNode;
          }
          detecting.capture(node);
        } else {
          detecting.capture(null);
        }
        if (!src["engineConfig"].get('enableMouseEventPropagationInCanvas', false) || dragon.dragging) {
          e.stopPropagation();
        }
      };
      var leave = function leave() {
        _this6.project.currentDocument && detecting.leave(_this6.project.currentDocument);
      };
      doc.addEventListener('mouseover', hover, true);
      doc.addEventListener('mouseleave', leave, false);
      // TODO: refactor this line, contains click, mousedown, mousemove
      doc.addEventListener('mousemove', function (e) {
        if (!src["engineConfig"].get('enableMouseEventPropagationInCanvas', false) || dragon.dragging) {
          e.stopPropagation();
        }
      }, true);
      // this.disableDetecting = () => {
      //   detecting.leave(this.project.currentDocument);
      //   doc.removeEventListener('mouseover', hover, true);
      //   doc.removeEventListener('mouseleave', leave, false);
      //   this.disableDetecting = undefined;
      // };
    }
  }, {
    key: "setupLiveEditing",
    value: function setupLiveEditing() {
      var _this7 = this;
      var doc = this.contentDocument;
      // cause edit
      doc.addEventListener('dblclick', function (e) {
        var _this7$project$curren, _this7$findDOMNodes;
        // stop response document dblclick event
        e.stopPropagation();
        e.preventDefault();
        var targetElement = e.target;
        var nodeInst = _this7.getNodeInstanceFromElement(targetElement);
        if (!nodeInst) {
          return;
        }
        var focusNode = (_this7$project$curren = _this7.project.currentDocument) === null || _this7$project$curren === void 0 ? void 0 : _this7$project$curren.focusNode;
        var node = nodeInst.node || focusNode;
        if (!node || isLowCodeComponent(node)) {
          return;
        }
        var rootElement = (_this7$findDOMNodes = _this7.findDOMNodes(nodeInst.instance, node.componentMeta.rootSelector)) === null || _this7$findDOMNodes === void 0 ? void 0 : _this7$findDOMNodes.find(function (item) {
          return (
            // 可能是 [null];
            item && item.contains(targetElement)
          );
        });
        if (!rootElement) {
          return;
        }
        _this7.liveEditing.apply({
          node: node,
          rootElement: rootElement,
          event: e
        });
      }, true);
    }
    /**
     * @see ISimulator
     */
  }, {
    key: "setSuspense",
    value: function setSuspense(/** _suspended: boolean */
    ) {
      return false;
      // if (suspended) {
      //   /*
      //   if (this.disableDetecting) {
      //     this.disableDetecting();
      //   }
      //   */
      //   // sleep some autorun reaction
      // } else {
      //   // weekup some autorun reaction
      //   /*
      //   if (!this.disableDetecting) {
      //     this.setupDetecting();
      //   }
      //   */
      // }
    }
  }, {
    key: "setupContextMenu",
    value: function setupContextMenu() {
      var _this8 = this;
      var doc = this.contentDocument;
      doc.addEventListener('contextmenu', function (e) {
        var _this8$designer, _this8$project$curren, _node$componentMeta3, _node$componentMeta4;
        var targetElement = e.target;
        var nodeInst = _this8.getNodeInstanceFromElement(targetElement);
        var editor = (_this8$designer = _this8.designer) === null || _this8$designer === void 0 ? void 0 : _this8$designer.editor;
        if (!nodeInst) {
          editor === null || editor === void 0 ? void 0 : editor.eventBus.emit('designer.builtinSimulator.contextmenu', {
            originalEvent: e
          });
          return;
        }
        var node = nodeInst.node || ((_this8$project$curren = _this8.project.currentDocument) === null || _this8$project$curren === void 0 ? void 0 : _this8$project$curren.focusNode);
        if (!node) {
          editor === null || editor === void 0 ? void 0 : editor.eventBus.emit('designer.builtinSimulator.contextmenu', {
            originalEvent: e
          });
          return;
        }
        // dirty code should refector
        var npm = node === null || node === void 0 ? void 0 : (_node$componentMeta3 = node.componentMeta) === null || _node$componentMeta3 === void 0 ? void 0 : _node$componentMeta3.npm;
        var selected = [npm === null || npm === void 0 ? void 0 : npm.package, npm === null || npm === void 0 ? void 0 : npm.componentName].filter(function (item) {
          return !!item;
        }).join('-') || (node === null || node === void 0 ? void 0 : (_node$componentMeta4 = node.componentMeta) === null || _node$componentMeta4 === void 0 ? void 0 : _node$componentMeta4.componentName) || '';
        editor === null || editor === void 0 ? void 0 : editor.eventBus.emit('designer.builtinSimulator.contextmenu', host_objectSpread(host_objectSpread({
          selected: selected
        }, nodeInst), {}, {
          instanceRect: _this8.computeComponentInstanceRect(nodeInst.instance),
          originalEvent: e
        }));
      });
    }
    /**
     * @see ISimulator
     */
  }, {
    key: "generateComponentMetadata",
    value: function generateComponentMetadata(componentName) {
      // if html tags
      if (isHTMLTag(componentName)) {
        return {
          componentName: componentName
          // TODO: read builtins html metadata
        };
      }
      var component = this.getComponent(componentName);
      if (!component) {
        return {
          componentName: componentName
        };
      }
      // TODO:
      // 1. generate builtin div/p/h1/h2
      // 2. read propTypes
      return host_objectSpread({
        componentName: componentName
      }, parseMetadata(component));
    }
    /**
     * @see ISimulator
     */
  }, {
    key: "getComponent",
    value: function getComponent(componentName) {
      var _this$renderer6;
      return ((_this$renderer6 = this.renderer) === null || _this$renderer6 === void 0 ? void 0 : _this$renderer6.getComponent(componentName)) || null;
    }
  }, {
    key: "createComponent",
    value: function createComponent(/** _schema: IPublicTypeComponentSchema */
    ) {
      return null;
      // return this.renderer?.createComponent(schema) || null;
    }
  }, {
    key: "setInstance",
    value: function setInstance(docId, id, instances) {
      if (!Object(utils_src["v" /* hasOwnProperty */])(this.instancesMap, docId)) {
        this.instancesMap[docId] = new Map();
      }
      if (instances == null) {
        this.instancesMap[docId].delete(id);
      } else {
        this.instancesMap[docId].set(id, instances.slice());
      }
    }
    /**
     * @see ISimulator
     */
  }, {
    key: "getComponentInstances",
    value: function getComponentInstances(node, context) {
      var _node$document2,
        _this$instancesMap$do,
        _this9 = this;
      var docId = (_node$document2 = node.document) === null || _node$document2 === void 0 ? void 0 : _node$document2.id;
      if (!docId) {
        return null;
      }
      var instances = ((_this$instancesMap$do = this.instancesMap[docId]) === null || _this$instancesMap$do === void 0 ? void 0 : _this$instancesMap$do.get(node.id)) || null;
      if (!instances || !context) {
        return instances;
      }
      // filter with context
      return instances.filter(function (instance) {
        var _this9$getClosestNode;
        return ((_this9$getClosestNode = _this9.getClosestNodeInstance(instance, context === null || context === void 0 ? void 0 : context.nodeId)) === null || _this9$getClosestNode === void 0 ? void 0 : _this9$getClosestNode.instance) === context.instance;
      });
    }
    /**
     * @see ISimulator
     */
  }, {
    key: "getComponentContext",
    value: function getComponentContext(/* node: Node */
    ) {
      throw new Error('Method not implemented.');
    }
    /**
     * @see ISimulator
     */
  }, {
    key: "getClosestNodeInstance",
    value: function getClosestNodeInstance(from, specId) {
      var _this$renderer7;
      return ((_this$renderer7 = this.renderer) === null || _this$renderer7 === void 0 ? void 0 : _this$renderer7.getClosestNodeInstance(from, specId)) || null;
    }
    /**
     * @see ISimulator
     */
  }, {
    key: "computeRect",
    value: function computeRect(node) {
      var instances = this.getComponentInstances(node);
      if (!instances) {
        return null;
      }
      return this.computeComponentInstanceRect(instances[0], node.componentMeta.rootSelector);
    }
    /**
     * @see ISimulator
     */
  }, {
    key: "computeComponentInstanceRect",
    value: function computeComponentInstanceRect(instance, selector) {
      var renderer = this.renderer;
      var elements = this.findDOMNodes(instance, selector);
      if (!elements) {
        return null;
      }
      var elems = elements.slice();
      var rects;
      var last;
      var _computed = false;
      while (true) {
        if (!rects || rects.length < 1) {
          var elem = elems.pop();
          if (!elem) {
            break;
          }
          rects = renderer.getClientRects(elem);
        }
        var rect = rects.pop();
        if (!rect) {
          break;
        }
        if (rect.width === 0 && rect.height === 0) {
          continue;
        }
        if (!last) {
          last = {
            x: rect.left,
            y: rect.top,
            r: rect.right,
            b: rect.bottom
          };
          continue;
        }
        if (rect.left < last.x) {
          last.x = rect.left;
          _computed = true;
        }
        if (rect.top < last.y) {
          last.y = rect.top;
          _computed = true;
        }
        if (rect.right > last.r) {
          last.r = rect.right;
          _computed = true;
        }
        if (rect.bottom > last.b) {
          last.b = rect.bottom;
          _computed = true;
        }
      }
      if (last) {
        var r = new DOMRect(last.x, last.y, last.r - last.x, last.b - last.y);
        r.elements = elements;
        r.computed = _computed;
        return r;
      }
      return null;
    }
    /**
     * @see ISimulator
     */
  }, {
    key: "findDOMNodes",
    value: function findDOMNodes(instance, selector) {
      var _this$_renderer;
      var elements = (_this$_renderer = this._renderer) === null || _this$_renderer === void 0 ? void 0 : _this$_renderer.findDOMNodes(instance);
      if (!elements) {
        return null;
      }
      if (selector) {
        var matched = getMatched(elements, selector);
        if (!matched) {
          return null;
        }
        return [matched];
      }
      return elements;
    }
    /**
     * 通过 DOM 节点获取节点，依赖 simulator 的接口
     */
  }, {
    key: "getNodeInstanceFromElement",
    value: function getNodeInstanceFromElement(target) {
      if (!target) {
        return null;
      }
      var nodeInstance = this.getClosestNodeInstance(target);
      if (!nodeInstance) {
        return null;
      }
      var docId = nodeInstance.docId;
      var doc = this.project.getDocument(docId);
      var node = doc.getNode(nodeInstance.nodeId);
      return host_objectSpread(host_objectSpread({}, nodeInstance), {}, {
        node: node
      });
    }
    /**
     * @see ISimulator
     */
    /* istanbul ignore next */
  }, {
    key: "scrollToNode",
    value: function scrollToNode(node, detail /* , tryTimes = 0 */) {
      var _this$getComponentIns, _detail$near, _this$findDOMNodes;
      this.tryScrollAgain = null;
      if (this.sensing) {
        // active sensor
        return;
      }
      var opt = {};
      var scroll = false;
      var componentInstance = (_this$getComponentIns = this.getComponentInstances((detail === null || detail === void 0 ? void 0 : (_detail$near = detail.near) === null || _detail$near === void 0 ? void 0 : _detail$near.node) || node)) === null || _this$getComponentIns === void 0 ? void 0 : _this$getComponentIns[0];
      if (!componentInstance) return;
      var domNode = (_this$findDOMNodes = this.findDOMNodes(componentInstance)) === null || _this$findDOMNodes === void 0 ? void 0 : _this$findDOMNodes[0];
      if (!domNode) return;
      if (isElementNode(domNode) && !isDOMNodeVisible(domNode, this.viewport)) {
        var _this$contentDocument;
        var _domNode$getBoundingC = domNode.getBoundingClientRect(),
          left = _domNode$getBoundingC.left,
          top = _domNode$getBoundingC.top;
        var _ref3 = ((_this$contentDocument = this.contentDocument) === null || _this$contentDocument === void 0 ? void 0 : _this$contentDocument.documentElement) || {},
          _ref3$scrollTop = _ref3.scrollTop,
          scrollTop = _ref3$scrollTop === void 0 ? 0 : _ref3$scrollTop,
          _ref3$scrollLeft = _ref3.scrollLeft,
          scrollLeft = _ref3$scrollLeft === void 0 ? 0 : _ref3$scrollLeft;
        opt.left = left + scrollLeft;
        opt.top = top + scrollTop;
        scroll = true;
      }
      if (scroll && this.scroller) {
        this.scroller.scrollTo(opt);
      }
    }
    // #region ========= drag and drop helpers =============
    /**
     * @see ISimulator
     */
  }, {
    key: "setNativeSelection",
    value: function setNativeSelection(enableFlag) {
      var _this$renderer8;
      (_this$renderer8 = this.renderer) === null || _this$renderer8 === void 0 ? void 0 : _this$renderer8.setNativeSelection(enableFlag);
    }
    /**
     * @see ISimulator
     */
  }, {
    key: "setDraggingState",
    value: function setDraggingState(state) {
      var _this$renderer9;
      (_this$renderer9 = this.renderer) === null || _this$renderer9 === void 0 ? void 0 : _this$renderer9.setDraggingState(state);
    }
    /**
     * @see ISimulator
     */
  }, {
    key: "setCopyState",
    value: function setCopyState(state) {
      var _this$renderer0;
      (_this$renderer0 = this.renderer) === null || _this$renderer0 === void 0 ? void 0 : _this$renderer0.setCopyState(state);
    }
    /**
     * @see ISimulator
     */
  }, {
    key: "clearState",
    value: function clearState() {
      var _this$renderer1;
      (_this$renderer1 = this.renderer) === null || _this$renderer1 === void 0 ? void 0 : _this$renderer1.clearState();
    }
    /**
     * @see IPublicModelSensor
     */
  }, {
    key: "fixEvent",
    value: function fixEvent(e) {
      var _e$originalEvent$view;
      if (e.fixed) {
        return e;
      }
      var notMyEvent = ((_e$originalEvent$view = e.originalEvent.view) === null || _e$originalEvent$view === void 0 ? void 0 : _e$originalEvent$view.document) !== this.contentDocument;
      // fix canvasX canvasY : 当前激活文档画布坐标系
      if (notMyEvent || !('canvasX' in e) || !('canvasY' in e)) {
        var l = this.viewport.toLocalPoint({
          clientX: e.globalX,
          clientY: e.globalY
        });
        e.canvasX = l.clientX;
        e.canvasY = l.clientY;
      }
      // fix target : 浏览器事件响应目标
      if (!e.target || notMyEvent) {
        if (!isNaN(e.canvasX) && !isNaN(e.canvasY)) {
          var _this$contentDocument2;
          e.target = (_this$contentDocument2 = this.contentDocument) === null || _this$contentDocument2 === void 0 ? void 0 : _this$contentDocument2.elementFromPoint(e.canvasX, e.canvasY);
        }
      }
      // 事件已订正
      e.fixed = true;
      return e;
    }
    /**
     * @see IPublicModelSensor
     */
  }, {
    key: "isEnter",
    value: function isEnter(e) {
      var rect = this.viewport.bounds;
      return e.globalY >= rect.top && e.globalY <= rect.bottom && e.globalX >= rect.left && e.globalX <= rect.right;
    }
    /**
     * @see IPublicModelSensor
     */
  }, {
    key: "deactiveSensor",
    value: function deactiveSensor() {
      this.sensing = false;
      this.scroller.cancel();
    }
    // ========= drag location logic: helper for locate ==========
    /**
     * @see IPublicModelSensor
     */
  }, {
    key: "locate",
    value: function locate(e) {
      var _this0 = this;
      var dragObject = e.dragObject;
      var nodes = dragObject === null || dragObject === void 0 ? void 0 : dragObject.nodes;
      var operationalNodes = nodes === null || nodes === void 0 ? void 0 : nodes.filter(function (node) {
        var _node$componentMeta5, _node$componentMeta5$, _parentContainerNode, _parentContainerNode$, _parentContainerNode$2;
        var onMoveHook = (_node$componentMeta5 = node.componentMeta) === null || _node$componentMeta5 === void 0 ? void 0 : (_node$componentMeta5$ = _node$componentMeta5.advanced.callbacks) === null || _node$componentMeta5$ === void 0 ? void 0 : _node$componentMeta5$.onMoveHook;
        var canMove = onMoveHook && typeof onMoveHook === 'function' ? onMoveHook(node.internalToShellNode()) : true;
        var parentContainerNode = null;
        var parentNode = node.parent;
        while (parentNode) {
          if (parentNode.isContainer()) {
            parentContainerNode = parentNode;
            break;
          }
          parentNode = parentNode.parent;
        }
        var onChildMoveHook = (_parentContainerNode = parentContainerNode) === null || _parentContainerNode === void 0 ? void 0 : (_parentContainerNode$ = _parentContainerNode.componentMeta) === null || _parentContainerNode$ === void 0 ? void 0 : (_parentContainerNode$2 = _parentContainerNode$.advanced.callbacks) === null || _parentContainerNode$2 === void 0 ? void 0 : _parentContainerNode$2.onChildMoveHook;
        var childrenCanMove = onChildMoveHook && parentContainerNode && typeof onChildMoveHook === 'function' ? onChildMoveHook(node.internalToShellNode(), parentContainerNode.internalToShellNode()) : true;
        return canMove && childrenCanMove;
      });
      if (nodes && (!operationalNodes || operationalNodes.length === 0)) {
        return;
      }
      this.sensing = true;
      this.scroller.scrolling(e);
      var document = this.project.currentDocument;
      if (!document) {
        return null;
      }
      var dropContainer = this.getDropContainer(e);
      var lockedNode = Object(utils_src["s" /* getClosestNode */])(dropContainer === null || dropContainer === void 0 ? void 0 : dropContainer.container, function (node) {
        return node.isLocked;
      });
      if (lockedNode) return null;
      if (!dropContainer) {
        return null;
      }
      if (Object(utils_src["N" /* isLocationData */])(dropContainer)) {
        return this.designer.createLocation(dropContainer);
      }
      var container = dropContainer.container,
        containerInstance = dropContainer.instance;
      var edge = this.computeComponentInstanceRect(containerInstance, container.componentMeta.rootSelector);
      if (!edge) {
        return null;
      }
      var children = container.children;
      var detail = {
        type: types_src["k" /* IPublicTypeLocationDetailType */].Children,
        index: 0,
        edge: edge
      };
      var locationData = {
        target: container,
        detail: detail,
        source: "simulator".concat(document.id),
        event: e
      };
      if (e.dragObject && e.dragObject.nodes && e.dragObject.nodes.length && e.dragObject.nodes[0].componentMeta.isModal && document.focusNode) {
        return this.designer.createLocation({
          target: document.focusNode,
          detail: detail,
          source: "simulator".concat(document.id),
          event: e
        });
      }
      if (!children || children.size < 1 || !edge) {
        return this.designer.createLocation(locationData);
      }
      var nearRect = null;
      var nearIndex = 0;
      var nearNode = null;
      var nearDistance = null;
      var minTop = null;
      var maxBottom = null;
      for (var i = 0, l = children.size; i < l; i++) {
        var node = children.get(i);
        var index = i;
        var instances = this.getComponentInstances(node);
        var inst = instances ? instances.length > 1 ? instances.find(function (_inst) {
          var _this0$getClosestNode;
          return ((_this0$getClosestNode = _this0.getClosestNodeInstance(_inst, container.id)) === null || _this0$getClosestNode === void 0 ? void 0 : _this0$getClosestNode.instance) === containerInstance;
        }) : instances[0] : null;
        var rect = inst ? this.computeComponentInstanceRect(inst, node.componentMeta.rootSelector) : null;
        if (!rect) {
          continue;
        }
        var distance = isPointInRect(e, rect) ? 0 : distanceToRect(e, rect);
        if (distance === 0) {
          nearDistance = distance;
          nearNode = node;
          nearIndex = index;
          nearRect = rect;
          break;
        }
        // 标记子节点最顶
        if (minTop === null || rect.top < minTop) {
          minTop = rect.top;
        }
        // 标记子节点最底
        if (maxBottom === null || rect.bottom > maxBottom) {
          maxBottom = rect.bottom;
        }
        if (nearDistance === null || distance < nearDistance) {
          nearDistance = distance;
          nearNode = node;
          nearIndex = index;
          nearRect = rect;
        }
      }
      detail.index = nearIndex;
      if (nearNode && nearRect) {
        var el = getRectTarget(nearRect);
        var inline = el ? isChildInline(el) : false;
        var row = el ? isRowContainer(el.parentElement) : false;
        var vertical = inline || row;
        // TODO: fix type
        var near = {
          node: nearNode.internalToShellNode(),
          pos: 'before',
          align: vertical ? 'V' : 'H'
        };
        detail.near = near;
        if (isNearAfter(e, nearRect, vertical)) {
          near.pos = 'after';
          detail.index = nearIndex + 1;
        }
        if (!row && nearDistance !== 0) {
          var edgeDistance = distanceToEdge(e, edge);
          if (edgeDistance.distance < nearDistance) {
            var nearAfter = edgeDistance.nearAfter;
            if (minTop == null) {
              minTop = edge.top;
            }
            if (maxBottom == null) {
              maxBottom = edge.bottom;
            }
            near.rect = new DOMRect(edge.left, minTop, edge.width, maxBottom - minTop);
            near.align = 'H';
            near.pos = nearAfter ? 'after' : 'before';
            detail.index = nearAfter ? children.size : 0;
          }
        }
      }
      return this.designer.createLocation(locationData);
    }
    /**
     * 查找合适的投放容器
     */
  }, {
    key: "getDropContainer",
    value: function getDropContainer(e) {
      var _container;
      var target = e.target,
        dragObject = e.dragObject;
      var isAny = Object(utils_src["C" /* isDragAnyObject */])(dragObject);
      var document = this.project.currentDocument;
      var currentRoot = document.currentRoot;
      var container;
      var nodeInstance;
      if (target) {
        var ref = this.getNodeInstanceFromElement(target);
        if (ref !== null && ref !== void 0 && ref.node) {
          nodeInstance = ref;
          container = ref.node;
        } else if (isAny) {
          return null;
        } else {
          container = currentRoot;
        }
      } else if (isAny) {
        return null;
      } else {
        container = currentRoot;
      }
      if (!((_container = container) !== null && _container !== void 0 && _container.isParental())) {
        var _container2;
        container = ((_container2 = container) === null || _container2 === void 0 ? void 0 : _container2.parent) || currentRoot;
      }
      // TODO: use spec container to accept specialData
      if (isAny) {
        // will return locationData
        return null;
      }
      // get common parent, avoid drop container contains by dragObject
      var drillDownExcludes = new Set();
      if (Object(utils_src["E" /* isDragNodeObject */])(dragObject)) {
        var nodes = dragObject.nodes;
        var i = nodes.length;
        var p = container;
        while (i-- > 0) {
          if (_contains(nodes[i], p)) {
            p = nodes[i].parent;
          }
        }
        if (p !== container) {
          container = p || document.focusNode;
          container && drillDownExcludes.add(container);
        }
      }
      var instance;
      if (nodeInstance) {
        if (nodeInstance.node === container) {
          instance = nodeInstance.instance;
        } else {
          var _this$getClosestNodeI, _container3;
          instance = (_this$getClosestNodeI = this.getClosestNodeInstance(nodeInstance.instance, (_container3 = container) === null || _container3 === void 0 ? void 0 : _container3.id)) === null || _this$getClosestNodeI === void 0 ? void 0 : _this$getClosestNodeI.instance;
        }
      } else {
        var _this$getComponentIns2;
        instance = container && ((_this$getComponentIns2 = this.getComponentInstances(container)) === null || _this$getComponentIns2 === void 0 ? void 0 : _this$getComponentIns2[0]);
      }
      var dropContainer = {
        container: container,
        instance: instance
      };
      var res;
      var upward = null;
      while (container) {
        res = this.handleAccept(dropContainer, e);
        // if (isLocationData(res)) {
        //   return res;
        // }
        if (res === true) {
          return dropContainer;
        }
        if (!res) {
          drillDownExcludes.add(container);
          if (upward) {
            dropContainer = upward;
            container = dropContainer.container;
            upward = null;
          } else if (container.parent) {
            var _this$getClosestNodeI2;
            container = container.parent;
            instance = (_this$getClosestNodeI2 = this.getClosestNodeInstance(dropContainer.instance, container.id)) === null || _this$getClosestNodeI2 === void 0 ? void 0 : _this$getClosestNodeI2.instance;
            dropContainer = {
              container: container,
              instance: instance
            };
          } else {
            return null;
          }
        }
      }
      return null;
    }
  }, {
    key: "isAcceptable",
    value: function isAcceptable() {
      return false;
    }
    /**
     * 控制接受
     */
  }, {
    key: "handleAccept",
    value: function handleAccept(_ref4, e) {
      var container = _ref4.container;
      var dragObject = e.dragObject;
      var document = this.currentDocument;
      var focusNode = document.focusNode;
      if (node_isRootNode(container) || container.contains(focusNode)) {
        return document.checkNesting(focusNode, dragObject);
      }
      var meta = container.componentMeta;
      // FIXME: get containerInstance for accept logic use
      var acceptable = this.isAcceptable(container);
      if (!meta.isContainer && !acceptable) {
        return false;
      }
      // check nesting
      return document.checkNesting(container, dragObject);
    }
    /**
     * 查找邻近容器
     */
  }, {
    key: "getNearByContainer",
    value: function getNearByContainer(_ref5, drillDownExcludes) {
      var container = _ref5.container,
        instance = _ref5.instance;
      var children = container.children;
      if (!children || children.isEmpty()) {
        return null;
      }
      var nearBy = null;
      for (var i = 0, l = children.size; i < l; i++) {
        var child = children.get(i);
        if (!child) {
          continue;
        }
        if (child.conditionGroup) {
          var bn = child.conditionGroup;
          i = (bn.index || 0) + bn.length - 1;
          child = bn.visibleNode;
        }
        if (!child.isParental() || drillDownExcludes.has(child)) {
          continue;
        }
        // TODO:
        this.findDOMNodes(instance);
        this.getComponentInstances(child);
        var rect = this.computeRect(child);
        if (!rect) {
          continue;
        }
      }
      return nearBy;
    }
  }]);
}();
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", String), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], host_BuiltinSimulatorHost.prototype, "renderEnv", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", String), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], host_BuiltinSimulatorHost.prototype, "device", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", String), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], host_BuiltinSimulatorHost.prototype, "locale", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], host_BuiltinSimulatorHost.prototype, "deviceClassName", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", String), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], host_BuiltinSimulatorHost.prototype, "designMode", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], host_BuiltinSimulatorHost.prototype, "requestHandlersMap", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], host_BuiltinSimulatorHost.prototype, "componentsAsset", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], host_BuiltinSimulatorHost.prototype, "theme", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], host_BuiltinSimulatorHost.prototype, "componentsMap", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], host_BuiltinSimulatorHost.prototype, "deviceStyle", null);
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], host_BuiltinSimulatorHost.prototype, "_props", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", typeof (host_c = typeof Window !== "undefined" && Window) === "function" ? host_c : Object)], host_BuiltinSimulatorHost.prototype, "_contentWindow", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", typeof (host_d = typeof Document !== "undefined" && Document) === "function" ? host_d : Object)], host_BuiltinSimulatorHost.prototype, "_contentDocument", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], host_BuiltinSimulatorHost.prototype, "_appHelper", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"], Object(tslib_es6["d" /* __metadata */])("design:type", Object)], host_BuiltinSimulatorHost.prototype, "instancesMap", void 0);
function isHTMLTag(name) {
  return /^[a-z]\w*$/.test(name);
}
function isPointInRect(point, rect) {
  return point.canvasY >= rect.top && point.canvasY <= rect.bottom && point.canvasX >= rect.left && point.canvasX <= rect.right;
}
function distanceToRect(point, rect) {
  var minX = Math.min(Math.abs(point.canvasX - rect.left), Math.abs(point.canvasX - rect.right));
  var minY = Math.min(Math.abs(point.canvasY - rect.top), Math.abs(point.canvasY - rect.bottom));
  if (point.canvasX >= rect.left && point.canvasX <= rect.right) {
    minX = 0;
  }
  if (point.canvasY >= rect.top && point.canvasY <= rect.bottom) {
    minY = 0;
  }
  return Math.sqrt(Math.pow(minX, 2) + Math.pow(minY, 2));
}
function distanceToEdge(point, rect) {
  var distanceTop = Math.abs(point.canvasY - rect.top);
  var distanceBottom = Math.abs(point.canvasY - rect.bottom);
  return {
    distance: Math.min(distanceTop, distanceBottom),
    nearAfter: distanceBottom < distanceTop
  };
}
function isNearAfter(point, rect, inline) {
  if (inline) {
    return Math.abs(point.canvasX - rect.left) + Math.abs(point.canvasY - rect.top) > Math.abs(point.canvasX - rect.right) + Math.abs(point.canvasY - rect.bottom);
  }
  return Math.abs(point.canvasY - rect.top) > Math.abs(point.canvasY - rect.bottom);
}
function getMatched(elements, selector) {
  var firstQueried = null;
  var _iterator = host_createForOfIteratorHelper(elements),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var elem = _step.value;
      if (Object(utils_src["G" /* isElement */])(elem)) {
        if (elem.matches(selector)) {
          return elem;
        }
        if (!firstQueried) {
          firstQueried = elem.querySelector(selector);
        }
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return firstQueried;
}
// EXTERNAL MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/classnames/index.js
var classnames = __webpack_require__(6);
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);

// CONCATENATED MODULE: ../designer/src/builtin-simulator/bem-tools/border-detecting.tsx
function border_detecting_typeof(o) { "@babel/helpers - typeof"; return border_detecting_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, border_detecting_typeof(o); }
function border_detecting_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function border_detecting_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, border_detecting_toPropertyKey(o.key), o); } }
function border_detecting_createClass(e, r, t) { return r && border_detecting_defineProperties(e.prototype, r), t && border_detecting_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function border_detecting_toPropertyKey(t) { var i = border_detecting_toPrimitive(t, "string"); return "symbol" == border_detecting_typeof(i) ? i : i + ""; }
function border_detecting_toPrimitive(t, r) { if ("object" != border_detecting_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != border_detecting_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _possibleConstructorReturn(t, e) { if (e && ("object" == border_detecting_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return _assertThisInitialized(t); }
function _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }
function _inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && _setPrototypeOf(t, e); }
function _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }






var border_detecting_BorderDetectingInstance = /*#__PURE__*/function (_PureComponent) {
  function BorderDetectingInstance() {
    border_detecting_classCallCheck(this, BorderDetectingInstance);
    return _callSuper(this, BorderDetectingInstance, arguments);
  }
  _inherits(BorderDetectingInstance, _PureComponent);
  return border_detecting_createClass(BorderDetectingInstance, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
        title = _this$props.title,
        rect = _this$props.rect,
        scale = _this$props.scale,
        scrollX = _this$props.scrollX,
        scrollY = _this$props.scrollY,
        isLocked = _this$props.isLocked;
      if (!rect) {
        return null;
      }
      var style = {
        width: rect.width * scale,
        height: rect.height * scale,
        transform: "translate(".concat((scrollX + rect.left) * scale, "px, ").concat((scrollY + rect.top) * scale, "px)")
      };
      var className = classnames_default()('lc-borders lc-borders-detecting');
      // TODO:
      // 1. thinkof icon
      // 2. thinkof top|bottom|inner space
      return /*#__PURE__*/React.createElement("div", {
        className: className,
        style: style
      }, /*#__PURE__*/React.createElement(src["Title"], {
        title: title,
        className: "lc-borders-title"
      }), isLocked ? /*#__PURE__*/React.createElement(src["Title"], {
        title: locale_intl('locked'),
        className: "lc-borders-status"
      }) : null);
    }
  }]);
}(external_window_React_["PureComponent"]);
var border_detecting_BorderDetecting = /*#__PURE__*/function (_Component) {
  function BorderDetecting() {
    border_detecting_classCallCheck(this, BorderDetecting);
    return _callSuper(this, BorderDetecting, arguments);
  }
  _inherits(BorderDetecting, _Component);
  return border_detecting_createClass(BorderDetecting, [{
    key: "scale",
    get: function get() {
      return this.props.host.viewport.scale;
    }
  }, {
    key: "scrollX",
    get: function get() {
      return this.props.host.viewport.scrollX;
    }
  }, {
    key: "scrollY",
    get: function get() {
      return this.props.host.viewport.scrollY;
    }
  }, {
    key: "current",
    get: function get() {
      var host = this.props.host;
      var doc = host.currentDocument;
      if (!doc) {
        return null;
      }
      var selection = doc.selection;
      var current = host.designer.detecting.current;
      if (!current || current.document !== doc || selection.has(current.id)) {
        return null;
      }
      return current;
    }
  }, {
    key: "render",
    value: function render() {
      var _current$componentMet,
        _this = this;
      var host = this.props.host;
      var current = this.current;
      var canHoverHook = current === null || current === void 0 ? void 0 : (_current$componentMet = current.componentMeta.advanced.callbacks) === null || _current$componentMet === void 0 ? void 0 : _current$componentMet.onHoverHook;
      var canHover = canHoverHook && typeof canHoverHook === 'function' ? canHoverHook(current.internalToShellNode()) : true;
      if (!canHover || !current || host.viewport.scrolling || host.liveEditing.editing) {
        return null;
      }
      // rootNode, hover whole viewport
      var focusNode = current.document.focusNode;
      if (!focusNode.contains(current)) {
        return null;
      }
      if (current.contains(focusNode)) {
        var bounds = host.viewport.bounds;
        return /*#__PURE__*/React.createElement(border_detecting_BorderDetectingInstance, {
          key: "line-root",
          title: current.title,
          scale: this.scale,
          scrollX: host.viewport.scrollX,
          scrollY: host.viewport.scrollY,
          rect: new DOMRect(0, 0, bounds.width, bounds.height)
        });
      }
      var lockedNode = Object(utils_src["s" /* getClosestNode */])(current, function (n) {
        var _n$parent;
        // 假如当前节点就是 locked 状态，要从当前节点的父节点开始查找
        return !!(current !== null && current !== void 0 && current.isLocked ? (_n$parent = n.parent) === null || _n$parent === void 0 ? void 0 : _n$parent.isLocked : n.isLocked);
      });
      if (lockedNode && lockedNode.getId() !== current.getId()) {
        // 选中父节锁定的节点
        return /*#__PURE__*/React.createElement(border_detecting_BorderDetectingInstance, {
          key: "line-h",
          title: current.title,
          scale: this.scale,
          scrollX: this.scrollX,
          scrollY: this.scrollY
          // @ts-ignore
          ,
          rect: host.computeComponentInstanceRect(host.getComponentInstances(lockedNode)[0], lockedNode.componentMeta.rootSelector),
          isLocked: (lockedNode === null || lockedNode === void 0 ? void 0 : lockedNode.getId()) !== current.getId()
        });
      }
      var instances = host.getComponentInstances(current);
      if (!instances || instances.length < 1) {
        return null;
      }
      if (instances.length === 1) {
        return /*#__PURE__*/React.createElement(border_detecting_BorderDetectingInstance, {
          key: "line-h",
          title: current.title,
          scale: this.scale,
          scrollX: this.scrollX,
          scrollY: this.scrollY,
          rect: host.computeComponentInstanceRect(instances[0], current.componentMeta.rootSelector)
        });
      }
      return /*#__PURE__*/React.createElement(external_window_React_["Fragment"], null, instances.map(function (inst, i) {
        return /*#__PURE__*/React.createElement(border_detecting_BorderDetectingInstance, {
          key: "line-h-".concat(i),
          title: current.title,
          scale: _this.scale,
          scrollX: _this.scrollX,
          scrollY: _this.scrollY,
          rect: host.computeComponentInstanceRect(inst, current.componentMeta.rootSelector)
        });
      }));
    }
  }]);
}(external_window_React_["Component"]);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], border_detecting_BorderDetecting.prototype, "scale", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], border_detecting_BorderDetecting.prototype, "scrollX", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], border_detecting_BorderDetecting.prototype, "scrollY", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], border_detecting_BorderDetecting.prototype, "current", null);
border_detecting_BorderDetecting = Object(tslib_es6["b" /* __decorate */])([src["observer"]], border_detecting_BorderDetecting);

// CONCATENATED MODULE: ../designer/src/builtin-simulator/bem-tools/border-container.tsx
function border_container_typeof(o) { "@babel/helpers - typeof"; return border_container_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, border_container_typeof(o); }
function border_container_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function border_container_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, border_container_toPropertyKey(o.key), o); } }
function border_container_createClass(e, r, t) { return r && border_container_defineProperties(e.prototype, r), t && border_container_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function border_container_toPropertyKey(t) { var i = border_container_toPrimitive(t, "string"); return "symbol" == border_container_typeof(i) ? i : i + ""; }
function border_container_toPrimitive(t, r) { if ("object" != border_container_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != border_container_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function border_container_callSuper(t, o, e) { return o = border_container_getPrototypeOf(o), border_container_possibleConstructorReturn(t, border_container_isNativeReflectConstruct() ? Reflect.construct(o, e || [], border_container_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function border_container_possibleConstructorReturn(t, e) { if (e && ("object" == border_container_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return border_container_assertThisInitialized(t); }
function border_container_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function border_container_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (border_container_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function border_container_getPrototypeOf(t) { return border_container_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, border_container_getPrototypeOf(t); }
function border_container_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && border_container_setPrototypeOf(t, e); }
function border_container_setPrototypeOf(t, e) { return border_container_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, border_container_setPrototypeOf(t, e); }






var border_container_BorderContainerInstance = /*#__PURE__*/function (_PureComponent) {
  function BorderContainerInstance() {
    border_container_classCallCheck(this, BorderContainerInstance);
    return border_container_callSuper(this, BorderContainerInstance, arguments);
  }
  border_container_inherits(BorderContainerInstance, _PureComponent);
  return border_container_createClass(BorderContainerInstance, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
        title = _this$props.title,
        rect = _this$props.rect,
        scale = _this$props.scale,
        scrollX = _this$props.scrollX,
        scrollY = _this$props.scrollY;
      if (!rect) {
        return null;
      }
      var style = {
        width: rect.width * scale,
        height: rect.height * scale,
        transform: "translate(".concat((scrollX + rect.left) * scale, "px, ").concat((scrollY + rect.top) * scale, "px)")
      };
      var className = classnames_default()('lc-borders lc-borders-detecting');
      return /*#__PURE__*/external_window_React_["createElement"]("div", {
        className: className,
        style: style
      }, /*#__PURE__*/external_window_React_["createElement"](src["Title"], {
        title: title,
        className: "lc-borders-title"
      }));
    }
  }]);
}(external_window_React_["PureComponent"]);
function getTitle(title) {
  if (typeof title === 'string') return title;
  if (Object(utils_src["I" /* isI18nData */])(title)) {
    var locale = src["globalLocale"].getLocale() || 'zh-CN';
    return "\u5C06\u653E\u5165\u5230\u6B64".concat(title[locale]);
  }
  return '';
}
var border_container_BorderContainer = /*#__PURE__*/function (_Component) {
  function BorderContainer() {
    var _this;
    border_container_classCallCheck(this, BorderContainer);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = border_container_callSuper(this, BorderContainer, [].concat(args));
    _this.state = {};
    return _this;
  }
  border_container_inherits(BorderContainer, _Component);
  return border_container_createClass(BorderContainer, [{
    key: "scale",
    get: function get() {
      return this.props.host.viewport.scale;
    }
  }, {
    key: "scrollX",
    get: function get() {
      return this.props.host.viewport.scrollX;
    }
  }, {
    key: "scrollY",
    get: function get() {
      return this.props.host.viewport.scrollY;
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;
      var host = this.props.host;
      host.designer.editor.eventBus.on('designer.dropLocation.change', function (loc) {
        var target = _this2.state.target;
        if (target === (loc === null || loc === void 0 ? void 0 : loc.target)) return;
        _this2.setState({
          target: loc === null || loc === void 0 ? void 0 : loc.target
        });
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;
      var host = this.props.host;
      var target = this.state.target;
      if (target == undefined) {
        return null;
      }
      var instances = host.getComponentInstances(target);
      if (!instances || instances.length < 1) {
        return null;
      }
      if (instances.length === 1) {
        return /*#__PURE__*/external_window_React_["createElement"](border_container_BorderContainerInstance, {
          key: "line-h",
          title: getTitle(target.componentMeta.title),
          scale: this.scale,
          scrollX: this.scrollX,
          scrollY: this.scrollY,
          rect: host.computeComponentInstanceRect(instances[0], target.componentMeta.rootSelector)
        });
      }
      return /*#__PURE__*/external_window_React_["createElement"](external_window_React_["Fragment"], null, instances.map(function (inst, i) {
        return /*#__PURE__*/external_window_React_["createElement"](border_container_BorderContainerInstance, {
          key: "line-h-".concat(i),
          title: getTitle(target.componentMeta.title),
          scale: _this3.scale,
          scrollX: _this3.scrollX,
          scrollY: _this3.scrollY,
          rect: host.computeComponentInstanceRect(inst, target.componentMeta.rootSelector)
        });
      }));
    }
  }]);
}(external_window_React_["Component"]);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], border_container_BorderContainer.prototype, "scale", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], border_container_BorderContainer.prototype, "scrollX", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], border_container_BorderContainer.prototype, "scrollY", null);
border_container_BorderContainer = Object(tslib_es6["b" /* __decorate */])([src["observer"]], border_container_BorderContainer);

// EXTERNAL MODULE: external "Next"
var external_Next_ = __webpack_require__(5);

// EXTERNAL MODULE: ../designer/src/builtin-simulator/node-selector/index.less
var node_selector = __webpack_require__(99);

// CONCATENATED MODULE: ../designer/src/builtin-simulator/node-selector/index.tsx
function node_selector_typeof(o) { "@babel/helpers - typeof"; return node_selector_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, node_selector_typeof(o); }
function node_selector_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function node_selector_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, node_selector_toPropertyKey(o.key), o); } }
function node_selector_createClass(e, r, t) { return r && node_selector_defineProperties(e.prototype, r), t && node_selector_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function node_selector_toPropertyKey(t) { var i = node_selector_toPrimitive(t, "string"); return "symbol" == node_selector_typeof(i) ? i : i + ""; }
function node_selector_toPrimitive(t, r) { if ("object" != node_selector_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != node_selector_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function node_selector_callSuper(t, o, e) { return o = node_selector_getPrototypeOf(o), node_selector_possibleConstructorReturn(t, node_selector_isNativeReflectConstruct() ? Reflect.construct(o, e || [], node_selector_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function node_selector_possibleConstructorReturn(t, e) { if (e && ("object" == node_selector_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return node_selector_assertThisInitialized(t); }
function node_selector_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function node_selector_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (node_selector_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function node_selector_getPrototypeOf(t) { return node_selector_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, node_selector_getPrototypeOf(t); }
function node_selector_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && node_selector_setPrototypeOf(t, e); }
function node_selector_setPrototypeOf(t, e) { return node_selector_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, node_selector_setPrototypeOf(t, e); }






var Popup = external_Next_["Overlay"].Popup;
var node_selector_InstanceNodeSelector = /*#__PURE__*/function (_React$Component) {
  function InstanceNodeSelector() {
    var _this;
    node_selector_classCallCheck(this, InstanceNodeSelector);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = node_selector_callSuper(this, InstanceNodeSelector, [].concat(args));
    _this.state = {
      parentNodes: []
    };
    // 获取节点的父级节点（最多获取 5 层）
    _this.getParentNodes = function (node) {
      var _node$document;
      var parentNodes = [];
      var focusNode = (_node$document = node.document) === null || _node$document === void 0 ? void 0 : _node$document.focusNode;
      if (!focusNode) {
        return null;
      }
      if (node.contains(focusNode) || !focusNode.contains(node)) {
        return parentNodes;
      }
      var currentNode = node;
      while (currentNode && parentNodes.length < 5) {
        currentNode = currentNode.getParent();
        if (currentNode) {
          parentNodes.push(currentNode);
        }
        if (currentNode === focusNode) {
          break;
        }
      }
      return parentNodes;
    };
    _this.onSelect = function (node) {
      return function (event) {
        if (!node) {
          return;
        }
        var canClick = Object(utils_src["i" /* canClickNode */])(node.internalToShellNode(), event);
        if (canClick && typeof node.select === 'function') {
          var _node$document2, _node$componentMeta, _node$componentMeta2;
          node.select();
          var editor = (_node$document2 = node.document) === null || _node$document2 === void 0 ? void 0 : _node$document2.designer.editor;
          var npm = node === null || node === void 0 ? void 0 : (_node$componentMeta = node.componentMeta) === null || _node$componentMeta === void 0 ? void 0 : _node$componentMeta.npm;
          var selected = [npm === null || npm === void 0 ? void 0 : npm.package, npm === null || npm === void 0 ? void 0 : npm.componentName].filter(function (item) {
            return !!item;
          }).join('-') || (node === null || node === void 0 ? void 0 : (_node$componentMeta2 = node.componentMeta) === null || _node$componentMeta2 === void 0 ? void 0 : _node$componentMeta2.componentName) || '';
          editor === null || editor === void 0 ? void 0 : editor.eventBus.emit('designer.border.action', {
            name: 'select',
            selected: selected
          });
        }
      };
    };
    _this.onMouseOver = function (node) {
      return function (_) {
        var flag = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
        if (node && typeof node.hover === 'function') {
          node.hover(flag);
        }
      };
    };
    _this.onMouseOut = function (node) {
      return function (_) {
        var flag = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
        if (node && typeof node.hover === 'function') {
          node.hover(flag);
        }
      };
    };
    _this.renderNodes = function () {
      var nodes = _this.state.parentNodes;
      if (!nodes || nodes.length < 1) {
        return null;
      }
      var children = nodes.map(function (node, key) {
        return /*#__PURE__*/external_window_React_default.a.createElement("div", {
          key: key,
          onClick: _this.onSelect(node),
          onMouseEnter: _this.onMouseOver(node),
          onMouseLeave: _this.onMouseOut(node),
          className: "instance-node-selector-node"
        }, /*#__PURE__*/external_window_React_default.a.createElement("div", {
          className: "instance-node-selector-node-content"
        }, /*#__PURE__*/external_window_React_default.a.createElement(src["Title"], {
          className: "instance-node-selector-node-title",
          title: {
            label: node.title,
            icon: node.icon
          }
        })));
      });
      return children;
    };
    return _this;
  }
  node_selector_inherits(InstanceNodeSelector, _React$Component);
  return node_selector_createClass(InstanceNodeSelector, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var parentNodes = this.getParentNodes(this.props.node);
      this.setState({
        parentNodes: parentNodes !== null && parentNodes !== void 0 ? parentNodes : []
      });
    }
  }, {
    key: "render",
    value: function render() {
      var node = this.props.node;
      return /*#__PURE__*/external_window_React_default.a.createElement("div", {
        className: "instance-node-selector"
      }, /*#__PURE__*/external_window_React_default.a.createElement(Popup, {
        trigger: /*#__PURE__*/external_window_React_default.a.createElement("div", {
          className: "instance-node-selector-current"
        }, /*#__PURE__*/external_window_React_default.a.createElement(src["Title"], {
          className: "instance-node-selector-node-title",
          title: {
            label: node.title,
            icon: node.icon
          }
        })),
        triggerType: "hover",
        offset: [0, 0]
      }, /*#__PURE__*/external_window_React_default.a.createElement("div", {
        className: "instance-node-selector"
      }, this.renderNodes())));
    }
  }]);
}(external_window_React_default.a.Component);
node_selector_InstanceNodeSelector = Object(tslib_es6["b" /* __decorate */])([src["observer"]], node_selector_InstanceNodeSelector);
/* harmony default export */ var builtin_simulator_node_selector = (node_selector_InstanceNodeSelector);
// CONCATENATED MODULE: ../designer/src/builtin-simulator/bem-tools/border-selecting.tsx
function border_selecting_typeof(o) { "@babel/helpers - typeof"; return border_selecting_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, border_selecting_typeof(o); }
function border_selecting_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function border_selecting_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, border_selecting_toPropertyKey(o.key), o); } }
function border_selecting_createClass(e, r, t) { return r && border_selecting_defineProperties(e.prototype, r), t && border_selecting_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function border_selecting_toPropertyKey(t) { var i = border_selecting_toPrimitive(t, "string"); return "symbol" == border_selecting_typeof(i) ? i : i + ""; }
function border_selecting_toPrimitive(t, r) { if ("object" != border_selecting_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != border_selecting_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function border_selecting_callSuper(t, o, e) { return o = border_selecting_getPrototypeOf(o), border_selecting_possibleConstructorReturn(t, border_selecting_isNativeReflectConstruct() ? Reflect.construct(o, e || [], border_selecting_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function border_selecting_possibleConstructorReturn(t, e) { if (e && ("object" == border_selecting_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return border_selecting_assertThisInitialized(t); }
function border_selecting_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function border_selecting_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (border_selecting_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function border_selecting_getPrototypeOf(t) { return border_selecting_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, border_selecting_getPrototypeOf(t); }
function border_selecting_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && border_selecting_setPrototypeOf(t, e); }
function border_selecting_setPrototypeOf(t, e) { return border_selecting_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, border_selecting_setPrototypeOf(t, e); }






var border_selecting_BorderSelectingInstance = /*#__PURE__*/function (_Component) {
  function BorderSelectingInstance() {
    border_selecting_classCallCheck(this, BorderSelectingInstance);
    return border_selecting_callSuper(this, BorderSelectingInstance, arguments);
  }
  border_selecting_inherits(BorderSelectingInstance, _Component);
  return border_selecting_createClass(BorderSelectingInstance, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.props.observed.purge();
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
        observed = _this$props.observed,
        highlight = _this$props.highlight,
        dragging = _this$props.dragging;
      if (!observed.hasOffset) {
        return null;
      }
      var offsetWidth = observed.offsetWidth,
        offsetHeight = observed.offsetHeight,
        offsetTop = observed.offsetTop,
        offsetLeft = observed.offsetLeft;
      var style = {
        width: offsetWidth,
        height: offsetHeight,
        transform: "translate3d(".concat(offsetLeft, "px, ").concat(offsetTop, "px, 0)")
      };
      var className = classnames_default()('lc-borders lc-borders-selecting', {
        highlight: highlight,
        dragging: dragging
      });
      var hideSelectTools = observed.node.componentMeta.advanced.hideSelectTools;
      var hideComponentAction = src["engineConfig"].get('hideComponentAction');
      if (hideSelectTools) {
        return null;
      }
      return /*#__PURE__*/React.createElement("div", {
        className: className,
        style: style
      }, !dragging && !hideComponentAction ? /*#__PURE__*/React.createElement(border_selecting_Toolbar, {
        observed: observed
      }) : null);
    }
  }]);
}(external_window_React_["Component"]);
border_selecting_BorderSelectingInstance = Object(tslib_es6["b" /* __decorate */])([src["observer"]], border_selecting_BorderSelectingInstance);

var border_selecting_Toolbar = /*#__PURE__*/function (_Component2) {
  function Toolbar() {
    border_selecting_classCallCheck(this, Toolbar);
    return border_selecting_callSuper(this, Toolbar, arguments);
  }
  border_selecting_inherits(Toolbar, _Component2);
  return border_selecting_createClass(Toolbar, [{
    key: "render",
    value: function render() {
      var observed = this.props.observed;
      var _observed$viewport = observed.viewport,
        height = _observed$viewport.height,
        width = _observed$viewport.width;
      var BAR_HEIGHT = 20;
      var MARGIN = 1;
      var BORDER = 2;
      var SPACE_HEIGHT = BAR_HEIGHT + MARGIN + BORDER;
      var SPACE_MINIMUM_WIDTH = 160; // magic number，大致是 toolbar 的宽度
      var style;
      // 计算 toolbar 的上/下位置
      if (observed.top > SPACE_HEIGHT) {
        style = {
          top: -SPACE_HEIGHT,
          height: BAR_HEIGHT
        };
      } else if (observed.bottom + SPACE_HEIGHT < height) {
        style = {
          bottom: -SPACE_HEIGHT,
          height: BAR_HEIGHT
        };
      } else {
        style = {
          height: BAR_HEIGHT,
          top: Math.max(MARGIN, MARGIN - observed.top)
        };
      }
      // 计算 toolbar 的左/右位置
      if (SPACE_MINIMUM_WIDTH > observed.left + observed.width) {
        style.left = Math.max(-BORDER, observed.left - width - BORDER);
      } else {
        style.right = Math.max(-BORDER, observed.right - width - BORDER);
        style.justifyContent = 'flex-start';
      }
      var node = observed.node;
      var actions = [];
      node.componentMeta.availableActions.forEach(function (action) {
        var _action$important = action.important,
          important = _action$important === void 0 ? true : _action$important,
          condition = action.condition,
          content = action.content,
          name = action.name;
        if (node.isSlot() && (name === 'copy' || name === 'remove')) {
          // FIXME: need this?
          return;
        }
        if (important && (typeof condition === 'function' ? condition(node) !== false : condition !== false)) {
          actions.push(createAction(content, name, node));
        }
      });
      return /*#__PURE__*/React.createElement("div", {
        className: "lc-borders-actions",
        style: style
      }, actions, /*#__PURE__*/React.createElement(builtin_simulator_node_selector, {
        node: node
      }));
    }
  }]);
}(external_window_React_["Component"]);
border_selecting_Toolbar = Object(tslib_es6["b" /* __decorate */])([src["observer"]], border_selecting_Toolbar);
function createAction(content, key, node) {
  if (/*#__PURE__*/Object(external_window_React_["isValidElement"])(content)) {
    return /*#__PURE__*/Object(external_window_React_["cloneElement"])(content, {
      key: key,
      node: node
    });
  }
  if (Object(utils_src["V" /* isReactComponent */])(content)) {
    return /*#__PURE__*/Object(external_window_React_["createElement"])(content, {
      key: key,
      node: node
    });
  }
  if (Object(utils_src["w" /* isActionContentObject */])(content)) {
    var action = content.action,
      title = content.title,
      icon = content.icon;
    return /*#__PURE__*/React.createElement("div", {
      key: key,
      className: "lc-borders-action",
      onClick: function onClick() {
        var _node$document, _node$componentMeta, _node$componentMeta2;
        action && action(node.internalToShellNode());
        var editor = (_node$document = node.document) === null || _node$document === void 0 ? void 0 : _node$document.designer.editor;
        var npm = node === null || node === void 0 ? void 0 : (_node$componentMeta = node.componentMeta) === null || _node$componentMeta === void 0 ? void 0 : _node$componentMeta.npm;
        var selected = [npm === null || npm === void 0 ? void 0 : npm.package, npm === null || npm === void 0 ? void 0 : npm.componentName].filter(function (item) {
          return !!item;
        }).join('-') || (node === null || node === void 0 ? void 0 : (_node$componentMeta2 = node.componentMeta) === null || _node$componentMeta2 === void 0 ? void 0 : _node$componentMeta2.componentName) || '';
        editor === null || editor === void 0 ? void 0 : editor.eventBus.emit('designer.border.action', {
          name: key,
          selected: selected
        });
      }
    }, icon && Object(utils_src["p" /* createIcon */])(icon, {
      key: key,
      node: node.internalToShellNode()
    }), /*#__PURE__*/React.createElement(src["Tip"], null, title));
  }
  return null;
}
var border_selecting_BorderSelectingForNode = /*#__PURE__*/function (_Component3) {
  function BorderSelectingForNode() {
    border_selecting_classCallCheck(this, BorderSelectingForNode);
    return border_selecting_callSuper(this, BorderSelectingForNode, arguments);
  }
  border_selecting_inherits(BorderSelectingForNode, _Component3);
  return border_selecting_createClass(BorderSelectingForNode, [{
    key: "host",
    get: function get() {
      return this.props.host;
    }
  }, {
    key: "dragging",
    get: function get() {
      return this.host.designer.dragon.dragging;
    }
  }, {
    key: "instances",
    get: function get() {
      return this.host.getComponentInstances(this.props.node);
    }
  }, {
    key: "render",
    value: function render() {
      var _this = this;
      var instances = this.instances;
      var node = this.props.node;
      var designer = this.host.designer;
      if (!instances || instances.length < 1) {
        return null;
      }
      return /*#__PURE__*/React.createElement(external_window_React_["Fragment"], {
        key: node.id
      }, instances.map(function (instance) {
        var observed = designer.createOffsetObserver({
          node: node,
          instance: instance
        });
        if (!observed) {
          return null;
        }
        return /*#__PURE__*/React.createElement(border_selecting_BorderSelectingInstance, {
          key: observed.id,
          dragging: _this.dragging,
          observed: observed
        });
      }));
    }
  }]);
}(external_window_React_["Component"]);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], border_selecting_BorderSelectingForNode.prototype, "instances", null);
border_selecting_BorderSelectingForNode = Object(tslib_es6["b" /* __decorate */])([src["observer"]], border_selecting_BorderSelectingForNode);

var border_selecting_BorderSelecting = /*#__PURE__*/function (_Component4) {
  function BorderSelecting() {
    border_selecting_classCallCheck(this, BorderSelecting);
    return border_selecting_callSuper(this, BorderSelecting, arguments);
  }
  border_selecting_inherits(BorderSelecting, _Component4);
  return border_selecting_createClass(BorderSelecting, [{
    key: "host",
    get: function get() {
      return this.props.host;
    }
  }, {
    key: "dragging",
    get: function get() {
      return this.host.designer.dragon.dragging;
    }
  }, {
    key: "selecting",
    get: function get() {
      var doc = this.host.currentDocument;
      if (!doc || doc.suspensed || this.host.liveEditing.editing) {
        return null;
      }
      var selection = doc.selection;
      return this.dragging ? selection.getTopNodes() : selection.getNodes();
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;
      var selecting = this.selecting;
      if (!selecting || selecting.length < 1) {
        return null;
      }
      return /*#__PURE__*/React.createElement(external_window_React_["Fragment"], null, selecting.map(function (node) {
        return /*#__PURE__*/React.createElement(border_selecting_BorderSelectingForNode, {
          key: node.id,
          host: _this2.props.host,
          node: node
        });
      }));
    }
  }]);
}(external_window_React_["Component"]);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], border_selecting_BorderSelecting.prototype, "selecting", null);
border_selecting_BorderSelecting = Object(tslib_es6["b" /* __decorate */])([src["observer"]], border_selecting_BorderSelecting);

// CONCATENATED MODULE: ../designer/src/builtin-simulator/bem-tools/drag-resize-engine.ts
function drag_resize_engine_typeof(o) { "@babel/helpers - typeof"; return drag_resize_engine_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, drag_resize_engine_typeof(o); }
function drag_resize_engine_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function drag_resize_engine_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, drag_resize_engine_toPropertyKey(o.key), o); } }
function drag_resize_engine_createClass(e, r, t) { return r && drag_resize_engine_defineProperties(e.prototype, r), t && drag_resize_engine_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function drag_resize_engine_toPropertyKey(t) { var i = drag_resize_engine_toPrimitive(t, "string"); return "symbol" == drag_resize_engine_typeof(i) ? i : i + ""; }
function drag_resize_engine_toPrimitive(t, r) { if ("object" != drag_resize_engine_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != drag_resize_engine_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }



// 拖动缩放
var drag_resize_engine_DragResizeEngine = /*#__PURE__*/function () {
  function DragResizeEngine(designer) {
    drag_resize_engine_classCallCheck(this, DragResizeEngine);
    this.emitter = void 0;
    this.dragResizing = false;
    this.designer = void 0;
    this.designer = designer;
    this.emitter = Object(src["createModuleEventBus"])('DragResizeEngine');
  }
  return drag_resize_engine_createClass(DragResizeEngine, [{
    key: "isDragResizing",
    value: function isDragResizing() {
      return this.dragResizing;
    }
    /**
     * drag reszie from
     * @param shell
     * @param direction n/s/e/w
     * @param boost (e: MouseEvent) => VE.Node
     */
  }, {
    key: "from",
    value: function from(shell, direction, boost) {
      var _this = this;
      var node;
      var startEvent;
      if (!shell) {
        return function () {};
      }
      var move = function move(e) {
        var x = createResizeEvent(e);
        var moveX = x.clientX - startEvent.clientX;
        var moveY = x.clientY - startEvent.clientY;
        _this.emitter.emit('resize', e, direction, node, moveX, moveY);
      };
      var masterSensors = this.getMasterSensors();
      /* istanbul ignore next */
      var createResizeEvent = function createResizeEvent(e) {
        var _e$view;
        var sourceDocument = (_e$view = e.view) === null || _e$view === void 0 ? void 0 : _e$view.document;
        if (!sourceDocument || sourceDocument === document) {
          return e;
        }
        var srcSim = masterSensors.find(function (sim) {
          return sim.contentDocument === sourceDocument;
        });
        if (srcSim) {
          return srcSim.viewport.toGlobalPoint(e);
        }
        return e;
      };
      var _over = function over(e) {
        var handleEvents = makeEventsHandler(e, masterSensors);
        handleEvents(function (doc) {
          doc.removeEventListener('mousemove', move, true);
          doc.removeEventListener('mouseup', _over, true);
        });
        _this.dragResizing = false;
        _this.designer.detecting.enable = true;
        utils_src["q" /* cursor */].release();
        _this.emitter.emit('resizeEnd', e, direction, node);
      };
      var mousedown = function mousedown(e) {
        node = boost(e);
        startEvent = createResizeEvent(e);
        var handleEvents = makeEventsHandler(e, masterSensors);
        handleEvents(function (doc) {
          doc.addEventListener('mousemove', move, true);
          doc.addEventListener('mouseup', _over, true);
        });
        _this.emitter.emit('resizeStart', e, direction, node);
        _this.dragResizing = true;
        _this.designer.detecting.enable = false;
        utils_src["q" /* cursor */].addState('ew-resize');
      };
      shell.addEventListener('mousedown', mousedown);
      return function () {
        shell.removeEventListener('mousedown', mousedown);
      };
    }
  }, {
    key: "onResizeStart",
    value: function onResizeStart(func) {
      var _this2 = this;
      this.emitter.on('resizeStart', func);
      return function () {
        _this2.emitter.removeListener('resizeStart', func);
      };
    }
  }, {
    key: "onResize",
    value: function onResize(func) {
      var _this3 = this;
      this.emitter.on('resize', func);
      return function () {
        _this3.emitter.removeListener('resize', func);
      };
    }
  }, {
    key: "onResizeEnd",
    value: function onResizeEnd(func) {
      var _this4 = this;
      this.emitter.on('resizeEnd', func);
      return function () {
        _this4.emitter.removeListener('resizeEnd', func);
      };
    }
  }, {
    key: "getMasterSensors",
    value: function getMasterSensors() {
      return this.designer.project.documents.map(function (doc) {
        var _doc$simulator;
        if (doc.active && (_doc$simulator = doc.simulator) !== null && _doc$simulator !== void 0 && _doc$simulator.sensorAvailable) {
          return doc.simulator;
        }
        return null;
      }).filter(Boolean);
    }
  }]);
}(); // new DragResizeEngine();

// CONCATENATED MODULE: ../designer/src/builtin-simulator/context.ts

var SimulatorContext = /*#__PURE__*/Object(external_window_React_["createContext"])({});
// CONCATENATED MODULE: ../designer/src/builtin-simulator/bem-tools/border-resizing.tsx
function border_resizing_typeof(o) { "@babel/helpers - typeof"; return border_resizing_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, border_resizing_typeof(o); }
var _BoxResizing, _BoxResizingForNode;
function border_resizing_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function border_resizing_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, border_resizing_toPropertyKey(o.key), o); } }
function border_resizing_createClass(e, r, t) { return r && border_resizing_defineProperties(e.prototype, r), t && border_resizing_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function border_resizing_toPropertyKey(t) { var i = border_resizing_toPrimitive(t, "string"); return "symbol" == border_resizing_typeof(i) ? i : i + ""; }
function border_resizing_toPrimitive(t, r) { if ("object" != border_resizing_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != border_resizing_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function border_resizing_callSuper(t, o, e) { return o = border_resizing_getPrototypeOf(o), border_resizing_possibleConstructorReturn(t, border_resizing_isNativeReflectConstruct() ? Reflect.construct(o, e || [], border_resizing_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function border_resizing_possibleConstructorReturn(t, e) { if (e && ("object" == border_resizing_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return border_resizing_assertThisInitialized(t); }
function border_resizing_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function border_resizing_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (border_resizing_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function border_resizing_getPrototypeOf(t) { return border_resizing_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, border_resizing_getPrototypeOf(t); }
function border_resizing_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && border_resizing_setPrototypeOf(t, e); }
function border_resizing_setPrototypeOf(t, e) { return border_resizing_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, border_resizing_setPrototypeOf(t, e); }







var border_resizing_BoxResizing = (_BoxResizing = /*#__PURE__*/function (_Component) {
  function BoxResizing() {
    border_resizing_classCallCheck(this, BoxResizing);
    return border_resizing_callSuper(this, BoxResizing, arguments);
  }
  border_resizing_inherits(BoxResizing, _Component);
  return border_resizing_createClass(BoxResizing, [{
    key: "host",
    get: function get() {
      return this.props.host;
    }
  }, {
    key: "dragging",
    get: function get() {
      return this.host.designer.dragon.dragging;
    }
  }, {
    key: "selecting",
    get: function get() {
      var doc = this.host.currentDocument;
      if (!doc || doc.suspensed) {
        return null;
      }
      var selection = doc.selection;
      return this.dragging ? selection.getTopNodes() : selection.getNodes();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      // this.hoveringCapture.setBoundary(this.outline);
      // this.willBind();
    }
  }, {
    key: "render",
    value: function render() {
      var _this = this;
      var selecting = this.selecting;
      if (!selecting || selecting.length < 1) {
        // DIRTY FIX, recore has a bug!
        return /*#__PURE__*/external_window_React_default.a.createElement(external_window_React_["Fragment"], null);
      }
      // const componentMeta = selecting[0].componentMeta;
      // const metadata = componentMeta.getMetadata();
      return /*#__PURE__*/external_window_React_default.a.createElement(external_window_React_["Fragment"], null, selecting.map(function (node) {
        return /*#__PURE__*/external_window_React_default.a.createElement(border_resizing_BoxResizingForNode, {
          key: node.id,
          node: node,
          host: _this.props.host
        });
      }));
    }
  }]);
}(external_window_React_["Component"]), _BoxResizing.contextType = SimulatorContext, _BoxResizing);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], border_resizing_BoxResizing.prototype, "selecting", null);
border_resizing_BoxResizing = Object(tslib_es6["b" /* __decorate */])([src["observer"]], border_resizing_BoxResizing);
/* harmony default export */ var border_resizing = (border_resizing_BoxResizing);
var border_resizing_BoxResizingForNode = (_BoxResizingForNode = /*#__PURE__*/function (_Component2) {
  function BoxResizingForNode() {
    border_resizing_classCallCheck(this, BoxResizingForNode);
    return border_resizing_callSuper(this, BoxResizingForNode, arguments);
  }
  border_resizing_inherits(BoxResizingForNode, _Component2);
  return border_resizing_createClass(BoxResizingForNode, [{
    key: "host",
    get: function get() {
      return this.props.host;
    }
  }, {
    key: "dragging",
    get: function get() {
      return this.host.designer.dragon.dragging;
    }
  }, {
    key: "instances",
    get: function get() {
      return this.host.getComponentInstances(this.props.node);
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;
      var instances = this.instances;
      var node = this.props.node;
      var designer = this.host.designer;
      if (!instances || instances.length < 1 || this.dragging) {
        return null;
      }
      return /*#__PURE__*/external_window_React_default.a.createElement(external_window_React_["Fragment"], {
        key: node.id
      }, instances.map(function (instance) {
        var observed = designer.createOffsetObserver({
          node: node,
          instance: instance
        });
        if (!observed) {
          return null;
        }
        return /*#__PURE__*/external_window_React_default.a.createElement(border_resizing_BoxResizingInstance, {
          key: observed.id,
          dragging: _this2.dragging,
          designer: designer,
          observed: observed
        });
      }));
    }
  }]);
}(external_window_React_["Component"]), _BoxResizingForNode.contextType = SimulatorContext, _BoxResizingForNode);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], border_resizing_BoxResizingForNode.prototype, "instances", null);
border_resizing_BoxResizingForNode = Object(tslib_es6["b" /* __decorate */])([src["observer"]], border_resizing_BoxResizingForNode);

var border_resizing_BoxResizingInstance = /*#__PURE__*/function (_Component3) {
  function BoxResizingInstance(props) {
    var _this3;
    border_resizing_classCallCheck(this, BoxResizingInstance);
    _this3 = border_resizing_callSuper(this, BoxResizingInstance, [props]);
    // private outline: any;
    _this3.willUnbind = void 0;
    // outline of eight direction
    _this3.outlineN = void 0;
    _this3.outlineE = void 0;
    _this3.outlineS = void 0;
    _this3.outlineW = void 0;
    _this3.outlineNE = void 0;
    _this3.outlineNW = void 0;
    _this3.outlineSE = void 0;
    _this3.outlineSW = void 0;
    _this3.dragEngine = void 0;
    _this3.dragEngine = new drag_resize_engine_DragResizeEngine(props.designer);
    return _this3;
  }
  border_resizing_inherits(BoxResizingInstance, _Component3);
  return border_resizing_createClass(BoxResizingInstance, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.willUnbind) {
        this.willUnbind();
      }
      this.props.observed.purge();
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      // this.hoveringCapture.setBoundary(this.outline);
      this.willBind();
      var resize = function resize(e, direction, node, moveX, moveY) {
        var advanced = node.componentMeta.advanced;
        if (advanced.callbacks && typeof advanced.callbacks.onResize === 'function') {
          e.trigger = direction;
          e.deltaX = moveX;
          e.deltaY = moveY;
          var cbNode = node !== null && node !== void 0 && node.isNode ? node.internalToShellNode() : node;
          advanced.callbacks.onResize(e, cbNode);
        }
      };
      var resizeStart = function resizeStart(e, direction, node) {
        var advanced = node.componentMeta.advanced;
        if (advanced.callbacks && typeof advanced.callbacks.onResizeStart === 'function') {
          e.trigger = direction;
          var cbNode = node !== null && node !== void 0 && node.isNode ? node.internalToShellNode() : node;
          advanced.callbacks.onResizeStart(e, cbNode);
        }
      };
      var resizeEnd = function resizeEnd(e, direction, node) {
        var _node$document, _node$componentMeta, _node$componentMeta2, _node$parent;
        var advanced = node.componentMeta.advanced;
        if (advanced.callbacks && typeof advanced.callbacks.onResizeEnd === 'function') {
          e.trigger = direction;
          var cbNode = node !== null && node !== void 0 && node.isNode ? node.internalToShellNode() : node;
          advanced.callbacks.onResizeEnd(e, cbNode);
        }
        var editor = (_node$document = node.document) === null || _node$document === void 0 ? void 0 : _node$document.designer.editor;
        var npm = node === null || node === void 0 ? void 0 : (_node$componentMeta = node.componentMeta) === null || _node$componentMeta === void 0 ? void 0 : _node$componentMeta.npm;
        var selected = [npm === null || npm === void 0 ? void 0 : npm.package, npm === null || npm === void 0 ? void 0 : npm.componentName].filter(function (item) {
          return !!item;
        }).join('-') || (node === null || node === void 0 ? void 0 : (_node$componentMeta2 = node.componentMeta) === null || _node$componentMeta2 === void 0 ? void 0 : _node$componentMeta2.componentName) || '';
        editor === null || editor === void 0 ? void 0 : editor.eventBus.emit('designer.border.resize', {
          selected: selected,
          layout: (node === null || node === void 0 ? void 0 : (_node$parent = node.parent) === null || _node$parent === void 0 ? void 0 : _node$parent.getPropValue('layout')) || ''
        });
      };
      this.dragEngine.onResize(resize);
      this.dragEngine.onResizeStart(resizeStart);
      this.dragEngine.onResizeEnd(resizeEnd);
    }
  }, {
    key: "willBind",
    value: function willBind() {
      var _this4 = this;
      if (this.willUnbind) {
        this.willUnbind();
      }
      if (!this.outlineN && !this.outlineE && !this.outlineS && !this.outlineW && !this.outlineNE && !this.outlineNW && !this.outlineSE && !this.outlineSW) {
        return;
      }
      var unBind = [];
      var node = this.props.observed.node;
      unBind.push.apply(unBind, [this.dragEngine.from(this.outlineN, 'n', function () {
        return node;
      }), this.dragEngine.from(this.outlineE, 'e', function () {
        return node;
      }), this.dragEngine.from(this.outlineS, 's', function () {
        return node;
      }), this.dragEngine.from(this.outlineW, 'w', function () {
        return node;
      }), this.dragEngine.from(this.outlineNE, 'ne', function () {
        return node;
      }), this.dragEngine.from(this.outlineNW, 'nw', function () {
        return node;
      }), this.dragEngine.from(this.outlineSE, 'se', function () {
        return node;
      }), this.dragEngine.from(this.outlineSW, 'sw', function () {
        return node;
      })]);
      this.willUnbind = function () {
        if (unBind && unBind.length > 0) {
          unBind.forEach(function (item) {
            item();
          });
        }
        _this4.willUnbind = function () {};
      };
    }
  }, {
    key: "render",
    value: function render() {
      var _this5 = this;
      var observed = this.props.observed;
      var triggerVisible = [];
      var offsetWidth = 0;
      var offsetHeight = 0;
      var offsetTop = 0;
      var offsetLeft = 0;
      if (observed.hasOffset) {
        var _metadata$configure, _metadata$configure$a;
        offsetWidth = observed.offsetWidth;
        offsetHeight = observed.offsetHeight;
        offsetTop = observed.offsetTop;
        offsetLeft = observed.offsetLeft;
        var node = observed.node;
        var metadata = node.componentMeta.getMetadata();
        if ((_metadata$configure = metadata.configure) !== null && _metadata$configure !== void 0 && (_metadata$configure$a = _metadata$configure.advanced) !== null && _metadata$configure$a !== void 0 && _metadata$configure$a.getResizingHandlers) {
          triggerVisible = metadata.configure.advanced.getResizingHandlers(node.internalToShellNode());
        }
      }
      triggerVisible = normalizeTriggers(triggerVisible);
      var baseSideClass = 'lc-borders lc-resize-side';
      var baseCornerClass = 'lc-borders lc-resize-corner';
      return /*#__PURE__*/external_window_React_default.a.createElement("div", null, /*#__PURE__*/external_window_React_default.a.createElement("div", {
        ref: function ref(_ref) {
          _this5.outlineN = _ref;
        },
        className: classnames_default()(baseSideClass, 'n'),
        style: {
          height: 20,
          transform: "translate(".concat(offsetLeft, "px, ").concat(offsetTop - 10, "px)"),
          width: offsetWidth,
          display: triggerVisible.includes('N') ? 'flex' : 'none'
        }
      }), /*#__PURE__*/external_window_React_default.a.createElement("div", {
        ref: function ref(_ref2) {
          _this5.outlineNE = _ref2;
        },
        className: classnames_default()(baseCornerClass, 'ne'),
        style: {
          transform: "translate(".concat(offsetLeft + offsetWidth - 5, "px, ").concat(offsetTop - 3, "px)"),
          cursor: 'nesw-resize',
          display: triggerVisible.includes('NE') ? 'flex' : 'none'
        }
      }), /*#__PURE__*/external_window_React_default.a.createElement("div", {
        className: classnames_default()(baseSideClass, 'e'),
        ref: function ref(_ref3) {
          _this5.outlineE = _ref3;
        },
        style: {
          height: offsetHeight,
          transform: "translate(".concat(offsetLeft + offsetWidth - 10, "px, ").concat(offsetTop, "px)"),
          width: 20,
          display: triggerVisible.includes('E') ? 'flex' : 'none'
        }
      }), /*#__PURE__*/external_window_React_default.a.createElement("div", {
        ref: function ref(_ref4) {
          _this5.outlineSE = _ref4;
        },
        className: classnames_default()(baseCornerClass, 'se'),
        style: {
          transform: "translate(".concat(offsetLeft + offsetWidth - 5, "px, ").concat(offsetTop + offsetHeight - 5, "px)"),
          cursor: 'nwse-resize',
          display: triggerVisible.includes('SE') ? 'flex' : 'none'
        }
      }), /*#__PURE__*/external_window_React_default.a.createElement("div", {
        ref: function ref(_ref5) {
          _this5.outlineS = _ref5;
        },
        className: classnames_default()(baseSideClass, 's'),
        style: {
          height: 20,
          transform: "translate(".concat(offsetLeft, "px, ").concat(offsetTop + offsetHeight - 10, "px)"),
          width: offsetWidth,
          display: triggerVisible.includes('S') ? 'flex' : 'none'
        }
      }), /*#__PURE__*/external_window_React_default.a.createElement("div", {
        ref: function ref(_ref6) {
          _this5.outlineSW = _ref6;
        },
        className: classnames_default()(baseCornerClass, 'sw'),
        style: {
          transform: "translate(".concat(offsetLeft - 3, "px, ").concat(offsetTop + offsetHeight - 5, "px)"),
          cursor: 'nesw-resize',
          display: triggerVisible.includes('SW') ? 'flex' : 'none'
        }
      }), /*#__PURE__*/external_window_React_default.a.createElement("div", {
        ref: function ref(_ref7) {
          _this5.outlineW = _ref7;
        },
        className: classnames_default()(baseSideClass, 'w'),
        style: {
          height: offsetHeight,
          transform: "translate(".concat(offsetLeft - 10, "px, ").concat(offsetTop, "px)"),
          width: 20,
          display: triggerVisible.includes('W') ? 'flex' : 'none'
        }
      }), /*#__PURE__*/external_window_React_default.a.createElement("div", {
        ref: function ref(_ref8) {
          _this5.outlineNW = _ref8;
        },
        className: classnames_default()(baseCornerClass, 'nw'),
        style: {
          transform: "translate(".concat(offsetLeft - 3, "px, ").concat(offsetTop - 3, "px)"),
          cursor: 'nwse-resize',
          display: triggerVisible.includes('NW') ? 'flex' : 'none'
        }
      }));
    }
  }]);
}(external_window_React_["Component"]);
border_resizing_BoxResizingInstance = Object(tslib_es6["b" /* __decorate */])([src["observer"], Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Object])], border_resizing_BoxResizingInstance);

// EXTERNAL MODULE: ../designer/src/builtin-simulator/bem-tools/insertion.less
var bem_tools_insertion = __webpack_require__(100);

// CONCATENATED MODULE: ../designer/src/builtin-simulator/bem-tools/insertion.tsx
function insertion_typeof(o) { "@babel/helpers - typeof"; return insertion_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, insertion_typeof(o); }
function insertion_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function insertion_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, insertion_toPropertyKey(o.key), o); } }
function insertion_createClass(e, r, t) { return r && insertion_defineProperties(e.prototype, r), t && insertion_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function insertion_toPropertyKey(t) { var i = insertion_toPrimitive(t, "string"); return "symbol" == insertion_typeof(i) ? i : i + ""; }
function insertion_toPrimitive(t, r) { if ("object" != insertion_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != insertion_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function insertion_callSuper(t, o, e) { return o = insertion_getPrototypeOf(o), insertion_possibleConstructorReturn(t, insertion_isNativeReflectConstruct() ? Reflect.construct(o, e || [], insertion_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function insertion_possibleConstructorReturn(t, e) { if (e && ("object" == insertion_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return insertion_assertThisInitialized(t); }
function insertion_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function insertion_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (insertion_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function insertion_getPrototypeOf(t) { return insertion_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, insertion_getPrototypeOf(t); }
function insertion_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && insertion_setPrototypeOf(t, e); }
function insertion_setPrototypeOf(t, e) { return insertion_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, insertion_setPrototypeOf(t, e); }






/**
 * 处理拖拽子节点(INode)情况
 */
function processChildrenDetail(sim, container, detail) {
  var edge = detail.edge || null;
  if (!edge) {
    edge = sim.computeRect(container);
    if (!edge) {
      return {};
    }
  }
  var ret = {
    edge: edge,
    insertType: 'before'
  };
  if (detail.near) {
    var _detail$near = detail.near,
      node = _detail$near.node,
      pos = _detail$near.pos,
      rect = _detail$near.rect,
      align = _detail$near.align;
    ret.nearRect = rect || sim.computeRect(node);
    ret.nearNode = node;
    if (pos === 'replace') {
      // FIXME: ret.nearRect mybe null
      ret.coverRect = ret.nearRect;
      ret.insertType = 'cover';
    } else if (!ret.nearRect || ret.nearRect.width === 0 && ret.nearRect.height === 0) {
      ret.nearRect = ret.edge;
      ret.insertType = 'after';
      ret.vertical = isVertical(ret.nearRect);
    } else {
      ret.insertType = pos;
      ret.vertical = align ? align === 'V' : isVertical(ret.nearRect);
    }
    return ret;
  }
  // from outline-tree: has index, but no near
  // TODO: think of shadowNode & ConditionFlow
  var index = detail.index;
  if (index == null) {
    ret.coverRect = ret.edge;
    ret.insertType = 'cover';
    return ret;
  }
  var nearNode = container.children.get(index);
  if (!nearNode) {
    // index = 0, eg. nochild,
    nearNode = container.children.get(index > 0 ? index - 1 : 0);
    if (!nearNode) {
      ret.insertType = 'cover';
      ret.coverRect = edge;
      return ret;
    }
    ret.insertType = 'after';
  }
  if (nearNode) {
    ret.nearRect = sim.computeRect(nearNode);
    if (!ret.nearRect || ret.nearRect.width === 0 && ret.nearRect.height === 0) {
      ret.nearRect = ret.edge;
      ret.insertType = 'after';
    }
    ret.vertical = isVertical(ret.nearRect);
    ret.nearNode = nearNode;
  } else {
    ret.insertType = 'cover';
    ret.coverRect = edge;
  }
  return ret;
}
/**
 * 将 detail 信息转换为页面"坐标"信息
 */
function processDetail(_ref) {
  var target = _ref.target,
    detail = _ref.detail,
    document = _ref.document;
  var sim = document.simulator;
  if (!sim) {
    return {};
  }
  if (Object(utils_src["M" /* isLocationChildrenDetail */])(detail)) {
    return processChildrenDetail(sim, target, detail);
  } else {
    // TODO: others...
    var instances = sim.getComponentInstances(target);
    if (!instances) {
      return {};
    }
    var edge = sim.computeComponentInstanceRect(instances[0], target.componentMeta.rootSelector);
    return edge ? {
      edge: edge,
      insertType: 'cover',
      coverRect: edge
    } : {};
  }
}
var InsertionView = /*#__PURE__*/function (_Component) {
  function InsertionView() {
    insertion_classCallCheck(this, InsertionView);
    return insertion_callSuper(this, InsertionView, arguments);
  }
  insertion_inherits(InsertionView, _Component);
  return insertion_createClass(InsertionView, [{
    key: "render",
    value: function render() {
      var _host$currentDocument, _loc$target, _loc$target$component, _loc$detail;
      var host = this.props.host;
      var loc = (_host$currentDocument = host.currentDocument) === null || _host$currentDocument === void 0 ? void 0 : _host$currentDocument.dropLocation;
      if (!loc) {
        return null;
      }
      // 如果是个绝对定位容器，不需要渲染插入标记
      if ((_loc$target = loc.target) !== null && _loc$target !== void 0 && (_loc$target$component = _loc$target.componentMeta) !== null && _loc$target$component !== void 0 && _loc$target$component.advanced.isAbsoluteLayoutContainer) {
        return null;
      }
      var _host$viewport = host.viewport,
        scale = _host$viewport.scale,
        scrollX = _host$viewport.scrollX,
        scrollY = _host$viewport.scrollY;
      var _processDetail = processDetail(loc),
        edge = _processDetail.edge,
        insertType = _processDetail.insertType,
        coverRect = _processDetail.coverRect,
        nearRect = _processDetail.nearRect,
        vertical = _processDetail.vertical,
        nearNode = _processDetail.nearNode;
      if (!edge) {
        return null;
      }
      var className = 'lc-insertion';
      if (((_loc$detail = loc.detail) === null || _loc$detail === void 0 ? void 0 : _loc$detail.valid) === false) {
        className += ' invalid';
      }
      var style = {};
      var x;
      var y;
      if (insertType === 'cover') {
        className += ' cover';
        x = (coverRect.left + scrollX) * scale;
        y = (coverRect.top + scrollY) * scale;
        style.width = coverRect.width * scale;
        style.height = coverRect.height * scale;
      } else {
        var _nearNode$componentMe;
        if (!nearRect) {
          return null;
        }
        if (vertical) {
          className += ' vertical';
          x = ((insertType === 'before' ? nearRect.left : nearRect.right) + scrollX) * scale;
          y = (nearRect.top + scrollY) * scale;
          style.height = nearRect.height * scale;
        } else {
          x = (nearRect.left + scrollX) * scale;
          y = ((insertType === 'before' ? nearRect.top : nearRect.bottom) + scrollY) * scale;
          style.width = nearRect.width * scale;
        }
        if (y === 0 && nearNode !== null && nearNode !== void 0 && (_nearNode$componentMe = nearNode.componentMeta) !== null && _nearNode$componentMe !== void 0 && _nearNode$componentMe.isTopFixed) {
          return null;
        }
      }
      style.transform = "translate3d(".concat(x, "px, ").concat(y, "px, 0)");
      // style.transition = 'all 0.2s ease-in-out';
      return /*#__PURE__*/React.createElement("div", {
        className: className,
        style: style
      });
    }
  }]);
}(external_window_React_["Component"]);
InsertionView = Object(tslib_es6["b" /* __decorate */])([src["observer"]], InsertionView);

// EXTERNAL MODULE: ../designer/src/builtin-simulator/bem-tools/bem-tools.less
var bem_tools = __webpack_require__(101);

// EXTERNAL MODULE: ../designer/src/builtin-simulator/bem-tools/borders.less
var borders = __webpack_require__(102);

// CONCATENATED MODULE: ../designer/src/builtin-simulator/bem-tools/index.tsx
function bem_tools_typeof(o) { "@babel/helpers - typeof"; return bem_tools_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, bem_tools_typeof(o); }
function bem_tools_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function bem_tools_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, bem_tools_toPropertyKey(o.key), o); } }
function bem_tools_createClass(e, r, t) { return r && bem_tools_defineProperties(e.prototype, r), t && bem_tools_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function bem_tools_toPropertyKey(t) { var i = bem_tools_toPrimitive(t, "string"); return "symbol" == bem_tools_typeof(i) ? i : i + ""; }
function bem_tools_toPrimitive(t, r) { if ("object" != bem_tools_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != bem_tools_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function bem_tools_callSuper(t, o, e) { return o = bem_tools_getPrototypeOf(o), bem_tools_possibleConstructorReturn(t, bem_tools_isNativeReflectConstruct() ? Reflect.construct(o, e || [], bem_tools_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function bem_tools_possibleConstructorReturn(t, e) { if (e && ("object" == bem_tools_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return bem_tools_assertThisInitialized(t); }
function bem_tools_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function bem_tools_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (bem_tools_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function bem_tools_getPrototypeOf(t) { return bem_tools_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, bem_tools_getPrototypeOf(t); }
function bem_tools_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && bem_tools_setPrototypeOf(t, e); }
function bem_tools_setPrototypeOf(t, e) { return bem_tools_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, bem_tools_setPrototypeOf(t, e); }










var bem_tools_BemTools = /*#__PURE__*/function (_Component) {
  function BemTools() {
    bem_tools_classCallCheck(this, BemTools);
    return bem_tools_callSuper(this, BemTools, arguments);
  }
  bem_tools_inherits(BemTools, _Component);
  return bem_tools_createClass(BemTools, [{
    key: "render",
    value: function render() {
      var host = this.props.host;
      var designMode = host.designMode;
      var _host$viewport = host.viewport,
        scrollX = _host$viewport.scrollX,
        scrollY = _host$viewport.scrollY,
        scale = _host$viewport.scale;
      if (designMode === 'live') {
        return null;
      }
      return /*#__PURE__*/external_window_React_default.a.createElement("div", {
        className: "lc-bem-tools",
        style: {
          transform: "translate(".concat(-scrollX * scale, "px,").concat(-scrollY * scale, "px)")
        }
      }, !src["engineConfig"].get('disableDetecting') && /*#__PURE__*/external_window_React_default.a.createElement(border_detecting_BorderDetecting, {
        key: "hovering",
        host: host
      }), /*#__PURE__*/external_window_React_default.a.createElement(border_selecting_BorderSelecting, {
        key: "selecting",
        host: host
      }), src["engineConfig"].get('enableReactiveContainer') && /*#__PURE__*/external_window_React_default.a.createElement(border_container_BorderContainer, {
        key: "reactive-container-border",
        host: host
      }), /*#__PURE__*/external_window_React_default.a.createElement(InsertionView, {
        key: "insertion",
        host: host
      }), /*#__PURE__*/external_window_React_default.a.createElement(border_resizing, {
        key: "resizing",
        host: host
      }), host.designer.bemToolsManager.getAllBemTools().map(function (tools) {
        var ToolsCls = tools.item;
        return /*#__PURE__*/external_window_React_default.a.createElement(ToolsCls, {
          key: tools.name,
          host: host
        });
      }));
    }
  }]);
}(external_window_React_["Component"]);
bem_tools_BemTools = Object(tslib_es6["b" /* __decorate */])([src["observer"]], bem_tools_BemTools);

// EXTERNAL MODULE: ../designer/src/builtin-simulator/host.less
var builtin_simulator_host = __webpack_require__(103);

// CONCATENATED MODULE: ../designer/src/builtin-simulator/host-view.tsx
function host_view_typeof(o) { "@babel/helpers - typeof"; return host_view_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, host_view_typeof(o); }
function host_view_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function host_view_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, host_view_toPropertyKey(o.key), o); } }
function host_view_createClass(e, r, t) { return r && host_view_defineProperties(e.prototype, r), t && host_view_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function host_view_toPropertyKey(t) { var i = host_view_toPrimitive(t, "string"); return "symbol" == host_view_typeof(i) ? i : i + ""; }
function host_view_toPrimitive(t, r) { if ("object" != host_view_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != host_view_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function host_view_callSuper(t, o, e) { return o = host_view_getPrototypeOf(o), host_view_possibleConstructorReturn(t, host_view_isNativeReflectConstruct() ? Reflect.construct(o, e || [], host_view_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function host_view_possibleConstructorReturn(t, e) { if (e && ("object" == host_view_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return host_view_assertThisInitialized(t); }
function host_view_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function host_view_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (host_view_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function host_view_getPrototypeOf(t) { return host_view_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, host_view_getPrototypeOf(t); }
function host_view_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && host_view_setPrototypeOf(t, e); }
function host_view_setPrototypeOf(t, e) { return host_view_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, host_view_setPrototypeOf(t, e); }






var host_view_BuiltinSimulatorHostView = /*#__PURE__*/function (_Component) {
  function BuiltinSimulatorHostView(props) {
    var _this;
    host_view_classCallCheck(this, BuiltinSimulatorHostView);
    _this = host_view_callSuper(this, BuiltinSimulatorHostView, [props]);
    _this.host = void 0;
    var _this$props = _this.props,
      project = _this$props.project,
      onMount = _this$props.onMount,
      designer = _this$props.designer;
    _this.host = project.simulator || new host_BuiltinSimulatorHost(project, designer);
    _this.host.setProps(_this.props);
    onMount === null || onMount === void 0 ? void 0 : onMount(_this.host);
    return _this;
  }
  host_view_inherits(BuiltinSimulatorHostView, _Component);
  return host_view_createClass(BuiltinSimulatorHostView, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps) {
      this.host.setProps(nextProps);
      return false;
    }
  }, {
    key: "render",
    value: function render() {
      return /*#__PURE__*/external_window_React_default.a.createElement("div", {
        className: "lc-simulator"
      }, /*#__PURE__*/external_window_React_default.a.createElement(host_view_Canvas, {
        host: this.host
      }));
    }
  }]);
}(external_window_React_["Component"]);
var host_view_Canvas = /*#__PURE__*/function (_Component2) {
  function Canvas() {
    host_view_classCallCheck(this, Canvas);
    return host_view_callSuper(this, Canvas, arguments);
  }
  host_view_inherits(Canvas, _Component2);
  return host_view_createClass(Canvas, [{
    key: "render",
    value: function render() {
      var sim = this.props.host;
      var className = 'lc-simulator-canvas';
      var _ref = sim.deviceStyle || {},
        _ref$canvas = _ref.canvas,
        canvas = _ref$canvas === void 0 ? {} : _ref$canvas,
        _ref$viewport = _ref.viewport,
        viewport = _ref$viewport === void 0 ? {} : _ref$viewport;
      if (sim.deviceClassName) {
        className += " ".concat(sim.deviceClassName);
      } else if (sim.device) {
        className += " lc-simulator-device-".concat(sim.device);
      }
      return /*#__PURE__*/external_window_React_default.a.createElement("div", {
        className: className,
        style: canvas
      }, /*#__PURE__*/external_window_React_default.a.createElement("div", {
        ref: function ref(elmt) {
          return sim.mountViewport(elmt);
        },
        className: "lc-simulator-canvas-viewport",
        style: viewport
      }, /*#__PURE__*/external_window_React_default.a.createElement(bem_tools_BemTools, {
        host: sim
      }), /*#__PURE__*/external_window_React_default.a.createElement(host_view_Content, {
        host: sim
      })));
    }
  }]);
}(external_window_React_["Component"]);
host_view_Canvas = Object(tslib_es6["b" /* __decorate */])([src["observer"]], host_view_Canvas);
var host_view_Content = /*#__PURE__*/function (_Component3) {
  function Content() {
    var _this2;
    host_view_classCallCheck(this, Content);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this2 = host_view_callSuper(this, Content, [].concat(args));
    _this2.state = {
      disabledEvents: false
    };
    _this2.dispose = void 0;
    return _this2;
  }
  host_view_inherits(Content, _Component3);
  return host_view_createClass(Content, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this3 = this;
      var editor = this.props.host.designer.editor;
      var onEnableEvents = function onEnableEvents(type) {
        _this3.setState({
          disabledEvents: type
        });
      };
      editor.eventBus.on('designer.builtinSimulator.disabledEvents', onEnableEvents);
      this.dispose = function () {
        editor.removeListener('designer.builtinSimulator.disabledEvents', onEnableEvents);
      };
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var _this$dispose;
      (_this$dispose = this.dispose) === null || _this$dispose === void 0 ? void 0 : _this$dispose.call(this);
    }
  }, {
    key: "render",
    value: function render() {
      var sim = this.props.host;
      var disabledEvents = this.state.disabledEvents;
      var viewport = sim.viewport,
        designer = sim.designer;
      var frameStyle = {
        transform: "scale(".concat(viewport.scale, ")"),
        height: viewport.contentHeight,
        width: viewport.contentWidth
      };
      if (disabledEvents) {
        frameStyle.pointerEvents = 'none';
      }
      var viewName = designer.viewName;
      return /*#__PURE__*/external_window_React_default.a.createElement("div", {
        className: "lc-simulator-content"
      }, /*#__PURE__*/external_window_React_default.a.createElement("iframe", {
        name: "".concat(viewName, "-SimulatorRenderer"),
        className: "lc-simulator-content-frame",
        style: frameStyle,
        ref: function ref(frame) {
          return sim.mountContentFrame(frame);
        }
      }));
    }
  }]);
}(external_window_React_["Component"]);
host_view_Content = Object(tslib_es6["b" /* __decorate */])([src["observer"]], host_view_Content);
// CONCATENATED MODULE: ../designer/src/builtin-simulator/index.ts





// EXTERNAL MODULE: ../designer/src/project/project.less
var project_project = __webpack_require__(104);

// CONCATENATED MODULE: ../designer/src/project/project-view.tsx
function project_view_typeof(o) { "@babel/helpers - typeof"; return project_view_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, project_view_typeof(o); }
function project_view_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function project_view_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, project_view_toPropertyKey(o.key), o); } }
function project_view_createClass(e, r, t) { return r && project_view_defineProperties(e.prototype, r), t && project_view_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function project_view_toPropertyKey(t) { var i = project_view_toPrimitive(t, "string"); return "symbol" == project_view_typeof(i) ? i : i + ""; }
function project_view_toPrimitive(t, r) { if ("object" != project_view_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != project_view_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function project_view_callSuper(t, o, e) { return o = project_view_getPrototypeOf(o), project_view_possibleConstructorReturn(t, project_view_isNativeReflectConstruct() ? Reflect.construct(o, e || [], project_view_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function project_view_possibleConstructorReturn(t, e) { if (e && ("object" == project_view_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return project_view_assertThisInitialized(t); }
function project_view_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function project_view_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (project_view_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function project_view_getPrototypeOf(t) { return project_view_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, project_view_getPrototypeOf(t); }
function project_view_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && project_view_setPrototypeOf(t, e); }
function project_view_setPrototypeOf(t, e) { return project_view_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, project_view_setPrototypeOf(t, e); }





var BuiltinLoading = /*#__PURE__*/function (_Component) {
  function BuiltinLoading() {
    project_view_classCallCheck(this, BuiltinLoading);
    return project_view_callSuper(this, BuiltinLoading, arguments);
  }
  project_view_inherits(BuiltinLoading, _Component);
  return project_view_createClass(BuiltinLoading, [{
    key: "render",
    value: function render() {
      return /*#__PURE__*/React.createElement("div", {
        id: "engine-loading-wrapper"
      }, /*#__PURE__*/React.createElement("img", {
        width: "154",
        height: "100",
        src: "https://img.alicdn.com/tfs/TB1CmVgayERMeJjy0FcXXc7opXa-308-200.gif"
      }));
    }
  }]);
}(external_window_React_["Component"]);
var project_view_ProjectView = /*#__PURE__*/function (_Component2) {
  function ProjectView() {
    project_view_classCallCheck(this, ProjectView);
    return project_view_callSuper(this, ProjectView, arguments);
  }
  project_view_inherits(ProjectView, _Component2);
  return project_view_createClass(ProjectView, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this = this;
      var designer = this.props.designer;
      var project = designer.project;
      project.onRendererReady(function () {
        _this.forceUpdate();
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _project$simulator;
      var designer = this.props.designer;
      var project = designer.project,
        simulatorProps = designer.projectSimulatorProps;
      var Simulator = designer.simulatorComponent || host_view_BuiltinSimulatorHostView;
      var Loading = src["engineConfig"].get('loadingComponent', BuiltinLoading);
      return /*#__PURE__*/React.createElement("div", {
        className: "lc-project"
      }, /*#__PURE__*/React.createElement("div", {
        className: "lc-simulator-shell"
      }, !(project !== null && project !== void 0 && (_project$simulator = project.simulator) !== null && _project$simulator !== void 0 && _project$simulator.renderer) && /*#__PURE__*/React.createElement(Loading, null), /*#__PURE__*/React.createElement(Simulator, simulatorProps)));
    }
  }]);
}(external_window_React_["Component"]);
project_view_ProjectView = Object(tslib_es6["b" /* __decorate */])([src["observer"]], project_view_ProjectView);

// CONCATENATED MODULE: ../designer/src/project/index.ts


// CONCATENATED MODULE: ../designer/src/designer/scroller.ts
function scroller_typeof(o) { "@babel/helpers - typeof"; return scroller_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, scroller_typeof(o); }
function scroller_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function scroller_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, scroller_toPropertyKey(o.key), o); } }
function scroller_createClass(e, r, t) { return r && scroller_defineProperties(e.prototype, r), t && scroller_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function scroller_toPropertyKey(t) { var i = scroller_toPrimitive(t, "string"); return "symbol" == scroller_typeof(i) ? i : i + ""; }
function scroller_toPrimitive(t, r) { if ("object" != scroller_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != scroller_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

var ScrollTarget = /*#__PURE__*/function () {
  function ScrollTarget(target) {
    scroller_classCallCheck(this, ScrollTarget);
    this.target = void 0;
    this.doc = void 0;
    this.target = target;
    if (isWindow(target)) {
      this.doc = target.document.documentElement;
    }
  }
  return scroller_createClass(ScrollTarget, [{
    key: "left",
    get: function get() {
      return 'scrollX' in this.target ? this.target.scrollX : this.target.scrollLeft;
    }
  }, {
    key: "top",
    get: function get() {
      return 'scrollY' in this.target ? this.target.scrollY : this.target.scrollTop;
    }
  }, {
    key: "scrollTo",
    value: function scrollTo(options) {
      this.target.scrollTo(options);
    }
  }, {
    key: "scrollToXY",
    value: function scrollToXY(x, y) {
      this.target.scrollTo(x, y);
    }
  }, {
    key: "scrollHeight",
    get: function get() {
      return (this.doc || this.target).scrollHeight;
    }
  }, {
    key: "scrollWidth",
    get: function get() {
      return (this.doc || this.target).scrollWidth;
    }
  }]);
}();
function isWindow(obj) {
  return obj && obj.document;
}
function easing(n) {
  return Math.sin(n * Math.PI / 2);
}
var SCROLL_ACCURACY = 30;
var scroller_Scroller = /*#__PURE__*/function () {
  function Scroller(scrollable) {
    scroller_classCallCheck(this, Scroller);
    this.pid = void 0;
    this.scrollable = void 0;
    this.scrollable = scrollable;
  }
  return scroller_createClass(Scroller, [{
    key: "scrollTarget",
    get: function get() {
      var target = this.scrollable.scrollTarget;
      if (!target) {
        return null;
      }
      if (Object(utils_src["G" /* isElement */])(target)) {
        target = new ScrollTarget(target);
        this.scrollable.scrollTarget = target;
      }
      return target;
    }
  }, {
    key: "scrollTo",
    value: function scrollTo(options) {
      var _this = this;
      this.cancel();
      var scrollTarget = this.scrollTarget;
      if (!scrollTarget) {
        return;
      }
      var pid;
      var left = scrollTarget.left;
      var top = scrollTarget.top;
      var end = function end() {
        _this.cancel();
      };
      if ((left === options.left || options.left == null) && top === options.top) {
        end();
        return;
      }
      var duration = 200;
      var start = +new Date();
      var _animate = function animate() {
        if (pid !== _this.pid) {
          return;
        }
        var now = +new Date();
        var time = Math.min(1, (now - start) / duration);
        var eased = easing(time);
        var opt = {};
        if (options.left != null) {
          opt.left = eased * (options.left - left) + left;
        }
        if (options.top != null) {
          opt.top = eased * (options.top - top) + top;
        }
        scrollTarget.scrollTo(opt);
        if (time < 1) {
          _this.pid = requestAnimationFrame(_animate);
          pid = _this.pid;
        } else {
          end();
        }
      };
      this.pid = requestAnimationFrame(_animate);
      pid = this.pid;
    }
  }, {
    key: "scrolling",
    value: function scrolling(point) {
      var _this2 = this;
      this.cancel();
      var _this$scrollable = this.scrollable,
        bounds = _this$scrollable.bounds,
        _this$scrollable$scal = _this$scrollable.scale,
        scale = _this$scrollable$scal === void 0 ? 1 : _this$scrollable$scal;
      var scrollTarget = this.scrollTarget;
      if (!scrollTarget || !bounds) {
        return;
      }
      var x = point.globalX;
      var y = point.globalY;
      var maxScrollHeight = scrollTarget.scrollHeight - bounds.height / scale;
      var maxScrollWidth = scrollTarget.scrollWidth - bounds.width / scale;
      var sx = scrollTarget.left;
      var sy = scrollTarget.top;
      var ax = 0;
      var ay = 0;
      if (y < bounds.top + SCROLL_ACCURACY) {
        ay = -Math.min(Math.max(bounds.top + SCROLL_ACCURACY - y, 10), 50) / scale;
      } else if (y > bounds.bottom - SCROLL_ACCURACY) {
        ay = Math.min(Math.max(y + SCROLL_ACCURACY - bounds.bottom, 10), 50) / scale;
      }
      if (x < bounds.left + SCROLL_ACCURACY) {
        ax = -Math.min(Math.max(bounds.top + SCROLL_ACCURACY - y, 10), 50) / scale;
      } else if (x > bounds.right - SCROLL_ACCURACY) {
        ax = Math.min(Math.max(x + SCROLL_ACCURACY - bounds.right, 10), 50) / scale;
      }
      if (!ax && !ay) {
        return;
      }
      var _animate2 = function animate() {
        var scroll = false;
        if (ay > 0 && sy < maxScrollHeight || ay < 0 && sy > 0) {
          sy += ay;
          sy = Math.min(Math.max(sy, 0), maxScrollHeight);
          scroll = true;
        }
        if (ax > 0 && sx < maxScrollWidth || ax < 0 && sx > 0) {
          sx += ax;
          sx = Math.min(Math.max(sx, 0), maxScrollWidth);
          scroll = true;
        }
        if (!scroll) {
          return;
        }
        scrollTarget.scrollTo({
          left: sx,
          top: sy
        });
        _this2.pid = requestAnimationFrame(_animate2);
      };
      _animate2();
    }
  }, {
    key: "cancel",
    value: function cancel() {
      if (this.pid) {
        cancelAnimationFrame(this.pid);
      }
      this.pid = undefined;
    }
  }]);
}();
// CONCATENATED MODULE: ../designer/src/designer/dragon.ts
function dragon_typeof(o) { "@babel/helpers - typeof"; return dragon_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, dragon_typeof(o); }
function dragon_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function dragon_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, dragon_toPropertyKey(o.key), o); } }
function dragon_createClass(e, r, t) { return r && dragon_defineProperties(e.prototype, r), t && dragon_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function dragon_toPropertyKey(t) { var i = dragon_toPrimitive(t, "string"); return "symbol" == dragon_typeof(i) ? i : i + ""; }
function dragon_toPrimitive(t, r) { if ("object" != dragon_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != dragon_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var dragon_a;






/**
 * @deprecated use same function in @alilc/lowcode-utils
 */
function isDragNodeObject(obj) {
  return obj && obj.type === types_src["g" /* IPublicEnumDragObjectType */].Node;
}
/**
 * @deprecated use same function in @alilc/lowcode-utils
 */
function dragon_isDragNodeDataObject(obj) {
  return obj && obj.type === types_src["g" /* IPublicEnumDragObjectType */].NodeData;
}
/**
 * @deprecated use same function in @alilc/lowcode-utils
 */
function isDragAnyObject(obj) {
  return obj && obj.type !== types_src["g" /* IPublicEnumDragObjectType */].NodeData && obj.type !== types_src["g" /* IPublicEnumDragObjectType */].Node;
}
function isLocateEvent(e) {
  return e && e.type === 'LocateEvent';
}
var SHAKE_DISTANCE = 4;
/**
 * mouse shake check
 */
function isShaken(e1, e2) {
  if (e1.shaken) {
    return true;
  }
  if (e1.target !== e2.target) {
    return true;
  }
  return Math.pow(e1.clientY - e2.clientY, 2) + Math.pow(e1.clientX - e2.clientX, 2) > SHAKE_DISTANCE;
}
function isInvalidPoint(e, last) {
  return e.clientX === 0 && e.clientY === 0 && last && (Math.abs(last.clientX - e.clientX) > 5 || Math.abs(last.clientY - e.clientY) > 5);
}
function isSameAs(e1, e2) {
  return e1.clientY === e2.clientY && e1.clientX === e2.clientX;
}
function setShaken(e) {
  e.shaken = true;
}
function getSourceSensor(dragObject) {
  var _dragObject$nodes$, _dragObject$nodes$$do;
  if (!isDragNodeObject(dragObject)) {
    return null;
  }
  return ((_dragObject$nodes$ = dragObject.nodes[0]) === null || _dragObject$nodes$ === void 0 ? void 0 : (_dragObject$nodes$$do = _dragObject$nodes$.document) === null || _dragObject$nodes$$do === void 0 ? void 0 : _dragObject$nodes$$do.simulator) || null;
}
function isDragEvent(e) {
  var _e$type;
  return e === null || e === void 0 ? void 0 : (_e$type = e.type) === null || _e$type === void 0 ? void 0 : _e$type.startsWith('drag');
}
/**
 * Drag-on 拖拽引擎
 */
var dragon_Dragon = /*#__PURE__*/function () {
  function Dragon(designer) {
    dragon_classCallCheck(this, Dragon);
    this.designer = void 0;
    this.sensors = [];
    this.nodeInstPointerEvents = void 0;
    this.key = Math.random();
    /**
     * current active sensor, 可用于感应区高亮
     */
    this._activeSensor = void 0;
    this._dragging = false;
    this._canDrop = false;
    this.viewName = void 0;
    this.emitter = Object(src["createModuleEventBus"])('Dragon');
    this.designer = designer;
    Object(src["makeObservable"])(this);
    this.viewName = designer.viewName;
  }
  /**
   * Quick listen a shell(container element) drag behavior
   * @param shell container element
   * @param boost boost got a drag object
   */
  return dragon_createClass(Dragon, [{
    key: "activeSensor",
    get: function get() {
      return this._activeSensor;
    }
  }, {
    key: "dragging",
    get: function get() {
      return this._dragging;
    }
  }, {
    key: "from",
    value: function from(shell, boost) {
      var _this = this;
      var mousedown = function mousedown(e) {
        // ESC or RightClick
        if (e.which === 3 || e.button === 2) {
          return;
        }
        // Get a new node to be dragged
        var dragObject = boost(e);
        if (!dragObject) {
          return;
        }
        _this.boost(dragObject, e);
      };
      shell.addEventListener('mousedown', mousedown);
      return function () {
        shell.removeEventListener('mousedown', mousedown);
      };
    }
    /**
     * boost your dragObject for dragging(flying) 发射拖拽对象
     *
     * @param dragObject 拖拽对象
     * @param boostEvent 拖拽初始时事件
     */
  }, {
    key: "boost",
    value: function boost(dragObject, boostEvent, fromRglNode) {
      var _this2 = this;
      console.log('boost-->dragObject: ', dragObject);
      console.log('boost-->fromRglNode: ', fromRglNode);
      var designer = this.designer;
      var masterSensors = this.getMasterSensors();
      var handleEvents = makeEventsHandler(boostEvent, masterSensors);
      var newBie = !isDragNodeObject(dragObject);
      console.log('newBie 是不是新拖进来的组件 ', newBie);
      var forceCopyState = isDragNodeObject(dragObject) && dragObject.nodes.some(function (node) {
        return typeof node.isSlot === 'function' ? node.isSlot() : node.isSlot;
      });
      var isBoostFromDragAPI = isDragEvent(boostEvent);
      console.log('判断是否来自HTML5原生拖拽API ', isBoostFromDragAPI);
      var lastSensor;
      this._dragging = false;
      var getRGL = function getRGL(e) {
        var _nodeInst$node;
        var locateEvent = createLocateEvent(e);
        var sensor = chooseSensor(locateEvent);
        if (!sensor || !sensor.getNodeInstanceFromElement) return {};
        var nodeInst = sensor.getNodeInstanceFromElement(e.target);
        var res = (nodeInst === null || nodeInst === void 0 ? void 0 : (_nodeInst$node = nodeInst.node) === null || _nodeInst$node === void 0 ? void 0 : _nodeInst$node.getRGL()) || {};
        // console.log('getRGL 的返回值 --> ', res);
        return res;
      };
      var checkesc = function checkesc(e) {
        if (e.keyCode === 27) {
          designer.clearLocation();
          _over();
        }
      };
      var copy = false;
      var checkcopy = function checkcopy(e) {
        /* istanbul ignore next */
        if (isDragEvent(e) && e.dataTransfer) {
          if (newBie || forceCopyState) {
            e.dataTransfer.dropEffect = 'copy';
          }
          return;
        }
        if (newBie) {
          return;
        }
        if (e.altKey || e.ctrlKey) {
          copy = true;
          _this2.setCopyState(true);
          /* istanbul ignore next */
          if (isDragEvent(e) && e.dataTransfer) {
            e.dataTransfer.dropEffect = 'copy';
          }
        } else {
          copy = false;
          if (!forceCopyState) {
            _this2.setCopyState(false);
            /* istanbul ignore next */
            if (isDragEvent(e) && e.dataTransfer) {
              e.dataTransfer.dropEffect = 'move';
            }
          }
        }
      };
      var lastArrive;
      var drag = function drag(e) {
        // FIXME: donot setcopy when: newbie & no location
        checkcopy(e);
        if (isInvalidPoint(e, lastArrive)) return;
        if (lastArrive && isSameAs(e, lastArrive)) {
          lastArrive = e;
          return;
        }
        lastArrive = e;
        var _getRGL = getRGL(e),
          isRGL = _getRGL.isRGL,
          rglNode = _getRGL.rglNode;
        var locateEvent = createLocateEvent(e);
        var sensor = chooseSensor(locateEvent);
        // console.log('drag 的 locateEvent 参数 --> ', locateEvent);
        /* istanbul ignore next */
        console.log('isRGL: ', isRGL);
        if (isRGL) {
          // 禁止被拖拽元素的阻断
          // const nodeInst = dragObject && dragObject.nodes && dragObject.nodes?.[0]?.getDOMNode();
          // if (nodeInst && nodeInst.style) {
          //   this.nodeInstPointerEvents = true;
          //   nodeInst.style.pointerEvents = 'none';
          // }
          // 原生拖拽
          _this2.emitter.emit('rgl.sleeping', false);
          if (fromRglNode && fromRglNode.id === rglNode.id) {
            console.log('是从同一个RGL节点内拖拽');
            designer.clearLocation();
            _this2.clearState();
            _this2.emitter.emit('drag', locateEvent);
            return;
          }
          _this2._canDrop = !!(sensor !== null && sensor !== void 0 && sensor.locate(locateEvent));
          if (_this2._canDrop) {
            var _locateEvent$dragObje;
            console.log('尝试在目标位置进行定位，判断可以放置');
            // TODO:
            _this2.emitter.emit('rgl.add.placeholder', {
              rglNode: rglNode,
              fromRglNode: fromRglNode,
              node: (_locateEvent$dragObje = locateEvent.dragObject) === null || _locateEvent$dragObje === void 0 ? void 0 : _locateEvent$dragObje.nodes[0],
              event: e
            });
            designer.clearLocation();
            _this2.clearState();
            _this2.emitter.emit('drag', locateEvent);
            return;
          }
        } else {
          _this2._canDrop = false;
          _this2.emitter.emit('rgl.remove.placeholder');
          _this2.emitter.emit('rgl.sleeping', true);
        }
        if (sensor) {
          // console.log('sensor: ', sensor);
          sensor.fixEvent(locateEvent);
          sensor.locate(locateEvent);
        } else {
          designer.clearLocation();
        }
        _this2.emitter.emit('drag', locateEvent);
      };
      var dragstart = function dragstart() {
        _this2._dragging = true;
        setShaken(boostEvent);
        var locateEvent = createLocateEvent(boostEvent);
        if (newBie || forceCopyState) {
          _this2.setCopyState(true);
        } else {
          chooseSensor(locateEvent);
        }
        _this2.setDraggingState(true);
        // ESC cancel drag
        if (!isBoostFromDragAPI) {
          handleEvents(function (doc) {
            doc.addEventListener('keydown', checkesc, false);
          });
        }
        _this2.emitter.emit('dragstart', locateEvent);
      };
      // route: drag-move
      var move = function move(e) {
        /* istanbul ignore next */
        if (isBoostFromDragAPI) {
          e.preventDefault();
        }
        if (_this2._dragging) {
          // process dragging
          drag(e);
          return;
        }
        // first move check is shaken
        if (isShaken(boostEvent, e)) {
          // is shaken dragstart
          dragstart();
          drag(e);
        }
      };
      var didDrop = true;
      /* istanbul ignore next */
      var drop = function drop(e) {
        e.preventDefault();
        e.stopPropagation();
        didDrop = true;
      };
      // end-tail drag process
      var _over = function over(e) {
        // 禁止被拖拽元素的阻断
        if (_this2.nodeInstPointerEvents) {
          var _dragObject$nodes, _dragObject$nodes$2;
          var nodeInst = dragObject && dragObject.nodes && ((_dragObject$nodes = dragObject.nodes) === null || _dragObject$nodes === void 0 ? void 0 : (_dragObject$nodes$2 = _dragObject$nodes[0]) === null || _dragObject$nodes$2 === void 0 ? void 0 : _dragObject$nodes$2.getDOMNode());
          console.log('禁止被拖拽元素的阻断: ', nodeInst);
          if (nodeInst && nodeInst.style) {
            nodeInst.style.pointerEvents = '';
          }
          _this2.nodeInstPointerEvents = false;
        }
        // 发送drop事件
        if (e) {
          var _getRGL2 = getRGL(e),
            isRGL = _getRGL2.isRGL,
            rglNode = _getRGL2.rglNode;
          /* istanbul ignore next */
          if (isRGL && _this2._canDrop && _this2._dragging) {
            var _dragObject$nodes2;
            var tarNode = dragObject && dragObject.nodes && ((_dragObject$nodes2 = dragObject.nodes) === null || _dragObject$nodes2 === void 0 ? void 0 : _dragObject$nodes2[0]);
            // console.log('tarNode: ', tarNode);
            if (tarNode && rglNode.id !== tarNode.id) {
              var _designer$project$cur;
              // 避免死循环
              _this2.emitter.emit('rgl.drop', {
                rglNode: rglNode,
                node: tarNode
              });
              var selection = (_designer$project$cur = designer.project.currentDocument) === null || _designer$project$cur === void 0 ? void 0 : _designer$project$cur.selection;
              selection === null || selection === void 0 ? void 0 : selection.select(tarNode.id);
            }
          }
        }
        // 移除磁帖占位消息
        _this2.emitter.emit('rgl.remove.placeholder');
        /* istanbul ignore next */
        if (e && isDragEvent(e)) {
          e.preventDefault();
        }
        if (lastSensor) {
          lastSensor.deactiveSensor();
        }
        /* istanbul ignore next */
        if (isBoostFromDragAPI) {
          if (!didDrop) {
            designer.clearLocation();
          }
        } else {
          _this2.setNativeSelection(true);
        }
        _this2.clearState();
        var exception;
        if (_this2._dragging) {
          _this2._dragging = false;
          try {
            _this2.emitter.emit('dragend', {
              dragObject: dragObject,
              copy: copy
            });
          } catch (ex) /* istanbul ignore next */{
            exception = ex;
          }
        }
        designer.clearLocation();
        handleEvents(function (doc) {
          /* istanbul ignore next */
          if (isBoostFromDragAPI) {
            doc.removeEventListener('dragover', move, true);
            doc.removeEventListener('dragend', _over, true);
            doc.removeEventListener('drop', drop, true);
          } else {
            doc.removeEventListener('mousemove', move, true);
            doc.removeEventListener('mouseup', _over, true);
          }
          doc.removeEventListener('mousedown', _over, true);
          doc.removeEventListener('keydown', checkesc, false);
          doc.removeEventListener('keydown', checkcopy, false);
          doc.removeEventListener('keyup', checkcopy, false);
        });
        /* istanbul ignore next */
        if (exception) {
          throw exception;
        }
      };
      // create drag locate event
      var createLocateEvent = function createLocateEvent(e) {
        var _e$view;
        var evt = {
          type: 'LocateEvent',
          dragObject: dragObject,
          target: e.target,
          originalEvent: e
        };
        var sourceDocument = (_e$view = e.view) === null || _e$view === void 0 ? void 0 : _e$view.document;
        // event from current document
        if (!sourceDocument || sourceDocument === document) {
          evt.globalX = e.clientX;
          evt.globalY = e.clientY;
        } else /* istanbul ignore next */{
            // event from simulator sandbox
            var srcSim;
            var lastSim = lastSensor && isSimulatorHost(lastSensor) ? lastSensor : null;
            // check source simulator
            if (lastSim && lastSim.contentDocument === sourceDocument) {
              srcSim = lastSim;
            } else {
              srcSim = masterSensors.find(function (sim) {
                return sim.contentDocument === sourceDocument;
              });
              if (!srcSim && lastSim) {
                srcSim = lastSim;
              }
            }
            if (srcSim) {
              // transform point by simulator
              var g = srcSim.viewport.toGlobalPoint(e);
              evt.globalX = g.clientX;
              evt.globalY = g.clientY;
              evt.canvasX = e.clientX;
              evt.canvasY = e.clientY;
              evt.sensor = srcSim;
            } else {
              // this condition will not happen, just make sure ts ok
              evt.globalX = e.clientX;
              evt.globalY = e.clientY;
            }
          }
        return evt;
      };
      var sourceSensor = getSourceSensor(dragObject);
      /* istanbul ignore next */
      var chooseSensor = function chooseSensor(e) {
        // this.sensors will change on dragstart
        var sensors = _this2.sensors.concat(masterSensors);
        var sensor = e.sensor && e.sensor.isEnter(e) ? e.sensor : sensors.find(function (s) {
          return s.sensorAvailable && s.isEnter(e);
        });
        if (!sensor) {
          // TODO: enter some area like componentspanel cancel
          if (lastSensor) {
            sensor = lastSensor;
          } else if (e.sensor) {
            sensor = e.sensor;
          } else if (sourceSensor) {
            sensor = sourceSensor;
          }
        }
        if (sensor !== lastSensor) {
          if (lastSensor) {
            lastSensor.deactiveSensor();
          }
          lastSensor = sensor;
        }
        if (sensor) {
          e.sensor = sensor;
          sensor.fixEvent(e);
        }
        _this2._activeSensor = sensor;
        return sensor;
      };
      /* istanbul ignore next */
      if (isDragEvent(boostEvent)) {
        console.log('是拖拽事件');
        var dataTransfer = boostEvent.dataTransfer;
        if (dataTransfer) {
          dataTransfer.effectAllowed = 'all';
          try {
            dataTransfer.setData('application/json', '{}');
          } catch (ex) {
            // ignore
          }
        }
        dragstart();
      } else {
        console.log('不是拖拽事件');
        this.setNativeSelection(false);
      }
      handleEvents(function (doc) {
        /* istanbul ignore next */
        if (isBoostFromDragAPI) {
          doc.addEventListener('dragover', move, true);
          // dragexit
          didDrop = false;
          doc.addEventListener('drop', drop, true);
          doc.addEventListener('dragend', _over, true);
        } else {
          doc.addEventListener('mousemove', move, true);
          doc.addEventListener('mouseup', _over, true);
        }
        doc.addEventListener('mousedown', _over, true);
      });
      // future think: drag things from browser-out or a iframe-pane
      if (!newBie && !isBoostFromDragAPI) {
        handleEvents(function (doc) {
          doc.addEventListener('keydown', checkcopy, false);
          doc.addEventListener('keyup', checkcopy, false);
        });
      }
    }
    /* istanbul ignore next */
  }, {
    key: "getMasterSensors",
    value: function getMasterSensors() {
      return Array.from(new Set(this.designer.project.documents.map(function (doc) {
        var _doc$simulator;
        if (doc.active && (_doc$simulator = doc.simulator) !== null && _doc$simulator !== void 0 && _doc$simulator.sensorAvailable) {
          return doc.simulator;
        }
        return null;
      }).filter(Boolean)));
    }
  }, {
    key: "getSimulators",
    value: function getSimulators() {
      return new Set(this.designer.project.documents.map(function (doc) {
        return doc.simulator;
      }));
    }
    // #region ======== drag and drop helpers ============
  }, {
    key: "setNativeSelection",
    value: function setNativeSelection(enableFlag) {
      Object(utils_src["eb" /* setNativeSelection */])(enableFlag);
      this.getSimulators().forEach(function (sim) {
        sim === null || sim === void 0 ? void 0 : sim.setNativeSelection(enableFlag);
      });
    }
    /**
     * 设置拖拽态
     */
  }, {
    key: "setDraggingState",
    value: function setDraggingState(state) {
      utils_src["q" /* cursor */].setDragging(state);
      this.getSimulators().forEach(function (sim) {
        sim === null || sim === void 0 ? void 0 : sim.setDraggingState(state);
      });
    }
    /**
     * 设置拷贝态
     */
  }, {
    key: "setCopyState",
    value: function setCopyState(state) {
      utils_src["q" /* cursor */].setCopy(state);
      this.getSimulators().forEach(function (sim) {
        sim === null || sim === void 0 ? void 0 : sim.setCopyState(state);
      });
    }
    /**
     * 清除所有态：拖拽态、拷贝态
     */
  }, {
    key: "clearState",
    value: function clearState() {
      utils_src["q" /* cursor */].release();
      this.getSimulators().forEach(function (sim) {
        sim === null || sim === void 0 ? void 0 : sim.clearState();
      });
    }
    // #endregion
    /**
     * 添加投放感应区
     */
  }, {
    key: "addSensor",
    value: function addSensor(sensor) {
      this.sensors.push(sensor);
    }
    /**
     * 移除投放感应
     */
  }, {
    key: "removeSensor",
    value: function removeSensor(sensor) {
      var i = this.sensors.indexOf(sensor);
      if (i > -1) {
        this.sensors.splice(i, 1);
      }
    }
  }, {
    key: "onDragstart",
    value: function onDragstart(func) {
      var _this3 = this;
      this.emitter.on('dragstart', func);
      return function () {
        _this3.emitter.removeListener('dragstart', func);
      };
    }
  }, {
    key: "onDrag",
    value: function onDrag(func) {
      var _this4 = this;
      this.emitter.on('drag', func);
      return function () {
        _this4.emitter.removeListener('drag', func);
      };
    }
  }, {
    key: "onDragend",
    value: function onDragend(func) {
      var _this5 = this;
      this.emitter.on('dragend', func);
      return function () {
        _this5.emitter.removeListener('dragend', func);
      };
    }
  }]);
}();
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], dragon_Dragon.prototype, "_activeSensor", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], dragon_Dragon.prototype, "_dragging", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], dragon_Dragon.prototype, "_canDrop", void 0);
// CONCATENATED MODULE: ../designer/src/designer/active-tracker.ts
function active_tracker_typeof(o) { "@babel/helpers - typeof"; return active_tracker_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, active_tracker_typeof(o); }
function active_tracker_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function active_tracker_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, active_tracker_toPropertyKey(o.key), o); } }
function active_tracker_createClass(e, r, t) { return r && active_tracker_defineProperties(e.prototype, r), t && active_tracker_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function active_tracker_toPropertyKey(t) { var i = active_tracker_toPrimitive(t, "string"); return "symbol" == active_tracker_typeof(i) ? i : i + ""; }
function active_tracker_toPrimitive(t, r) { if ("object" != active_tracker_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != active_tracker_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }



var active_tracker_ActiveTracker = /*#__PURE__*/function () {
  function ActiveTracker() {
    active_tracker_classCallCheck(this, ActiveTracker);
    this._target = void 0;
    this.emitter = Object(src["createModuleEventBus"])('ActiveTracker');
  }
  return active_tracker_createClass(ActiveTracker, [{
    key: "track",
    value: function track(originalTarget) {
      var target = originalTarget;
      if (Object(utils_src["P" /* isNode */])(originalTarget)) {
        target = {
          node: originalTarget
        };
      }
      this._target = target;
      this.emitter.emit('change', target);
    }
  }, {
    key: "currentNode",
    get: function get() {
      var _this$_target;
      return (_this$_target = this._target) === null || _this$_target === void 0 ? void 0 : _this$_target.node;
    }
  }, {
    key: "detail",
    get: function get() {
      var _this$_target2;
      return (_this$_target2 = this._target) === null || _this$_target2 === void 0 ? void 0 : _this$_target2.detail;
    }
    /**
     * @deprecated
     */
    /* istanbul ignore next */
  }, {
    key: "intance",
    get: function get() {
      return this.instance;
    }
  }, {
    key: "instance",
    get: function get() {
      var _this$_target3;
      return (_this$_target3 = this._target) === null || _this$_target3 === void 0 ? void 0 : _this$_target3.instance;
    }
  }, {
    key: "onChange",
    value: function onChange(fn) {
      var _this = this;
      this.emitter.addListener('change', fn);
      return function () {
        _this.emitter.removeListener('change', fn);
      };
    }
  }]);
}();
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], active_tracker_ActiveTracker.prototype, "_target", void 0);
// CONCATENATED MODULE: ../designer/src/designer/detecting.ts
function detecting_typeof(o) { "@babel/helpers - typeof"; return detecting_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, detecting_typeof(o); }
function detecting_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function detecting_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, detecting_toPropertyKey(o.key), o); } }
function detecting_createClass(e, r, t) { return r && detecting_defineProperties(e.prototype, r), t && detecting_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function detecting_toPropertyKey(t) { var i = detecting_toPrimitive(t, "string"); return "symbol" == detecting_typeof(i) ? i : i + ""; }
function detecting_toPrimitive(t, r) { if ("object" != detecting_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != detecting_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }


var DETECTING_CHANGE_EVENT = 'detectingChange';
var detecting_Detecting = /*#__PURE__*/function () {
  function Detecting() {
    detecting_classCallCheck(this, Detecting);
    this._enable = true;
    this.xRayMode = false;
    this._current = null;
    this.emitter = Object(src["createModuleEventBus"])('Detecting');
    Object(src["makeObservable"])(this);
  }
  return detecting_createClass(Detecting, [{
    key: "enable",
    get:
    /**
     * 控制大纲树 hover 时是否出现悬停效果
     * TODO: 将该逻辑从设计器中抽离出来
     */
    function get() {
      return this._enable;
    },
    set: function set(flag) {
      this._enable = flag;
      if (!flag) {
        this._current = null;
      }
    }
  }, {
    key: "current",
    get: function get() {
      return this._current;
    }
  }, {
    key: "capture",
    value: function capture(node) {
      if (this._current !== node) {
        this._current = node;
        this.emitter.emit(DETECTING_CHANGE_EVENT, this.current);
      }
    }
  }, {
    key: "release",
    value: function release(node) {
      if (this._current === node) {
        this._current = null;
        this.emitter.emit(DETECTING_CHANGE_EVENT, this.current);
      }
    }
  }, {
    key: "leave",
    value: function leave(document) {
      if (this.current && this.current.document === document) {
        this._current = null;
      }
    }
  }, {
    key: "onDetectingChange",
    value: function onDetectingChange(fn) {
      var _this = this;
      this.emitter.on(DETECTING_CHANGE_EVENT, fn);
      return function () {
        _this.emitter.off(DETECTING_CHANGE_EVENT, fn);
      };
    }
  }]);
}();
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], detecting_Detecting.prototype, "_enable", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], detecting_Detecting.prototype, "xRayMode", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], detecting_Detecting.prototype, "_current", void 0);
// CONCATENATED MODULE: ../designer/src/designer/location.ts
function location_typeof(o) { "@babel/helpers - typeof"; return location_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, location_typeof(o); }
function location_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function location_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, location_toPropertyKey(o.key), o); } }
function location_createClass(e, r, t) { return r && location_defineProperties(e.prototype, r), t && location_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function location_toPropertyKey(t) { var i = location_toPrimitive(t, "string"); return "symbol" == location_typeof(i) ? i : i + ""; }
function location_toPrimitive(t, r) { if ("object" != location_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != location_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

/**
 * @deprecated use same function in @alilc/lowcode-utils
 */
function isLocationData(obj) {
  return obj && obj.target && obj.detail;
}
/**
 * @deprecated use same function in @alilc/lowcode-utils
 */
function isLocationChildrenDetail(obj) {
  return obj && obj.type === types_src["k" /* IPublicTypeLocationDetailType */].Children;
}
function isRowContainer(container, win) {
  if (isText(container)) {
    return true;
  }
  var style = (win || getWindow(container)).getComputedStyle(container);
  var display = style.getPropertyValue('display');
  if (/flex$/.test(display)) {
    var direction = style.getPropertyValue('flex-direction') || 'row';
    if (direction === 'row' || direction === 'row-reverse') {
      return true;
    }
  }
  if (/grid$/.test(display)) {
    return true;
  }
  return false;
}
function isChildInline(child, win) {
  if (isText(child)) {
    return true;
  }
  var style = (win || getWindow(child)).getComputedStyle(child);
  return /^inline/.test(style.getPropertyValue('display')) || /^(left|right)$/.test(style.getPropertyValue('float'));
}
function getRectTarget(rect) {
  if (!rect || rect.computed) {
    return null;
  }
  var els = rect.elements;
  return els && els.length > 0 ? els[0] : null;
}
function isVerticalContainer(rect) {
  var el = getRectTarget(rect);
  if (!el) {
    return false;
  }
  return isRowContainer(el);
}
function isVertical(rect) {
  var el = getRectTarget(rect);
  if (!el) {
    return false;
  }
  return isChildInline(el) || (el.parentElement ? isRowContainer(el.parentElement) : false);
}
function isText(elem) {
  return elem.nodeType === Node.TEXT_NODE;
}
function isDocument(elem) {
  return elem.nodeType === Node.DOCUMENT_NODE;
}
function getWindow(elem) {
  return (isDocument(elem) ? elem : elem.ownerDocument).defaultView;
}
var location_DropLocation = /*#__PURE__*/function () {
  function DropLocation(_ref) {
    var target = _ref.target,
      detail = _ref.detail,
      source = _ref.source,
      event = _ref.event;
    location_classCallCheck(this, DropLocation);
    this.target = void 0;
    this.detail = void 0;
    this.event = void 0;
    this.source = void 0;
    this.target = target;
    this.detail = detail;
    this.source = source;
    this.event = event;
  }
  return location_createClass(DropLocation, [{
    key: "document",
    get: function get() {
      return this.target.document;
    }
  }, {
    key: "clone",
    value: function clone(event) {
      return new DropLocation({
        target: this.target,
        detail: this.detail,
        source: this.source,
        event: event
      });
    }
    /**
     * @deprecated
     * 兼容 vision
     */
  }, {
    key: "getContainer",
    value: function getContainer() {
      return this.target;
    }
    /**
     * @deprecated
     * 兼容 vision
     */
  }, {
    key: "getInsertion",
    value: function getInsertion() {
      var _this$detail, _this$detail$near;
      if (!this.detail) {
        return null;
      }
      if (this.detail.type === 'Children') {
        var _this$target$children;
        if (this.detail.index <= 0) {
          return null;
        }
        return (_this$target$children = this.target.children) === null || _this$target$children === void 0 ? void 0 : _this$target$children.get(this.detail.index - 1);
      }
      return (_this$detail = this.detail) === null || _this$detail === void 0 ? void 0 : (_this$detail$near = _this$detail.near) === null || _this$detail$near === void 0 ? void 0 : _this$detail$near.node;
    }
  }]);
}();
// EXTERNAL MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/ric-shim/index.js
var ric_shim = __webpack_require__(17);
var ric_shim_default = /*#__PURE__*/__webpack_require__.n(ric_shim);

// CONCATENATED MODULE: ../designer/src/designer/offset-observer.ts
function offset_observer_typeof(o) { "@babel/helpers - typeof"; return offset_observer_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, offset_observer_typeof(o); }
function offset_observer_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function offset_observer_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, offset_observer_toPropertyKey(o.key), o); } }
function offset_observer_createClass(e, r, t) { return r && offset_observer_defineProperties(e.prototype, r), t && offset_observer_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function offset_observer_toPropertyKey(t) { var i = offset_observer_toPrimitive(t, "string"); return "symbol" == offset_observer_typeof(i) ? i : i + ""; }
function offset_observer_toPrimitive(t, r) { if ("object" != offset_observer_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != offset_observer_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }




var offset_observer_OffsetObserver = /*#__PURE__*/function () {
  function OffsetObserver(nodeInstance) {
    var _this = this;
    offset_observer_classCallCheck(this, OffsetObserver);
    this.nodeInstance = void 0;
    this.id = Object(utils_src["ib" /* uniqueId */])('oobx');
    this.lastOffsetLeft = void 0;
    this.lastOffsetTop = void 0;
    this.lastOffsetHeight = void 0;
    this.lastOffsetWidth = void 0;
    this._height = 0;
    this._width = 0;
    this._left = 0;
    this._top = 0;
    this._right = 0;
    this._bottom = 0;
    this.hasOffset = false;
    this.pid = void 0;
    this.viewport = void 0;
    this.isRoot = void 0;
    this.node = void 0;
    this.compute = void 0;
    this.nodeInstance = nodeInstance;
    var node = nodeInstance.node,
      instance = nodeInstance.instance;
    this.node = node;
    var doc = node.document;
    var host = doc === null || doc === void 0 ? void 0 : doc.simulator;
    var focusNode = doc === null || doc === void 0 ? void 0 : doc.focusNode;
    this.isRoot = node.contains(focusNode);
    this.viewport = host === null || host === void 0 ? void 0 : host.viewport;
    Object(src["makeObservable"])(this);
    if (this.isRoot) {
      this.hasOffset = true;
      return;
    }
    if (!instance) {
      return;
    }
    var pid;
    var _compute = function compute() {
      if (pid !== _this.pid) {
        return;
      }
      var rect = host.computeComponentInstanceRect(instance, node.componentMeta.rootSelector);
      if (!rect) {
        _this.hasOffset = false;
      } else if (!_this.viewport.scrolling || !_this.hasOffset) {
        _this._height = rect.height;
        _this._width = rect.width;
        _this._left = rect.left;
        _this._top = rect.top;
        _this._right = rect.right;
        _this._bottom = rect.bottom;
        _this.hasOffset = true;
      }
      _this.pid = ric_shim_default()(_compute);
      pid = _this.pid;
    };
    this.compute = _compute;
    // try first
    _compute();
    // try second, ensure the dom mounted
    this.pid = ric_shim_default()(_compute);
    pid = this.pid;
  }
  return offset_observer_createClass(OffsetObserver, [{
    key: "height",
    get: function get() {
      return this.isRoot ? this.viewport.height : this._height * this.scale;
    }
  }, {
    key: "width",
    get: function get() {
      return this.isRoot ? this.viewport.width : this._width * this.scale;
    }
  }, {
    key: "top",
    get: function get() {
      return this.isRoot ? 0 : this._top * this.scale;
    }
  }, {
    key: "left",
    get: function get() {
      return this.isRoot ? 0 : this._left * this.scale;
    }
  }, {
    key: "bottom",
    get: function get() {
      return this.isRoot ? this.viewport.height : this._bottom * this.scale;
    }
  }, {
    key: "right",
    get: function get() {
      return this.isRoot ? this.viewport.width : this._right * this.scale;
    }
  }, {
    key: "offsetLeft",
    get: function get() {
      if (this.isRoot) {
        return this.viewport.scrollX * this.scale;
      }
      if (!this.viewport.scrolling || this.lastOffsetLeft == null) {
        this.lastOffsetLeft = this.left + this.viewport.scrollX * this.scale;
      }
      return this.lastOffsetLeft;
    }
  }, {
    key: "offsetTop",
    get: function get() {
      if (this.isRoot) {
        return this.viewport.scrollY * this.scale;
      }
      if (!this.viewport.scrolling || this.lastOffsetTop == null) {
        this.lastOffsetTop = this.top + this.viewport.scrollY * this.scale;
      }
      return this.lastOffsetTop;
    }
  }, {
    key: "offsetHeight",
    get: function get() {
      if (!this.viewport.scrolling || this.lastOffsetHeight == null) {
        this.lastOffsetHeight = this.isRoot ? this.viewport.height : this.height;
      }
      return this.lastOffsetHeight;
    }
  }, {
    key: "offsetWidth",
    get: function get() {
      if (!this.viewport.scrolling || this.lastOffsetWidth == null) {
        this.lastOffsetWidth = this.isRoot ? this.viewport.width : this.width;
      }
      return this.lastOffsetWidth;
    }
  }, {
    key: "scale",
    get: function get() {
      return this.viewport.scale;
    }
  }, {
    key: "purge",
    value: function purge() {
      if (this.pid) {
        Object(ric_shim["cancelIdleCallback"])(this.pid);
      }
      this.pid = undefined;
    }
  }, {
    key: "isPurged",
    value: function isPurged() {
      return this.pid == null;
    }
  }]);
}();
Object(tslib_es6["b" /* __decorate */])([src["obx"], Object(tslib_es6["d" /* __metadata */])("design:type", Object)], offset_observer_OffsetObserver.prototype, "_height", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"], Object(tslib_es6["d" /* __metadata */])("design:type", Object)], offset_observer_OffsetObserver.prototype, "_width", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"], Object(tslib_es6["d" /* __metadata */])("design:type", Object)], offset_observer_OffsetObserver.prototype, "_left", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"], Object(tslib_es6["d" /* __metadata */])("design:type", Object)], offset_observer_OffsetObserver.prototype, "_top", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"], Object(tslib_es6["d" /* __metadata */])("design:type", Object)], offset_observer_OffsetObserver.prototype, "_right", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"], Object(tslib_es6["d" /* __metadata */])("design:type", Object)], offset_observer_OffsetObserver.prototype, "_bottom", void 0);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], offset_observer_OffsetObserver.prototype, "height", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], offset_observer_OffsetObserver.prototype, "width", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], offset_observer_OffsetObserver.prototype, "top", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], offset_observer_OffsetObserver.prototype, "left", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], offset_observer_OffsetObserver.prototype, "bottom", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], offset_observer_OffsetObserver.prototype, "right", null);
Object(tslib_es6["b" /* __decorate */])([src["obx"], Object(tslib_es6["d" /* __metadata */])("design:type", Object)], offset_observer_OffsetObserver.prototype, "hasOffset", void 0);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], offset_observer_OffsetObserver.prototype, "offsetLeft", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], offset_observer_OffsetObserver.prototype, "offsetTop", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], offset_observer_OffsetObserver.prototype, "offsetHeight", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], offset_observer_OffsetObserver.prototype, "offsetWidth", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], offset_observer_OffsetObserver.prototype, "scale", null);
function offset_observer_createOffsetObserver(nodeInstance) {
  if (!nodeInstance.instance) {
    return null;
  }
  return new offset_observer_OffsetObserver(nodeInstance);
}
// CONCATENATED MODULE: ../designer/src/designer/setting/utils.ts
function utils_typeof(o) { "@babel/helpers - typeof"; return utils_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, utils_typeof(o); }
function utils_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function utils_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, utils_toPropertyKey(o.key), o); } }
function utils_createClass(e, r, t) { return r && utils_defineProperties(e.prototype, r), t && utils_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function utils_toPropertyKey(t) { var i = utils_toPrimitive(t, "string"); return "symbol" == utils_typeof(i) ? i : i + ""; }
function utils_toPrimitive(t, r) { if ("object" != utils_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != utils_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function utils_slicedToArray(r, e) { return utils_arrayWithHoles(r) || utils_iterableToArrayLimit(r, e) || utils_unsupportedIterableToArray(r, e) || utils_nonIterableRest(); }
function utils_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function utils_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return utils_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? utils_arrayLikeToArray(r, a) : void 0; } }
function utils_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function utils_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function utils_arrayWithHoles(r) { if (Array.isArray(r)) return r; }
// all this file for polyfill vision logic


function getHotterFromSetter(setter) {
  return setter && (setter.Hotter || setter.type && setter.type.Hotter) || []; // eslint-disable-line
}
function getTransducerFromSetter(setter) {
  return setter && (setter.transducer || setter.Transducer || setter.type && (setter.type.transducer || setter.type.Transducer)) || null; // eslint-disable-line
}
function combineTransducer(transducer, arr, context) {
  if (!transducer && Array.isArray(arr)) {
    var _arr = utils_slicedToArray(arr, 2),
      toHot = _arr[0],
      toNative = _arr[1];
    transducer = {
      toHot: toHot,
      toNative: toNative
    };
  }
  return {
    toHot: (transducer && transducer.toHot || function (x) {
      return x;
    }).bind(context),
    toNative: (transducer && transducer.toNative || function (x) {
      return x;
    }).bind(context) // eslint-disable-line
  };
}
var utils_Transducer = /*#__PURE__*/function () {
  function Transducer(context, config) {
    utils_classCallCheck(this, Transducer);
    this.setterTransducer = void 0;
    this.context = void 0;
    var setter = config.setter;
    // 1. validElement
    // 2. IPublicTypeSetterConfig
    // 3. IPublicTypeSetterConfig[]
    if (Array.isArray(setter)) {
      setter = setter[0];
    } else if (/*#__PURE__*/Object(external_window_React_["isValidElement"])(setter) && setter.type.displayName === 'MixedSetter') {
      var _setter$props, _setter$props$setters;
      setter = (_setter$props = setter.props) === null || _setter$props === void 0 ? void 0 : (_setter$props$setters = _setter$props.setters) === null || _setter$props$setters === void 0 ? void 0 : _setter$props$setters[0];
    } else if (utils_typeof(setter) === 'object' && setter.componentName === 'MixedSetter') {
      var _setter, _setter$props2;
      setter = Array.isArray((_setter = setter) === null || _setter === void 0 ? void 0 : (_setter$props2 = _setter.props) === null || _setter$props2 === void 0 ? void 0 : _setter$props2.setters) && setter.props.setters[0];
    }
    /**
     * 两种方式标识是 FC 而不是动态 setter
     * 1. 物料描述里面 setter 的配置，显式设置为 false
     * 2. registerSetter 注册 setter 时显式设置为 false
     */
    var isDynamic = true;
    if (Object(utils_src["X" /* isSetterConfig */])(setter)) {
      var _setter2 = setter,
        componentName = _setter2.componentName,
        dynamicFlag = _setter2.isDynamic;
      setter = componentName;
      isDynamic = dynamicFlag !== false;
    }
    if (typeof setter === 'string') {
      var _ref = context.setters.getSetter(setter) || {},
        component = _ref.component,
        _dynamicFlag = _ref.isDynamic;
      setter = component;
      // 如果在物料配置中声明了，在 registerSetter 没有声明，取物料配置中的声明
      isDynamic = _dynamicFlag === undefined ? isDynamic : _dynamicFlag !== false;
    }
    if (Object(utils_src["F" /* isDynamicSetter */])(setter) && isDynamic) {
      try {
        setter = setter.call(context.internalToShellField(), context.internalToShellField());
      } catch (e) {
        console.error(e);
      }
    }
    this.setterTransducer = combineTransducer(getTransducerFromSetter(setter), getHotterFromSetter(setter), context);
    this.context = context;
  }
  return utils_createClass(Transducer, [{
    key: "toHot",
    value: function toHot(data) {
      return this.setterTransducer.toHot(data);
    }
  }, {
    key: "toNative",
    value: function toNative(data) {
      return this.setterTransducer.toNative(data);
    }
  }]);
}();
// CONCATENATED MODULE: ../designer/src/designer/setting/setting-prop-entry.ts
function setting_prop_entry_typeof(o) { "@babel/helpers - typeof"; return setting_prop_entry_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, setting_prop_entry_typeof(o); }
function setting_prop_entry_readOnlyError(r) { throw new TypeError('"' + r + '" is read-only'); }
function setting_prop_entry_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function setting_prop_entry_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, setting_prop_entry_toPropertyKey(o.key), o); } }
function setting_prop_entry_createClass(e, r, t) { return r && setting_prop_entry_defineProperties(e.prototype, r), t && setting_prop_entry_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function setting_prop_entry_toPropertyKey(t) { var i = setting_prop_entry_toPrimitive(t, "string"); return "symbol" == setting_prop_entry_typeof(i) ? i : i + ""; }
function setting_prop_entry_toPrimitive(t, r) { if ("object" != setting_prop_entry_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != setting_prop_entry_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }





var setting_prop_entry_SettingPropEntry = /*#__PURE__*/function () {
  function SettingPropEntry(parent, name, type) {
    setting_prop_entry_classCallCheck(this, SettingPropEntry);
    this.parent = void 0;
    // === static properties ===
    this.editor = void 0;
    this.isSameComponent = void 0;
    this.isMultiple = void 0;
    this.isSingle = void 0;
    this.setters = void 0;
    this.nodes = void 0;
    this.componentMeta = void 0;
    this.designer = void 0;
    this.top = void 0;
    this.isGroup = void 0;
    this.type = void 0;
    this.id = Object(utils_src["ib" /* uniqueId */])('entry');
    this.emitter = Object(src["createModuleEventBus"])('SettingPropEntry');
    // ==== dynamic properties ====
    this._name = void 0;
    this.extraProps = {};
    this.parent = parent;
    Object(src["makeObservable"])(this);
    if (type == null) {
      var c = typeof name === 'string' ? name.slice(0, 1) : '';
      if (c === '#') {
        this.type = 'group';
      } else {
        this.type = 'field';
      }
    } else {
      this.type = type;
    }
    // initial self properties
    this._name = name;
    this.isGroup = this.type === 'group';
    // copy parent static properties
    this.editor = parent.editor;
    this.nodes = parent.nodes;
    this.setters = parent.setters;
    this.componentMeta = parent.componentMeta;
    this.isSameComponent = parent.isSameComponent;
    this.isMultiple = parent.isMultiple;
    this.isSingle = parent.isSingle;
    this.designer = parent.designer;
    this.top = parent.top;
  }
  return setting_prop_entry_createClass(SettingPropEntry, [{
    key: "name",
    get: function get() {
      return this._name;
    }
  }, {
    key: "path",
    get: function get() {
      var _this$name;
      var path = this.parent.path.slice();
      if (this.type === 'field' && (_this$name = this.name) !== null && _this$name !== void 0 && _this$name.toString()) {
        path.push(this.name);
      }
      return path;
    }
  }, {
    key: "getId",
    value: function getId() {
      return this.id;
    }
  }, {
    key: "setKey",
    value: function setKey(key) {
      if (this.type !== 'field') {
        return;
      }
      var propName = this.path.join('.');
      var l = this.nodes.length;
      while (l-- > 0) {
        this.nodes[l].getProp(propName, true).key = key;
      }
      this._name = key;
    }
  }, {
    key: "getKey",
    value: function getKey() {
      return this._name;
    }
  }, {
    key: "remove",
    value: function remove() {
      if (this.type !== 'field') {
        return;
      }
      var propName = this.path.join('.');
      var l = this.nodes.length;
      while (l-- > 0) {
        var _this$nodes$l$getProp;
        (_this$nodes$l$getProp = this.nodes[l].getProp(propName)) === null || _this$nodes$l$getProp === void 0 ? void 0 : _this$nodes$l$getProp.remove();
      }
    }
    // ====== 当前属性读写 =====
    /**
     * 判断当前属性值是否一致
     * -1 多种值
     * 0 无值
     * 1 类似值，比如数组长度一样
     * 2 单一植
     */
    /* istanbul ignore next */
  }, {
    key: "valueState",
    get: function get() {
      var _this = this;
      return Object(src["runInAction"])(function () {
        if (_this.type !== 'field') {
          var getValue = _this.extraProps.getValue;
          return getValue ? getValue(_this.internalToShellField(), undefined) === undefined ? 0 : 1 : 0;
        }
        if (_this.nodes.length === 1) {
          return 2;
        }
        var propName = _this.path.join('.');
        var first = _this.nodes[0].getProp(propName);
        var l = _this.nodes.length;
        var state = 2;
        while (--l > 0) {
          var next = _this.nodes[l].getProp(propName, false);
          var s = first.compare(next);
          if (s > 1) {
            return -1;
          }
          if (s === 1) {
            state = 1;
          }
        }
        if (state === 2 && first.isUnset()) {
          return 0;
        }
        return state;
      });
    }
    /**
     * 获取当前属性值
     */
  }, {
    key: "getValue",
    value: function getValue() {
      var _this$name2;
      var val;
      if (this.type === 'field' && (_this$name2 = this.name) !== null && _this$name2 !== void 0 && _this$name2.toString()) {
        val = this.parent.getPropValue(this.name);
      }
      var getValue = this.extraProps.getValue;
      try {
        return getValue ? getValue(this.internalToShellField(), val) : val;
      } catch (e) {
        console.warn(e);
        return val;
      }
    }
    /**
     * 设置当前属性值
     */
  }, {
    key: "setValue",
    value: function setValue(val, isHotValue, force, extraOptions) {
      var oldValue = this.getValue();
      if (this.type === 'field') {
        var _this$name3;
        ((_this$name3 = this.name) === null || _this$name3 === void 0 ? void 0 : _this$name3.toString()) && this.parent.setPropValue(this.name, val);
      }
      var setValue = this.extraProps.setValue;
      if (setValue && !(extraOptions !== null && extraOptions !== void 0 && extraOptions.disableMutator)) {
        try {
          setValue(this.internalToShellField(), val);
        } catch (e) {
          /* istanbul ignore next */
          console.warn(e);
        }
      }
      this.notifyValueChange(oldValue, val);
      // 如果 fromSetHotValue，那么在 setHotValue 中已经调用过 valueChange 了
      if (!(extraOptions !== null && extraOptions !== void 0 && extraOptions.fromSetHotValue)) {
        this.valueChange(extraOptions);
      }
    }
    /**
     * 清除已设置的值
     */
  }, {
    key: "clearValue",
    value: function clearValue() {
      if (this.type === 'field') {
        var _this$name4;
        ((_this$name4 = this.name) === null || _this$name4 === void 0 ? void 0 : _this$name4.toString()) && this.parent.clearPropValue(this.name);
      }
      var setValue = this.extraProps.setValue;
      if (setValue) {
        try {
          setValue(this.internalToShellField(), undefined);
        } catch (e) {
          /* istanbul ignore next */
          console.warn(e);
        }
      }
    }
    /**
     * 获取子项
     */
  }, {
    key: "get",
    value: function get(propName) {
      var path = this.path.concat(propName).join('.');
      return this.top.get(path);
    }
    /**
     * 设置子级属性值
     */
  }, {
    key: "setPropValue",
    value: function setPropValue(propName, value) {
      var path = this.path.concat(propName).join('.');
      this.top.setPropValue(path, value);
    }
    /**
     * 清除已设置值
     */
  }, {
    key: "clearPropValue",
    value: function clearPropValue(propName) {
      var path = this.path.concat(propName).join('.');
      this.top.clearPropValue(path);
    }
    /**
     * 获取子级属性值
     */
  }, {
    key: "getPropValue",
    value: function getPropValue(propName) {
      return this.top.getPropValue(this.path.concat(propName).join('.'));
    }
    /**
     * 获取顶层附属属性值
     */
  }, {
    key: "getExtraPropValue",
    value: function getExtraPropValue(propName) {
      return this.top.getExtraPropValue(propName);
    }
    /**
     * 设置顶层附属属性值
     */
  }, {
    key: "setExtraPropValue",
    value: function setExtraPropValue(propName, value) {
      this.top.setExtraPropValue(propName, value);
    }
    // ======= compatibles for vision ======
  }, {
    key: "getNode",
    value: function getNode() {
      return this.nodes[0];
    }
  }, {
    key: "getName",
    value: function getName() {
      return this.path.join('.');
    }
  }, {
    key: "getProps",
    value: function getProps() {
      return this.top;
    }
    // add settingfield props
  }, {
    key: "props",
    get: function get() {
      return this.top;
    }
  }, {
    key: "onValueChange",
    value: function onValueChange(func) {
      var _this2 = this;
      this.emitter.on('valuechange', func);
      return function () {
        _this2.emitter.removeListener('valuechange', func);
      };
    }
    /**
     * @deprecated
     */
  }, {
    key: "valueChange",
    value: function valueChange() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      this.emitter.emit('valuechange', options);
      if (this.parent && setting_field_isSettingField(this.parent)) {
        this.parent.valueChange(options);
      }
    }
  }, {
    key: "notifyValueChange",
    value: function notifyValueChange(oldValue, newValue) {
      this.editor.eventBus.emit(types_src["e" /* GlobalEvent */].Node.Prop.Change, {
        node: this.getNode(),
        prop: this,
        oldValue: oldValue,
        newValue: newValue
      });
    }
  }, {
    key: "getDefaultValue",
    value: function getDefaultValue() {
      return this.extraProps.defaultValue;
    }
  }, {
    key: "isIgnore",
    value: function isIgnore() {
      return false;
    }
  }, {
    key: "getVariableValue",
    value: function getVariableValue() {
      var v = this.getValue();
      if (Object(utils_src["J" /* isJSExpression */])(v)) {
        return v.value;
      }
      return '';
    }
  }, {
    key: "setVariableValue",
    value: function setVariableValue(value) {
      var v = this.getValue();
      this.setValue({
        type: 'JSExpression',
        value: value,
        mock: Object(utils_src["J" /* isJSExpression */])(v) ? v.mock : v
      });
    }
  }, {
    key: "setUseVariable",
    value: function setUseVariable(flag) {
      if (this.isUseVariable() === flag) {
        return;
      }
      var v = this.getValue();
      if (this.isUseVariable()) {
        this.setValue(v.mock);
      } else {
        this.setValue({
          type: 'JSExpression',
          value: '',
          mock: v
        });
      }
    }
  }, {
    key: "isUseVariable",
    value: function isUseVariable() {
      return Object(utils_src["J" /* isJSExpression */])(this.getValue());
    }
  }, {
    key: "useVariable",
    get: function get() {
      return this.isUseVariable();
    }
  }, {
    key: "getMockOrValue",
    value: function getMockOrValue() {
      var v = this.getValue();
      if (Object(utils_src["J" /* isJSExpression */])(v)) {
        return v.mock;
      }
      return v;
    }
  }, {
    key: "internalToShellField",
    value: function internalToShellField() {
      return this.designer.shellModelFactory.createSettingField(this);
    }
  }]);
}();
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], setting_prop_entry_SettingPropEntry.prototype, "_name", void 0);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], setting_prop_entry_SettingPropEntry.prototype, "path", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Number), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], setting_prop_entry_SettingPropEntry.prototype, "valueState", null);
// CONCATENATED MODULE: ../designer/src/designer/setting/setting-field.ts
function setting_field_typeof(o) { "@babel/helpers - typeof"; return setting_field_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, setting_field_typeof(o); }
var setting_field_excluded = ["title", "items", "setter", "extraProps"];
function setting_field_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function setting_field_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? setting_field_ownKeys(Object(t), !0).forEach(function (r) { setting_field_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : setting_field_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function setting_field_defineProperty(e, r, t) { return (r = setting_field_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function setting_field_objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = setting_field_objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }
function setting_field_objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }
function setting_field_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function setting_field_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, setting_field_toPropertyKey(o.key), o); } }
function setting_field_createClass(e, r, t) { return r && setting_field_defineProperties(e.prototype, r), t && setting_field_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function setting_field_toPropertyKey(t) { var i = setting_field_toPrimitive(t, "string"); return "symbol" == setting_field_typeof(i) ? i : i + ""; }
function setting_field_toPrimitive(t, r) { if ("object" != setting_field_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != setting_field_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function setting_field_callSuper(t, o, e) { return o = setting_field_getPrototypeOf(o), setting_field_possibleConstructorReturn(t, setting_field_isNativeReflectConstruct() ? Reflect.construct(o, e || [], setting_field_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function setting_field_possibleConstructorReturn(t, e) { if (e && ("object" == setting_field_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return setting_field_assertThisInitialized(t); }
function setting_field_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function setting_field_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (setting_field_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function _superPropGet(t, o, e, r) { var p = _get(setting_field_getPrototypeOf(1 & r ? t.prototype : t), o, e); return 2 & r && "function" == typeof p ? function (t) { return p.apply(e, t); } : p; }
function _get() { return _get = "undefined" != typeof Reflect && Reflect.get ? Reflect.get.bind() : function (e, t, r) { var p = _superPropBase(e, t); if (p) { var n = Object.getOwnPropertyDescriptor(p, t); return n.get ? n.get.call(arguments.length < 3 ? e : r) : n.value; } }, _get.apply(null, arguments); }
function _superPropBase(t, o) { for (; !{}.hasOwnProperty.call(t, o) && null !== (t = setting_field_getPrototypeOf(t));); return t; }
function setting_field_getPrototypeOf(t) { return setting_field_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, setting_field_getPrototypeOf(t); }
function setting_field_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && setting_field_setPrototypeOf(t, e); }
function setting_field_setPrototypeOf(t, e) { return setting_field_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, setting_field_setPrototypeOf(t, e); }
var setting_field_a;





function getSettingFieldCollectorKey(parent, config) {
  var cur = parent;
  var path = [config.name];
  while (cur !== parent.top) {
    if (cur instanceof setting_field_SettingField && cur.type !== 'group') {
      path.unshift(cur.name);
    }
    cur = cur.parent;
  }
  return path.join('.');
}
var setting_field_SettingField = /*#__PURE__*/function (_SettingPropEntry) {
  function SettingField(parent, config, settingFieldCollector) {
    var _this;
    setting_field_classCallCheck(this, SettingField);
    _this = setting_field_callSuper(this, SettingField, [parent, config.name, config.type]);
    _this.settingFieldCollector = void 0;
    _this.isSettingField = true;
    _this.isRequired = void 0;
    _this.transducer = void 0;
    _this._config = void 0;
    _this.hotValue = void 0;
    _this.parent = void 0;
    _this.extraProps = void 0;
    // ==== dynamic properties ====
    _this._title = void 0;
    _this._setter = void 0;
    _this._expanded = true;
    _this._items = [];
    _this.settingFieldCollector = settingFieldCollector;
    Object(src["makeObservable"])(_this);
    var title = config.title,
      items = config.items,
      setter = config.setter,
      extraProps = config.extraProps,
      rest = setting_field_objectWithoutProperties(config, setting_field_excluded);
    _this.parent = parent;
    _this._config = config;
    _this._title = title;
    _this._setter = setter;
    _this.extraProps = setting_field_objectSpread(setting_field_objectSpread({}, rest), extraProps);
    _this.isRequired = config.isRequired || (setter === null || setter === void 0 ? void 0 : setter.isRequired);
    _this._expanded = !(extraProps !== null && extraProps !== void 0 && extraProps.defaultCollapsed);
    // initial items
    if (items && items.length > 0) {
      _this.initItems(items, settingFieldCollector);
    }
    if (_this.type !== 'group' && settingFieldCollector && config.name) {
      settingFieldCollector(getSettingFieldCollectorKey(parent, config), _this);
    }
    // compatiable old config
    _this.transducer = new utils_Transducer(_this, {
      setter: setter
    });
    return _this;
  }
  setting_field_inherits(SettingField, _SettingPropEntry);
  return setting_field_createClass(SettingField, [{
    key: "title",
    get: function get() {
      return this._title || (typeof this.name === 'number' ? "".concat(Object(src["intl"])('Item'), " ").concat(this.name) : this.name);
    }
  }, {
    key: "setter",
    get: function get() {
      var _this2 = this;
      if (!this._setter) {
        return null;
      }
      if (Object(utils_src["F" /* isDynamicSetter */])(this._setter)) {
        return Object(src["untracked"])(function () {
          var _this2$_setter;
          var shellThis = _this2.internalToShellField();
          return (_this2$_setter = _this2._setter) === null || _this2$_setter === void 0 ? void 0 : _this2$_setter.call(shellThis, shellThis);
        });
      }
      return this._setter;
    }
  }, {
    key: "expanded",
    get: function get() {
      return this._expanded;
    }
  }, {
    key: "setExpanded",
    value: function setExpanded(value) {
      this._expanded = value;
    }
  }, {
    key: "items",
    get: function get() {
      return this._items;
    }
  }, {
    key: "config",
    get: function get() {
      return this._config;
    }
  }, {
    key: "initItems",
    value: function initItems(items, settingFieldCollector) {
      var _this3 = this;
      this._items = items.map(function (item) {
        if (Object(utils_src["A" /* isCustomView */])(item)) {
          return item;
        }
        return new SettingField(_this3, item, settingFieldCollector);
      });
    }
  }, {
    key: "disposeItems",
    value: function disposeItems() {
      this._items.forEach(function (item) {
        return setting_field_isSettingField(item) && item.purge();
      });
      this._items = [];
    }
    // 创建子配置项，通常用于 object/array 类型数据
  }, {
    key: "createField",
    value: function createField(config) {
      var _this$settingFieldCol;
      (_this$settingFieldCol = this.settingFieldCollector) === null || _this$settingFieldCol === void 0 ? void 0 : _this$settingFieldCol.call(this, getSettingFieldCollectorKey(this.parent, config), this);
      return new SettingField(this, config, this.settingFieldCollector);
    }
  }, {
    key: "purge",
    value: function purge() {
      this.disposeItems();
    }
    // ======= compatibles for vision ======
  }, {
    key: "getConfig",
    value: function getConfig(configName) {
      if (configName) {
        return this.config[configName];
      }
      return this._config;
    }
  }, {
    key: "getItems",
    value: function getItems(filter) {
      return this._items.filter(function (item) {
        if (filter) {
          return filter(item);
        }
        return true;
      });
    }
  }, {
    key: "setValue",
    value: function setValue(val, isHotValue, force, extraOptions) {
      if (isHotValue) {
        this.setHotValue(val, extraOptions);
        return;
      }
      _superPropGet(SettingField, "setValue", this, 3)([val, false, false, extraOptions]);
    }
  }, {
    key: "getHotValue",
    value: function getHotValue() {
      if (this.hotValue) {
        return this.hotValue;
      }
      // avoid View modify
      var v = Object(utils_src["k" /* cloneDeep */])(this.getMockOrValue());
      if (v == null) {
        v = this.extraProps.defaultValue;
      }
      return this.transducer.toHot(v);
    }
    /* istanbul ignore next */
  }, {
    key: "setMiniAppDataSourceValue",
    value: function setMiniAppDataSourceValue(data, options) {
      this.hotValue = data;
      var v = this.transducer.toNative(data);
      this.setValue(v, false, false, options);
      // dirty fix list setter
      if (Array.isArray(data) && data[0] && data[0].__sid__) {
        return;
      }
      this.valueChange();
    }
  }, {
    key: "setHotValue",
    value: function setHotValue(data, options) {
      this.hotValue = data;
      var value = this.transducer.toNative(data);
      if (options) {
        options.fromSetHotValue = true;
      } else {
        options = {
          fromSetHotValue: true
        };
      }
      if (this.isUseVariable()) {
        var oldValue = this.getValue();
        if (Object(utils_src["J" /* isJSExpression */])(value)) {
          this.setValue({
            type: 'JSExpression',
            value: value.value,
            mock: oldValue.mock
          }, false, false, options);
        } else {
          this.setValue({
            type: 'JSExpression',
            value: oldValue.value,
            mock: value
          }, false, false, options);
        }
      } else {
        this.setValue(value, false, false, options);
      }
      // dirty fix list setter
      if (Array.isArray(data) && data[0] && data[0].__sid__) {
        return;
      }
      this.valueChange(options);
    }
  }, {
    key: "onEffect",
    value: function onEffect(action) {
      return this.designer.autorun(action, true);
    }
  }, {
    key: "internalToShellField",
    value: function internalToShellField() {
      return this.designer.shellModelFactory.createSettingField(this);
    }
  }]);
}(setting_prop_entry_SettingPropEntry);
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], setting_field_SettingField.prototype, "_expanded", void 0);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], setting_field_SettingField.prototype, "setter", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Object, Boolean, Boolean, Object]), Object(tslib_es6["d" /* __metadata */])("design:returntype", void 0)], setting_field_SettingField.prototype, "setValue", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Object, Object]), Object(tslib_es6["d" /* __metadata */])("design:returntype", void 0)], setting_field_SettingField.prototype, "setMiniAppDataSourceValue", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Object, Object]), Object(tslib_es6["d" /* __metadata */])("design:returntype", void 0)], setting_field_SettingField.prototype, "setHotValue", null);
/**
 * @deprecated use same function from '@alilc/lowcode-utils' instead
 */
function setting_field_isSettingField(obj) {
  return obj && obj.isSettingField;
}
// CONCATENATED MODULE: ../designer/src/designer/setting/setting-top-entry.ts
function setting_top_entry_typeof(o) { "@babel/helpers - typeof"; return setting_top_entry_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, setting_top_entry_typeof(o); }
function setting_top_entry_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function setting_top_entry_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, setting_top_entry_toPropertyKey(o.key), o); } }
function setting_top_entry_createClass(e, r, t) { return r && setting_top_entry_defineProperties(e.prototype, r), t && setting_top_entry_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function setting_top_entry_toPropertyKey(t) { var i = setting_top_entry_toPrimitive(t, "string"); return "symbol" == setting_top_entry_typeof(i) ? i : i + ""; }
function setting_top_entry_toPrimitive(t, r) { if ("object" != setting_top_entry_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != setting_top_entry_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }




function generateSessionId(nodes) {
  return nodes.map(function (node) {
    return node.id;
  }).sort().join(',');
}
var setting_top_entry_SettingTopEntry = /*#__PURE__*/function () {
  function SettingTopEntry(editor, nodes) {
    var _this$first$document;
    setting_top_entry_classCallCheck(this, SettingTopEntry);
    this.editor = void 0;
    this.nodes = void 0;
    this.emitter = Object(src["createModuleEventBus"])('SettingTopEntry');
    this._items = [];
    this._componentMeta = null;
    this._isSame = true;
    this._settingFieldMap = {};
    this.path = [];
    this.top = this;
    this.parent = this;
    this.id = void 0;
    this.first = void 0;
    this.designer = void 0;
    this.setters = void 0;
    this.disposeFunctions = [];
    this.editor = editor;
    this.nodes = nodes;
    if (!Array.isArray(nodes) || nodes.length < 1) {
      throw new ReferenceError('nodes should not be empty');
    }
    this.id = generateSessionId(nodes);
    this.first = nodes[0];
    this.designer = (_this$first$document = this.first.document) === null || _this$first$document === void 0 ? void 0 : _this$first$document.designer;
    this.setters = editor.get('setters');
    // setups
    this.setupComponentMeta();
    // clear fields
    this.setupItems();
    this.disposeFunctions.push(this.setupEvents());
  }
  return setting_top_entry_createClass(SettingTopEntry, [{
    key: "componentMeta",
    get: function get() {
      return this._componentMeta;
    }
  }, {
    key: "items",
    get: function get() {
      return this._items;
    }
    /**
     * 同样的
     */
  }, {
    key: "isSameComponent",
    get: function get() {
      return this._isSame;
    }
    /**
     * 一个
     */
  }, {
    key: "isSingle",
    get: function get() {
      return this.nodes.length === 1;
    }
  }, {
    key: "isLocked",
    get: function get() {
      return this.first.isLocked;
    }
    /**
     * 多个
     */
  }, {
    key: "isMultiple",
    get: function get() {
      return this.nodes.length > 1;
    }
  }, {
    key: "setupComponentMeta",
    value: function setupComponentMeta() {
      // todo: enhance compile a temp configure.compiled
      var first = this.first;
      var meta = first.componentMeta;
      var l = this.nodes.length;
      var theSame = true;
      for (var i = 1; i < l; i++) {
        var other = this.nodes[i];
        if (other.componentMeta !== meta) {
          theSame = false;
          break;
        }
      }
      if (theSame) {
        this._isSame = true;
        this._componentMeta = meta;
      } else {
        this._isSame = false;
        this._componentMeta = null;
      }
    }
  }, {
    key: "setupItems",
    value: function setupItems() {
      var _this = this;
      if (this.componentMeta) {
        var settingFieldMap = {};
        var settingFieldCollector = function settingFieldCollector(name, field) {
          settingFieldMap[name] = field;
        };
        this._items = this.componentMeta.configure.map(function (item) {
          if (Object(utils_src["A" /* isCustomView */])(item)) {
            return item;
          }
          return new setting_field_SettingField(_this, item, settingFieldCollector);
        });
        this._settingFieldMap = settingFieldMap;
      }
    }
  }, {
    key: "setupEvents",
    value: function setupEvents() {
      var _this$componentMeta,
        _this2 = this;
      return (_this$componentMeta = this.componentMeta) === null || _this$componentMeta === void 0 ? void 0 : _this$componentMeta.onMetadataChange(function () {
        _this2.setupItems();
      });
    }
    /**
     * 获取当前属性值
     */
  }, {
    key: "getValue",
    value: function getValue() {
      var _this$first;
      return (_this$first = this.first) === null || _this$first === void 0 ? void 0 : _this$first.propsData;
    }
    /**
     * 设置当前属性值
     */
  }, {
    key: "setValue",
    value: function setValue(val) {
      this.setProps(val);
      // TODO: emit value change
    }
    /**
     * 获取子项
     */
  }, {
    key: "get",
    value: function get(propName) {
      if (!propName) return null;
      return this._settingFieldMap[propName] || new setting_field_SettingField(this, {
        name: propName
      });
    }
    /**
     * 设置子级属性值
     */
  }, {
    key: "setPropValue",
    value: function setPropValue(propName, value) {
      this.nodes.forEach(function (node) {
        node.setPropValue(propName.toString(), value);
      });
    }
    /**
     * 清除已设置值
     */
  }, {
    key: "clearPropValue",
    value: function clearPropValue(propName) {
      this.nodes.forEach(function (node) {
        node.clearPropValue(propName.toString());
      });
    }
    /**
     * 获取子级属性值
     */
  }, {
    key: "getPropValue",
    value: function getPropValue(propName) {
      var _this$first$getProp;
      return (_this$first$getProp = this.first.getProp(propName.toString(), true)) === null || _this$first$getProp === void 0 ? void 0 : _this$first$getProp.getValue();
    }
    /**
     * 获取顶层附属属性值
     */
  }, {
    key: "getExtraPropValue",
    value: function getExtraPropValue(propName) {
      var _this$first$getExtraP;
      return (_this$first$getExtraP = this.first.getExtraProp(propName, false)) === null || _this$first$getExtraP === void 0 ? void 0 : _this$first$getExtraP.getValue();
    }
    /**
     * 设置顶层附属属性值
     */
  }, {
    key: "setExtraPropValue",
    value: function setExtraPropValue(propName, value) {
      this.nodes.forEach(function (node) {
        var _node$getExtraProp;
        (_node$getExtraProp = node.getExtraProp(propName, true)) === null || _node$getExtraProp === void 0 ? void 0 : _node$getExtraProp.setValue(value);
      });
    }
    // 设置多个属性值，替换原有值
  }, {
    key: "setProps",
    value: function setProps(data) {
      this.nodes.forEach(function (node) {
        node.setProps(data);
      });
    }
    // 设置多个属性值，和原有值合并
  }, {
    key: "mergeProps",
    value: function mergeProps(data) {
      this.nodes.forEach(function (node) {
        node.mergeProps(data);
      });
    }
  }, {
    key: "disposeItems",
    value: function disposeItems() {
      this._items.forEach(function (item) {
        return isPurgeable(item) && item.purge();
      });
      this._items = [];
    }
  }, {
    key: "purge",
    value: function purge() {
      this.disposeItems();
      this._settingFieldMap = {};
      this.emitter.removeAllListeners();
      this.disposeFunctions.forEach(function (f) {
        return f();
      });
      this.disposeFunctions = [];
    }
  }, {
    key: "getProp",
    value: function getProp(propName) {
      return this.get(propName);
    }
    // ==== copy some Node api =====
  }, {
    key: "getStatus",
    value: function getStatus() {}
  }, {
    key: "setStatus",
    value: function setStatus() {}
  }, {
    key: "getChildren",
    value: function getChildren() {
      // this.nodes.map()
    }
  }, {
    key: "getDOMNode",
    value: function getDOMNode() {}
  }, {
    key: "getId",
    value: function getId() {
      return this.id;
    }
  }, {
    key: "getPage",
    value: function getPage() {
      return this.first.document;
    }
    /**
     * @deprecated
     */
  }, {
    key: "node",
    get: function get() {
      return this.getNode();
    }
  }, {
    key: "getNode",
    value: function getNode() {
      return this.nodes[0];
    }
  }]);
}();
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", []), Object(tslib_es6["d" /* __metadata */])("design:returntype", Object)], setting_top_entry_SettingTopEntry.prototype, "getValue", null);
function isPurgeable(obj) {
  return obj && obj.purge;
}
// CONCATENATED MODULE: ../designer/src/designer/setting/setting-entry-type.ts

// CONCATENATED MODULE: ../designer/src/designer/setting/index.ts




// CONCATENATED MODULE: ../designer/src/utils/invariant.ts
function invariant(check, message, thing) {
  if (!check) {
    throw new Error("[designer] Invariant failed: ".concat(message).concat(thing ? " in '".concat(thing, "'") : ''));
  }
}
// CONCATENATED MODULE: ../designer/src/utils/index.ts



// CONCATENATED MODULE: ../designer/src/builtin-simulator/bem-tools/manager.ts
function manager_typeof(o) { "@babel/helpers - typeof"; return manager_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, manager_typeof(o); }
function manager_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function manager_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, manager_toPropertyKey(o.key), o); } }
function manager_createClass(e, r, t) { return r && manager_defineProperties(e.prototype, r), t && manager_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function manager_toPropertyKey(t) { var i = manager_toPrimitive(t, "string"); return "symbol" == manager_typeof(i) ? i : i + ""; }
function manager_toPrimitive(t, r) { if ("object" != manager_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != manager_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

var manager_BemToolsManager = /*#__PURE__*/function () {
  function BemToolsManager(designer) {
    manager_classCallCheck(this, BemToolsManager);
    this.designer = void 0;
    this.toolsContainer = [];
    this.designer = designer;
  }
  return manager_createClass(BemToolsManager, [{
    key: "addBemTools",
    value: function addBemTools(toolsData) {
      var found = this.toolsContainer.find(function (item) {
        return item.name === toolsData.name;
      });
      invariant(!found, "".concat(toolsData.name, " already exists"));
      this.toolsContainer.push(toolsData);
    }
  }, {
    key: "removeBemTools",
    value: function removeBemTools(name) {
      var index = this.toolsContainer.findIndex(function (item) {
        return item.name === name;
      });
      if (index !== -1) {
        this.toolsContainer.splice(index, 1);
      }
    }
  }, {
    key: "getAllBemTools",
    value: function getAllBemTools() {
      return this.toolsContainer;
    }
  }]);
}();
// CONCATENATED MODULE: ../designer/src/transducers/index.ts
function transducers_typeof(o) { "@babel/helpers - typeof"; return transducers_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, transducers_typeof(o); }
function transducers_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function transducers_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? transducers_ownKeys(Object(t), !0).forEach(function (r) { transducers_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : transducers_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function transducers_defineProperty(e, r, t) { return (r = transducers_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function transducers_toPropertyKey(t) { var i = transducers_toPrimitive(t, "string"); return "symbol" == transducers_typeof(i) ? i : i + ""; }
function transducers_toPrimitive(t, r) { if ("object" != transducers_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != transducers_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function legacyIssues(metadata) {
  var devMode = metadata.devMode;
  return transducers_objectSpread(transducers_objectSpread({}, metadata), {}, {
    devMode: devMode === null || devMode === void 0 ? void 0 : devMode.replace(/(low|pro)code/, '$1Code')
  });
}
function componentDefaults(metadata) {
  var configure = metadata.configure,
    componentName = metadata.componentName;
  var _configure$component = configure.component,
    component = _configure$component === void 0 ? {} : _configure$component;
  if (!component.nestingRule) {
    var m;
    // uri match xx.Group set subcontrolling: true, childWhiteList
    // eslint-disable-next-line no-cond-assign
    if (m = /^(.+)\.Group$/.exec(componentName)) {
      // component.subControlling = true;
      component.nestingRule = {
        childWhitelist: ["".concat(m[1])]
      };
      // eslint-disable-next-line no-cond-assign
    } else if (m = /^(.+)\.Node$/.exec(componentName)) {
      // uri match xx.Node set selfControlled: false, parentWhiteList
      // component.selfControlled = false;
      component.nestingRule = {
        parentWhitelist: ["".concat(m[1]), componentName]
      };
      // eslint-disable-next-line no-cond-assign
    } else if (m = /^(.+)\.(Item|Node|Option)$/.exec(componentName)) {
      // uri match .Item .Node .Option set parentWhiteList
      component.nestingRule = {
        parentWhitelist: ["".concat(m[1])]
      };
    }
  }
  // if (component.isModal == null && /Dialog/.test(componentName)) {
  //   component.isModal = true;
  // }
  return transducers_objectSpread(transducers_objectSpread({}, metadata), {}, {
    configure: transducers_objectSpread(transducers_objectSpread({}, configure), {}, {
      component: component
    })
  });
}
// CONCATENATED MODULE: ../designer/src/component-actions.ts
function component_actions_typeof(o) { "@babel/helpers - typeof"; return component_actions_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, component_actions_typeof(o); }
function component_actions_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function component_actions_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? component_actions_ownKeys(Object(t), !0).forEach(function (r) { component_actions_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : component_actions_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function component_actions_defineProperty(e, r, t) { return (r = component_actions_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function component_actions_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function component_actions_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, component_actions_toPropertyKey(o.key), o); } }
function component_actions_createClass(e, r, t) { return r && component_actions_defineProperties(e.prototype, r), t && component_actions_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function component_actions_toPropertyKey(t) { var i = component_actions_toPrimitive(t, "string"); return "symbol" == component_actions_typeof(i) ? i : i + ""; }
function component_actions_toPrimitive(t, r) { if ("object" != component_actions_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != component_actions_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }




function deduplicateRef(node) {
  var _node$children;
  var currentRef = node === null || node === void 0 ? void 0 : node.getPropValue('ref');
  if (currentRef) {
    node === null || node === void 0 ? void 0 : node.setPropValue('ref', "".concat(node.componentName.toLowerCase(), "-").concat(Math.random().toString(36).slice(2, 9)));
  }
  node === null || node === void 0 ? void 0 : (_node$children = node.children) === null || _node$children === void 0 ? void 0 : _node$children.forEach(deduplicateRef);
}
var component_actions_ComponentActions = /*#__PURE__*/function () {
  function ComponentActions() {
    component_actions_classCallCheck(this, ComponentActions);
    this.metadataTransducers = [];
    this.actions = [{
      name: 'remove',
      content: {
        icon: IconRemove,
        title: locale_intlNode('remove'),
        /* istanbul ignore next */action: function action(node) {
          node.remove();
        }
      },
      important: true
    }, {
      name: 'hide',
      content: {
        icon: IconHidden,
        title: locale_intlNode('hide'),
        /* istanbul ignore next */action: function action(node) {
          node.visible = false;
        }
      },
      /* istanbul ignore next */
      condition: function condition(node) {
        var _node$componentMeta;
        return (_node$componentMeta = node.componentMeta) === null || _node$componentMeta === void 0 ? void 0 : _node$componentMeta.isModal;
      },
      important: true
    }, {
      name: 'copy',
      content: {
        icon: IconClone,
        title: locale_intlNode('copy'),
        /* istanbul ignore next */action: function action(node) {
          // node.remove();
          var doc = node.document,
            parent = node.parent,
            index = node.index;
          if (parent) {
            var newNode = doc === null || doc === void 0 ? void 0 : doc.insertNode(parent, node, (index !== null && index !== void 0 ? index : 0) + 1, true);
            deduplicateRef(newNode);
            newNode === null || newNode === void 0 ? void 0 : newNode.select();
            var _node$getRGL = node === null || node === void 0 ? void 0 : node.getRGL(),
              isRGL = _node$getRGL.isRGL,
              rglNode = _node$getRGL.rglNode;
            if (isRGL) {
              // 复制 layout 信息
              var layout = (rglNode === null || rglNode === void 0 ? void 0 : rglNode.getPropValue('layout')) || [];
              var curLayout = layout.filter(function (item) {
                return item.i === node.getPropValue('fieldId');
              });
              if (curLayout && curLayout[0]) {
                layout.push(component_actions_objectSpread(component_actions_objectSpread({}, curLayout[0]), {}, {
                  i: newNode === null || newNode === void 0 ? void 0 : newNode.getPropValue('fieldId')
                }));
                rglNode === null || rglNode === void 0 ? void 0 : rglNode.setPropValue('layout', layout);
                // 如果是磁贴块复制，则需要滚动到影响位置
                setTimeout(function () {
                  var _newNode$document, _newNode$document$pro, _newNode$document$pro2;
                  return newNode === null || newNode === void 0 ? void 0 : (_newNode$document = newNode.document) === null || _newNode$document === void 0 ? void 0 : (_newNode$document$pro = _newNode$document.project) === null || _newNode$document$pro === void 0 ? void 0 : (_newNode$document$pro2 = _newNode$document$pro.simulatorHost) === null || _newNode$document$pro2 === void 0 ? void 0 : _newNode$document$pro2.scrollToNode(newNode);
                }, 10);
              }
            }
          }
        }
      },
      important: true
    }, {
      name: 'lock',
      content: {
        icon: IconLock,
        title: locale_intlNode('lock'),
        /* istanbul ignore next */action: function action(node) {
          node.lock();
        }
      },
      /* istanbul ignore next */
      condition: function condition(node) {
        return src["engineConfig"].get('enableCanvasLock', false) && node.isContainerNode && !node.isLocked;
      },
      important: true
    }, {
      name: 'unlock',
      content: {
        icon: IconUnlock,
        title: locale_intlNode('unlock'),
        /* istanbul ignore next */action: function action(node) {
          node.lock(false);
        }
      },
      /* istanbul ignore next */
      condition: function condition(node) {
        return src["engineConfig"].get('enableCanvasLock', false) && node.isContainerNode && node.isLocked;
      },
      important: true
    }];
    this.registerMetadataTransducer(legacyIssues, 2, 'legacy-issues'); // should use a high level priority, eg: 2
    this.registerMetadataTransducer(componentDefaults, 100, 'component-defaults');
  }
  return component_actions_createClass(ComponentActions, [{
    key: "removeBuiltinComponentAction",
    value: function removeBuiltinComponentAction(name) {
      var i = this.actions.findIndex(function (action) {
        return action.name === name;
      });
      if (i > -1) {
        this.actions.splice(i, 1);
      }
    }
  }, {
    key: "addBuiltinComponentAction",
    value: function addBuiltinComponentAction(action) {
      this.actions.push(action);
    }
  }, {
    key: "modifyBuiltinComponentAction",
    value: function modifyBuiltinComponentAction(actionName, handle) {
      var builtinAction = this.actions.find(function (action) {
        return action.name === actionName;
      });
      if (builtinAction) {
        handle(builtinAction);
      }
    }
  }, {
    key: "registerMetadataTransducer",
    value: function registerMetadataTransducer(transducer) {
      var level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;
      var id = arguments.length > 2 ? arguments[2] : undefined;
      transducer.level = level;
      transducer.id = id;
      var i = this.metadataTransducers.findIndex(function (item) {
        return item.level != null && item.level > level;
      });
      if (i < 0) {
        this.metadataTransducers.push(transducer);
      } else {
        this.metadataTransducers.splice(i, 0, transducer);
      }
    }
  }, {
    key: "getRegisteredMetadataTransducers",
    value: function getRegisteredMetadataTransducers() {
      return this.metadataTransducers;
    }
  }]);
}();
// EXTERNAL MODULE: ../designer/src/context-menu-actions.scss
var context_menu_actions = __webpack_require__(105);

// CONCATENATED MODULE: ../designer/src/context-menu-actions.ts
function context_menu_actions_typeof(o) { "@babel/helpers - typeof"; return context_menu_actions_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, context_menu_actions_typeof(o); }
function context_menu_actions_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function context_menu_actions_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? context_menu_actions_ownKeys(Object(t), !0).forEach(function (r) { context_menu_actions_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : context_menu_actions_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function context_menu_actions_defineProperty(e, r, t) { return (r = context_menu_actions_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function context_menu_actions_toConsumableArray(r) { return context_menu_actions_arrayWithoutHoles(r) || context_menu_actions_iterableToArray(r) || context_menu_actions_unsupportedIterableToArray(r) || context_menu_actions_nonIterableSpread(); }
function context_menu_actions_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function context_menu_actions_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return context_menu_actions_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? context_menu_actions_arrayLikeToArray(r, a) : void 0; } }
function context_menu_actions_iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function context_menu_actions_arrayWithoutHoles(r) { if (Array.isArray(r)) return context_menu_actions_arrayLikeToArray(r); }
function context_menu_actions_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function context_menu_actions_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function context_menu_actions_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, context_menu_actions_toPropertyKey(o.key), o); } }
function context_menu_actions_createClass(e, r, t) { return r && context_menu_actions_defineProperties(e.prototype, r), t && context_menu_actions_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function context_menu_actions_toPropertyKey(t) { var i = context_menu_actions_toPrimitive(t, "string"); return "symbol" == context_menu_actions_typeof(i) ? i : i + ""; }
function context_menu_actions_toPrimitive(t, r) { if ("object" != context_menu_actions_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != context_menu_actions_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }





var adjustMenuLayoutFn = function adjustMenuLayoutFn(actions) {
  return actions;
};
var context_menu_actions_GlobalContextMenuActions = /*#__PURE__*/function () {
  function GlobalContextMenuActions() {
    var _this = this;
    context_menu_actions_classCallCheck(this, GlobalContextMenuActions);
    this.enableContextMenu = void 0;
    this.dispose = void 0;
    this.contextMenuActionsMap = new Map();
    this.handleContextMenu = function (event) {
      event.stopPropagation();
      event.preventDefault();
      var actions = [];
      var contextMenu = _this.contextMenuActionsMap.values().next().value;
      _this.contextMenuActionsMap.forEach(function (contextMenu) {
        actions.push.apply(actions, context_menu_actions_toConsumableArray(contextMenu.actions));
      });
      var destroyFn;
      var destroy = function destroy() {
        var _destroyFn;
        (_destroyFn = destroyFn) === null || _destroyFn === void 0 ? void 0 : _destroyFn();
      };
      var pluginContext = contextMenu.designer.editor.get('pluginContext');
      var menus = Object(utils_src["db" /* parseContextMenuProperties */])(actions, {
        nodes: [],
        destroy: destroy,
        event: event,
        pluginContext: pluginContext
      });
      if (!menus.length) {
        return;
      }
      var layoutMenu = adjustMenuLayoutFn(menus);
      var menuNode = Object(utils_src["cb" /* parseContextMenuAsReactNode */])(layoutMenu, {
        destroy: destroy,
        nodes: [],
        pluginContext: pluginContext
      });
      var target = event.target;
      var _target$getBoundingCl = target === null || target === void 0 ? void 0 : target.getBoundingClientRect(),
        top = _target$getBoundingCl.top,
        left = _target$getBoundingCl.left;
      var menuInstance = external_Next_["Menu"].create({
        target: event.target,
        offset: [event.clientX - left, event.clientY - top],
        children: menuNode,
        className: 'engine-context-menu'
      });
      destroyFn = menuInstance.destroy;
    };
    this.dispose = [];
    src["engineConfig"].onGot('enableContextMenu', function (enable) {
      if (_this.enableContextMenu === enable) {
        return;
      }
      _this.enableContextMenu = enable;
      _this.dispose.forEach(function (d) {
        return d();
      });
      if (enable) {
        _this.initEvent();
      }
    });
  }
  return context_menu_actions_createClass(GlobalContextMenuActions, [{
    key: "initEvent",
    value: function initEvent() {
      var _this2 = this;
      this.dispose.push(function () {
        var handleContextMenu = function handleContextMenu(e) {
          _this2.handleContextMenu(e);
        };
        document.addEventListener('contextmenu', handleContextMenu);
        return function () {
          document.removeEventListener('contextmenu', handleContextMenu);
        };
      }());
    }
  }, {
    key: "registerContextMenuActions",
    value: function registerContextMenuActions(contextMenu) {
      this.contextMenuActionsMap.set(contextMenu.id, contextMenu);
    }
  }]);
}();
var globalContextMenuActions = new context_menu_actions_GlobalContextMenuActions();
var context_menu_actions_ContextMenuActions = /*#__PURE__*/function () {
  function ContextMenuActions(_designer) {
    var _this3 = this;
    context_menu_actions_classCallCheck(this, ContextMenuActions);
    this.actions = [];
    this.designer = void 0;
    this.dispose = void 0;
    this.enableContextMenu = void 0;
    this.id = Object(utils_src["ib" /* uniqueId */])('contextMenu');
    this.handleContextMenu = function (nodes, event) {
      var _designer$project$sim;
      var designer = _this3.designer;
      event.stopPropagation();
      event.preventDefault();
      var actions = designer.contextMenuActions.actions;
      var _ref = ((_designer$project$sim = designer.project.simulator) === null || _designer$project$sim === void 0 ? void 0 : _designer$project$sim.viewport) || {
          bounds: {
            left: 0,
            top: 0
          }
        },
        bounds = _ref.bounds;
      var simulatorLeft = bounds.left,
        simulatorTop = bounds.top;
      var destroyFn;
      var destroy = function destroy() {
        var _destroyFn2;
        (_destroyFn2 = destroyFn) === null || _destroyFn2 === void 0 ? void 0 : _destroyFn2();
      };
      var pluginContext = _this3.designer.editor.get('pluginContext');
      var menus = Object(utils_src["db" /* parseContextMenuProperties */])(actions, {
        nodes: nodes.map(function (d) {
          return designer.shellModelFactory.createNode(d);
        }),
        destroy: destroy,
        event: event,
        pluginContext: pluginContext
      });
      if (!menus.length) {
        return;
      }
      var layoutMenu = adjustMenuLayoutFn(menus);
      var menuNode = Object(utils_src["cb" /* parseContextMenuAsReactNode */])(layoutMenu, {
        destroy: destroy,
        nodes: nodes.map(function (d) {
          return designer.shellModelFactory.createNode(d);
        }),
        pluginContext: pluginContext
      });
      destroyFn = Object(utils_src["o" /* createContextMenu */])(menuNode, {
        event: event,
        offset: [simulatorLeft, simulatorTop]
      });
    };
    this.designer = _designer;
    this.dispose = [];
    src["engineConfig"].onGot('enableContextMenu', function (enable) {
      if (_this3.enableContextMenu === enable) {
        return;
      }
      _this3.enableContextMenu = enable;
      _this3.dispose.forEach(function (d) {
        return d();
      });
      if (enable) {
        _this3.initEvent();
      }
    });
    globalContextMenuActions.registerContextMenuActions(this);
  }
  return context_menu_actions_createClass(ContextMenuActions, [{
    key: "initEvent",
    value: function initEvent() {
      var _this4 = this;
      var designer = this.designer;
      this.dispose.push(designer.editor.eventBus.on('designer.builtinSimulator.contextmenu', function (_ref2) {
        var node = _ref2.node,
          originalEvent = _ref2.originalEvent;
        originalEvent.stopPropagation();
        originalEvent.preventDefault();
        // 如果右键的节点不在 当前选中的节点中，选中该节点
        if (!designer.currentSelection.has(node.id)) {
          designer.currentSelection.select(node.id);
        }
        var nodes = designer.currentSelection.getNodes();
        _this4.handleContextMenu(nodes, originalEvent);
      }));
    }
  }, {
    key: "addMenuAction",
    value: function addMenuAction(action) {
      this.actions.push(context_menu_actions_objectSpread({
        type: types_src["f" /* IPublicEnumContextMenuType */].MENU_ITEM
      }, action));
    }
  }, {
    key: "removeMenuAction",
    value: function removeMenuAction(name) {
      var i = this.actions.findIndex(function (action) {
        return action.name === name;
      });
      if (i > -1) {
        this.actions.splice(i, 1);
      }
    }
  }, {
    key: "adjustMenuLayout",
    value: function adjustMenuLayout(fn) {
      adjustMenuLayoutFn = fn;
    }
  }]);
}();
// CONCATENATED MODULE: ../designer/src/designer/designer.ts
function designer_typeof(o) { "@babel/helpers - typeof"; return designer_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, designer_typeof(o); }
function designer_regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return designer_regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i.return) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (designer_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, designer_regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, designer_regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), designer_regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", designer_regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), designer_regeneratorDefine2(u), designer_regeneratorDefine2(u, o, "Generator"), designer_regeneratorDefine2(u, n, function () { return this; }), designer_regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (designer_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function designer_regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } designer_regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { designer_regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, designer_regeneratorDefine2(e, r, n, t); }
function designer_asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function designer_asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { designer_asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { designer_asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function designer_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function designer_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? designer_ownKeys(Object(t), !0).forEach(function (r) { designer_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : designer_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function designer_defineProperty(e, r, t) { return (r = designer_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function designer_toConsumableArray(r) { return designer_arrayWithoutHoles(r) || designer_iterableToArray(r) || designer_unsupportedIterableToArray(r) || designer_nonIterableSpread(); }
function designer_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function designer_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return designer_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? designer_arrayLikeToArray(r, a) : void 0; } }
function designer_iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function designer_arrayWithoutHoles(r) { if (Array.isArray(r)) return designer_arrayLikeToArray(r); }
function designer_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function designer_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function designer_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, designer_toPropertyKey(o.key), o); } }
function designer_createClass(e, r, t) { return r && designer_defineProperties(e.prototype, r), t && designer_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function designer_toPropertyKey(t) { var i = designer_toPrimitive(t, "string"); return "symbol" == designer_typeof(i) ? i : i + ""; }
function designer_toPrimitive(t, r) { if ("object" != designer_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != designer_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var designer_a, designer_b, designer_c, designer_d;

















var designer_logger = new utils_src["e" /* Logger */]({
  level: 'warn',
  bizName: 'designer'
});
var designer_Designer = /*#__PURE__*/function () {
  function Designer(props) {
    var _this = this;
    designer_classCallCheck(this, Designer);
    this.dragon = void 0;
    this.viewName = void 0;
    this.componentActions = new component_actions_ComponentActions();
    this.contextMenuActions = void 0;
    this.activeTracker = new active_tracker_ActiveTracker();
    this.detecting = new detecting_Detecting();
    this.project = void 0;
    this.editor = void 0;
    this.bemToolsManager = new manager_BemToolsManager(this);
    this.shellModelFactory = void 0;
    this._dropLocation = void 0;
    this.propsReducers = new Map();
    this._lostComponentMetasMap = new Map();
    this.props = void 0;
    this.oobxList = [];
    this.selectionDispose = void 0;
    this._componentMetasMap = new Map();
    this._simulatorComponent = void 0;
    this._simulatorProps = void 0;
    this._suspensed = false;
    this.setupSelection = function () {
      var _this$simulatorProps;
      if (_this.selectionDispose) {
        _this.selectionDispose();
        _this.selectionDispose = undefined;
      }
      var currentSelection = _this.currentSelection;
      // TODO: 避免选中 Page 组件，默认选中第一个子节点；新增规则 或 判断 Live 模式
      if (currentSelection && currentSelection.selected.length === 0 && ((_this$simulatorProps = _this.simulatorProps) === null || _this$simulatorProps === void 0 ? void 0 : _this$simulatorProps.designMode) === 'live') {
        var _this$currentDocument, _this$currentDocument2, _this$currentDocument3;
        var rootNodeChildrens = (_this$currentDocument = _this.currentDocument) === null || _this$currentDocument === void 0 ? void 0 : (_this$currentDocument2 = _this$currentDocument.getRoot()) === null || _this$currentDocument2 === void 0 ? void 0 : (_this$currentDocument3 = _this$currentDocument2.getChildren()) === null || _this$currentDocument3 === void 0 ? void 0 : _this$currentDocument3.children;
        if (rootNodeChildrens && rootNodeChildrens.length > 0) {
          currentSelection.select(rootNodeChildrens[0].id);
        }
      }
      _this.postEvent('selection.change', currentSelection);
      if (currentSelection) {
        _this.selectionDispose = currentSelection.onSelectionChange(function () {
          _this.postEvent('selection.change', currentSelection);
        });
      }
    };
    Object(src["makeObservable"])(this);
    var editor = props.editor,
      viewName = props.viewName,
      shellModelFactory = props.shellModelFactory;
    this.editor = editor;
    this.viewName = viewName;
    this.shellModelFactory = shellModelFactory;
    this.setProps(props);
    this.project = new project_Project(this, props.defaultSchema, viewName);
    this.dragon = new dragon_Dragon(this);
    this.dragon.onDragstart(function (e) {
      var _this$props;
      _this.detecting.enable = false;
      var dragObject = e.dragObject;
      if (Object(utils_src["E" /* isDragNodeObject */])(dragObject)) {
        if (dragObject.nodes.length === 1) {
          if (dragObject.nodes[0].parent) {
            // ensure current selecting
            dragObject.nodes[0].select();
          } else {
            var _this$currentSelectio;
            (_this$currentSelectio = _this.currentSelection) === null || _this$currentSelectio === void 0 ? void 0 : _this$currentSelectio.clear();
          }
        }
      } else {
        var _this$currentSelectio2;
        (_this$currentSelectio2 = _this.currentSelection) === null || _this$currentSelectio2 === void 0 ? void 0 : _this$currentSelectio2.clear();
      }
      if ((_this$props = _this.props) !== null && _this$props !== void 0 && _this$props.onDragstart) {
        _this.props.onDragstart(e);
      }
      _this.postEvent('dragstart', e);
    });
    this.contextMenuActions = new context_menu_actions_ContextMenuActions(this);
    this.dragon.onDrag(function (e) {
      var _this$props2;
      if ((_this$props2 = _this.props) !== null && _this$props2 !== void 0 && _this$props2.onDrag) {
        _this.props.onDrag(e);
      }
      _this.postEvent('drag', e);
    });
    this.dragon.onDragend(function (e) {
      var _this$props3;
      var dragObject = e.dragObject,
        copy = e.copy;
      designer_logger.debug('onDragend: dragObject ', dragObject, ' copy ', copy);
      var loc = _this._dropLocation;
      if (loc) {
        if (Object(utils_src["M" /* isLocationChildrenDetail */])(loc.detail) && loc.detail.valid !== false) {
          var nodes;
          if (Object(utils_src["E" /* isDragNodeObject */])(dragObject)) {
            nodes = insertChildren(loc.target, designer_toConsumableArray(dragObject.nodes), loc.detail.index, copy);
          } else if (Object(utils_src["D" /* isDragNodeDataObject */])(dragObject)) {
            // process nodeData
            var nodeData = Array.isArray(dragObject.data) ? dragObject.data : [dragObject.data];
            var isNotNodeSchema = nodeData.find(function (item) {
              return !Object(utils_src["Q" /* isNodeSchema */])(item);
            });
            if (isNotNodeSchema) {
              return;
            }
            nodes = insertChildren(loc.target, nodeData, loc.detail.index);
          }
          if (nodes) {
            var _loc$document;
            (_loc$document = loc.document) === null || _loc$document === void 0 ? void 0 : _loc$document.selection.selectAll(nodes.map(function (o) {
              return o.id;
            }));
            setTimeout(function () {
              return _this.activeTracker.track(nodes[0]);
            }, 10);
          }
        }
      }
      if ((_this$props3 = _this.props) !== null && _this$props3 !== void 0 && _this$props3.onDragend) {
        _this.props.onDragend(e, loc);
      }
      _this.postEvent('dragend', e, loc);
      _this.detecting.enable = true;
    });
    this.activeTracker.onChange(function (_ref) {
      var _node$document, _node$document$simula;
      var node = _ref.node,
        detail = _ref.detail;
      (_node$document = node.document) === null || _node$document === void 0 ? void 0 : (_node$document$simula = _node$document.simulator) === null || _node$document$simula === void 0 ? void 0 : _node$document$simula.scrollToNode(node, detail);
    });
    var historyDispose;
    var setupHistory = function setupHistory() {
      if (historyDispose) {
        historyDispose();
        historyDispose = undefined;
      }
      _this.postEvent('history.change', _this.currentHistory);
      if (_this.currentHistory) {
        var currentHistory = _this.currentHistory;
        historyDispose = currentHistory.onStateChange(function () {
          _this.postEvent('history.change', currentHistory);
        });
      }
    };
    this.project.onCurrentDocumentChange(function () {
      _this.postEvent('current-document.change', _this.currentDocument);
      _this.postEvent('selection.change', _this.currentSelection);
      _this.postEvent('history.change', _this.currentHistory);
      _this.setupSelection();
      setupHistory();
    });
    this.postEvent('init', this);
    this.setupSelection();
    setupHistory();
  }
  return designer_createClass(Designer, [{
    key: "currentDocument",
    get: function get() {
      return this.project.currentDocument;
    }
  }, {
    key: "currentHistory",
    get: function get() {
      var _this$currentDocument4;
      return (_this$currentDocument4 = this.currentDocument) === null || _this$currentDocument4 === void 0 ? void 0 : _this$currentDocument4.history;
    }
  }, {
    key: "currentSelection",
    get: function get() {
      var _this$currentDocument5;
      return (_this$currentDocument5 = this.currentDocument) === null || _this$currentDocument5 === void 0 ? void 0 : _this$currentDocument5.selection;
    }
  }, {
    key: "postEvent",
    value: function postEvent(event) {
      var _this$editor$eventBus;
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }
      (_this$editor$eventBus = this.editor.eventBus).emit.apply(_this$editor$eventBus, ["designer.".concat(event)].concat(args));
    }
  }, {
    key: "dropLocation",
    get: function get() {
      return this._dropLocation;
    }
    /**
     * 创建插入位置，考虑放到 dragon 中
     */
  }, {
    key: "createLocation",
    value: function createLocation(locationData) {
      var loc = new location_DropLocation(locationData);
      if (this._dropLocation && this._dropLocation.document && this._dropLocation.document !== loc.document) {
        this._dropLocation.document.dropLocation = null;
      }
      this._dropLocation = loc;
      this.postEvent('dropLocation.change', loc);
      if (loc.document) {
        loc.document.dropLocation = loc;
      }
      this.activeTracker.track({
        node: loc.target,
        detail: loc.detail
      });
      return loc;
    }
    /**
     * 清除插入位置
     */
  }, {
    key: "clearLocation",
    value: function clearLocation() {
      if (this._dropLocation && this._dropLocation.document) {
        this._dropLocation.document.dropLocation = null;
      }
      this.postEvent('dropLocation.change', undefined);
      this._dropLocation = undefined;
    }
  }, {
    key: "createScroller",
    value: function createScroller(scrollable) {
      return new scroller_Scroller(scrollable);
    }
  }, {
    key: "createOffsetObserver",
    value: function createOffsetObserver(nodeInstance) {
      var oobx = offset_observer_createOffsetObserver(nodeInstance);
      this.clearOobxList();
      if (oobx) {
        this.oobxList.push(oobx);
      }
      return oobx;
    }
  }, {
    key: "clearOobxList",
    value: function clearOobxList(force) {
      var l = this.oobxList.length;
      if (l > 20 || force) {
        while (l-- > 0) {
          if (this.oobxList[l].isPurged()) {
            this.oobxList.splice(l, 1);
          }
        }
      }
    }
  }, {
    key: "touchOffsetObserver",
    value: function touchOffsetObserver() {
      this.clearOobxList(true);
      this.oobxList.forEach(function (item) {
        return item.compute();
      });
    }
  }, {
    key: "createSettingEntry",
    value: function createSettingEntry(nodes) {
      return new setting_top_entry_SettingTopEntry(this.editor, nodes);
    }
    /**
     * 获得合适的插入位置
     * @deprecated
     */
  }, {
    key: "getSuitableInsertion",
    value: function getSuitableInsertion(insertNode) {
      var activeDoc = this.project.currentDocument;
      if (!activeDoc) {
        return null;
      }
      if (Array.isArray(insertNode) && Object(utils_src["Q" /* isNodeSchema */])(insertNode[0]) && this.getComponentMeta(insertNode[0].componentName).isModal) {
        return {
          target: activeDoc.rootNode
        };
      }
      var focusNode = activeDoc.focusNode;
      var nodes = activeDoc.selection.getNodes();
      var refNode = nodes.find(function (item) {
        return focusNode.contains(item);
      });
      var target;
      var index;
      if (!refNode || refNode === focusNode) {
        target = focusNode;
      } else if (refNode.componentMeta.isContainer) {
        target = refNode;
      } else {
        // FIXME!!, parent maybe null
        target = refNode.parent;
        index = (refNode.index || 0) + 1;
      }
      if (target && insertNode && !target.componentMeta.checkNestingDown(target, insertNode)) {
        return null;
      }
      return {
        target: target,
        index: index
      };
    }
  }, {
    key: "setProps",
    value: function setProps(nextProps) {
      var props = this.props ? designer_objectSpread(designer_objectSpread({}, this.props), nextProps) : nextProps;
      if (this.props) {
        // check hotkeys
        // TODO:
        // check simulatorConfig
        if (props.simulatorComponent !== this.props.simulatorComponent) {
          this._simulatorComponent = props.simulatorComponent;
        }
        if (props.simulatorProps !== this.props.simulatorProps) {
          var _props$simulatorProps, _this$props$simulator;
          this._simulatorProps = props.simulatorProps;
          // 重新 setupSelection
          if (((_props$simulatorProps = props.simulatorProps) === null || _props$simulatorProps === void 0 ? void 0 : _props$simulatorProps.designMode) !== ((_this$props$simulator = this.props.simulatorProps) === null || _this$props$simulator === void 0 ? void 0 : _this$props$simulator.designMode)) {
            this.setupSelection();
          }
        }
        if (props.suspensed !== this.props.suspensed && props.suspensed != null) {
          this.suspensed = props.suspensed;
        }
        if (props.componentMetadatas !== this.props.componentMetadatas && props.componentMetadatas != null) {
          this.buildComponentMetasMap(props.componentMetadatas);
        }
      } else {
        // init hotkeys
        // todo:
        // init simulatorConfig
        if (props.simulatorComponent) {
          this._simulatorComponent = props.simulatorComponent;
        }
        if (props.simulatorProps) {
          this._simulatorProps = props.simulatorProps;
        }
        // init suspensed
        if (props.suspensed != null) {
          this.suspensed = props.suspensed;
        }
        if (props.componentMetadatas != null) {
          this.buildComponentMetasMap(props.componentMetadatas);
        }
      }
      this.props = props;
    }
  }, {
    key: "loadIncrementalAssets",
    value: function () {
      var _loadIncrementalAssets = designer_asyncToGenerator(/*#__PURE__*/designer_regenerator().m(function _callee(incrementalAssets) {
        var components, packages, _this$project$simulat, assets, newAssets;
        return designer_regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              components = incrementalAssets.components, packages = incrementalAssets.packages;
              components && this.buildComponentMetasMap(components);
              if (!packages) {
                _context.n = 1;
                break;
              }
              _context.n = 1;
              return (_this$project$simulat = this.project.simulator) === null || _this$project$simulat === void 0 ? void 0 : _this$project$simulat.setupComponents(packages);
            case 1:
              if (!components) {
                _context.n = 2;
                break;
              }
              // 合并 assets
              assets = this.editor.get('assets') || {};
              newAssets = Object(utils_src["bb" /* mergeAssets */])(assets, incrementalAssets); // 对于 assets 存在需要二次网络下载的过程，必须 await 等待结束之后，再进行事件触发
              _context.n = 2;
              return this.editor.set('assets', newAssets);
            case 2:
              // TODO: 因为涉及修改 prototype.view，之后在 renderer 里修改了 vc 的 view 获取逻辑后，可删除
              this.refreshComponentMetasMap();
              // 完成加载增量资源后发送事件，方便插件监听并处理相关逻辑
              this.editor.eventBus.emit('designer.incrementalAssetsReady');
            case 3:
              return _context.a(2);
          }
        }, _callee, this);
      }));
      function loadIncrementalAssets(_x) {
        return _loadIncrementalAssets.apply(this, arguments);
      }
      return loadIncrementalAssets;
    }()
    /**
     * 刷新 componentMetasMap，可间接触发模拟器里的 buildComponents
     */
  }, {
    key: "refreshComponentMetasMap",
    value: function refreshComponentMetasMap() {
      this._componentMetasMap = new Map(this._componentMetasMap);
    }
  }, {
    key: "get",
    value: function get(key) {
      var _this$props4;
      return (_this$props4 = this.props) === null || _this$props4 === void 0 ? void 0 : _this$props4[key];
    }
  }, {
    key: "simulatorComponent",
    get: function get() {
      return this._simulatorComponent;
    }
  }, {
    key: "simulatorProps",
    get: function get() {
      if (typeof this._simulatorProps === 'function') {
        return this._simulatorProps(this.project);
      }
      return this._simulatorProps || {};
    }
    /**
     * 提供给模拟器的参数
     */
  }, {
    key: "projectSimulatorProps",
    get: function get() {
      var _this2 = this;
      return designer_objectSpread(designer_objectSpread({}, this.simulatorProps), {}, {
        project: this.project,
        designer: this,
        onMount: function onMount(simulator) {
          _this2.project.mountSimulator(simulator);
          _this2.editor.set('simulator', simulator);
        }
      });
    }
  }, {
    key: "suspensed",
    get: function get() {
      return this._suspensed;
    },
    set: function set(flag) {
      this._suspensed = flag;
      // Todo afterwards...
      if (flag) {
        // this.project.suspensed = true?
      }
    }
  }, {
    key: "schema",
    get: function get() {
      return this.project.getSchema();
    }
  }, {
    key: "setSchema",
    value: function setSchema(schema) {
      this.project.load(schema);
    }
  }, {
    key: "buildComponentMetasMap",
    value: function buildComponentMetasMap(metas) {
      var _this3 = this;
      metas.forEach(function (data) {
        return _this3.createComponentMeta(data);
      });
    }
  }, {
    key: "createComponentMeta",
    value: function createComponentMeta(data) {
      var key = data.componentName;
      if (!key) {
        return null;
      }
      var meta = this._componentMetasMap.get(key);
      if (meta) {
        meta.setMetadata(data);
        this._componentMetasMap.set(key, meta);
      } else {
        meta = this._lostComponentMetasMap.get(key);
        if (meta) {
          meta.setMetadata(data);
          this._lostComponentMetasMap.delete(key);
        } else {
          meta = new component_meta_ComponentMeta(this, data);
        }
        this._componentMetasMap.set(key, meta);
      }
      return meta;
    }
  }, {
    key: "getGlobalComponentActions",
    value: function getGlobalComponentActions() {
      var _this$props5;
      return ((_this$props5 = this.props) === null || _this$props5 === void 0 ? void 0 : _this$props5.globalComponentActions) || null;
    }
  }, {
    key: "getComponentMeta",
    value: function getComponentMeta(componentName, generateMetadata) {
      if (this._componentMetasMap.has(componentName)) {
        return this._componentMetasMap.get(componentName);
      }
      if (this._lostComponentMetasMap.has(componentName)) {
        return this._lostComponentMetasMap.get(componentName);
      }
      var meta = new component_meta_ComponentMeta(this, designer_objectSpread({
        componentName: componentName
      }, generateMetadata ? generateMetadata() : null));
      this._lostComponentMetasMap.set(componentName, meta);
      return meta;
    }
  }, {
    key: "getComponentMetasMap",
    value: function getComponentMetasMap() {
      return this._componentMetasMap;
    }
  }, {
    key: "componentsMap",
    get: function get() {
      var maps = {};
      var designer = this;
      designer._componentMetasMap.forEach(function (config, key) {
        var metaData = config.getMetadata();
        if (metaData.devMode === 'lowCode') {
          maps[key] = metaData.schema;
        } else {
          var view = config.advanced.view;
          if (view) {
            maps[key] = view;
          } else {
            maps[key] = config.npm;
          }
        }
      });
      return maps;
    }
  }, {
    key: "transformProps",
    value: function transformProps(props, node, stage) {
      if (Array.isArray(props)) {
        // current not support, make this future
        return props;
      }
      var reducers = this.propsReducers.get(stage);
      if (!reducers) {
        return props;
      }
      return reducers.reduce(function (xprops, reducer) {
        try {
          return reducer(xprops, node.internalToShellNode(), {
            stage: stage
          });
        } catch (e) {
          // todo: add log
          console.warn(e);
          return xprops;
        }
      }, props);
    }
  }, {
    key: "addPropsReducer",
    value: function addPropsReducer(reducer, stage) {
      if (!reducer) {
        designer_logger.error('reducer is not available');
        return;
      }
      var reducers = this.propsReducers.get(stage);
      if (reducers) {
        reducers.push(reducer);
      } else {
        this.propsReducers.set(stage, [reducer]);
      }
    }
  }, {
    key: "autorun",
    value: function autorun(effect, options) {
      return Object(src["autorun"])(effect, options);
    }
  }, {
    key: "purge",
    value: function purge() {
      // TODO:
    }
  }]);
}();
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], designer_Designer.prototype, "_componentMetasMap", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", typeof (designer_a = typeof external_window_React_["ComponentType"] !== "undefined" && external_window_React_["ComponentType"]) === "function" ? designer_a : Object)], designer_Designer.prototype, "_simulatorComponent", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], designer_Designer.prototype, "_simulatorProps", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], designer_Designer.prototype, "_suspensed", void 0);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], designer_Designer.prototype, "simulatorComponent", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", typeof (designer_d = typeof Record !== "undefined" && Record) === "function" ? designer_d : Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], designer_Designer.prototype, "simulatorProps", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], designer_Designer.prototype, "projectSimulatorProps", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], designer_Designer.prototype, "componentsMap", null);
// EXTERNAL MODULE: ../designer/src/designer/drag-ghost/ghost.less
var drag_ghost_ghost = __webpack_require__(106);

// CONCATENATED MODULE: ../designer/src/designer/drag-ghost/index.tsx
function drag_ghost_typeof(o) { "@babel/helpers - typeof"; return drag_ghost_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, drag_ghost_typeof(o); }
function drag_ghost_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function drag_ghost_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, drag_ghost_toPropertyKey(o.key), o); } }
function drag_ghost_createClass(e, r, t) { return r && drag_ghost_defineProperties(e.prototype, r), t && drag_ghost_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function drag_ghost_toPropertyKey(t) { var i = drag_ghost_toPrimitive(t, "string"); return "symbol" == drag_ghost_typeof(i) ? i : i + ""; }
function drag_ghost_toPrimitive(t, r) { if ("object" != drag_ghost_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != drag_ghost_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function drag_ghost_callSuper(t, o, e) { return o = drag_ghost_getPrototypeOf(o), drag_ghost_possibleConstructorReturn(t, drag_ghost_isNativeReflectConstruct() ? Reflect.construct(o, e || [], drag_ghost_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function drag_ghost_possibleConstructorReturn(t, e) { if (e && ("object" == drag_ghost_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return drag_ghost_assertThisInitialized(t); }
function drag_ghost_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function drag_ghost_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (drag_ghost_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function drag_ghost_getPrototypeOf(t) { return drag_ghost_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, drag_ghost_getPrototypeOf(t); }
function drag_ghost_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && drag_ghost_setPrototypeOf(t, e); }
function drag_ghost_setPrototypeOf(t, e) { return drag_ghost_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, drag_ghost_setPrototypeOf(t, e); }






var drag_ghost_DragGhost = /*#__PURE__*/function (_Component) {
  function DragGhost(props) {
    var _this;
    drag_ghost_classCallCheck(this, DragGhost);
    _this = drag_ghost_callSuper(this, DragGhost, [props]);
    _this.dispose = [];
    _this.titles = null;
    _this.x = 0;
    _this.y = 0;
    _this.isAbsoluteLayoutContainer = false;
    _this.dragon = _this.props.designer.dragon;
    Object(src["makeObservable"])(_this);
    _this.dispose = [_this.dragon.onDragstart(function (e) {
      if (e.originalEvent.type.slice(0, 4) === 'drag') {
        return;
      }
      _this.titles = _this.getTitles(e.dragObject);
      _this.x = e.globalX;
      _this.y = e.globalY;
    }), _this.dragon.onDrag(function (e) {
      _this.x = e.globalX;
      _this.y = e.globalY;
      if (isSimulatorHost(e.sensor)) {
        var container = e.sensor.getDropContainer(e);
        if (container !== null && container !== void 0 && container.container.componentMeta.advanced.isAbsoluteLayoutContainer) {
          _this.isAbsoluteLayoutContainer = true;
          return;
        }
      }
      _this.isAbsoluteLayoutContainer = false;
    }), _this.dragon.onDragend(function () {
      _this.titles = null;
      _this.x = 0;
      _this.y = 0;
    })];
    return _this;
  }
  drag_ghost_inherits(DragGhost, _Component);
  return drag_ghost_createClass(DragGhost, [{
    key: "getTitles",
    value: function getTitles(dragObject) {
      var _this2 = this;
      if (isDragNodeObject(dragObject)) {
        return dragObject.nodes.map(function (node) {
          return node.title;
        });
      }
      var dataList = Array.isArray(dragObject.data) ? dragObject.data : [dragObject.data];
      return dataList.map(function (item, i) {
        return _this2.props.designer.getComponentMeta(item.componentName).title;
      });
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.dispose) {
        this.dispose.forEach(function (off) {
          return off();
        });
      }
    }
  }, {
    key: "renderGhostGroup",
    value: function renderGhostGroup() {
      var _this$titles;
      return (_this$titles = this.titles) === null || _this$titles === void 0 ? void 0 : _this$titles.map(function (title, i) {
        var ghost = /*#__PURE__*/React.createElement("div", {
          className: "lc-ghost",
          key: i
        }, /*#__PURE__*/React.createElement(src["Title"], {
          title: title
        }));
        return ghost;
      });
    }
  }, {
    key: "render",
    value: function render() {
      if (!this.titles || !this.titles.length) {
        return null;
      }
      if (this.isAbsoluteLayoutContainer) {
        return null;
      }
      return /*#__PURE__*/React.createElement("div", {
        className: "lc-ghost-group",
        style: {
          left: this.x,
          top: this.y
        }
      }, this.renderGhostGroup());
    }
  }]);
}(external_window_React_["Component"]);
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], drag_ghost_DragGhost.prototype, "titles", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], drag_ghost_DragGhost.prototype, "x", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], drag_ghost_DragGhost.prototype, "y", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"], Object(tslib_es6["d" /* __metadata */])("design:type", Object)], drag_ghost_DragGhost.prototype, "isAbsoluteLayoutContainer", void 0);
drag_ghost_DragGhost = Object(tslib_es6["b" /* __decorate */])([src["observer"], Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Object])], drag_ghost_DragGhost);
/* harmony default export */ var drag_ghost = (drag_ghost_DragGhost);
// EXTERNAL MODULE: ../designer/src/designer/designer.less
var designer_designer = __webpack_require__(107);

// CONCATENATED MODULE: ../designer/src/designer/designer-view.tsx
function designer_view_typeof(o) { "@babel/helpers - typeof"; return designer_view_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, designer_view_typeof(o); }
var designer_view_excluded = ["designer"];
function designer_view_objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = designer_view_objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }
function designer_view_objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }
function designer_view_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function designer_view_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, designer_view_toPropertyKey(o.key), o); } }
function designer_view_createClass(e, r, t) { return r && designer_view_defineProperties(e.prototype, r), t && designer_view_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function designer_view_toPropertyKey(t) { var i = designer_view_toPrimitive(t, "string"); return "symbol" == designer_view_typeof(i) ? i : i + ""; }
function designer_view_toPrimitive(t, r) { if ("object" != designer_view_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != designer_view_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function designer_view_callSuper(t, o, e) { return o = designer_view_getPrototypeOf(o), designer_view_possibleConstructorReturn(t, designer_view_isNativeReflectConstruct() ? Reflect.construct(o, e || [], designer_view_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function designer_view_possibleConstructorReturn(t, e) { if (e && ("object" == designer_view_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return designer_view_assertThisInitialized(t); }
function designer_view_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function designer_view_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (designer_view_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function designer_view_getPrototypeOf(t) { return designer_view_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, designer_view_getPrototypeOf(t); }
function designer_view_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && designer_view_setPrototypeOf(t, e); }
function designer_view_setPrototypeOf(t, e) { return designer_view_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, designer_view_setPrototypeOf(t, e); }






var designer_view_DesignerView = /*#__PURE__*/function (_Component) {
  function DesignerView(props) {
    var _this;
    designer_view_classCallCheck(this, DesignerView);
    _this = designer_view_callSuper(this, DesignerView, [props]);
    _this.designer = void 0;
    _this.viewName = void 0;
    var designer = props.designer,
      designerProps = designer_view_objectWithoutProperties(props, designer_view_excluded);
    _this.viewName = designer === null || designer === void 0 ? void 0 : designer.viewName;
    if (designer) {
      _this.designer = designer;
      designer.setProps(designerProps);
    } else {
      _this.designer = new designer_Designer(designerProps);
    }
    return _this;
  }
  designer_view_inherits(DesignerView, _Component);
  return designer_view_createClass(DesignerView, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps) {
      this.designer.setProps(nextProps);
      var props = this.props;
      if (nextProps.className !== props.className || nextProps.style !== props.style || nextProps.dragGhostComponent !== props.dragGhostComponent) {
        return true;
      }
      return false;
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var onMount = this.props.onMount;
      if (onMount) {
        onMount(this.designer);
      }
      this.designer.postEvent('mount', this.designer);
    }
  }, {
    key: "UNSAFE_componentWillMount",
    value: function UNSAFE_componentWillMount() {
      this.designer.purge();
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
        className = _this$props.className,
        style = _this$props.style,
        dragGhostComponent = _this$props.dragGhostComponent;
      var DragGhost = dragGhostComponent || drag_ghost;
      return /*#__PURE__*/React.createElement("div", {
        className: classnames_default()('lc-designer', className),
        style: style
      }, /*#__PURE__*/React.createElement(DragGhost, {
        designer: this.designer
      }), /*#__PURE__*/React.createElement(project_view_ProjectView, {
        designer: this.designer
      }));
    }
  }]);
}(external_window_React_["Component"]);
// CONCATENATED MODULE: ../designer/src/designer/index.ts











// CONCATENATED MODULE: ../designer/src/plugin/plugin-utils.ts

function isValidPreferenceKey(key, preferenceDeclaration) {
  if (!preferenceDeclaration || !Array.isArray(preferenceDeclaration.properties)) {
    return false;
  }
  return preferenceDeclaration.properties.some(function (prop) {
    return prop.key === key;
  });
}
function isLowCodeRegisterOptions(opts) {
  return opts && ('autoInit' in opts || 'override' in opts);
}
function filterValidOptions(opts, preferenceDeclaration) {
  if (!opts || !Object(external_["isPlainObject"])(opts)) return opts;
  var filteredOpts = {};
  Object.keys(opts).forEach(function (key) {
    if (isValidPreferenceKey(key, preferenceDeclaration)) {
      var v = opts[key];
      if (v !== undefined && v !== null) {
        filteredOpts[key] = v;
      }
    }
  });
  return filteredOpts;
}
// CONCATENATED MODULE: ../designer/src/plugin/plugin-context.ts
function plugin_context_typeof(o) { "@babel/helpers - typeof"; return plugin_context_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, plugin_context_typeof(o); }
function plugin_context_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function plugin_context_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, plugin_context_toPropertyKey(o.key), o); } }
function plugin_context_createClass(e, r, t) { return r && plugin_context_defineProperties(e.prototype, r), t && plugin_context_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function plugin_context_toPropertyKey(t) { var i = plugin_context_toPrimitive(t, "string"); return "symbol" == plugin_context_typeof(i) ? i : i + ""; }
function plugin_context_toPrimitive(t, r) { if ("object" != plugin_context_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != plugin_context_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/* eslint-disable no-multi-assign */


var plugin_context_PluginContext = /*#__PURE__*/function () {
  function PluginContext(options, contextApiAssembler) {
    plugin_context_classCallCheck(this, PluginContext);
    this.hotkey = void 0;
    this.project = void 0;
    this.skeleton = void 0;
    this.setters = void 0;
    this.material = void 0;
    this.event = void 0;
    this.config = void 0;
    this.common = void 0;
    this.logger = void 0;
    this.plugins = void 0;
    this.preference = void 0;
    this.pluginEvent = void 0;
    this.canvas = void 0;
    this.workspace = void 0;
    this.registerLevel = void 0;
    this.editorWindow = void 0;
    this.commonUI = void 0;
    this.isPluginRegisteredInWorkspace = void 0;
    var _options$pluginName = options.pluginName,
      pluginName = _options$pluginName === void 0 ? 'anonymous' : _options$pluginName,
      _options$meta = options.meta,
      meta = _options$meta === void 0 ? {} : _options$meta;
    contextApiAssembler.assembleApis(this, pluginName, meta);
    this.pluginEvent = Object(src["createModuleEventBus"])(pluginName, 200);
    var enhancePluginContextHook = src["engineConfig"].get('enhancePluginContextHook');
    if (enhancePluginContextHook) {
      enhancePluginContextHook(this);
    }
  }
  return plugin_context_createClass(PluginContext, [{
    key: "setPreference",
    value: function setPreference(pluginName, preferenceDeclaration) {
      var _this = this;
      var getPreferenceValue = function getPreferenceValue(key, defaultValue) {
        if (!isValidPreferenceKey(key, preferenceDeclaration)) {
          return undefined;
        }
        var pluginPreference = _this.plugins.getPluginPreference(pluginName) || {};
        if (pluginPreference[key] === undefined || pluginPreference[key] === null) {
          return defaultValue;
        }
        return pluginPreference[key];
      };
      this.preference = {
        getPreferenceValue: getPreferenceValue
      };
    }
  }]);
}();

// CONCATENATED MODULE: ../designer/src/plugin/plugin.ts
function plugin_typeof(o) { "@babel/helpers - typeof"; return plugin_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, plugin_typeof(o); }
function plugin_regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return plugin_regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i.return) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (plugin_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, plugin_regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, plugin_regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), plugin_regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", plugin_regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), plugin_regeneratorDefine2(u), plugin_regeneratorDefine2(u, o, "Generator"), plugin_regeneratorDefine2(u, n, function () { return this; }), plugin_regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (plugin_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function plugin_regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } plugin_regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { plugin_regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, plugin_regeneratorDefine2(e, r, n, t); }
function plugin_asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function plugin_asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { plugin_asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { plugin_asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function plugin_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function plugin_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, plugin_toPropertyKey(o.key), o); } }
function plugin_createClass(e, r, t) { return r && plugin_defineProperties(e.prototype, r), t && plugin_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function plugin_toPropertyKey(t) { var i = plugin_toPrimitive(t, "string"); return "symbol" == plugin_typeof(i) ? i : i + ""; }
function plugin_toPrimitive(t, r) { if ("object" != plugin_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != plugin_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }


var plugin_LowCodePluginRuntime = /*#__PURE__*/function () {
  function LowCodePluginRuntime(pluginName, manager, config, meta) {
    plugin_classCallCheck(this, LowCodePluginRuntime);
    this.config = void 0;
    this.logger = void 0;
    this.manager = void 0;
    this._inited = void 0;
    this.pluginName = void 0;
    this.meta = void 0;
    /**
     * 标识插件状态，是否被 disabled
     */
    this._disabled = void 0;
    this.manager = manager;
    this.config = config;
    this.pluginName = pluginName;
    this.meta = meta;
    this.logger = Object(utils_src["t" /* getLogger */])({
      level: 'warn',
      bizName: "plugin:".concat(pluginName)
    });
  }
  return plugin_createClass(LowCodePluginRuntime, [{
    key: "name",
    get: function get() {
      return this.pluginName;
    }
  }, {
    key: "dep",
    get: function get() {
      if (typeof this.meta.dependencies === 'string') {
        return [this.meta.dependencies];
      }
      // compat legacy way to declare dependencies
      var legacyDepValue = this.config.dep;
      if (typeof legacyDepValue === 'string') {
        return [legacyDepValue];
      }
      return this.meta.dependencies || legacyDepValue || [];
    }
  }, {
    key: "disabled",
    get: function get() {
      return this._disabled;
    }
  }, {
    key: "isInited",
    value: function isInited() {
      return this._inited;
    }
  }, {
    key: "init",
    value: function () {
      var _init = plugin_asyncToGenerator(/*#__PURE__*/plugin_regenerator().m(function _callee(forceInit) {
        var _this$config$init;
        return plugin_regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              if (!(this._inited && !forceInit)) {
                _context.n = 1;
                break;
              }
              return _context.a(2);
            case 1:
              this.logger.log('method init called');
              _context.n = 2;
              return (_this$config$init = this.config.init) === null || _this$config$init === void 0 ? void 0 : _this$config$init.call(undefined);
            case 2:
              this._inited = true;
            case 3:
              return _context.a(2);
          }
        }, _callee, this);
      }));
      function init(_x) {
        return _init.apply(this, arguments);
      }
      return init;
    }()
  }, {
    key: "destroy",
    value: function () {
      var _destroy = plugin_asyncToGenerator(/*#__PURE__*/plugin_regenerator().m(function _callee2() {
        var _this$config, _this$config$destroy;
        return plugin_regenerator().w(function (_context2) {
          while (1) switch (_context2.n) {
            case 0:
              if (this._inited) {
                _context2.n = 1;
                break;
              }
              return _context2.a(2);
            case 1:
              this.logger.log('method destroy called');
              _context2.n = 2;
              return (_this$config = this.config) === null || _this$config === void 0 ? void 0 : (_this$config$destroy = _this$config.destroy) === null || _this$config$destroy === void 0 ? void 0 : _this$config$destroy.call(undefined);
            case 2:
              this._inited = false;
            case 3:
              return _context2.a(2);
          }
        }, _callee2, this);
      }));
      function destroy() {
        return _destroy.apply(this, arguments);
      }
      return destroy;
    }()
  }, {
    key: "setDisabled",
    value: function setDisabled() {
      var flag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      this._disabled = flag;
    }
  }, {
    key: "toProxy",
    value: function toProxy() {
      var _this$config$exports, _this$config2;
      invariant(this._inited, 'Could not call toProxy before init');
      var exports = (_this$config$exports = (_this$config2 = this.config).exports) === null || _this$config$exports === void 0 ? void 0 : _this$config$exports.call(_this$config2);
      return new Proxy(this, {
        get: function get(target, prop, receiver) {
          if ({}.hasOwnProperty.call(exports, prop)) {
            return exports === null || exports === void 0 ? void 0 : exports[prop];
          }
          return Reflect.get(target, prop, receiver);
        }
      });
    }
  }, {
    key: "dispose",
    value: function () {
      var _dispose = plugin_asyncToGenerator(/*#__PURE__*/plugin_regenerator().m(function _callee3() {
        return plugin_regenerator().w(function (_context3) {
          while (1) switch (_context3.n) {
            case 0:
              _context3.n = 1;
              return this.manager.delete(this.name);
            case 1:
              return _context3.a(2);
          }
        }, _callee3, this);
      }));
      function dispose() {
        return _dispose.apply(this, arguments);
      }
      return dispose;
    }()
  }]);
}();
// CONCATENATED MODULE: ../designer/src/plugin/sequencify.ts
function sequencify_sequence(_ref) {
  var tasks = _ref.tasks,
    names = _ref.names,
    results = _ref.results,
    missing = _ref.missing,
    recursive = _ref.recursive,
    nest = _ref.nest,
    parentName = _ref.parentName;
  names.forEach(function (name) {
    if (results.indexOf(name) !== -1) {
      return; // de-dup results
    }
    var node = tasks[name];
    if (!node) {
      missing.push([parentName, name].filter(function (d) {
        return !!d;
      }).join('.'));
    } else if (nest.indexOf(name) > -1) {
      nest.push(name);
      recursive.push(nest.slice(0));
      nest.pop();
    } else if (node.dep.length) {
      nest.push(name);
      sequencify_sequence({
        tasks: tasks,
        parentName: name,
        names: node.dep,
        results: results,
        missing: missing,
        recursive: recursive,
        nest: nest
      }); // recurse
      nest.pop();
    }
    results.push(name);
  });
}
// tasks: object with keys as task names
// names: array of task names
/* harmony default export */ var sequencify = (function (tasks, names) {
  var results = []; // the final sequence
  var missing = []; // missing tasks
  var recursive = []; // recursive task dependencies
  sequencify_sequence({
    tasks: tasks,
    names: names,
    results: results,
    missing: missing,
    recursive: recursive,
    nest: []
  });
  if (missing.length || recursive.length) {
    results = []; // results are incomplete at best, completely wrong at worst, remove them to avoid confusion
  }
  return {
    sequence: results,
    missingTasks: missing,
    recursiveDependencies: recursive
  };
});
// EXTERNAL MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/semver/functions/satisfies.js
var satisfies = __webpack_require__(62);
var satisfies_default = /*#__PURE__*/__webpack_require__.n(satisfies);

// CONCATENATED MODULE: ../designer/src/plugin/plugin-manager.ts
function plugin_manager_typeof(o) { "@babel/helpers - typeof"; return plugin_manager_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, plugin_manager_typeof(o); }
function plugin_manager_createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = plugin_manager_unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t.return || t.return(); } finally { if (u) throw o; } } }; }
function plugin_manager_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return plugin_manager_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? plugin_manager_arrayLikeToArray(r, a) : void 0; } }
function plugin_manager_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function plugin_manager_regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return plugin_manager_regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i.return) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (plugin_manager_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, plugin_manager_regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, plugin_manager_regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), plugin_manager_regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", plugin_manager_regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), plugin_manager_regeneratorDefine2(u), plugin_manager_regeneratorDefine2(u, o, "Generator"), plugin_manager_regeneratorDefine2(u, n, function () { return this; }), plugin_manager_regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (plugin_manager_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function plugin_manager_regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } plugin_manager_regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { plugin_manager_regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, plugin_manager_regeneratorDefine2(e, r, n, t); }
function plugin_manager_asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function plugin_manager_asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { plugin_manager_asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { plugin_manager_asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function plugin_manager_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function plugin_manager_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, plugin_manager_toPropertyKey(o.key), o); } }
function plugin_manager_createClass(e, r, t) { return r && plugin_manager_defineProperties(e.prototype, r), t && plugin_manager_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function plugin_manager_toPropertyKey(t) { var i = plugin_manager_toPrimitive(t, "string"); return "symbol" == plugin_manager_typeof(i) ? i : i + ""; }
function plugin_manager_toPrimitive(t, r) { if ("object" != plugin_manager_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != plugin_manager_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }




// eslint-disable-next-line import/no-named-as-default




var plugin_manager_logger = Object(utils_src["t" /* getLogger */])({
  level: 'warn',
  bizName: 'designer:pluginManager'
});
// 保留的事件前缀
var RESERVED_EVENT_PREFIX = ['designer', 'editor', 'skeleton', 'renderer', 'render', 'utils', 'plugin', 'engine', 'editor-core', 'engine-core', 'plugins', 'event', 'events', 'log', 'logger', 'ctx', 'context'];
var plugin_manager_LowCodePluginManager = /*#__PURE__*/function () {
  function LowCodePluginManager(contextApiAssembler) {
    var _this = this;
    var viewName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'global';
    plugin_manager_classCallCheck(this, LowCodePluginManager);
    this.viewName = void 0;
    this.plugins = [];
    this.pluginsMap = new Map();
    this.pluginContextMap = new Map();
    this.pluginPreference = new Map();
    this.contextApiAssembler = void 0;
    this._getLowCodePluginContext = function (options) {
      var pluginName = options.pluginName;
      var context = _this.pluginContextMap.get(pluginName);
      if (!context) {
        context = new plugin_context_PluginContext(options, _this.contextApiAssembler);
        _this.pluginContextMap.set(pluginName, context);
      }
      return context;
    };
    this.viewName = viewName;
    this.contextApiAssembler = contextApiAssembler;
  }
  return plugin_manager_createClass(LowCodePluginManager, [{
    key: "isEngineVersionMatched",
    value: function isEngineVersionMatched(versionExp) {
      var engineVersion = src["engineConfig"].get('ENGINE_VERSION');
      // ref: https://github.com/npm/node-semver#functions
      // 1.0.1-beta should match '^1.0.0'
      return satisfies_default()(engineVersion, versionExp, {
        includePrerelease: true
      });
    }
    /**
     * register a plugin
     * @param pluginConfigCreator - a creator function which returns the plugin config
     * @param options - the plugin options
     * @param registerOptions - the plugin register options
     */
  }, {
    key: "register",
    value: (function () {
      var _register = plugin_manager_asyncToGenerator(/*#__PURE__*/plugin_manager_regenerator().m(function _callee(pluginModel, options, registerOptions) {
        var _newPluginModel$meta, _registerOptions, _registerOptions2;
        var pluginName, _pluginModel$meta, meta, preferenceDeclaration, engines, eventPrefix, isReservedPrefix, ctx, customFilterValidOptions, pluginTransducer, newPluginModel, newOptions, config, allowOverride, originalPlugin, engineVersionExp, plugin, _t;
        return plugin_manager_regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              // registerOptions maybe in the second place
              if (isLowCodeRegisterOptions(options)) {
                registerOptions = options;
                options = {};
              }
              pluginName = pluginModel.pluginName, _pluginModel$meta = pluginModel.meta, meta = _pluginModel$meta === void 0 ? {} : _pluginModel$meta;
              preferenceDeclaration = meta.preferenceDeclaration, engines = meta.engines; // filter invalid eventPrefix
              eventPrefix = meta.eventPrefix;
              isReservedPrefix = RESERVED_EVENT_PREFIX.find(function (item) {
                return item === eventPrefix;
              });
              if (isReservedPrefix) {
                meta.eventPrefix = undefined;
                plugin_manager_logger.warn("plugin ".concat(pluginName, " is trying to use ").concat(eventPrefix, " as event prefix, which is a reserved event prefix, please use another one"));
              }
              ctx = this._getLowCodePluginContext({
                pluginName: pluginName,
                meta: meta
              });
              customFilterValidOptions = src["engineConfig"].get('customPluginFilterOptions', filterValidOptions);
              pluginTransducer = src["engineConfig"].get('customPluginTransducer', null);
              if (!pluginTransducer) {
                _context.n = 2;
                break;
              }
              _context.n = 1;
              return pluginTransducer(pluginModel, ctx, options);
            case 1:
              _t = _context.v;
              _context.n = 3;
              break;
            case 2:
              _t = pluginModel;
            case 3:
              newPluginModel = _t;
              newOptions = customFilterValidOptions(options, (_newPluginModel$meta = newPluginModel.meta) === null || _newPluginModel$meta === void 0 ? void 0 : _newPluginModel$meta.preferenceDeclaration);
              config = newPluginModel(ctx, newOptions); // compat the legacy way to declare pluginName
              // @ts-ignore
              pluginName = pluginName || config.name;
              invariant(pluginName, 'pluginConfigCreator.pluginName required', config);
              ctx.setPreference(pluginName, preferenceDeclaration);
              allowOverride = ((_registerOptions = registerOptions) === null || _registerOptions === void 0 ? void 0 : _registerOptions.override) === true;
              if (!this.pluginsMap.has(pluginName)) {
                _context.n = 5;
                break;
              }
              if (allowOverride) {
                _context.n = 4;
                break;
              }
              throw new Error("Plugin with name ".concat(pluginName, " exists"));
            case 4:
              // clear existing plugin
              originalPlugin = this.pluginsMap.get(pluginName);
              plugin_manager_logger.log('plugin override, originalPlugin with name ', pluginName, ' will be destroyed, config:', originalPlugin === null || originalPlugin === void 0 ? void 0 : originalPlugin.config);
              originalPlugin === null || originalPlugin === void 0 ? void 0 : originalPlugin.destroy();
              this.pluginsMap.delete(pluginName);
            case 5:
              engineVersionExp = engines && engines.lowcodeEngine;
              if (!(engineVersionExp && !this.isEngineVersionMatched(engineVersionExp))) {
                _context.n = 6;
                break;
              }
              throw new Error("plugin ".concat(pluginName, " skipped, engine check failed, current engine version is ").concat(src["engineConfig"].get('ENGINE_VERSION'), ", meta.engines.lowcodeEngine is ").concat(engineVersionExp));
            case 6:
              plugin = new plugin_LowCodePluginRuntime(pluginName, this, config, meta); // support initialization of those plugins which registered
              // after normal initialization by plugin-manager
              if (!((_registerOptions2 = registerOptions) !== null && _registerOptions2 !== void 0 && _registerOptions2.autoInit)) {
                _context.n = 7;
                break;
              }
              _context.n = 7;
              return plugin.init();
            case 7:
              this.plugins.push(plugin);
              this.pluginsMap.set(pluginName, plugin);
              plugin_manager_logger.log("plugin registered with pluginName: ".concat(pluginName, ", config: "), config, 'meta:', meta);
            case 8:
              return _context.a(2);
          }
        }, _callee, this);
      }));
      function register(_x, _x2, _x3) {
        return _register.apply(this, arguments);
      }
      return register;
    }())
  }, {
    key: "get",
    value: function get(pluginName) {
      return this.pluginsMap.get(pluginName);
    }
  }, {
    key: "getAll",
    value: function getAll() {
      return this.plugins;
    }
  }, {
    key: "has",
    value: function has(pluginName) {
      return this.pluginsMap.has(pluginName);
    }
  }, {
    key: "delete",
    value: function () {
      var _delete2 = plugin_manager_asyncToGenerator(/*#__PURE__*/plugin_manager_regenerator().m(function _callee2(pluginName) {
        var plugin, idx;
        return plugin_manager_regenerator().w(function (_context2) {
          while (1) switch (_context2.n) {
            case 0:
              plugin = this.plugins.find(function (_ref) {
                var name = _ref.name;
                return name === pluginName;
              });
              if (plugin) {
                _context2.n = 1;
                break;
              }
              return _context2.a(2, false);
            case 1:
              _context2.n = 2;
              return plugin.destroy();
            case 2:
              idx = this.plugins.indexOf(plugin);
              this.plugins.splice(idx, 1);
              return _context2.a(2, this.pluginsMap.delete(pluginName));
          }
        }, _callee2, this);
      }));
      function _delete(_x4) {
        return _delete2.apply(this, arguments);
      }
      return _delete;
    }()
  }, {
    key: "init",
    value: function () {
      var _init = plugin_manager_asyncToGenerator(/*#__PURE__*/plugin_manager_regenerator().m(function _callee3(pluginPreference) {
        var pluginNames, pluginObj, _sequencify, missingTasks, sequence, _iterator, _step, pluginName, _t2, _t3;
        return plugin_manager_regenerator().w(function (_context3) {
          while (1) switch (_context3.p = _context3.n) {
            case 0:
              pluginNames = [];
              pluginObj = {};
              this.pluginPreference = pluginPreference;
              this.plugins.forEach(function (plugin) {
                pluginNames.push(plugin.name);
                pluginObj[plugin.name] = plugin;
              });
              _sequencify = sequencify(pluginObj, pluginNames), missingTasks = _sequencify.missingTasks, sequence = _sequencify.sequence;
              invariant(!missingTasks.length, 'plugin dependency missing', missingTasks);
              plugin_manager_logger.log('load plugin sequence:', sequence);
              _iterator = plugin_manager_createForOfIteratorHelper(sequence);
              _context3.p = 1;
              _iterator.s();
            case 2:
              if ((_step = _iterator.n()).done) {
                _context3.n = 7;
                break;
              }
              pluginName = _step.value;
              _context3.p = 3;
              _context3.n = 4;
              return this.pluginsMap.get(pluginName).init();
            case 4:
              _context3.n = 6;
              break;
            case 5:
              _context3.p = 5;
              _t2 = _context3.v;
              plugin_manager_logger.error("Failed to init plugin:".concat(pluginName, ", it maybe affect those plugins which depend on this."));
              plugin_manager_logger.error(_t2);
            case 6:
              _context3.n = 2;
              break;
            case 7:
              _context3.n = 9;
              break;
            case 8:
              _context3.p = 8;
              _t3 = _context3.v;
              _iterator.e(_t3);
            case 9:
              _context3.p = 9;
              _iterator.f();
              return _context3.f(9);
            case 10:
              return _context3.a(2);
          }
        }, _callee3, this, [[3, 5], [1, 8, 9, 10]]);
      }));
      function init(_x5) {
        return _init.apply(this, arguments);
      }
      return init;
    }()
  }, {
    key: "destroy",
    value: function () {
      var _destroy = plugin_manager_asyncToGenerator(/*#__PURE__*/plugin_manager_regenerator().m(function _callee4() {
        var _iterator2, _step2, plugin, _t4;
        return plugin_manager_regenerator().w(function (_context4) {
          while (1) switch (_context4.p = _context4.n) {
            case 0:
              _iterator2 = plugin_manager_createForOfIteratorHelper(this.plugins);
              _context4.p = 1;
              _iterator2.s();
            case 2:
              if ((_step2 = _iterator2.n()).done) {
                _context4.n = 4;
                break;
              }
              plugin = _step2.value;
              _context4.n = 3;
              return plugin.destroy();
            case 3:
              _context4.n = 2;
              break;
            case 4:
              _context4.n = 6;
              break;
            case 5:
              _context4.p = 5;
              _t4 = _context4.v;
              _iterator2.e(_t4);
            case 6:
              _context4.p = 6;
              _iterator2.f();
              return _context4.f(6);
            case 7:
              return _context4.a(2);
          }
        }, _callee4, this, [[1, 5, 6, 7]]);
      }));
      function destroy() {
        return _destroy.apply(this, arguments);
      }
      return destroy;
    }()
  }, {
    key: "size",
    get: function get() {
      return this.pluginsMap.size;
    }
  }, {
    key: "getPluginPreference",
    value: function getPluginPreference(pluginName) {
      if (!this.pluginPreference) {
        return null;
      }
      return this.pluginPreference.get(pluginName);
    }
  }, {
    key: "toProxy",
    value: function toProxy() {
      return new Proxy(this, {
        get: function get(target, prop, receiver) {
          if (target.pluginsMap.has(prop)) {
            var _target$pluginsMap$ge;
            // 禁用态的插件，直接返回 undefined
            if (target.pluginsMap.get(prop).disabled) {
              return undefined;
            }
            return (_target$pluginsMap$ge = target.pluginsMap.get(prop)) === null || _target$pluginsMap$ge === void 0 ? void 0 : _target$pluginsMap$ge.toProxy();
          }
          return Reflect.get(target, prop, receiver);
        }
      });
    }
    /* istanbul ignore next */
  }, {
    key: "setDisabled",
    value: function setDisabled(pluginName) {
      var _this$pluginsMap$get;
      var flag = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      plugin_manager_logger.warn("plugin:".concat(pluginName, " has been set disable:").concat(flag));
      (_this$pluginsMap$get = this.pluginsMap.get(pluginName)) === null || _this$pluginsMap$get === void 0 ? void 0 : _this$pluginsMap$get.setDisabled(flag);
    }
  }, {
    key: "dispose",
    value: function () {
      var _dispose = plugin_manager_asyncToGenerator(/*#__PURE__*/plugin_manager_regenerator().m(function _callee5() {
        return plugin_manager_regenerator().w(function (_context5) {
          while (1) switch (_context5.n) {
            case 0:
              _context5.n = 1;
              return this.destroy();
            case 1:
              this.plugins = [];
              this.pluginsMap.clear();
            case 2:
              return _context5.a(2);
          }
        }, _callee5, this);
      }));
      function dispose() {
        return _dispose.apply(this, arguments);
      }
      return dispose;
    }()
  }]);
}();
// CONCATENATED MODULE: ../designer/src/plugin/plugin-types.ts

// CONCATENATED MODULE: ../designer/src/plugin/index.ts




// CONCATENATED MODULE: ../designer/src/index.ts









// CONCATENATED MODULE: ../editor-skeleton/src/area.ts
function area_typeof(o) { "@babel/helpers - typeof"; return area_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, area_typeof(o); }
function area_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function area_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, area_toPropertyKey(o.key), o); } }
function area_createClass(e, r, t) { return r && area_defineProperties(e.prototype, r), t && area_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function area_toPropertyKey(t) { var i = area_toPrimitive(t, "string"); return "symbol" == area_typeof(i) ? i : i + ""; }
function area_toPrimitive(t, r) { if ("object" != area_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != area_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

/* eslint-disable max-len */


var area_logger = new utils_src["e" /* Logger */]({
  level: 'warn',
  bizName: 'skeleton:area'
});
var area_Area = /*#__PURE__*/function () {
  function Area(skeleton, name, handle, exclusive) {
    var _this = this;
    var defaultSetCurrent = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
    area_classCallCheck(this, Area);
    this.skeleton = void 0;
    this.name = void 0;
    this.exclusive = void 0;
    this._visible = true;
    this.container = void 0;
    this.lastCurrent = null;
    this.skeleton = skeleton;
    this.name = name;
    this.exclusive = exclusive;
    Object(src["makeObservable"])(this);
    this.container = skeleton.createContainer(name, handle, exclusive, function () {
      return _this.visible;
    }, defaultSetCurrent);
  }
  return area_createClass(Area, [{
    key: "visible",
    get: function get() {
      if (this.exclusive) {
        return this.container.current != null;
      }
      return this._visible;
    }
  }, {
    key: "current",
    get: function get() {
      if (this.exclusive) {
        return this.container.current;
      }
      return null;
    }
  }, {
    key: "isEmpty",
    value: function isEmpty() {
      return this.container.items.length < 1;
    }
  }, {
    key: "add",
    value: function add(config) {
      var item = this.container.get(config.name);
      if (item) {
        area_logger.warn("The ".concat(config.name, " has already been added to skeleton."));
        return item;
      }
      return this.container.add(config);
    }
  }, {
    key: "remove",
    value: function remove(config) {
      return this.container.remove(config);
    }
  }, {
    key: "setVisible",
    value: function setVisible(flag) {
      if (this.exclusive) {
        var current = this.container.current;
        if (flag && !current) {
          this.container.active(this.lastCurrent || this.container.getAt(0));
        } else if (current) {
          this.lastCurrent = current;
          this.container.unactive(current);
        }
        return;
      }
      this._visible = flag;
    }
  }, {
    key: "hide",
    value: function hide() {
      this.setVisible(false);
    }
  }, {
    key: "show",
    value: function show() {
      this.setVisible(true);
    }
    // ========== compatible for vision ========
    /**
     * @deprecated
     */
  }, {
    key: "removeAction",
    value: function removeAction(config) {
      return this.remove(config);
    }
  }]);
}();
Object(tslib_es6["b" /* __decorate */])([src["obx"], Object(tslib_es6["d" /* __metadata */])("design:type", Object)], area_Area.prototype, "_visible", void 0);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], area_Area.prototype, "visible", null);
// CONCATENATED MODULE: ../editor-skeleton/src/layouts/top-area.tsx
function top_area_typeof(o) { "@babel/helpers - typeof"; return top_area_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, top_area_typeof(o); }
function top_area_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function top_area_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, top_area_toPropertyKey(o.key), o); } }
function top_area_createClass(e, r, t) { return r && top_area_defineProperties(e.prototype, r), t && top_area_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function top_area_toPropertyKey(t) { var i = top_area_toPrimitive(t, "string"); return "symbol" == top_area_typeof(i) ? i : i + ""; }
function top_area_toPrimitive(t, r) { if ("object" != top_area_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != top_area_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function top_area_callSuper(t, o, e) { return o = top_area_getPrototypeOf(o), top_area_possibleConstructorReturn(t, top_area_isNativeReflectConstruct() ? Reflect.construct(o, e || [], top_area_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function top_area_possibleConstructorReturn(t, e) { if (e && ("object" == top_area_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return top_area_assertThisInitialized(t); }
function top_area_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function top_area_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (top_area_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function top_area_getPrototypeOf(t) { return top_area_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, top_area_getPrototypeOf(t); }
function top_area_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && top_area_setPrototypeOf(t, e); }
function top_area_setPrototypeOf(t, e) { return top_area_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, top_area_setPrototypeOf(t, e); }




var top_area_TopArea = /*#__PURE__*/function (_Component) {
  function TopArea() {
    top_area_classCallCheck(this, TopArea);
    return top_area_callSuper(this, TopArea, arguments);
  }
  top_area_inherits(TopArea, _Component);
  return top_area_createClass(TopArea, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
        area = _this$props.area,
        itemClassName = _this$props.itemClassName,
        className = _this$props.className;
      if (area.isEmpty()) {
        return null;
      }
      return /*#__PURE__*/React.createElement("div", {
        className: classnames_default()(className, 'lc-top-area engine-actionpane', {
          'lc-area-visible': area.visible
        })
      }, /*#__PURE__*/React.createElement(top_area_Contents, {
        area: area,
        itemClassName: itemClassName
      }));
    }
  }]);
}(external_window_React_["Component"]);
top_area_TopArea = Object(tslib_es6["b" /* __decorate */])([src["observer"]], top_area_TopArea);
/* harmony default export */ var top_area = (top_area_TopArea);
var top_area_Contents = /*#__PURE__*/function (_Component2) {
  function Contents() {
    top_area_classCallCheck(this, Contents);
    return top_area_callSuper(this, Contents, arguments);
  }
  top_area_inherits(Contents, _Component2);
  return top_area_createClass(Contents, [{
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
        area = _this$props2.area,
        itemClassName = _this$props2.itemClassName;
      var left = [];
      var center = [];
      var right = [];
      area.container.items.slice().sort(function (a, b) {
        var _a$config, _b$config;
        var index1 = ((_a$config = a.config) === null || _a$config === void 0 ? void 0 : _a$config.index) || 0;
        var index2 = ((_b$config = b.config) === null || _b$config === void 0 ? void 0 : _b$config.index) || 0;
        return index1 === index2 ? 0 : index1 > index2 ? 1 : -1;
      }).forEach(function (item) {
        var content = /*#__PURE__*/React.createElement("div", {
          className: itemClassName || '',
          key: "top-area-".concat(item.name)
        }, item.content);
        if (item.align === 'center') {
          center.push(content);
        } else if (item.align === 'left') {
          left.push(content);
        } else {
          right.push(content);
        }
      });
      return /*#__PURE__*/React.createElement(external_window_React_["Fragment"], null, /*#__PURE__*/React.createElement("div", {
        className: "lc-top-area-left"
      }, left), /*#__PURE__*/React.createElement("div", {
        className: "lc-top-area-center"
      }, center), /*#__PURE__*/React.createElement("div", {
        className: "lc-top-area-right"
      }, right));
    }
  }]);
}(external_window_React_["Component"]);
top_area_Contents = Object(tslib_es6["b" /* __decorate */])([src["observer"]], top_area_Contents);
// CONCATENATED MODULE: ../editor-skeleton/src/layouts/left-area.tsx
function left_area_typeof(o) { "@babel/helpers - typeof"; return left_area_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, left_area_typeof(o); }
function left_area_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function left_area_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, left_area_toPropertyKey(o.key), o); } }
function left_area_createClass(e, r, t) { return r && left_area_defineProperties(e.prototype, r), t && left_area_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function left_area_toPropertyKey(t) { var i = left_area_toPrimitive(t, "string"); return "symbol" == left_area_typeof(i) ? i : i + ""; }
function left_area_toPrimitive(t, r) { if ("object" != left_area_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != left_area_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function left_area_callSuper(t, o, e) { return o = left_area_getPrototypeOf(o), left_area_possibleConstructorReturn(t, left_area_isNativeReflectConstruct() ? Reflect.construct(o, e || [], left_area_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function left_area_possibleConstructorReturn(t, e) { if (e && ("object" == left_area_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return left_area_assertThisInitialized(t); }
function left_area_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function left_area_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (left_area_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function left_area_getPrototypeOf(t) { return left_area_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, left_area_getPrototypeOf(t); }
function left_area_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && left_area_setPrototypeOf(t, e); }
function left_area_setPrototypeOf(t, e) { return left_area_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, left_area_setPrototypeOf(t, e); }




var left_area_LeftArea = /*#__PURE__*/function (_Component) {
  function LeftArea() {
    left_area_classCallCheck(this, LeftArea);
    return left_area_callSuper(this, LeftArea, arguments);
  }
  left_area_inherits(LeftArea, _Component);
  return left_area_createClass(LeftArea, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
        area = _this$props.area,
        _this$props$className = _this$props.className,
        className = _this$props$className === void 0 ? 'lc-left-area' : _this$props$className;
      if (area.isEmpty()) {
        return null;
      }
      return /*#__PURE__*/React.createElement("div", {
        className: classnames_default()(className, {
          'lc-area-visible': area.visible
        })
      }, /*#__PURE__*/React.createElement(left_area_Contents, {
        area: area
      }));
    }
  }]);
}(external_window_React_["Component"]);
left_area_LeftArea = Object(tslib_es6["b" /* __decorate */])([src["observer"]], left_area_LeftArea);
/* harmony default export */ var left_area = (left_area_LeftArea);
var left_area_Contents = /*#__PURE__*/function (_Component2) {
  function Contents() {
    left_area_classCallCheck(this, Contents);
    return left_area_callSuper(this, Contents, arguments);
  }
  left_area_inherits(Contents, _Component2);
  return left_area_createClass(Contents, [{
    key: "render",
    value: function render() {
      var area = this.props.area;
      var top = [];
      var bottom = [];
      area.container.items.slice().sort(function (a, b) {
        var _a$config, _b$config;
        var index1 = ((_a$config = a.config) === null || _a$config === void 0 ? void 0 : _a$config.index) || 0;
        var index2 = ((_b$config = b.config) === null || _b$config === void 0 ? void 0 : _b$config.index) || 0;
        return index1 === index2 ? 0 : index1 > index2 ? 1 : -1;
      }).forEach(function (item) {
        var content = /*#__PURE__*/React.createElement("div", {
          key: "left-area-".concat(item.name)
        }, item.content);
        if (item.align === 'bottom') {
          bottom.push(content);
        } else {
          top.push(content);
        }
      });
      return /*#__PURE__*/React.createElement(external_window_React_["Fragment"], null, /*#__PURE__*/React.createElement("div", {
        className: "lc-left-area-top"
      }, top), /*#__PURE__*/React.createElement("div", {
        className: "lc-left-area-bottom"
      }, bottom));
    }
  }]);
}(external_window_React_["Component"]);
left_area_Contents = Object(tslib_es6["b" /* __decorate */])([src["observer"]], left_area_Contents);
// CONCATENATED MODULE: ../editor-skeleton/src/layouts/left-fixed-pane.tsx
function left_fixed_pane_typeof(o) { "@babel/helpers - typeof"; return left_fixed_pane_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, left_fixed_pane_typeof(o); }
function left_fixed_pane_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function left_fixed_pane_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, left_fixed_pane_toPropertyKey(o.key), o); } }
function left_fixed_pane_createClass(e, r, t) { return r && left_fixed_pane_defineProperties(e.prototype, r), t && left_fixed_pane_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function left_fixed_pane_toPropertyKey(t) { var i = left_fixed_pane_toPrimitive(t, "string"); return "symbol" == left_fixed_pane_typeof(i) ? i : i + ""; }
function left_fixed_pane_toPrimitive(t, r) { if ("object" != left_fixed_pane_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != left_fixed_pane_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function left_fixed_pane_callSuper(t, o, e) { return o = left_fixed_pane_getPrototypeOf(o), left_fixed_pane_possibleConstructorReturn(t, left_fixed_pane_isNativeReflectConstruct() ? Reflect.construct(o, e || [], left_fixed_pane_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function left_fixed_pane_possibleConstructorReturn(t, e) { if (e && ("object" == left_fixed_pane_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return left_fixed_pane_assertThisInitialized(t); }
function left_fixed_pane_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function left_fixed_pane_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (left_fixed_pane_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function left_fixed_pane_getPrototypeOf(t) { return left_fixed_pane_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, left_fixed_pane_getPrototypeOf(t); }
function left_fixed_pane_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && left_fixed_pane_setPrototypeOf(t, e); }
function left_fixed_pane_setPrototypeOf(t, e) { return left_fixed_pane_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, left_fixed_pane_setPrototypeOf(t, e); }




var left_fixed_pane_LeftFixedPane = /*#__PURE__*/function (_Component) {
  function LeftFixedPane() {
    left_fixed_pane_classCallCheck(this, LeftFixedPane);
    return left_fixed_pane_callSuper(this, LeftFixedPane, arguments);
  }
  left_fixed_pane_inherits(LeftFixedPane, _Component);
  return left_fixed_pane_createClass(LeftFixedPane, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      var _this$props$area$skel;
      // FIXME: dirty fix, need deep think
      (_this$props$area$skel = this.props.area.skeleton.editor.get('designer')) === null || _this$props$area$skel === void 0 ? void 0 : _this$props$area$skel.touchOffsetObserver();
    }
  }, {
    key: "render",
    value: function render() {
      var _area$current, _area$current$config$;
      var area = this.props.area;
      var width = (_area$current = area.current) === null || _area$current === void 0 ? void 0 : (_area$current$config$ = _area$current.config.props) === null || _area$current$config$ === void 0 ? void 0 : _area$current$config$.width;
      var style = width ? {
        width: width
      } : undefined;
      return /*#__PURE__*/React.createElement("div", {
        className: classnames_default()('lc-left-fixed-pane', {
          'lc-area-visible': area.visible
        }),
        style: style
      }, /*#__PURE__*/React.createElement(left_fixed_pane_Contents, {
        area: area
      }));
    }
  }]);
}(external_window_React_["Component"]);
left_fixed_pane_LeftFixedPane = Object(tslib_es6["b" /* __decorate */])([src["observer"]], left_fixed_pane_LeftFixedPane);
/* harmony default export */ var left_fixed_pane = (left_fixed_pane_LeftFixedPane);
var left_fixed_pane_Contents = /*#__PURE__*/function (_Component2) {
  function Contents() {
    left_fixed_pane_classCallCheck(this, Contents);
    return left_fixed_pane_callSuper(this, Contents, arguments);
  }
  left_fixed_pane_inherits(Contents, _Component2);
  return left_fixed_pane_createClass(Contents, [{
    key: "render",
    value: function render() {
      var area = this.props.area;
      return /*#__PURE__*/React.createElement(external_window_React_["Fragment"], null, area.container.items.map(function (panel) {
        return panel.content;
      }));
    }
  }]);
}(external_window_React_["Component"]);
left_fixed_pane_Contents = Object(tslib_es6["b" /* __decorate */])([src["observer"]], left_fixed_pane_Contents);
// CONCATENATED MODULE: ../editor-skeleton/src/layouts/left-float-pane.tsx
function left_float_pane_typeof(o) { "@babel/helpers - typeof"; return left_float_pane_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, left_float_pane_typeof(o); }
function left_float_pane_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function left_float_pane_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, left_float_pane_toPropertyKey(o.key), o); } }
function left_float_pane_createClass(e, r, t) { return r && left_float_pane_defineProperties(e.prototype, r), t && left_float_pane_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function left_float_pane_toPropertyKey(t) { var i = left_float_pane_toPrimitive(t, "string"); return "symbol" == left_float_pane_typeof(i) ? i : i + ""; }
function left_float_pane_toPrimitive(t, r) { if ("object" != left_float_pane_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != left_float_pane_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function left_float_pane_callSuper(t, o, e) { return o = left_float_pane_getPrototypeOf(o), left_float_pane_possibleConstructorReturn(t, left_float_pane_isNativeReflectConstruct() ? Reflect.construct(o, e || [], left_float_pane_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function left_float_pane_possibleConstructorReturn(t, e) { if (e && ("object" == left_float_pane_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return left_float_pane_assertThisInitialized(t); }
function left_float_pane_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function left_float_pane_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (left_float_pane_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function left_float_pane_getPrototypeOf(t) { return left_float_pane_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, left_float_pane_getPrototypeOf(t); }
function left_float_pane_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && left_float_pane_setPrototypeOf(t, e); }
function left_float_pane_setPrototypeOf(t, e) { return left_float_pane_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, left_float_pane_setPrototypeOf(t, e); }




var left_float_pane_LeftFloatPane = /*#__PURE__*/function (_Component) {
  function LeftFloatPane() {
    var _this;
    left_float_pane_classCallCheck(this, LeftFloatPane);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = left_float_pane_callSuper(this, LeftFloatPane, [].concat(args));
    _this.dispose = void 0;
    _this.focusing = void 0;
    _this.shell = null;
    return _this;
  }
  left_float_pane_inherits(LeftFloatPane, _Component);
  return left_float_pane_createClass(LeftFloatPane, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;
      var area = this.props.area;
      var triggerClose = function triggerClose(e) {
        var _e$originalEvent, _e$originalEvent$targ, _e$originalEvent2;
        if (!area.visible) return;
        // 当 MouseEvent 的 target 为「插入占位符」时，不关闭当前 panel
        if ((_e$originalEvent = e.originalEvent) !== null && _e$originalEvent !== void 0 && (_e$originalEvent$targ = _e$originalEvent.target) !== null && _e$originalEvent$targ !== void 0 && _e$originalEvent$targ.classList.contains('insertion')) return;
        // 假如当前操作 target 祖先节点中有属性 data-keep-visible-while-dragging="true" 代表该 target 所属 panel
        // 不希望 target 在 panel 范围内拖拽时关闭 panel
        var panelElem = (_e$originalEvent2 = e.originalEvent) === null || _e$originalEvent2 === void 0 ? void 0 : _e$originalEvent2.target.closest('div[data-keep-visible-while-dragging="true"]');
        if (panelElem) return;
        area.setVisible(false);
      };
      area.skeleton.editor.eventBus.on('designer.drag', triggerClose);
      this.dispose = function () {
        area.skeleton.editor.removeListener('designer.drag', triggerClose);
      };
      var project = area.skeleton.editor.get('project');
      this.focusing = area.skeleton.focusTracker.create({
        range: function range(e) {
          var _this2$shell, _document$querySelect, _document$querySelect2, _project$simulatorHos, _project$simulatorHos2, _document$querySelect3, _document$querySelect4, _document$querySelect5, _area$current;
          var target = e.target;
          if (!target) {
            return false;
          }
          if ((_this2$shell = _this2.shell) !== null && _this2$shell !== void 0 && _this2$shell.contains(target)) {
            return true;
          }
          // 点击了 iframe 内容，算失焦
          if ((_document$querySelect = document.querySelector('.lc-simulator-content-frame')) !== null && _document$querySelect !== void 0 && (_document$querySelect2 = _document$querySelect.contentWindow) !== null && _document$querySelect2 !== void 0 && _document$querySelect2.document.documentElement.contains(target)) {
            return false;
          }
          if (project !== null && project !== void 0 && (_project$simulatorHos = project.simulatorHost) !== null && _project$simulatorHos !== void 0 && (_project$simulatorHos2 = _project$simulatorHos.contentWindow) !== null && _project$simulatorHos2 !== void 0 && _project$simulatorHos2.document.documentElement.contains(target)) {
            return false;
          }
          // 点击设置区
          if ((_document$querySelect3 = document.querySelector('.lc-right-area')) !== null && _document$querySelect3 !== void 0 && _document$querySelect3.contains(target)) {
            return false;
          }
          // 点击非编辑区域的popup/dialog,插件栏左侧等不触发失焦
          if (!((_document$querySelect4 = document.querySelector('.lc-workbench')) !== null && _document$querySelect4 !== void 0 && _document$querySelect4.contains(target))) {
            return true;
          }
          // 排除设置区，iframe 之后，都不算失焦
          if ((_document$querySelect5 = document.querySelector('.lc-workbench-body')) !== null && _document$querySelect5 !== void 0 && _document$querySelect5.contains(target)) {
            return true;
          }
          var docks = (_area$current = area.current) === null || _area$current === void 0 ? void 0 : _area$current.getAssocDocks();
          if (docks && docks !== null && docks !== void 0 && docks.length) {
            return docks.some(function (dock) {
              var _dock$getDOMNode;
              return (_dock$getDOMNode = dock.getDOMNode()) === null || _dock$getDOMNode === void 0 ? void 0 : _dock$getDOMNode.contains(target);
            });
          }
          return false;
        },
        onEsc: function onEsc() {
          _this2.props.area.setVisible(false);
        },
        onBlur: function onBlur() {
          _this2.props.area.setVisible(false);
        }
      });
      this.onEffect();
    }
  }, {
    key: "onEffect",
    value: function onEffect() {
      var area = this.props.area;
      if (area.visible) {
        var _this$focusing, _area$skeleton, _area$skeleton$leftFi;
        (_this$focusing = this.focusing) === null || _this$focusing === void 0 ? void 0 : _this$focusing.active();
        // 关闭当前fixed区域的面板
        // TODO: 看看有没有更合适的地方
        var fixedContainer = area === null || area === void 0 ? void 0 : (_area$skeleton = area.skeleton) === null || _area$skeleton === void 0 ? void 0 : (_area$skeleton$leftFi = _area$skeleton.leftFixedArea) === null || _area$skeleton$leftFi === void 0 ? void 0 : _area$skeleton$leftFi.container;
        var currentFixed = fixedContainer === null || fixedContainer === void 0 ? void 0 : fixedContainer.current;
        if (currentFixed) {
          fixedContainer.unactive(currentFixed);
        }
      } else {
        var _this$focusing2;
        (_this$focusing2 = this.focusing) === null || _this$focusing2 === void 0 ? void 0 : _this$focusing2.suspense();
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this.onEffect();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var _this$focusing3, _this$dispose;
      (_this$focusing3 = this.focusing) === null || _this$focusing3 === void 0 ? void 0 : _this$focusing3.purge();
      (_this$dispose = this.dispose) === null || _this$dispose === void 0 ? void 0 : _this$dispose.call(this);
    }
  }, {
    key: "render",
    value: function render() {
      var _area$current2,
        _area$current2$config,
        _this3 = this;
      var area = this.props.area;
      var width = (_area$current2 = area.current) === null || _area$current2 === void 0 ? void 0 : (_area$current2$config = _area$current2.config.props) === null || _area$current2$config === void 0 ? void 0 : _area$current2$config.width;
      var style = width ? {
        width: width
      } : undefined;
      return /*#__PURE__*/React.createElement("div", {
        ref: function ref(_ref) {
          _this3.shell = _ref;
        },
        className: classnames_default()('lc-left-float-pane', {
          'lc-area-visible': area.visible
        }),
        style: style
      }, /*#__PURE__*/React.createElement(left_float_pane_Contents, {
        area: area
      }));
    }
  }]);
}(external_window_React_["Component"]);
left_float_pane_LeftFloatPane = Object(tslib_es6["b" /* __decorate */])([src["observer"]], left_float_pane_LeftFloatPane);
/* harmony default export */ var left_float_pane = (left_float_pane_LeftFloatPane);
var left_float_pane_Contents = /*#__PURE__*/function (_Component2) {
  function Contents() {
    left_float_pane_classCallCheck(this, Contents);
    return left_float_pane_callSuper(this, Contents, arguments);
  }
  left_float_pane_inherits(Contents, _Component2);
  return left_float_pane_createClass(Contents, [{
    key: "render",
    value: function render() {
      var area = this.props.area;
      return /*#__PURE__*/React.createElement(external_window_React_["Fragment"], null, area.container.items.map(function (panel) {
        return panel.content;
      }));
    }
  }]);
}(external_window_React_["Component"]);
left_float_pane_Contents = Object(tslib_es6["b" /* __decorate */])([src["observer"]], left_float_pane_Contents);
// CONCATENATED MODULE: ../editor-skeleton/src/layouts/toolbar.tsx
function toolbar_typeof(o) { "@babel/helpers - typeof"; return toolbar_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, toolbar_typeof(o); }
function toolbar_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function toolbar_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, toolbar_toPropertyKey(o.key), o); } }
function toolbar_createClass(e, r, t) { return r && toolbar_defineProperties(e.prototype, r), t && toolbar_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function toolbar_toPropertyKey(t) { var i = toolbar_toPrimitive(t, "string"); return "symbol" == toolbar_typeof(i) ? i : i + ""; }
function toolbar_toPrimitive(t, r) { if ("object" != toolbar_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != toolbar_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function toolbar_callSuper(t, o, e) { return o = toolbar_getPrototypeOf(o), toolbar_possibleConstructorReturn(t, toolbar_isNativeReflectConstruct() ? Reflect.construct(o, e || [], toolbar_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function toolbar_possibleConstructorReturn(t, e) { if (e && ("object" == toolbar_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return toolbar_assertThisInitialized(t); }
function toolbar_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function toolbar_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (toolbar_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function toolbar_getPrototypeOf(t) { return toolbar_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, toolbar_getPrototypeOf(t); }
function toolbar_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && toolbar_setPrototypeOf(t, e); }
function toolbar_setPrototypeOf(t, e) { return toolbar_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, toolbar_setPrototypeOf(t, e); }




var toolbar_Toolbar = /*#__PURE__*/function (_Component) {
  function Toolbar() {
    toolbar_classCallCheck(this, Toolbar);
    return toolbar_callSuper(this, Toolbar, arguments);
  }
  toolbar_inherits(Toolbar, _Component);
  return toolbar_createClass(Toolbar, [{
    key: "render",
    value: function render() {
      var area = this.props.area;
      if (area.isEmpty()) {
        return null;
      }
      return /*#__PURE__*/React.createElement("div", {
        className: classnames_default()('lc-toolbar', {
          'lc-area-visible': area.visible
        })
      }, /*#__PURE__*/React.createElement(toolbar_Contents, {
        area: area
      }));
    }
  }]);
}(external_window_React_["Component"]);
toolbar_Toolbar = Object(tslib_es6["b" /* __decorate */])([src["observer"]], toolbar_Toolbar);
/* harmony default export */ var toolbar = (toolbar_Toolbar);
var toolbar_Contents = /*#__PURE__*/function (_Component2) {
  function Contents() {
    toolbar_classCallCheck(this, Contents);
    return toolbar_callSuper(this, Contents, arguments);
  }
  toolbar_inherits(Contents, _Component2);
  return toolbar_createClass(Contents, [{
    key: "render",
    value: function render() {
      var area = this.props.area;
      var left = [];
      var center = [];
      var right = [];
      area.container.items.forEach(function (item) {
        if (item.align === 'center') {
          center.push(item.content);
        } else if (item.align === 'right') {
          right.push(item.content);
        } else {
          left.push(item.content);
        }
      });
      return /*#__PURE__*/React.createElement(external_window_React_["Fragment"], null, /*#__PURE__*/React.createElement("div", {
        className: "lc-toolbar-left"
      }, left), /*#__PURE__*/React.createElement("div", {
        className: "lc-toolbar-center"
      }, center), /*#__PURE__*/React.createElement("div", {
        className: "lc-toolbar-right"
      }, right));
    }
  }]);
}(external_window_React_["Component"]);
toolbar_Contents = Object(tslib_es6["b" /* __decorate */])([src["observer"]], toolbar_Contents);
// CONCATENATED MODULE: ../editor-skeleton/src/layouts/main-area.tsx
function main_area_typeof(o) { "@babel/helpers - typeof"; return main_area_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, main_area_typeof(o); }
function main_area_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function main_area_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, main_area_toPropertyKey(o.key), o); } }
function main_area_createClass(e, r, t) { return r && main_area_defineProperties(e.prototype, r), t && main_area_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function main_area_toPropertyKey(t) { var i = main_area_toPrimitive(t, "string"); return "symbol" == main_area_typeof(i) ? i : i + ""; }
function main_area_toPrimitive(t, r) { if ("object" != main_area_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != main_area_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function main_area_callSuper(t, o, e) { return o = main_area_getPrototypeOf(o), main_area_possibleConstructorReturn(t, main_area_isNativeReflectConstruct() ? Reflect.construct(o, e || [], main_area_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function main_area_possibleConstructorReturn(t, e) { if (e && ("object" == main_area_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return main_area_assertThisInitialized(t); }
function main_area_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function main_area_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (main_area_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function main_area_getPrototypeOf(t) { return main_area_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, main_area_getPrototypeOf(t); }
function main_area_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && main_area_setPrototypeOf(t, e); }
function main_area_setPrototypeOf(t, e) { return main_area_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, main_area_setPrototypeOf(t, e); }




var main_area_MainArea = /*#__PURE__*/function (_Component) {
  function MainArea() {
    main_area_classCallCheck(this, MainArea);
    return main_area_callSuper(this, MainArea, arguments);
  }
  main_area_inherits(MainArea, _Component);
  return main_area_createClass(MainArea, [{
    key: "render",
    value: function render() {
      var area = this.props.area;
      return /*#__PURE__*/React.createElement("div", {
        className: classnames_default()('lc-main-area engine-workspacepane')
      }, area.container.items.map(function (item) {
        return item.content;
      }));
    }
  }]);
}(external_window_React_["Component"]);
main_area_MainArea = Object(tslib_es6["b" /* __decorate */])([src["observer"]], main_area_MainArea);
/* harmony default export */ var main_area = (main_area_MainArea);
// CONCATENATED MODULE: ../editor-skeleton/src/layouts/bottom-area.tsx
function bottom_area_typeof(o) { "@babel/helpers - typeof"; return bottom_area_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, bottom_area_typeof(o); }
function bottom_area_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function bottom_area_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, bottom_area_toPropertyKey(o.key), o); } }
function bottom_area_createClass(e, r, t) { return r && bottom_area_defineProperties(e.prototype, r), t && bottom_area_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function bottom_area_toPropertyKey(t) { var i = bottom_area_toPrimitive(t, "string"); return "symbol" == bottom_area_typeof(i) ? i : i + ""; }
function bottom_area_toPrimitive(t, r) { if ("object" != bottom_area_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != bottom_area_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function bottom_area_callSuper(t, o, e) { return o = bottom_area_getPrototypeOf(o), bottom_area_possibleConstructorReturn(t, bottom_area_isNativeReflectConstruct() ? Reflect.construct(o, e || [], bottom_area_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function bottom_area_possibleConstructorReturn(t, e) { if (e && ("object" == bottom_area_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return bottom_area_assertThisInitialized(t); }
function bottom_area_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function bottom_area_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (bottom_area_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function bottom_area_getPrototypeOf(t) { return bottom_area_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, bottom_area_getPrototypeOf(t); }
function bottom_area_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && bottom_area_setPrototypeOf(t, e); }
function bottom_area_setPrototypeOf(t, e) { return bottom_area_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, bottom_area_setPrototypeOf(t, e); }




var bottom_area_BottomArea = /*#__PURE__*/function (_Component) {
  function BottomArea() {
    bottom_area_classCallCheck(this, BottomArea);
    return bottom_area_callSuper(this, BottomArea, arguments);
  }
  bottom_area_inherits(BottomArea, _Component);
  return bottom_area_createClass(BottomArea, [{
    key: "render",
    value: function render() {
      var area = this.props.area;
      if (area.isEmpty()) {
        return null;
      }
      return /*#__PURE__*/React.createElement("div", {
        className: classnames_default()('lc-bottom-area', {
          'lc-area-visible': area.visible
        })
      }, /*#__PURE__*/React.createElement(bottom_area_Contents, {
        area: area
      }));
    }
  }]);
}(external_window_React_["Component"]);
bottom_area_BottomArea = Object(tslib_es6["b" /* __decorate */])([src["observer"]], bottom_area_BottomArea);
/* harmony default export */ var bottom_area = (bottom_area_BottomArea);
var bottom_area_Contents = /*#__PURE__*/function (_Component2) {
  function Contents() {
    bottom_area_classCallCheck(this, Contents);
    return bottom_area_callSuper(this, Contents, arguments);
  }
  bottom_area_inherits(Contents, _Component2);
  return bottom_area_createClass(Contents, [{
    key: "render",
    value: function render() {
      var area = this.props.area;
      return /*#__PURE__*/React.createElement(external_window_React_["Fragment"], null, area.container.items.map(function (item) {
        return item.content;
      }));
    }
  }]);
}(external_window_React_["Component"]);
bottom_area_Contents = Object(tslib_es6["b" /* __decorate */])([src["observer"]], bottom_area_Contents);
// CONCATENATED MODULE: ../editor-skeleton/src/layouts/right-area.tsx
function right_area_typeof(o) { "@babel/helpers - typeof"; return right_area_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, right_area_typeof(o); }
function right_area_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function right_area_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, right_area_toPropertyKey(o.key), o); } }
function right_area_createClass(e, r, t) { return r && right_area_defineProperties(e.prototype, r), t && right_area_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function right_area_toPropertyKey(t) { var i = right_area_toPrimitive(t, "string"); return "symbol" == right_area_typeof(i) ? i : i + ""; }
function right_area_toPrimitive(t, r) { if ("object" != right_area_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != right_area_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function right_area_callSuper(t, o, e) { return o = right_area_getPrototypeOf(o), right_area_possibleConstructorReturn(t, right_area_isNativeReflectConstruct() ? Reflect.construct(o, e || [], right_area_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function right_area_possibleConstructorReturn(t, e) { if (e && ("object" == right_area_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return right_area_assertThisInitialized(t); }
function right_area_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function right_area_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (right_area_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function right_area_getPrototypeOf(t) { return right_area_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, right_area_getPrototypeOf(t); }
function right_area_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && right_area_setPrototypeOf(t, e); }
function right_area_setPrototypeOf(t, e) { return right_area_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, right_area_setPrototypeOf(t, e); }




var right_area_RightArea = /*#__PURE__*/function (_Component) {
  function RightArea() {
    right_area_classCallCheck(this, RightArea);
    return right_area_callSuper(this, RightArea, arguments);
  }
  right_area_inherits(RightArea, _Component);
  return right_area_createClass(RightArea, [{
    key: "render",
    value: function render() {
      var area = this.props.area;
      if (area.isEmpty()) {
        return null;
      }
      return /*#__PURE__*/React.createElement("div", {
        className: classnames_default()('lc-right-area engine-tabpane', {
          'lc-area-visible': area.visible
        })
      }, /*#__PURE__*/React.createElement(right_area_Contents, {
        area: area
      }));
    }
  }]);
}(external_window_React_["Component"]);
right_area_RightArea = Object(tslib_es6["b" /* __decorate */])([src["observer"]], right_area_RightArea);
/* harmony default export */ var right_area = (right_area_RightArea);
var right_area_Contents = /*#__PURE__*/function (_Component2) {
  function Contents() {
    right_area_classCallCheck(this, Contents);
    return right_area_callSuper(this, Contents, arguments);
  }
  right_area_inherits(Contents, _Component2);
  return right_area_createClass(Contents, [{
    key: "render",
    value: function render() {
      var area = this.props.area;
      return /*#__PURE__*/React.createElement(external_window_React_["Fragment"], null, area.container.items.slice().sort(function (a, b) {
        var _a$config, _b$config;
        var index1 = ((_a$config = a.config) === null || _a$config === void 0 ? void 0 : _a$config.index) || 0;
        var index2 = ((_b$config = b.config) === null || _b$config === void 0 ? void 0 : _b$config.index) || 0;
        return index1 === index2 ? 0 : index1 > index2 ? 1 : -1;
      }).map(function (item) {
        return item.content;
      }));
    }
  }]);
}(external_window_React_["Component"]);
right_area_Contents = Object(tslib_es6["b" /* __decorate */])([src["observer"]], right_area_Contents);
// EXTERNAL MODULE: ../editor-skeleton/src/layouts/workbench.less
var workbench = __webpack_require__(118);

// CONCATENATED MODULE: ../editor-skeleton/src/context.ts

var SkeletonContext = /*#__PURE__*/Object(external_window_React_["createContext"])({});
// CONCATENATED MODULE: ../editor-skeleton/src/layouts/workbench.tsx
function workbench_typeof(o) { "@babel/helpers - typeof"; return workbench_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, workbench_typeof(o); }
function workbench_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function workbench_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, workbench_toPropertyKey(o.key), o); } }
function workbench_createClass(e, r, t) { return r && workbench_defineProperties(e.prototype, r), t && workbench_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function workbench_toPropertyKey(t) { var i = workbench_toPrimitive(t, "string"); return "symbol" == workbench_typeof(i) ? i : i + ""; }
function workbench_toPrimitive(t, r) { if ("object" != workbench_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != workbench_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function workbench_callSuper(t, o, e) { return o = workbench_getPrototypeOf(o), workbench_possibleConstructorReturn(t, workbench_isNativeReflectConstruct() ? Reflect.construct(o, e || [], workbench_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function workbench_possibleConstructorReturn(t, e) { if (e && ("object" == workbench_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return workbench_assertThisInitialized(t); }
function workbench_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function workbench_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (workbench_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function workbench_getPrototypeOf(t) { return workbench_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, workbench_getPrototypeOf(t); }
function workbench_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && workbench_setPrototypeOf(t, e); }
function workbench_setPrototypeOf(t, e) { return workbench_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, workbench_setPrototypeOf(t, e); }














var workbench_Workbench = /*#__PURE__*/function (_Component) {
  function Workbench(props) {
    var _this;
    workbench_classCallCheck(this, Workbench);
    _this = workbench_callSuper(this, Workbench, [props]);
    var _this$props = _this.props,
      config = _this$props.config,
      components = _this$props.components,
      skeleton = _this$props.skeleton;
    skeleton.buildFromConfig(config, components);
    return _this;
  }
  workbench_inherits(Workbench, _Component);
  return workbench_createClass(Workbench, [{
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
        skeleton = _this$props2.skeleton,
        className = _this$props2.className,
        topAreaItemClassName = _this$props2.topAreaItemClassName;
      return /*#__PURE__*/React.createElement("div", {
        className: classnames_default()('lc-workbench', className)
      }, /*#__PURE__*/React.createElement(SkeletonContext.Provider, {
        value: this.props.skeleton
      }, /*#__PURE__*/React.createElement(top_area, {
        area: skeleton.topArea,
        itemClassName: topAreaItemClassName
      }), /*#__PURE__*/React.createElement("div", {
        className: "lc-workbench-body"
      }, /*#__PURE__*/React.createElement(left_area, {
        area: skeleton.leftArea
      }), /*#__PURE__*/React.createElement(left_float_pane, {
        area: skeleton.leftFloatArea
      }), /*#__PURE__*/React.createElement(left_fixed_pane, {
        area: skeleton.leftFixedArea
      }), /*#__PURE__*/React.createElement("div", {
        className: "lc-workbench-center"
      }, /*#__PURE__*/React.createElement(toolbar, {
        area: skeleton.toolbar
      }), /*#__PURE__*/React.createElement(main_area, {
        area: skeleton.mainArea
      }), /*#__PURE__*/React.createElement(bottom_area, {
        area: skeleton.bottomArea
      })), /*#__PURE__*/React.createElement(right_area, {
        area: skeleton.rightArea
      })), /*#__PURE__*/React.createElement(src["TipContainer"], null)));
    }
  }]);
}(external_window_React_["Component"]);
workbench_Workbench = Object(tslib_es6["b" /* __decorate */])([src["observer"], Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Object])], workbench_Workbench);

// CONCATENATED MODULE: ../editor-skeleton/src/types.ts
function isWidgetConfig(obj) {
  return obj && obj.type === 'Widget';
}
function isDividerConfig(obj) {
  return obj && obj.type === 'Divider';
}
function isDockConfig(obj) {
  return obj && /Dock$/.test(obj.type);
}
function isDialogDockConfig(obj) {
  return obj && obj.type === 'DialogDock';
}
function isPanelConfig(obj) {
  return obj && obj.type === 'Panel';
}
function isPanelDockConfig(obj) {
  return obj && obj.type === 'PanelDock';
}
// CONCATENATED MODULE: ../editor-skeleton/src/widget/widget-container.ts
function widget_container_typeof(o) { "@babel/helpers - typeof"; return widget_container_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, widget_container_typeof(o); }
function widget_container_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function widget_container_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, widget_container_toPropertyKey(o.key), o); } }
function widget_container_createClass(e, r, t) { return r && widget_container_defineProperties(e.prototype, r), t && widget_container_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function widget_container_toPropertyKey(t) { var i = widget_container_toPrimitive(t, "string"); return "symbol" == widget_container_typeof(i) ? i : i + ""; }
function widget_container_toPrimitive(t, r) { if ("object" != widget_container_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != widget_container_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }




function isActiveable(obj) {
  return obj && obj.setActive;
}
var widget_container_WidgetContainer = /*#__PURE__*/function () {
  // eslint-disable-next-line no-useless-constructor
  function WidgetContainer(name, handle) {
    var exclusive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    var checkVisible = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function () {
      return true;
    };
    var defaultSetCurrent = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
    widget_container_classCallCheck(this, WidgetContainer);
    this.name = void 0;
    this.handle = void 0;
    this.exclusive = void 0;
    this.checkVisible = void 0;
    this.defaultSetCurrent = void 0;
    this.items = [];
    this.maps = {};
    this._current = null;
    this.name = name;
    this.handle = handle;
    this.exclusive = exclusive;
    this.checkVisible = checkVisible;
    this.defaultSetCurrent = defaultSetCurrent;
    Object(src["makeObservable"])(this);
  }
  return widget_container_createClass(WidgetContainer, [{
    key: "current",
    get: function get() {
      return this._current;
    }
  }, {
    key: "visible",
    get: function get() {
      return this.checkVisible();
    }
  }, {
    key: "active",
    value: function active(nameOrItem) {
      var item = nameOrItem;
      if (nameOrItem && typeof nameOrItem === 'string') {
        item = this.get(nameOrItem);
      }
      if (!isActiveable(item)) {
        item = null;
      }
      if (this.exclusive) {
        if (this._current === item) {
          return;
        }
        if (this._current) {
          this._current.setActive(false);
        }
        this._current = item;
      }
      if (item) {
        item.setActive(true);
      }
    }
  }, {
    key: "unactive",
    value: function unactive(nameOrItem) {
      var item = nameOrItem;
      if (nameOrItem && typeof nameOrItem === 'string') {
        item = this.get(nameOrItem);
      }
      if (!isActiveable(item)) {
        item = null;
      }
      if (this._current === item) {
        this._current = null;
      }
      if (item) {
        item.setActive(false);
      }
    }
  }, {
    key: "unactiveAll",
    value: function unactiveAll() {
      var _this = this;
      Object.keys(this.maps).forEach(function (name) {
        return _this.unactive(name);
      });
    }
  }, {
    key: "add",
    value: function add(item) {
      item = this.handle(item);
      var origin = this.get(item.name);
      if (origin === item) {
        return origin;
      }
      var i = origin ? this.items.indexOf(origin) : -1;
      if (i > -1) {
        this.items[i] = item;
      } else {
        this.items.push(item);
      }
      this.maps[item.name] = item;
      if (isPanel(item)) {
        item.setParent(this);
      }
      if (this.defaultSetCurrent) {
        var _item$config, _item$config$props;
        var shouldHiddenWhenInit = (_item$config = item.config) === null || _item$config === void 0 ? void 0 : (_item$config$props = _item$config.props) === null || _item$config$props === void 0 ? void 0 : _item$config$props.hiddenWhenInit;
        if (!this._current && !shouldHiddenWhenInit) {
          this.active(item);
        }
      }
      return item;
    }
  }, {
    key: "get",
    value: function get(name) {
      return this.maps[name] || null;
    }
  }, {
    key: "getAt",
    value: function getAt(index) {
      return this.items[index] || null;
    }
  }, {
    key: "has",
    value: function has(name) {
      return Object(utils_src["v" /* hasOwnProperty */])(this.maps, name);
    }
  }, {
    key: "indexOf",
    value: function indexOf(item) {
      return this.items.indexOf(item);
    }
    /**
     * return indexOf the deletion
     */
  }, {
    key: "remove",
    value: function remove(item) {
      var thing = typeof item === 'string' ? this.get(item) : item;
      if (!thing) {
        return -1;
      }
      var i = this.items.indexOf(thing);
      if (i > -1) {
        this.items.splice(i, 1);
      }
      delete this.maps[thing.name];
      if (thing === this.current) {
        this._current = null;
      }
      return i;
    }
  }]);
}();
Object(tslib_es6["b" /* __decorate */])([src["obx"].shallow, Object(tslib_es6["d" /* __metadata */])("design:type", Array)], widget_container_WidgetContainer.prototype, "items", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], widget_container_WidgetContainer.prototype, "_current", void 0);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], widget_container_WidgetContainer.prototype, "visible", null);
// CONCATENATED MODULE: ../shell/src/symbols.ts
/**
 * 以下 symbol 均用于在 shell 层对外暴露的模型中存储相应内部模型的 key
 */
var projectSymbol = Symbol('project');
var designerSymbol = Symbol('designer');
var skeletonSymbol = Symbol('skeleton');
var documentSymbol = Symbol('document');
var editorSymbol = Symbol('editor');
var nodeSymbol = Symbol('node');
var modalNodesManagerSymbol = Symbol('modalNodesManager');
var nodeChildrenSymbol = Symbol('nodeChildren');
var propSymbol = Symbol('prop');
var settingFieldSymbol = Symbol('settingField');
var settingTopEntrySymbol = Symbol('settingTopEntry');
var propsSymbol = Symbol('props');
var detectingSymbol = Symbol('detecting');
var selectionSymbol = Symbol('selection');
var historySymbol = Symbol('history');
var canvasSymbol = Symbol('canvas');
var dragonSymbol = Symbol('dragon');
var componentMetaSymbol = Symbol('componentMeta');
var dropLocationSymbol = Symbol('dropLocation');
var simulatorHostSymbol = Symbol('simulatorHost');
var simulatorRenderSymbol = Symbol('simulatorRender');
var dragObjectSymbol = Symbol('dragObject');
var locateEventSymbol = Symbol('locateEvent');
var designerCabinSymbol = Symbol('designerCabin');
var editorCabinSymbol = Symbol('editorCabin');
var skeletonCabinSymbol = Symbol('skeletonCabin');
var hotkeySymbol = Symbol('hotkey');
var pluginsSymbol = Symbol('plugins');
var workspaceSymbol = Symbol('workspace');
var windowSymbol = Symbol('window');
var pluginInstanceSymbol = Symbol('plugin-instance');
var resourceTypeSymbol = Symbol('resourceType');
var resourceSymbol = Symbol('resource');
var clipboardSymbol = Symbol('clipboard');
var configSymbol = Symbol('configSymbol');
var conditionGroupSymbol = Symbol('conditionGroup');
var editorViewSymbol = Symbol('editorView');
var pluginContextSymbol = Symbol('pluginContext');
var skeletonItemSymbol = Symbol('skeletonItem');
var commandSymbol = Symbol('command');
// CONCATENATED MODULE: ../shell/src/model/component-meta.ts
function model_component_meta_typeof(o) { "@babel/helpers - typeof"; return model_component_meta_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, model_component_meta_typeof(o); }
function model_component_meta_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function model_component_meta_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, model_component_meta_toPropertyKey(o.key), o); } }
function model_component_meta_createClass(e, r, t) { return r && model_component_meta_defineProperties(e.prototype, r), t && model_component_meta_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function model_component_meta_toPropertyKey(t) { var i = model_component_meta_toPrimitive(t, "string"); return "symbol" == model_component_meta_typeof(i) ? i : i + ""; }
function model_component_meta_toPrimitive(t, r) { if ("object" != model_component_meta_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != model_component_meta_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

var model_component_meta_ComponentMeta = /*#__PURE__*/function () {
  function ComponentMeta(componentMeta) {
    model_component_meta_classCallCheck(this, ComponentMeta);
    this[componentMetaSymbol] = void 0;
    this.isComponentMeta = true;
    this[componentMetaSymbol] = componentMeta;
  }
  return model_component_meta_createClass(ComponentMeta, [{
    key: "componentName",
    get:
    /**
     * 组件名
     */
    function get() {
      return this[componentMetaSymbol].componentName;
    }
    /**
     * 是否是「容器型」组件
     */
  }, {
    key: "isContainer",
    get: function get() {
      return this[componentMetaSymbol].isContainer;
    }
    /**
     * 是否是最小渲染单元。
     * 当组件需要重新渲染时：
     *  若为最小渲染单元，则只渲染当前组件，
     *  若不为最小渲染单元，则寻找到上层最近的最小渲染单元进行重新渲染，直至根节点。
     */
  }, {
    key: "isMinimalRenderUnit",
    get: function get() {
      return this[componentMetaSymbol].isMinimalRenderUnit;
    }
    /**
     * 是否为「模态框」组件
     */
  }, {
    key: "isModal",
    get: function get() {
      return this[componentMetaSymbol].isModal;
    }
    /**
     * 元数据配置
     */
  }, {
    key: "configure",
    get: function get() {
      return this[componentMetaSymbol].configure;
    }
    /**
     * 标题
     */
  }, {
    key: "title",
    get: function get() {
      return this[componentMetaSymbol].title;
    }
    /**
     * 图标
     */
  }, {
    key: "icon",
    get: function get() {
      return this[componentMetaSymbol].icon;
    }
    /**
     * 组件 npm 信息
     */
  }, {
    key: "npm",
    get: function get() {
      return this[componentMetaSymbol].npm;
    }
    /**
     * @deprecated
     */
  }, {
    key: "prototype",
    get: function get() {
      return this[componentMetaSymbol].prototype;
    }
  }, {
    key: "availableActions",
    get: function get() {
      return this[componentMetaSymbol].availableActions;
    }
  }, {
    key: "advanced",
    get: function get() {
      return this[componentMetaSymbol].advanced;
    }
    /**
     * 设置 npm 信息
     * @param npm
     */
  }, {
    key: "setNpm",
    value: function setNpm(npm) {
      this[componentMetaSymbol].setNpm(npm);
    }
    /**
     * 获取元数据
     * @returns
     */
  }, {
    key: "getMetadata",
    value: function getMetadata() {
      return this[componentMetaSymbol].getMetadata();
    }
    /**
     * check if the current node could be placed in parent node
     * @param my
     * @param parent
     * @returns
     */
  }, {
    key: "checkNestingUp",
    value: function checkNestingUp(my, parent) {
      var curNode = my.isNode ? my[nodeSymbol] : my;
      return this[componentMetaSymbol].checkNestingUp(curNode, parent);
    }
    /**
     * check if the target node(s) could be placed in current node
     * @param my
     * @param parent
     * @returns
     */
  }, {
    key: "checkNestingDown",
    value: function checkNestingDown(my, target) {
      var curNode = my !== null && my !== void 0 && my.isNode ? my[nodeSymbol] : my;
      return this[componentMetaSymbol].checkNestingDown(curNode, target[nodeSymbol] || target);
    }
  }, {
    key: "refreshMetadata",
    value: function refreshMetadata() {
      this[componentMetaSymbol].refreshMetadata();
    }
  }], [{
    key: "create",
    value: function create(componentMeta) {
      if (!componentMeta) {
        return null;
      }
      return new ComponentMeta(componentMeta);
    }
  }]);
}();
// CONCATENATED MODULE: ../shell/src/model/prop.ts
function model_prop_typeof(o) { "@babel/helpers - typeof"; return model_prop_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, model_prop_typeof(o); }
function prop_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function prop_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, prop_toPropertyKey(o.key), o); } }
function prop_createClass(e, r, t) { return r && prop_defineProperties(e.prototype, r), t && prop_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function prop_toPropertyKey(t) { var i = prop_toPrimitive(t, "string"); return "symbol" == model_prop_typeof(i) ? i : i + ""; }
function prop_toPrimitive(t, r) { if ("object" != model_prop_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != model_prop_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }



var model_prop_Prop = /*#__PURE__*/function () {
  function Prop(prop) {
    prop_classCallCheck(this, Prop);
    this[propSymbol] = void 0;
    this[propSymbol] = prop;
  }
  return prop_createClass(Prop, [{
    key: "id",
    get:
    /**
     * id
     */
    function get() {
      return this[propSymbol].id;
    }
    /**
     * key 值
     * get key of prop
     */
  }, {
    key: "key",
    get: function get() {
      return this[propSymbol].key;
    }
    /**
     * 返回当前 prop 的路径
     */
  }, {
    key: "path",
    get: function get() {
      return this[propSymbol].path;
    }
    /**
     * 返回所属的节点实例
     */
  }, {
    key: "node",
    get: function get() {
      return model_node_Node.create(this[propSymbol].getNode());
    }
    /**
     * return the slot node (only if the current prop represents a slot)
     */
  }, {
    key: "slotNode",
    get: function get() {
      return model_node_Node.create(this[propSymbol].slotNode);
    }
    /**
     * judge if it is a prop or not
     */
  }, {
    key: "isProp",
    get: function get() {
      return true;
    }
    /**
     * 设置值
     * @param val
     */
  }, {
    key: "setValue",
    value: function setValue(val) {
      this[propSymbol].setValue(val);
    }
    /**
     * 获取值
     * @returns
     */
  }, {
    key: "getValue",
    value: function getValue() {
      return this[propSymbol].getValue();
    }
    /**
     * 移除值
     */
  }, {
    key: "remove",
    value: function remove() {
      this[propSymbol].remove();
    }
    /**
     * 导出值
     * @param stage
     * @returns
     */
  }, {
    key: "exportSchema",
    value: function exportSchema() {
      var stage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : types_src["i" /* IPublicEnumTransformStage */].Render;
      return this[propSymbol].export(stage);
    }
  }], [{
    key: "create",
    value: function create(prop) {
      if (!prop) {
        return null;
      }
      return new Prop(prop);
    }
  }]);
}();
// CONCATENATED MODULE: ../shell/src/model/props.ts
function model_props_typeof(o) { "@babel/helpers - typeof"; return model_props_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, model_props_typeof(o); }
function model_props_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function model_props_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, model_props_toPropertyKey(o.key), o); } }
function model_props_createClass(e, r, t) { return r && model_props_defineProperties(e.prototype, r), t && model_props_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function model_props_toPropertyKey(t) { var i = model_props_toPrimitive(t, "string"); return "symbol" == model_props_typeof(i) ? i : i + ""; }
function model_props_toPrimitive(t, r) { if ("object" != model_props_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != model_props_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }




var model_props_Props = /*#__PURE__*/function () {
  function Props(props) {
    model_props_classCallCheck(this, Props);
    this[propsSymbol] = void 0;
    this[propsSymbol] = props;
  }
  return model_props_createClass(Props, [{
    key: "id",
    get:
    /**
     * id
     */
    function get() {
      return this[propsSymbol].id;
    }
    /**
     * 返回当前 props 的路径
     */
  }, {
    key: "path",
    get: function get() {
      return this[propsSymbol].path;
    }
    /**
     * 返回所属的 node 实例
     */
  }, {
    key: "node",
    get: function get() {
      return model_node_Node.create(this[propsSymbol].getNode());
    }
    /**
     * 获取指定 path 的属性模型实例
     * @param path 属性路径，支持 a / a.b / a.0 等格式
     * @returns
     */
  }, {
    key: "getProp",
    value: function getProp(path) {
      return model_prop_Prop.create(this[propsSymbol].getProp(path));
    }
    /**
     * 获取指定 path 的属性模型实例值
     * @param path 属性路径，支持 a / a.b / a.0 等格式
     * @returns
     */
  }, {
    key: "getPropValue",
    value: function getPropValue(path) {
      var _this$getProp;
      return (_this$getProp = this.getProp(path)) === null || _this$getProp === void 0 ? void 0 : _this$getProp.getValue();
    }
    /**
     * 获取指定 path 的属性模型实例，
     *  注：导出时，不同于普通属性，该属性并不挂载在 props 之下，而是与 props 同级
     * @param path 属性路径，支持 a / a.b / a.0 等格式
     * @returns
     */
  }, {
    key: "getExtraProp",
    value: function getExtraProp(path) {
      return model_prop_Prop.create(this[propsSymbol].getProp(props_getConvertedExtraKey(path)));
    }
    /**
     * 获取指定 path 的属性模型实例值
     *  注：导出时，不同于普通属性，该属性并不挂载在 props 之下，而是与 props 同级
     * @param path 属性路径，支持 a / a.b / a.0 等格式
     * @returns
     */
  }, {
    key: "getExtraPropValue",
    value: function getExtraPropValue(path) {
      var _this$getExtraProp;
      return (_this$getExtraProp = this.getExtraProp(path)) === null || _this$getExtraProp === void 0 ? void 0 : _this$getExtraProp.getValue();
    }
    /**
     * 设置指定 path 的属性模型实例值
     * @param path 属性路径，支持 a / a.b / a.0 等格式
     * @param value 值
     * @returns
     */
  }, {
    key: "setPropValue",
    value: function setPropValue(path, value) {
      var _this$getProp2;
      return (_this$getProp2 = this.getProp(path)) === null || _this$getProp2 === void 0 ? void 0 : _this$getProp2.setValue(value);
    }
    /**
     * 设置指定 path 的属性模型实例值
     * @param path 属性路径，支持 a / a.b / a.0 等格式
     * @param value 值
     * @returns
     */
  }, {
    key: "setExtraPropValue",
    value: function setExtraPropValue(path, value) {
      var _this$getExtraProp2;
      return (_this$getExtraProp2 = this.getExtraProp(path)) === null || _this$getExtraProp2 === void 0 ? void 0 : _this$getExtraProp2.setValue(value);
    }
    /**
     * test if the specified key is existing or not.
     * @param key
     * @returns
     */
  }, {
    key: "has",
    value: function has(key) {
      return this[propsSymbol].has(key);
    }
    /**
     * add a key with given value
     * @param value
     * @param key
     * @returns
     */
  }, {
    key: "add",
    value: function add(value, key) {
      return this[propsSymbol].add(value, key);
    }
  }], [{
    key: "create",
    value: function create(props) {
      if (!props) {
        return null;
      }
      return new Props(props);
    }
  }]);
}();
// CONCATENATED MODULE: ../shell/src/model/selection.ts
function model_selection_typeof(o) { "@babel/helpers - typeof"; return model_selection_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, model_selection_typeof(o); }
function model_selection_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function model_selection_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, model_selection_toPropertyKey(o.key), o); } }
function model_selection_createClass(e, r, t) { return r && model_selection_defineProperties(e.prototype, r), t && model_selection_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function model_selection_toPropertyKey(t) { var i = model_selection_toPrimitive(t, "string"); return "symbol" == model_selection_typeof(i) ? i : i + ""; }
function model_selection_toPrimitive(t, r) { if ("object" != model_selection_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != model_selection_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }


var model_selection_Selection = /*#__PURE__*/function () {
  function Selection(document) {
    model_selection_classCallCheck(this, Selection);
    this[selectionSymbol] = void 0;
    this[selectionSymbol] = document.selection;
  }
  /**
   * 返回选中的节点 id
   */
  return model_selection_createClass(Selection, [{
    key: "selected",
    get: function get() {
      return this[selectionSymbol].selected;
    }
    /**
     * return selected Node instance
     */
  }, {
    key: "node",
    get: function get() {
      var nodes = this.getNodes();
      return nodes && nodes.length > 0 ? nodes[0] : null;
    }
    /**
     * 选中指定节点（覆盖方式）
     * @param id
     */
  }, {
    key: "select",
    value: function select(id) {
      this[selectionSymbol].select(id);
    }
    /**
     * 批量选中指定节点们
     * @param ids
     */
  }, {
    key: "selectAll",
    value: function selectAll(ids) {
      this[selectionSymbol].selectAll(ids);
    }
    /**
     * 移除选中的指定节点
     * @param id
     */
  }, {
    key: "remove",
    value: function remove(id) {
      this[selectionSymbol].remove(id);
    }
    /**
     * 清除所有选中节点
     */
  }, {
    key: "clear",
    value: function clear() {
      this[selectionSymbol].clear();
    }
    /**
     * 判断是否选中了指定节点
     * @param id
     * @returns
     */
  }, {
    key: "has",
    value: function has(id) {
      return this[selectionSymbol].has(id);
    }
    /**
     * 选中指定节点（增量方式）
     * @param id
     */
  }, {
    key: "add",
    value: function add(id) {
      this[selectionSymbol].add(id);
    }
    /**
     * 获取选中的节点实例
     * @returns
     */
  }, {
    key: "getNodes",
    value: function getNodes() {
      var innerNodes = this[selectionSymbol].getNodes();
      var nodes = [];
      innerNodes.forEach(function (node) {
        var shellNode = model_node_Node.create(node);
        if (shellNode) {
          nodes.push(shellNode);
        }
      });
      return nodes;
    }
    /**
     * 获取选区的顶层节点
     * for example:
     *  getNodes() returns [A, subA, B], then
     *  getTopNodes() will return [A, B], subA will be removed
     * @returns
     */
  }, {
    key: "getTopNodes",
    value: function getTopNodes() {
      var includeRoot = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      var innerNodes = this[selectionSymbol].getTopNodes(includeRoot);
      var nodes = [];
      innerNodes.forEach(function (node) {
        var shellNode = model_node_Node.create(node);
        if (shellNode) {
          nodes.push(shellNode);
        }
      });
      return nodes;
    }
  }, {
    key: "onSelectionChange",
    value: function onSelectionChange(fn) {
      return this[selectionSymbol].onSelectionChange(fn);
    }
  }]);
}();
// CONCATENATED MODULE: ../shell/src/model/history.ts
function model_history_typeof(o) { "@babel/helpers - typeof"; return model_history_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, model_history_typeof(o); }
function model_history_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function model_history_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, model_history_toPropertyKey(o.key), o); } }
function model_history_createClass(e, r, t) { return r && model_history_defineProperties(e.prototype, r), t && model_history_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function model_history_toPropertyKey(t) { var i = model_history_toPrimitive(t, "string"); return "symbol" == model_history_typeof(i) ? i : i + ""; }
function model_history_toPrimitive(t, r) { if ("object" != model_history_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != model_history_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

var model_history_History = /*#__PURE__*/function () {
  function History(document) {
    model_history_classCallCheck(this, History);
    this[documentSymbol] = void 0;
    this[documentSymbol] = document;
  }
  /**
   * 历史记录跳转到指定位置
   * @param cursor
   */
  return model_history_createClass(History, [{
    key: historySymbol,
    get: function get() {
      return this[documentSymbol].getHistory();
    }
  }, {
    key: "go",
    value: function go(cursor) {
      this[historySymbol].go(cursor);
    }
    /**
     * 历史记录后退
     */
  }, {
    key: "back",
    value: function back() {
      this[historySymbol].back();
    }
    /**
     * 历史记录前进
     */
  }, {
    key: "forward",
    value: function forward() {
      this[historySymbol].forward();
    }
    /**
     * 保存当前状态
     */
  }, {
    key: "savePoint",
    value: function savePoint() {
      this[historySymbol].savePoint();
    }
    /**
     * 当前是否是「保存点」，即是否有状态变更但未保存
     * @returns
     */
  }, {
    key: "isSavePoint",
    value: function isSavePoint() {
      return this[historySymbol].isSavePoint();
    }
    /**
     * 获取 state，判断当前是否为「可回退」、「可前进」的状态
     * @returns
     */
  }, {
    key: "getState",
    value: function getState() {
      return this[historySymbol].getState();
    }
    /**
     * 监听 state 变更事件
     * @param func
     * @returns
     */
  }, {
    key: "onChangeState",
    value: function onChangeState(func) {
      return this[historySymbol].onChangeState(func);
    }
    /**
     * 监听历史记录游标位置变更事件
     * @param func
     * @returns
     */
  }, {
    key: "onChangeCursor",
    value: function onChangeCursor(func) {
      return this[historySymbol].onChangeCursor(func);
    }
  }]);
}();
// CONCATENATED MODULE: ../shell/src/model/drop-location.ts
function drop_location_typeof(o) { "@babel/helpers - typeof"; return drop_location_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, drop_location_typeof(o); }
function drop_location_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function drop_location_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, drop_location_toPropertyKey(o.key), o); } }
function drop_location_createClass(e, r, t) { return r && drop_location_defineProperties(e.prototype, r), t && drop_location_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function drop_location_toPropertyKey(t) { var i = drop_location_toPrimitive(t, "string"); return "symbol" == drop_location_typeof(i) ? i : i + ""; }
function drop_location_toPrimitive(t, r) { if ("object" != drop_location_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != drop_location_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }


var drop_location_DropLocation = /*#__PURE__*/function () {
  function DropLocation(dropLocation) {
    drop_location_classCallCheck(this, DropLocation);
    this[dropLocationSymbol] = void 0;
    this[dropLocationSymbol] = dropLocation;
  }
  return drop_location_createClass(DropLocation, [{
    key: "target",
    get: function get() {
      return model_node_Node.create(this[dropLocationSymbol].target);
    }
  }, {
    key: "detail",
    get: function get() {
      return this[dropLocationSymbol].detail;
    }
  }, {
    key: "event",
    get: function get() {
      return this[dropLocationSymbol].event;
    }
  }, {
    key: "clone",
    value: function clone(event) {
      return new DropLocation(this[dropLocationSymbol].clone(event));
    }
  }], [{
    key: "create",
    value: function create(dropLocation) {
      if (!dropLocation) {
        return null;
      }
      return new DropLocation(dropLocation);
    }
  }]);
}();
// CONCATENATED MODULE: ../shell/src/api/common.tsx
function common_extends() { return common_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, common_extends.apply(null, arguments); }
function common_typeof(o) { "@babel/helpers - typeof"; return common_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, common_typeof(o); }
function common_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function common_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, common_toPropertyKey(o.key), o); } }
function common_createClass(e, r, t) { return r && common_defineProperties(e.prototype, r), t && common_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function common_toPropertyKey(t) { var i = common_toPrimitive(t, "string"); return "symbol" == common_typeof(i) ? i : i + ""; }
function common_toPrimitive(t, r) { if ("object" != common_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != common_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }







var common_DesignerCabin = /*#__PURE__*/function () {
  function DesignerCabin(editor) {
    common_classCallCheck(this, DesignerCabin);
    this[editorSymbol] = void 0;
    /**
     * @deprecated
     */
    this[designerCabinSymbol] = void 0;
    this[editorSymbol] = editor;
    this[designerCabinSymbol] = {
      isDragNodeObject: utils_src["E" /* isDragNodeObject */],
      isDragAnyObject: utils_src["C" /* isDragAnyObject */],
      isShaken: isShaken,
      contains: _contains,
      LocationDetailType: types_src["k" /* IPublicTypeLocationDetailType */],
      isLocationChildrenDetail: utils_src["M" /* isLocationChildrenDetail */],
      ScrollTarget: ScrollTarget,
      isSettingField: utils_src["Y" /* isSettingField */],
      TransformStage: types_src["i" /* IPublicEnumTransformStage */],
      SettingField: setting_field_SettingField,
      LiveEditing: LiveEditing,
      DragObjectType: types_src["g" /* IPublicEnumDragObjectType */],
      isDragNodeDataObject: utils_src["D" /* isDragNodeDataObject */],
      isNode: utils_src["P" /* isNode */],
      DropLocation: location_DropLocation,
      Designer: designer_Designer,
      Node: node_Node,
      LowCodePluginManager: plugin_manager_LowCodePluginManager,
      DesignerView: designer_view_DesignerView
    };
  }
  /**
   * 是否是 SettingField 实例
   * @deprecated use same function from @alilc/lowcode-utils directly
   */
  return common_createClass(DesignerCabin, [{
    key: designerSymbol,
    get: function get() {
      return this[editorSymbol].get('designer');
    }
  }, {
    key: "isSettingField",
    value: function isSettingField(obj) {
      return Object(utils_src["Y" /* isSettingField */])(obj);
    }
    /**
     * 转换类型枚举对象，包含 init / upgrade / render 等类型
     * [参考](https://github.com/alibaba/lowcode-engine/blob/main/packages/types/src/transform-stage.ts)
     * @deprecated use { TransformStage } from '@alilc/lowcode-types' instead
     */
  }, {
    key: "TransformStage",
    get: function get() {
      return types_src["i" /* IPublicEnumTransformStage */];
    }
    /**
     * @deprecated
     */
  }, {
    key: "SettingField",
    get: function get() {
      return setting_field_SettingField;
    }
    /**
     * @deprecated
     */
  }, {
    key: "LiveEditing",
    get: function get() {
      return LiveEditing;
    }
    /**
     * @deprecated
     */
  }, {
    key: "DragObjectType",
    get: function get() {
      return types_src["g" /* IPublicEnumDragObjectType */];
    }
    /**
     * @deprecated
     */
  }, {
    key: "isDragNodeDataObject",
    value: function isDragNodeDataObject(obj) {
      return Object(utils_src["D" /* isDragNodeDataObject */])(obj);
    }
    /**
     * @deprecated
     */
  }, {
    key: "isNode",
    value: function isNode(node) {
      return Object(utils_src["P" /* isNode */])(node);
    }
    /**
     * @deprecated please use canvas.dragon
     */
  }, {
    key: "dragon",
    get: function get() {
      return model_dragon_Dragon.create(this[designerSymbol].dragon, false);
    }
  }]);
}();
var common_SkeletonCabin = /*#__PURE__*/function () {
  function SkeletonCabin(skeleton) {
    common_classCallCheck(this, SkeletonCabin);
    this[skeletonSymbol] = void 0;
    this[skeletonCabinSymbol] = void 0;
    this[skeletonSymbol] = skeleton;
    this[skeletonCabinSymbol] = {
      Workbench: workbench_Workbench,
      createSettingFieldView: this.createSettingFieldView,
      PopupContext: PopupContext,
      PopupPipe: popup_PopupPipe,
      SettingsPrimaryPane: settings_primary_pane_SettingsPrimaryPane,
      registerDefaults: register_defaults_registerDefaults,
      Skeleton: src_skeleton_Skeleton
    };
  }
  return common_createClass(SkeletonCabin, [{
    key: "Workbench",
    get: function get() {
      var innerSkeleton = this[skeletonSymbol];
      return function (props) {
        return /*#__PURE__*/React.createElement(workbench_Workbench, common_extends({}, props, {
          skeleton: innerSkeleton
        }));
      };
    }
    /**
     * @deprecated
     */
  }, {
    key: "createSettingFieldView",
    value: function createSettingFieldView(field, fieldEntry) {
      return settings_pane_createSettingFieldView(field[settingFieldSymbol] || field, fieldEntry);
    }
    /**
     * @deprecated
     */
  }, {
    key: "PopupContext",
    get: function get() {
      return PopupContext;
    }
    /**
     * @deprecated
     */
  }, {
    key: "PopupPipe",
    get: function get() {
      return popup_PopupPipe;
    }
  }]);
}();
var common_Utils = /*#__PURE__*/function () {
  function Utils() {
    common_classCallCheck(this, Utils);
  }
  return common_createClass(Utils, [{
    key: "isNodeSchema",
    value: function isNodeSchema(data) {
      return Object(utils_src["Q" /* isNodeSchema */])(data);
    }
  }, {
    key: "isFormEvent",
    value: function isFormEvent(e) {
      return Object(utils_src["H" /* isFormEvent */])(e);
    }
    /**
     * @deprecated this is a legacy api, do not use this if not using is already
     */
  }, {
    key: "compatibleLegaoSchema",
    value: function compatibleLegaoSchema(props) {
      return Object(utils_src["m" /* compatibleLegaoSchema */])(props);
    }
  }, {
    key: "getNodeSchemaById",
    value: function getNodeSchemaById(schema, nodeId) {
      return Object(utils_src["u" /* getNodeSchemaById */])(schema, nodeId);
    }
  }, {
    key: "getConvertedExtraKey",
    value: function getConvertedExtraKey(key) {
      return props_getConvertedExtraKey(key);
    }
  }, {
    key: "getOriginalExtraKey",
    value: function getOriginalExtraKey(key) {
      return props_getOriginalExtraKey(key);
    }
  }, {
    key: "executeTransaction",
    value: function executeTransaction(fn) {
      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : types_src["j" /* IPublicEnumTransitionType */].REPAINT;
      utils_src["hb" /* transactionManager */].executeTransaction(fn, type);
    }
  }, {
    key: "createIntl",
    value: function createIntl(instance) {
      return Object(src["createIntl"])(instance);
    }
  }, {
    key: "intl",
    value: function intl(data, params) {
      return Object(src["intl"])(data, params);
    }
  }]);
}();
var common_EditorCabin = /*#__PURE__*/function () {
  function EditorCabin(editor) {
    var _this = this;
    common_classCallCheck(this, EditorCabin);
    this[editorSymbol] = void 0;
    /**
     * @deprecated
     */
    this[editorCabinSymbol] = void 0;
    /**
     * @deprecated
     */
    this.createSetterContent = function (setter, props) {
      var setters = _this[editorSymbol].get('setters');
      return setters.createSetterContent(setter, props);
    };
    this[editorSymbol] = editor;
    this[editorCabinSymbol] = {
      Editor: src["Editor"],
      globalContext: src["globalContext"],
      runInAction: src["runInAction"],
      Title: src["Title"],
      Tip: src["Tip"],
      shallowIntl: src["shallowIntl"],
      createIntl: src["createIntl"],
      intl: src["intl"],
      createSetterContent: this.createSetterContent.bind(this),
      globalLocale: src["globalLocale"],
      obx: src["obx"],
      action: src["action"],
      engineConfig: src["engineConfig"],
      observable: src["observable"],
      makeObservable: src["makeObservable"],
      untracked: src["untracked"],
      computed: src["computed"],
      observer: src["observer"]
    };
  }
  /**
   * Title 组件
   * @experimental unstable API, pay extra caution when trying to use this
   */
  return common_createClass(EditorCabin, [{
    key: "Title",
    get: function get() {
      return src["Title"];
    }
    /**
     * Tip 组件
     * @experimental unstable API, pay extra caution when trying to use this
     */
  }, {
    key: "Tip",
    get: function get() {
      return src["Tip"];
    }
    /**
     * @deprecated
     */
  }, {
    key: "shallowIntl",
    value: function shallowIntl(data) {
      return Object(src["shallowIntl"])(data);
    }
    /**
     * @deprecated use common.utils.createIntl instead
     */
  }, {
    key: "createIntl",
    value: function createIntl(instance) {
      return Object(src["createIntl"])(instance);
    }
    /**
     * @deprecated
     */
  }, {
    key: "intl",
    value: function intl(data, params) {
      return Object(src["intl"])(data, params);
    }
  }, {
    key: "globalLocale",
    get:
    /**
     * @deprecated use common.utils.createIntl instead
     */
    function get() {
      return src["globalLocale"];
    }
    /**
     * @deprecated
     */
  }, {
    key: "obx",
    get: function get() {
      return src["obx"];
    }
    /**
     * @deprecated
     */
  }, {
    key: "action",
    get: function get() {
      return src["action"];
    }
    /**
     * @deprecated
     */
  }, {
    key: "engineConfig",
    get: function get() {
      return src["engineConfig"];
    }
    /**
     * @deprecated
     */
  }, {
    key: "runInAction",
    get: function get() {
      return src["runInAction"];
    }
    /**
     * @deprecated
     */
  }, {
    key: "observable",
    get: function get() {
      return src["observable"];
    }
    /**
     * @deprecated
     */
  }, {
    key: "makeObservable",
    value: function makeObservable(target, annotations, options) {
      return Object(src["makeObservable"])(target, annotations, options);
    }
    /**
     * @deprecated
     */
  }, {
    key: "untracked",
    value: function untracked(action) {
      return Object(src["untracked"])(action);
    }
    /**
     * @deprecated
     */
  }, {
    key: "computed",
    get: function get() {
      return src["computed"];
    }
    /**
     * @deprecated
     */
  }, {
    key: "observer",
    value: function observer(component) {
      return Object(src["observer"])(component);
    }
  }]);
}();
var common_Common = /*#__PURE__*/function () {
  function Common(editor, skeleton) {
    common_classCallCheck(this, Common);
    this.__designerCabin = void 0;
    this.__skeletonCabin = void 0;
    this.__editorCabin = void 0;
    this.__utils = void 0;
    this.__designerCabin = new common_DesignerCabin(editor);
    this.__skeletonCabin = new common_SkeletonCabin(skeleton);
    this.__editorCabin = new common_EditorCabin(editor);
    this.__utils = new common_Utils();
  }
  return common_createClass(Common, [{
    key: "utils",
    get: function get() {
      return this.__utils;
    }
    /**
     * 历史原因导致此处设计不合理，慎用。
     * this load of crap will be removed in some future versions, don`t use it.
     * @deprecated
     */
  }, {
    key: "editorCabin",
    get: function get() {
      return this.__editorCabin;
    }
    /**
     * 历史原因导致此处设计不合理，慎用。
     * this load of crap will be removed in some future versions, don`t use it.
     * @deprecated use canvas api instead
     */
  }, {
    key: "designerCabin",
    get: function get() {
      return this.__designerCabin;
    }
  }, {
    key: "skeletonCabin",
    get: function get() {
      return this.__skeletonCabin;
    }
    /**
     * 历史原因导致此处设计不合理，慎用。
     * this load of crap will be removed in some future versions, don`t use it.
     * @deprecated use { TransformStage } from '@alilc/lowcode-types' instead
     */
  }, {
    key: "objects",
    get: function get() {
      return {
        TransformStage: types_src["i" /* IPublicEnumTransformStage */]
      };
    }
  }]);
}();
// CONCATENATED MODULE: ../shell/src/api/event.ts
function event_typeof(o) { "@babel/helpers - typeof"; return event_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, event_typeof(o); }
function event_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function event_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, event_toPropertyKey(o.key), o); } }
function event_createClass(e, r, t) { return r && event_defineProperties(e.prototype, r), t && event_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function event_toPropertyKey(t) { var i = event_toPrimitive(t, "string"); return "symbol" == event_typeof(i) ? i : i + ""; }
function event_toPrimitive(t, r) { if ("object" != event_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != event_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

var event_logger = Object(utils_src["t" /* getLogger */])({
  level: 'warn',
  bizName: 'shell-event'
});
var eventBusSymbol = Symbol('eventBus');
var event_Event = /*#__PURE__*/function () {
  function Event(eventBus, options) {
    var workspaceMode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    event_classCallCheck(this, Event);
    this.workspaceMode = void 0;
    this[eventBusSymbol] = void 0;
    this.options = void 0;
    this.workspaceMode = workspaceMode;
    this[eventBusSymbol] = eventBus;
    this.options = options;
    if (!this.options.prefix) {
      event_logger.warn('prefix is required while initializing Event');
    }
  }
  /**
   * 监听事件
   * @param event 事件名称
   * @param listener 事件回调
   */
  return event_createClass(Event, [{
    key: "on",
    value: function on(event, listener) {
      if (Object(utils_src["S" /* isPluginEventName */])(event)) {
        return this[eventBusSymbol].on(event, listener);
      } else {
        event_logger.warn("fail to monitor on event ".concat(event, ", event should have a prefix like 'somePrefix:eventName'"));
        return function () {};
      }
    }
    /**
     * 监听事件，会在其他回调函数之前执行
     * @param event 事件名称
     * @param listener 事件回调
     */
  }, {
    key: "prependListener",
    value: function prependListener(event, listener) {
      if (Object(utils_src["S" /* isPluginEventName */])(event)) {
        return this[eventBusSymbol].prependListener(event, listener);
      } else {
        event_logger.warn("fail to prependListener event ".concat(event, ", event should have a prefix like 'somePrefix:eventName'"));
        return function () {};
      }
    }
    /**
     * 取消监听事件
     * @param event 事件名称
     * @param listener 事件回调
     */
  }, {
    key: "off",
    value: function off(event, listener) {
      this[eventBusSymbol].off(event, listener);
    }
    /**
     * 触发事件
     * @param event 事件名称
     * @param args 事件参数
     * @returns
     */
  }, {
    key: "emit",
    value: function emit(event) {
      var _this$eventBusSymbol;
      if (!this.options.prefix) {
        event_logger.warn('Event#emit has been forbidden while prefix is not specified');
        return;
      }
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }
      (_this$eventBusSymbol = this[eventBusSymbol]).emit.apply(_this$eventBusSymbol, ["".concat(this.options.prefix, ":").concat(event)].concat(args));
    }
    /**
     * DO NOT USE if u fully understand what this method does.
     * @param event
     * @param args
     */
  }, {
    key: "__internalEmit__",
    value: function __internalEmit__(event) {
      var _this$eventBusSymbol2;
      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }
      (_this$eventBusSymbol2 = this[eventBusSymbol]).emit.apply(_this$eventBusSymbol2, [event].concat(args));
    }
  }]);
}();
function getEvent(editor) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
    prefix: 'common'
  };
  return new event_Event(editor.eventBus, options);
}
// CONCATENATED MODULE: ../shell/src/api/hotkey.ts
function hotkey_typeof(o) { "@babel/helpers - typeof"; return hotkey_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, hotkey_typeof(o); }
function hotkey_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function hotkey_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, hotkey_toPropertyKey(o.key), o); } }
function hotkey_createClass(e, r, t) { return r && hotkey_defineProperties(e.prototype, r), t && hotkey_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function hotkey_toPropertyKey(t) { var i = hotkey_toPrimitive(t, "string"); return "symbol" == hotkey_typeof(i) ? i : i + ""; }
function hotkey_toPrimitive(t, r) { if ("object" != hotkey_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != hotkey_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }


var innerHotkeySymbol = Symbol('innerHotkey');
var hotkey_Hotkey = /*#__PURE__*/function () {
  function Hotkey(hotkey) {
    var workspaceMode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    hotkey_classCallCheck(this, Hotkey);
    this.workspaceMode = void 0;
    this[innerHotkeySymbol] = void 0;
    this.workspaceMode = workspaceMode;
    this[innerHotkeySymbol] = hotkey;
  }
  return hotkey_createClass(Hotkey, [{
    key: hotkeySymbol,
    get: function get() {
      if (this.workspaceMode) {
        return this[innerHotkeySymbol];
      }
      var workspace = src["globalContext"].get('workspace');
      if (workspace.isActive) {
        return workspace.window.innerHotkey;
      }
      return this[innerHotkeySymbol];
    }
  }, {
    key: "callbacks",
    get: function get() {
      return this[hotkeySymbol].callBacks;
    }
    /**
     * @deprecated
     */
  }, {
    key: "callBacks",
    get: function get() {
      return this.callbacks;
    }
    /**
     * 绑定快捷键
     * @param combos 快捷键，格式如：['command + s'] 、['ctrl + shift + s'] 等
     * @param callback 回调函数
     * @param action
     * @returns
     */
  }, {
    key: "bind",
    value: function bind(combos, callback, action) {
      var _this = this;
      this[hotkeySymbol].bind(combos, callback, action);
      return function () {
        _this[hotkeySymbol].unbind(combos, callback, action);
      };
    }
  }]);
}();
// CONCATENATED MODULE: ../shell/src/api/logger.ts
function logger_typeof(o) { "@babel/helpers - typeof"; return logger_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, logger_typeof(o); }
function logger_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function logger_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, logger_toPropertyKey(o.key), o); } }
function logger_createClass(e, r, t) { return r && logger_defineProperties(e.prototype, r), t && logger_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function logger_toPropertyKey(t) { var i = logger_toPrimitive(t, "string"); return "symbol" == logger_typeof(i) ? i : i + ""; }
function logger_toPrimitive(t, r) { if ("object" != logger_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != logger_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

var innerLoggerSymbol = Symbol('logger');
var logger_Logger = /*#__PURE__*/function () {
  function Logger(options) {
    logger_classCallCheck(this, Logger);
    this[innerLoggerSymbol] = void 0;
    this[innerLoggerSymbol] = Object(utils_src["t" /* getLogger */])(options);
  }
  /**
   * debug info
   */
  return logger_createClass(Logger, [{
    key: "debug",
    value: function debug() {
      var _this$innerLoggerSymb;
      (_this$innerLoggerSymb = this[innerLoggerSymbol]).debug.apply(_this$innerLoggerSymb, arguments);
    }
    /**
     * normal info output
     */
  }, {
    key: "info",
    value: function info() {
      var _this$innerLoggerSymb2;
      (_this$innerLoggerSymb2 = this[innerLoggerSymbol]).info.apply(_this$innerLoggerSymb2, arguments);
    }
    /**
     * warning info output
     */
  }, {
    key: "warn",
    value: function warn() {
      var _this$innerLoggerSymb3;
      (_this$innerLoggerSymb3 = this[innerLoggerSymbol]).warn.apply(_this$innerLoggerSymb3, arguments);
    }
    /**
     * error info output
     */
  }, {
    key: "error",
    value: function error() {
      var _this$innerLoggerSymb4;
      (_this$innerLoggerSymb4 = this[innerLoggerSymbol]).error.apply(_this$innerLoggerSymb4, arguments);
    }
    /**
     * normal log output
     */
  }, {
    key: "log",
    value: function log() {
      var _this$innerLoggerSymb5;
      (_this$innerLoggerSymb5 = this[innerLoggerSymbol]).log.apply(_this$innerLoggerSymb5, arguments);
    }
  }]);
}();
// CONCATENATED MODULE: ../shell/src/api/material.ts
function material_typeof(o) { "@babel/helpers - typeof"; return material_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, material_typeof(o); }
function material_createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = material_unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t.return || t.return(); } finally { if (u) throw o; } } }; }
function material_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return material_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? material_arrayLikeToArray(r, a) : void 0; } }
function material_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function material_regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return material_regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i.return) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (material_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, material_regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, material_regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), material_regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", material_regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), material_regeneratorDefine2(u), material_regeneratorDefine2(u, o, "Generator"), material_regeneratorDefine2(u, n, function () { return this; }), material_regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (material_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function material_regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } material_regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { material_regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, material_regeneratorDefine2(e, r, n, t); }
function material_asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function material_asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { material_asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { material_asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function material_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function material_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, material_toPropertyKey(o.key), o); } }
function material_createClass(e, r, t) { return r && material_defineProperties(e.prototype, r), t && material_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function material_toPropertyKey(t) { var i = material_toPrimitive(t, "string"); return "symbol" == material_typeof(i) ? i : i + ""; }
function material_toPrimitive(t, r) { if ("object" != material_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != material_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }





var material_logger = Object(utils_src["t" /* getLogger */])({
  level: 'warn',
  bizName: 'shell-material'
});
var innerEditorSymbol = Symbol('editor');
var material_Material = /*#__PURE__*/function () {
  function Material(editor) {
    var _this = this;
    var workspaceMode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    material_classCallCheck(this, Material);
    this.workspaceMode = void 0;
    this[innerEditorSymbol] = void 0;
    /**
     * 注册物料元数据管道函数
     * @param transducer
     * @param level
     * @param id
     */
    this.registerMetadataTransducer = function (transducer, level, id) {
      _this[designerSymbol].componentActions.registerMetadataTransducer(transducer, level, id);
    };
    /**
     * 在设计器辅助层增加一个扩展 action
     * @param action
     */
    this.addBuiltinComponentAction = function (action) {
      _this[designerSymbol].componentActions.addBuiltinComponentAction(action);
    };
    /**
     * 刷新 componentMetasMap，可触发模拟器里的 components 重新构建
     */
    this.refreshComponentMetasMap = function () {
      _this[designerSymbol].refreshComponentMetasMap();
    };
    this.workspaceMode = workspaceMode;
    this[innerEditorSymbol] = editor;
  }
  /**
   * 获取组件 map 结构
   */
  return material_createClass(Material, [{
    key: editorSymbol,
    get: function get() {
      if (this.workspaceMode) {
        return this[innerEditorSymbol];
      }
      var workspace = src["globalContext"].get('workspace');
      if (workspace.isActive) {
        if (!workspace.window.editor) {
          material_logger.error('Material api 调用时机出现问题，请检查');
          return this[innerEditorSymbol];
        }
        return workspace.window.editor;
      }
      return this[innerEditorSymbol];
    }
  }, {
    key: designerSymbol,
    get: function get() {
      return this[editorSymbol].get('designer');
    }
  }, {
    key: "componentsMap",
    get: function get() {
      return this[designerSymbol].componentsMap;
    }
    /**
     * 设置「资产包」结构
     * @param assets
     * @returns
     */
  }, {
    key: "setAssets",
    value: (function () {
      var _setAssets = material_asyncToGenerator(/*#__PURE__*/material_regenerator().m(function _callee(assets) {
        return material_regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              _context.n = 1;
              return this[editorSymbol].setAssets(assets);
            case 1:
              return _context.a(2, _context.v);
          }
        }, _callee, this);
      }));
      function setAssets(_x) {
        return _setAssets.apply(this, arguments);
      }
      return setAssets;
    }()
    /**
     * 获取「资产包」结构
     * @returns
     */
    )
  }, {
    key: "getAssets",
    value: function getAssets() {
      return this[editorSymbol].get('assets');
    }
    /**
     * 加载增量的「资产包」结构，该增量包会与原有的合并
     * @param incrementalAssets
     * @returns
     */
  }, {
    key: "loadIncrementalAssets",
    value: function loadIncrementalAssets(incrementalAssets) {
      return this[designerSymbol].loadIncrementalAssets(incrementalAssets);
    }
  }, {
    key: "getRegisteredMetadataTransducers",
    value:
    /**
     * 获取所有物料元数据管道函数
     * @returns
     */
    function getRegisteredMetadataTransducers() {
      return this[designerSymbol].componentActions.getRegisteredMetadataTransducers();
    }
    /**
     * 获取指定名称的物料元数据
     * @param componentName
     * @returns
     */
  }, {
    key: "getComponentMeta",
    value: function getComponentMeta(componentName) {
      var innerMeta = this[designerSymbol].getComponentMeta(componentName);
      return model_component_meta_ComponentMeta.create(innerMeta);
    }
    /**
     * create an instance of ComponentMeta by given metadata
     * @param metadata
     * @returns
     */
  }, {
    key: "createComponentMeta",
    value: function createComponentMeta(metadata) {
      return model_component_meta_ComponentMeta.create(this[designerSymbol].createComponentMeta(metadata));
    }
    /**
     * test if the given object is a ComponentMeta instance or not
     * @param obj
     * @returns
     */
  }, {
    key: "isComponentMeta",
    value: function isComponentMeta(obj) {
      return component_meta_isComponentMeta(obj);
    }
    /**
     * 获取所有已注册的物料元数据
     * @returns
     */
  }, {
    key: "getComponentMetasMap",
    value: function getComponentMetasMap() {
      var map = new Map();
      var originalMap = this[designerSymbol].getComponentMetasMap();
      var _iterator = material_createForOfIteratorHelper(originalMap.keys()),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var componentName = _step.value;
          map.set(componentName, this.getComponentMeta(componentName));
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      return map;
    }
  }, {
    key: "removeBuiltinComponentAction",
    value:
    /**
     * 移除设计器辅助层的指定 action
     * @param name
     */
    function removeBuiltinComponentAction(name) {
      this[designerSymbol].componentActions.removeBuiltinComponentAction(name);
    }
    /**
     * 修改已有的设计器辅助层的指定 action
     * @param actionName
     * @param handle
     */
  }, {
    key: "modifyBuiltinComponentAction",
    value: function modifyBuiltinComponentAction(actionName, handle) {
      this[designerSymbol].componentActions.modifyBuiltinComponentAction(actionName, handle);
    }
    /**
     * 监听 assets 变化的事件
     * @param fn
     */
  }, {
    key: "onChangeAssets",
    value: function onChangeAssets(fn) {
      var dispose = [
      // 设置 assets，经过 setAssets 赋值
      this[editorSymbol].onChange('assets', fn),
      // 增量设置 assets，经过 loadIncrementalAssets 赋值
      this[editorSymbol].eventBus.on('designer.incrementalAssetsReady', fn)];
      return function () {
        dispose.forEach(function (d) {
          return d && d();
        });
      };
    }
  }, {
    key: "addContextMenuOption",
    value: function addContextMenuOption(option) {
      this[designerSymbol].contextMenuActions.addMenuAction(option);
    }
  }, {
    key: "removeContextMenuOption",
    value: function removeContextMenuOption(name) {
      this[designerSymbol].contextMenuActions.removeMenuAction(name);
    }
  }, {
    key: "adjustContextMenuLayout",
    value: function adjustContextMenuLayout(fn) {
      this[designerSymbol].contextMenuActions.adjustMenuLayout(fn);
    }
  }]);
}();
// CONCATENATED MODULE: ../shell/src/api/plugins.ts
function plugins_typeof(o) { "@babel/helpers - typeof"; return plugins_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, plugins_typeof(o); }
function plugins_regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return plugins_regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i.return) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (plugins_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, plugins_regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, plugins_regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), plugins_regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", plugins_regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), plugins_regeneratorDefine2(u), plugins_regeneratorDefine2(u, o, "Generator"), plugins_regeneratorDefine2(u, n, function () { return this; }), plugins_regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (plugins_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function plugins_regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } plugins_regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { plugins_regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, plugins_regeneratorDefine2(e, r, n, t); }
function plugins_asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function plugins_asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { plugins_asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { plugins_asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function plugins_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function plugins_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, plugins_toPropertyKey(o.key), o); } }
function plugins_createClass(e, r, t) { return r && plugins_defineProperties(e.prototype, r), t && plugins_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function plugins_toPropertyKey(t) { var i = plugins_toPrimitive(t, "string"); return "symbol" == plugins_typeof(i) ? i : i + ""; }
function plugins_toPrimitive(t, r) { if ("object" != plugins_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != plugins_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }



var innerPluginsSymbol = Symbol('plugin');
var plugins_Plugins = /*#__PURE__*/function () {
  function Plugins(plugins) {
    var workspaceMode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    plugins_classCallCheck(this, Plugins);
    this.workspaceMode = void 0;
    this[innerPluginsSymbol] = void 0;
    this.workspaceMode = workspaceMode;
    this[innerPluginsSymbol] = plugins;
  }
  return plugins_createClass(Plugins, [{
    key: pluginsSymbol,
    get: function get() {
      if (this.workspaceMode) {
        return this[innerPluginsSymbol];
      }
      var workspace = src["globalContext"].get('workspace');
      if (workspace.isActive) {
        return workspace.window.innerPlugins;
      }
      return this[innerPluginsSymbol];
    }
  }, {
    key: "register",
    value: function () {
      var _register = plugins_asyncToGenerator(/*#__PURE__*/plugins_regenerator().m(function _callee(pluginModel, options, registerOptions) {
        return plugins_regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              _context.n = 1;
              return this[pluginsSymbol].register(pluginModel, options, registerOptions);
            case 1:
              return _context.a(2);
          }
        }, _callee, this);
      }));
      function register(_x, _x2, _x3) {
        return _register.apply(this, arguments);
      }
      return register;
    }()
  }, {
    key: "init",
    value: function () {
      var _init = plugins_asyncToGenerator(/*#__PURE__*/plugins_regenerator().m(function _callee2(registerOptions) {
        return plugins_regenerator().w(function (_context2) {
          while (1) switch (_context2.n) {
            case 0:
              _context2.n = 1;
              return this[pluginsSymbol].init(registerOptions);
            case 1:
              return _context2.a(2);
          }
        }, _callee2, this);
      }));
      function init(_x4) {
        return _init.apply(this, arguments);
      }
      return init;
    }()
  }, {
    key: "getPluginPreference",
    value: function getPluginPreference(pluginName) {
      return this[pluginsSymbol].getPluginPreference(pluginName);
    }
  }, {
    key: "get",
    value: function get(pluginName) {
      var instance = this[pluginsSymbol].get(pluginName);
      if (instance) {
        return new plugin_instance_PluginInstance(instance);
      }
      return null;
    }
  }, {
    key: "getAll",
    value: function getAll() {
      var _this$pluginsSymbol$g;
      return (_this$pluginsSymbol$g = this[pluginsSymbol].getAll()) === null || _this$pluginsSymbol$g === void 0 ? void 0 : _this$pluginsSymbol$g.map(function (d) {
        return new plugin_instance_PluginInstance(d);
      });
    }
  }, {
    key: "has",
    value: function has(pluginName) {
      return this[pluginsSymbol].has(pluginName);
    }
  }, {
    key: "delete",
    value: function () {
      var _delete2 = plugins_asyncToGenerator(/*#__PURE__*/plugins_regenerator().m(function _callee3(pluginName) {
        return plugins_regenerator().w(function (_context3) {
          while (1) switch (_context3.n) {
            case 0:
              _context3.n = 1;
              return this[pluginsSymbol].delete(pluginName);
            case 1:
              return _context3.a(2, _context3.v);
          }
        }, _callee3, this);
      }));
      function _delete(_x5) {
        return _delete2.apply(this, arguments);
      }
      return _delete;
    }()
  }, {
    key: "toProxy",
    value: function toProxy() {
      return new Proxy(this, {
        get: function get(target, prop, receiver) {
          var _target = target[pluginsSymbol];
          if (_target.pluginsMap.has(prop)) {
            var _target$pluginsMap$ge;
            // 禁用态的插件，直接返回 undefined
            if (_target.pluginsMap.get(prop).disabled) {
              return undefined;
            }
            return (_target$pluginsMap$ge = _target.pluginsMap.get(prop)) === null || _target$pluginsMap$ge === void 0 ? void 0 : _target$pluginsMap$ge.toProxy();
          }
          return Reflect.get(target, prop, receiver);
        }
      });
    }
  }]);
}();
// CONCATENATED MODULE: ../shell/src/model/simulator-render.ts
function simulator_render_typeof(o) { "@babel/helpers - typeof"; return simulator_render_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, simulator_render_typeof(o); }
function simulator_render_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function simulator_render_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, simulator_render_toPropertyKey(o.key), o); } }
function simulator_render_createClass(e, r, t) { return r && simulator_render_defineProperties(e.prototype, r), t && simulator_render_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function simulator_render_toPropertyKey(t) { var i = simulator_render_toPrimitive(t, "string"); return "symbol" == simulator_render_typeof(i) ? i : i + ""; }
function simulator_render_toPrimitive(t, r) { if ("object" != simulator_render_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != simulator_render_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

var simulator_render_SimulatorRender = /*#__PURE__*/function () {
  function SimulatorRender(simulatorRender) {
    simulator_render_classCallCheck(this, SimulatorRender);
    this[simulatorRenderSymbol] = void 0;
    this[simulatorRenderSymbol] = simulatorRender;
  }
  return simulator_render_createClass(SimulatorRender, [{
    key: "components",
    get: function get() {
      return this[simulatorRenderSymbol].components;
    }
  }, {
    key: "rerender",
    value: function rerender() {
      return this[simulatorRenderSymbol].rerender();
    }
  }], [{
    key: "create",
    value: function create(simulatorRender) {
      return new SimulatorRender(simulatorRender);
    }
  }]);
}();
// CONCATENATED MODULE: ../shell/src/api/simulator-host.ts
function simulator_host_typeof(o) { "@babel/helpers - typeof"; return simulator_host_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, simulator_host_typeof(o); }
function simulator_host_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function simulator_host_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, simulator_host_toPropertyKey(o.key), o); } }
function simulator_host_createClass(e, r, t) { return r && simulator_host_defineProperties(e.prototype, r), t && simulator_host_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function simulator_host_toPropertyKey(t) { var i = simulator_host_toPrimitive(t, "string"); return "symbol" == simulator_host_typeof(i) ? i : i + ""; }
function simulator_host_toPrimitive(t, r) { if ("object" != simulator_host_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != simulator_host_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }


var simulator_host_SimulatorHost = /*#__PURE__*/function () {
  function SimulatorHost(simulator) {
    simulator_host_classCallCheck(this, SimulatorHost);
    this[simulatorHostSymbol] = void 0;
    this[simulatorHostSymbol] = simulator;
  }
  return simulator_host_createClass(SimulatorHost, [{
    key: "contentWindow",
    get:
    /**
     * 获取 contentWindow
     */
    function get() {
      return this[simulatorHostSymbol].contentWindow;
    }
    /**
     * 获取 contentDocument
     */
  }, {
    key: "contentDocument",
    get: function get() {
      return this[simulatorHostSymbol].contentDocument;
    }
  }, {
    key: "renderer",
    get: function get() {
      if (this[simulatorHostSymbol].renderer) {
        return simulator_render_SimulatorRender.create(this[simulatorHostSymbol].renderer);
      }
      return undefined;
    }
    /**
     * 设置 host 配置值
     * @param key
     * @param value
     */
  }, {
    key: "set",
    value: function set(key, value) {
      this[simulatorHostSymbol].set(key, value);
    }
    /**
     * 获取 host 配置值
     * @param key
     * @returns
     */
  }, {
    key: "get",
    value: function get(key) {
      return this[simulatorHostSymbol].get(key);
    }
    /**
     * scroll to specific node
     * @param node
     */
  }, {
    key: "scrollToNode",
    value: function scrollToNode(node) {
      this[simulatorHostSymbol].scrollToNode(node[nodeSymbol]);
    }
    /**
     * 触发组件构建，并刷新渲染画布
     */
  }, {
    key: "rerender",
    value: function rerender() {
      this[simulatorHostSymbol].rerender();
    }
  }], [{
    key: "create",
    value: function create(host) {
      if (!host) return null;
      return new SimulatorHost(host);
    }
  }]);
}();
// CONCATENATED MODULE: ../shell/src/api/project.ts
function api_project_typeof(o) { "@babel/helpers - typeof"; return api_project_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, api_project_typeof(o); }
function api_project_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function api_project_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? api_project_ownKeys(Object(t), !0).forEach(function (r) { api_project_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : api_project_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function api_project_defineProperty(e, r, t) { return (r = api_project_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function api_project_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function api_project_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, api_project_toPropertyKey(o.key), o); } }
function api_project_createClass(e, r, t) { return r && api_project_defineProperties(e.prototype, r), t && api_project_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function api_project_toPropertyKey(t) { var i = api_project_toPrimitive(t, "string"); return "symbol" == api_project_typeof(i) ? i : i + ""; }
function api_project_toPrimitive(t, r) { if ("object" != api_project_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != api_project_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }






var project_logger = Object(utils_src["t" /* getLogger */])({
  level: 'warn',
  bizName: 'shell-project'
});
var innerProjectSymbol = Symbol('innerProject');
var api_project_Project = /*#__PURE__*/function () {
  function Project(project) {
    var workspaceMode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    api_project_classCallCheck(this, Project);
    this.workspaceMode = void 0;
    this[innerProjectSymbol] = void 0;
    this[simulatorHostSymbol] = void 0;
    this.workspaceMode = workspaceMode;
    this[innerProjectSymbol] = project;
  }
  return api_project_createClass(Project, [{
    key: projectSymbol,
    get: function get() {
      if (this.workspaceMode) {
        return this[innerProjectSymbol];
      }
      var workspace = src["globalContext"].get('workspace');
      if (workspace.isActive) {
        var _workspace$window;
        if (!((_workspace$window = workspace.window) !== null && _workspace$window !== void 0 && _workspace$window.innerProject)) {
          project_logger.error('project api 调用时机出现问题，请检查');
          return this[innerProjectSymbol];
        }
        return workspace.window.innerProject;
      }
      return this[innerProjectSymbol];
    }
  }, {
    key: editorSymbol,
    get: function get() {
      var _this$projectSymbol;
      return (_this$projectSymbol = this[projectSymbol]) === null || _this$projectSymbol === void 0 ? void 0 : _this$projectSymbol.designer.editor;
    }
  }, {
    key: "currentDocument",
    get:
    /**
     * 获取当前的 document
     * @returns
     */
    function get() {
      return this.getCurrentDocument();
    }
    /**
     * 获取当前 project 下所有 documents
     * @returns
     */
  }, {
    key: "documents",
    get: function get() {
      return this[projectSymbol].documents.map(function (doc) {
        return model_document_model_DocumentModel.create(doc);
      });
    }
    /**
     * 获取模拟器的 host
     */
  }, {
    key: "simulatorHost",
    get: function get() {
      return simulator_host_SimulatorHost.create(this[projectSymbol].simulator || this[simulatorHostSymbol]);
    }
    /**
     * @deprecated use .simulatorHost instead.
     */
  }, {
    key: "simulator",
    get: function get() {
      return this.simulatorHost;
    }
    /**
     * 打开一个 document
     * @param doc
     * @returns
     */
  }, {
    key: "openDocument",
    value: function openDocument(doc) {
      var documentModel = this[projectSymbol].open(doc);
      if (!documentModel) {
        return null;
      }
      return model_document_model_DocumentModel.create(documentModel);
    }
    /**
     * 创建一个 document
     * @param data
     * @returns
     */
  }, {
    key: "createDocument",
    value: function createDocument(data) {
      var doc = this[projectSymbol].createDocument(data);
      return model_document_model_DocumentModel.create(doc);
    }
    /**
     * 删除一个 document
     * @param doc
     */
  }, {
    key: "removeDocument",
    value: function removeDocument(doc) {
      this[projectSymbol].removeDocument(doc[documentSymbol]);
    }
    /**
     * 根据 fileName 获取 document
     * @param fileName
     * @returns
     */
  }, {
    key: "getDocumentByFileName",
    value: function getDocumentByFileName(fileName) {
      var innerDocumentModel = this[projectSymbol].getDocumentByFileName(fileName);
      return model_document_model_DocumentModel.create(innerDocumentModel);
    }
    /**
     * 根据 id 获取 document
     * @param id
     * @returns
     */
  }, {
    key: "getDocumentById",
    value: function getDocumentById(id) {
      return model_document_model_DocumentModel.create(this[projectSymbol].getDocument(id));
    }
    /**
     * 导出 project
     * @returns
     */
  }, {
    key: "exportSchema",
    value: function exportSchema() {
      var stage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : types_src["i" /* IPublicEnumTransformStage */].Render;
      return this[projectSymbol].getSchema(stage);
    }
    /**
     * 导入 project
     * @param schema 待导入的 project 数据
     */
  }, {
    key: "importSchema",
    value: function importSchema(schema) {
      this[projectSymbol].load(schema, true);
    }
    /**
     * 获取当前的 document
     * @returns
     */
  }, {
    key: "getCurrentDocument",
    value: function getCurrentDocument() {
      return model_document_model_DocumentModel.create(this[projectSymbol].currentDocument);
    }
    /**
     * 增加一个属性的管道处理函数
     * @param transducer
     * @param stage
     */
  }, {
    key: "addPropsTransducer",
    value: function addPropsTransducer(transducer, stage) {
      this[projectSymbol].designer.addPropsReducer(transducer, stage);
    }
    /**
     * 绑定删除文档事件
     * @param fn
     * @returns
     */
  }, {
    key: "onRemoveDocument",
    value: function onRemoveDocument(fn) {
      return this[editorSymbol].eventBus.on('designer.document.remove', function (data) {
        return fn(data);
      });
    }
    /**
     * 当前 project 内的 document 变更事件
     */
  }, {
    key: "onChangeDocument",
    value: function onChangeDocument(fn) {
      var offFn = this[projectSymbol].onCurrentDocumentChange(function (originalDoc) {
        fn(model_document_model_DocumentModel.create(originalDoc));
      });
      if (this[projectSymbol].currentDocument) {
        fn(model_document_model_DocumentModel.create(this[projectSymbol].currentDocument));
      }
      return offFn;
    }
    /**
     * 当前 project 的模拟器 ready 事件
     */
  }, {
    key: "onSimulatorHostReady",
    value: function onSimulatorHostReady(fn) {
      var offFn = this[projectSymbol].onSimulatorReady(function (simulator) {
        fn(simulator_host_SimulatorHost.create(simulator));
      });
      return offFn;
    }
    /**
     * 当前 project 的渲染器 ready 事件
     */
  }, {
    key: "onSimulatorRendererReady",
    value: function onSimulatorRendererReady(fn) {
      var offFn = this[projectSymbol].onRendererReady(function () {
        fn();
      });
      return offFn;
    }
    /**
     * 设置多语言语料
     * 数据格式参考 https://github.com/alibaba/lowcode-engine/blob/main/specs/lowcode-spec.md#2434%E5%9B%BD%E9%99%85%E5%8C%96%E5%A4%9A%E8%AF%AD%E8%A8%80%E7%B1%BB%E5%9E%8Baa
     * @param value object
     * @returns
     */
  }, {
    key: "setI18n",
    value: function setI18n(value) {
      this[projectSymbol].set('i18n', value);
    }
  }, {
    key: "setConfig",
    value: function setConfig() {
      if (arguments.length === 2) {
        var oldConfig = this[projectSymbol].get('config');
        this[projectSymbol].set('config', api_project_objectSpread(api_project_objectSpread({}, oldConfig), {}, api_project_defineProperty({}, arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1])));
      } else {
        this[projectSymbol].set('config', arguments.length <= 0 ? undefined : arguments[0]);
      }
    }
  }], [{
    key: "create",
    value: function create(project) {
      var workspaceMode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      return new Project(project, workspaceMode);
    }
  }]);
}();
// CONCATENATED MODULE: ../shell/src/api/setters.ts
function setters_typeof(o) { "@babel/helpers - typeof"; return setters_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, setters_typeof(o); }
function setters_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function setters_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, setters_toPropertyKey(o.key), o); } }
function setters_createClass(e, r, t) { return r && setters_defineProperties(e.prototype, r), t && setters_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function setters_toPropertyKey(t) { var i = setters_toPrimitive(t, "string"); return "symbol" == setters_typeof(i) ? i : i + ""; }
function setters_toPrimitive(t, r) { if ("object" != setters_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != setters_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }


var innerSettersSymbol = Symbol('setters');
var settersSymbol = Symbol('setters');
var setters_logger = Object(utils_src["t" /* getLogger */])({
  level: 'warn',
  bizName: 'shell-setters'
});
var setters_Setters = /*#__PURE__*/function () {
  function Setters(innerSetters) {
    var _this = this;
    var workspaceMode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    setters_classCallCheck(this, Setters);
    this.workspaceMode = void 0;
    this[innerSettersSymbol] = void 0;
    /**
     * 获取指定 setter
     * @param type
     * @returns
     */
    this.getSetter = function (type) {
      return _this[settersSymbol].getSetter(type);
    };
    /**
     * 获取已注册的所有 settersMap
     * @returns
     */
    this.getSettersMap = function () {
      return _this[settersSymbol].getSettersMap();
    };
    /**
     * 注册一个 setter
     * @param typeOrMaps
     * @param setter
     * @returns
     */
    this.registerSetter = function (typeOrMaps, setter) {
      return _this[settersSymbol].registerSetter(typeOrMaps, setter);
    };
    /**
     * @deprecated
     */
    this.createSetterContent = function (setter, props) {
      return _this[settersSymbol].createSetterContent(setter, props);
    };
    this.workspaceMode = workspaceMode;
    this[innerSettersSymbol] = innerSetters;
  }
  return setters_createClass(Setters, [{
    key: settersSymbol,
    get: function get() {
      var _this2 = this;
      if (this.workspaceMode) {
        return this[innerSettersSymbol];
      }
      var workspace = src["globalContext"].get('workspace');
      if (workspace.isActive) {
        return Object(src["untracked"])(function () {
          var _workspace$window;
          if (!((_workspace$window = workspace.window) !== null && _workspace$window !== void 0 && _workspace$window.innerSetters)) {
            setters_logger.error('setter api 调用时机出现问题，请检查');
            return _this2[innerSettersSymbol];
          }
          return workspace.window.innerSetters;
        });
      }
      return this[innerSettersSymbol];
    }
  }]);
}();
// CONCATENATED MODULE: ../shell/src/model/skeleton-item.ts
function skeleton_item_typeof(o) { "@babel/helpers - typeof"; return skeleton_item_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, skeleton_item_typeof(o); }
function skeleton_item_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function skeleton_item_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, skeleton_item_toPropertyKey(o.key), o); } }
function skeleton_item_createClass(e, r, t) { return r && skeleton_item_defineProperties(e.prototype, r), t && skeleton_item_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function skeleton_item_toPropertyKey(t) { var i = skeleton_item_toPrimitive(t, "string"); return "symbol" == skeleton_item_typeof(i) ? i : i + ""; }
function skeleton_item_toPrimitive(t, r) { if ("object" != skeleton_item_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != skeleton_item_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

var skeleton_item_SkeletonItem = /*#__PURE__*/function () {
  function SkeletonItem(skeletonItem) {
    skeleton_item_classCallCheck(this, SkeletonItem);
    this[skeletonItemSymbol] = void 0;
    this[skeletonItemSymbol] = skeletonItem;
  }
  return skeleton_item_createClass(SkeletonItem, [{
    key: "name",
    get: function get() {
      return this[skeletonItemSymbol].name;
    }
  }, {
    key: "visible",
    get: function get() {
      return this[skeletonItemSymbol].visible;
    }
  }, {
    key: "disable",
    value: function disable() {
      var _this$skeletonItemSym, _this$skeletonItemSym2;
      (_this$skeletonItemSym = (_this$skeletonItemSym2 = this[skeletonItemSymbol]).disable) === null || _this$skeletonItemSym === void 0 ? void 0 : _this$skeletonItemSym.call(_this$skeletonItemSym2);
    }
  }, {
    key: "enable",
    value: function enable() {
      var _this$skeletonItemSym3, _this$skeletonItemSym4;
      (_this$skeletonItemSym3 = (_this$skeletonItemSym4 = this[skeletonItemSymbol]).enable) === null || _this$skeletonItemSym3 === void 0 ? void 0 : _this$skeletonItemSym3.call(_this$skeletonItemSym4);
    }
  }, {
    key: "hide",
    value: function hide() {
      this[skeletonItemSymbol].hide();
    }
  }, {
    key: "show",
    value: function show() {
      this[skeletonItemSymbol].show();
    }
  }, {
    key: "toggle",
    value: function toggle() {
      this[skeletonItemSymbol].toggle();
    }
  }]);
}();
// CONCATENATED MODULE: ../shell/src/api/skeleton.ts
function skeleton_typeof(o) { "@babel/helpers - typeof"; return skeleton_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, skeleton_typeof(o); }
function skeleton_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function skeleton_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? skeleton_ownKeys(Object(t), !0).forEach(function (r) { skeleton_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : skeleton_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function skeleton_defineProperty(e, r, t) { return (r = skeleton_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function skeleton_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function skeleton_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, skeleton_toPropertyKey(o.key), o); } }
function skeleton_createClass(e, r, t) { return r && skeleton_defineProperties(e.prototype, r), t && skeleton_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function skeleton_toPropertyKey(t) { var i = skeleton_toPrimitive(t, "string"); return "symbol" == skeleton_typeof(i) ? i : i + ""; }
function skeleton_toPrimitive(t, r) { if ("object" != skeleton_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != skeleton_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }





var innerSkeletonSymbol = Symbol('skeleton');
var skeleton_logger = Object(utils_src["t" /* getLogger */])({
  level: 'warn',
  bizName: 'shell-skeleton'
});
var skeleton_Skeleton = /*#__PURE__*/function () {
  function Skeleton(skeleton, pluginName) {
    var workspaceMode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    skeleton_classCallCheck(this, Skeleton);
    this.workspaceMode = void 0;
    this[innerSkeletonSymbol] = void 0;
    this.pluginName = void 0;
    this.workspaceMode = workspaceMode;
    this[innerSkeletonSymbol] = skeleton;
    this.pluginName = pluginName;
  }
  /**
   * 增加一个面板实例
   * @param config
   * @param extraConfig
   * @returns
   */
  return skeleton_createClass(Skeleton, [{
    key: skeletonSymbol,
    get: function get() {
      if (this.workspaceMode) {
        return this[innerSkeletonSymbol];
      }
      var workspace = src["globalContext"].get('workspace');
      if (workspace.isActive) {
        var _workspace$window;
        if (!((_workspace$window = workspace.window) !== null && _workspace$window !== void 0 && _workspace$window.innerSkeleton)) {
          skeleton_logger.error('skeleton api 调用时机出现问题，请检查');
          return this[innerSkeletonSymbol];
        }
        return workspace.window.innerSkeleton;
      }
      return this[innerSkeletonSymbol];
    }
  }, {
    key: "add",
    value: function add(config, extraConfig) {
      var configWithName = skeleton_objectSpread(skeleton_objectSpread({}, config), {}, {
        pluginName: this.pluginName
      });
      var item = this[skeletonSymbol].add(configWithName, extraConfig);
      if (item) {
        return new skeleton_item_SkeletonItem(item);
      }
    }
    /**
     * 移除一个面板实例
     * @param config
     * @returns
     */
  }, {
    key: "remove",
    value: function remove(config) {
      var _skeleton$normalizeAr;
      var area = config.area,
        name = config.name;
      var skeleton = this[skeletonSymbol];
      if (!normalizeArea(area)) {
        return;
      }
      (_skeleton$normalizeAr = skeleton[normalizeArea(area)].container) === null || _skeleton$normalizeAr === void 0 ? void 0 : _skeleton$normalizeAr.remove(name);
    }
  }, {
    key: "getAreaItems",
    value: function getAreaItems(areaName) {
      var _this$skeletonSymbol$;
      return (_this$skeletonSymbol$ = this[skeletonSymbol][normalizeArea(areaName)].container.items) === null || _this$skeletonSymbol$ === void 0 ? void 0 : _this$skeletonSymbol$.map(function (d) {
        return new skeleton_item_SkeletonItem(d);
      });
    }
  }, {
    key: "getPanel",
    value: function getPanel(name) {
      var item = this[skeletonSymbol].getPanel(name);
      if (!item) {
        return;
      }
      return new skeleton_item_SkeletonItem(item);
    }
    /**
     * 显示面板
     * @param name
     */
  }, {
    key: "showPanel",
    value: function showPanel(name) {
      var _this$skeletonSymbol$2;
      (_this$skeletonSymbol$2 = this[skeletonSymbol].getPanel(name)) === null || _this$skeletonSymbol$2 === void 0 ? void 0 : _this$skeletonSymbol$2.show();
    }
    /**
     * 隐藏面板
     * @param name
     */
  }, {
    key: "hidePanel",
    value: function hidePanel(name) {
      var _this$skeletonSymbol$3;
      (_this$skeletonSymbol$3 = this[skeletonSymbol].getPanel(name)) === null || _this$skeletonSymbol$3 === void 0 ? void 0 : _this$skeletonSymbol$3.hide();
    }
    /**
     * 显示 widget
     * @param name
     */
  }, {
    key: "showWidget",
    value: function showWidget(name) {
      var _this$skeletonSymbol$4;
      (_this$skeletonSymbol$4 = this[skeletonSymbol].getWidget(name)) === null || _this$skeletonSymbol$4 === void 0 ? void 0 : _this$skeletonSymbol$4.show();
    }
    /**
     * enable widget
     * @param name
     */
  }, {
    key: "enableWidget",
    value: function enableWidget(name) {
      var _this$skeletonSymbol$5, _this$skeletonSymbol$6;
      (_this$skeletonSymbol$5 = this[skeletonSymbol].getWidget(name)) === null || _this$skeletonSymbol$5 === void 0 ? void 0 : (_this$skeletonSymbol$6 = _this$skeletonSymbol$5.enable) === null || _this$skeletonSymbol$6 === void 0 ? void 0 : _this$skeletonSymbol$6.call(_this$skeletonSymbol$5);
    }
    /**
     * 隐藏 widget
     * @param name
     */
  }, {
    key: "hideWidget",
    value: function hideWidget(name) {
      var _this$skeletonSymbol$7;
      (_this$skeletonSymbol$7 = this[skeletonSymbol].getWidget(name)) === null || _this$skeletonSymbol$7 === void 0 ? void 0 : _this$skeletonSymbol$7.hide();
    }
    /**
     * disable widget，不可点击
     * @param name
     */
  }, {
    key: "disableWidget",
    value: function disableWidget(name) {
      var _this$skeletonSymbol$8, _this$skeletonSymbol$9;
      (_this$skeletonSymbol$8 = this[skeletonSymbol].getWidget(name)) === null || _this$skeletonSymbol$8 === void 0 ? void 0 : (_this$skeletonSymbol$9 = _this$skeletonSymbol$8.disable) === null || _this$skeletonSymbol$9 === void 0 ? void 0 : _this$skeletonSymbol$9.call(_this$skeletonSymbol$8);
    }
    /**
     * show area
     * @param areaName name of area
     */
  }, {
    key: "showArea",
    value: function showArea(areaName) {
      var _this$skeletonSymbol$0;
      (_this$skeletonSymbol$0 = this[skeletonSymbol][areaName]) === null || _this$skeletonSymbol$0 === void 0 ? void 0 : _this$skeletonSymbol$0.show();
    }
    /**
     * hide area
     * @param areaName name of area
     */
  }, {
    key: "hideArea",
    value: function hideArea(areaName) {
      var _this$skeletonSymbol$1;
      (_this$skeletonSymbol$1 = this[skeletonSymbol][areaName]) === null || _this$skeletonSymbol$1 === void 0 ? void 0 : _this$skeletonSymbol$1.hide();
    }
    /**
     * 监听 panel 显示事件
     * @param listener
     * @returns
     */
  }, {
    key: "onShowPanel",
    value: function onShowPanel(listener) {
      var editor = this[skeletonSymbol].editor;
      editor.eventBus.on(SkeletonEvents.PANEL_SHOW, function (name, panel) {
        listener(name, new skeleton_item_SkeletonItem(panel));
      });
      return function () {
        return editor.eventBus.off(SkeletonEvents.PANEL_SHOW, listener);
      };
    }
  }, {
    key: "onDisableWidget",
    value: function onDisableWidget(listener) {
      var editor = this[skeletonSymbol].editor;
      editor.eventBus.on(SkeletonEvents.WIDGET_DISABLE, function (name, panel) {
        listener(name, new skeleton_item_SkeletonItem(panel));
      });
      return function () {
        return editor.eventBus.off(SkeletonEvents.WIDGET_DISABLE, listener);
      };
    }
  }, {
    key: "onEnableWidget",
    value: function onEnableWidget(listener) {
      var editor = this[skeletonSymbol].editor;
      editor.eventBus.on(SkeletonEvents.WIDGET_ENABLE, function (name, panel) {
        listener(name, new skeleton_item_SkeletonItem(panel));
      });
      return function () {
        return editor.eventBus.off(SkeletonEvents.WIDGET_ENABLE, listener);
      };
    }
    /**
     * 监听 panel 隐藏事件
     * @param listener
     * @returns
     */
  }, {
    key: "onHidePanel",
    value: function onHidePanel(listener) {
      var editor = this[skeletonSymbol].editor;
      editor.eventBus.on(SkeletonEvents.PANEL_HIDE, function (name, panel) {
        listener(name, new skeleton_item_SkeletonItem(panel));
      });
      return function () {
        return editor.eventBus.off(SkeletonEvents.PANEL_HIDE, listener);
      };
    }
    /**
     * 监听 widget 显示事件
     * @param listener
     * @returns
     */
  }, {
    key: "onShowWidget",
    value: function onShowWidget(listener) {
      var editor = this[skeletonSymbol].editor;
      editor.eventBus.on(SkeletonEvents.WIDGET_SHOW, function (name, panel) {
        listener(name, new skeleton_item_SkeletonItem(panel));
      });
      return function () {
        return editor.eventBus.off(SkeletonEvents.WIDGET_SHOW, listener);
      };
    }
    /**
     * 监听 widget 隐藏事件
     * @param listener
     * @returns
     */
  }, {
    key: "onHideWidget",
    value: function onHideWidget(listener) {
      var editor = this[skeletonSymbol].editor;
      editor.eventBus.on(SkeletonEvents.WIDGET_HIDE, function (name, panel) {
        listener(name, new skeleton_item_SkeletonItem(panel));
      });
      return function () {
        return editor.eventBus.off(SkeletonEvents.WIDGET_HIDE, listener);
      };
    }
  }, {
    key: "registerConfigTransducer",
    value: function registerConfigTransducer(fn, level, id) {
      this[skeletonSymbol].registerConfigTransducer(fn, level, id);
    }
  }]);
}();
function normalizeArea(area) {
  switch (area) {
    case 'leftArea':
    case 'left':
      return 'leftArea';
    case 'rightArea':
    case 'right':
      return 'rightArea';
    case 'topArea':
    case 'top':
      return 'topArea';
    case 'toolbar':
      return 'toolbar';
    case 'mainArea':
    case 'main':
    case 'center':
    case 'centerArea':
      return 'mainArea';
    case 'bottomArea':
    case 'bottom':
      return 'bottomArea';
    case 'leftFixedArea':
      return 'leftFixedArea';
    case 'leftFloatArea':
      return 'leftFloatArea';
    case 'stages':
      return 'stages';
    case 'subTopArea':
      return 'subTopArea';
    default:
      throw new Error("".concat(area, " not supported"));
  }
}
// CONCATENATED MODULE: ../shell/src/api/canvas.ts
function canvas_typeof(o) { "@babel/helpers - typeof"; return canvas_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, canvas_typeof(o); }
function canvas_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function canvas_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? canvas_ownKeys(Object(t), !0).forEach(function (r) { canvas_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : canvas_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function canvas_defineProperty(e, r, t) { return (r = canvas_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function canvas_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function canvas_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, canvas_toPropertyKey(o.key), o); } }
function canvas_createClass(e, r, t) { return r && canvas_defineProperties(e.prototype, r), t && canvas_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function canvas_toPropertyKey(t) { var i = canvas_toPrimitive(t, "string"); return "symbol" == canvas_typeof(i) ? i : i + ""; }
function canvas_toPrimitive(t, r) { if ("object" != canvas_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != canvas_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }



var clipboardInstanceSymbol = Symbol('clipboardInstace');
var canvas_Canvas = /*#__PURE__*/function () {
  function Canvas(editor) {
    var workspaceMode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    canvas_classCallCheck(this, Canvas);
    this.workspaceMode = void 0;
    this[editorSymbol] = void 0;
    this[clipboardInstanceSymbol] = void 0;
    this.workspaceMode = workspaceMode;
    this[editorSymbol] = editor;
    this[clipboardInstanceSymbol] = new model_clipboard_Clipboard();
  }
  return canvas_createClass(Canvas, [{
    key: designerSymbol,
    get: function get() {
      return this[editorSymbol].get('designer');
    }
  }, {
    key: "dragon",
    get: function get() {
      return model_dragon_Dragon.create(this[designerSymbol].dragon, this.workspaceMode);
    }
  }, {
    key: "activeTracker",
    get: function get() {
      var activeTracker = new model_active_tracker_ActiveTracker(this[designerSymbol].activeTracker);
      return activeTracker;
    }
  }, {
    key: "isInLiveEditing",
    get: function get() {
      var _this$editorSymbol$ge, _this$editorSymbol$ge2, _this$editorSymbol$ge3, _this$editorSymbol$ge4;
      return Boolean((_this$editorSymbol$ge = this[editorSymbol].get('designer')) === null || _this$editorSymbol$ge === void 0 ? void 0 : (_this$editorSymbol$ge2 = _this$editorSymbol$ge.project) === null || _this$editorSymbol$ge2 === void 0 ? void 0 : (_this$editorSymbol$ge3 = _this$editorSymbol$ge2.simulator) === null || _this$editorSymbol$ge3 === void 0 ? void 0 : (_this$editorSymbol$ge4 = _this$editorSymbol$ge3.liveEditing) === null || _this$editorSymbol$ge4 === void 0 ? void 0 : _this$editorSymbol$ge4.editing);
    }
  }, {
    key: "clipboard",
    get: function get() {
      return this[clipboardInstanceSymbol];
    }
  }, {
    key: "createScrollTarget",
    value: function createScrollTarget(shell) {
      return new ScrollTarget(shell);
    }
  }, {
    key: "createScroller",
    value: function createScroller(scrollable) {
      return this[designerSymbol].createScroller(scrollable);
    }
    /**
     * 创建插入位置，考虑放到 dragon 中
     */
  }, {
    key: "createLocation",
    value: function createLocation(locationData) {
      return new drop_location_DropLocation(this[designerSymbol].createLocation(canvas_objectSpread(canvas_objectSpread({}, locationData), {}, {
        target: locationData.target[nodeSymbol]
      })));
    }
    /**
     * @deprecated
     */
  }, {
    key: "dropLocation",
    get: function get() {
      return drop_location_DropLocation.create(this[designerSymbol].dropLocation || null);
    }
  }]);
}();
// CONCATENATED MODULE: ../shell/src/api/workspace.ts
function workspace_typeof(o) { "@babel/helpers - typeof"; return workspace_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, workspace_typeof(o); }
function workspace_regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return workspace_regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i.return) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (workspace_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, workspace_regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, workspace_regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), workspace_regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", workspace_regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), workspace_regeneratorDefine2(u), workspace_regeneratorDefine2(u, o, "Generator"), workspace_regeneratorDefine2(u, n, function () { return this; }), workspace_regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (workspace_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function workspace_regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } workspace_regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { workspace_regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, workspace_regeneratorDefine2(e, r, n, t); }
function workspace_asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function workspace_asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { workspace_asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { workspace_asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function workspace_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function workspace_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, workspace_toPropertyKey(o.key), o); } }
function workspace_createClass(e, r, t) { return r && workspace_defineProperties(e.prototype, r), t && workspace_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function workspace_toPropertyKey(t) { var i = workspace_toPrimitive(t, "string"); return "symbol" == workspace_typeof(i) ? i : i + ""; }
function workspace_toPrimitive(t, r) { if ("object" != workspace_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != workspace_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }




var workspace_Workspace = /*#__PURE__*/function () {
  function Workspace(innerWorkspace) {
    workspace_classCallCheck(this, Workspace);
    this[workspaceSymbol] = void 0;
    this[workspaceSymbol] = innerWorkspace;
  }
  return workspace_createClass(Workspace, [{
    key: "resourceList",
    get: function get() {
      return this[workspaceSymbol].getResourceList().map(function (d) {
        return new resource_Resource(d);
      });
    }
  }, {
    key: "setResourceList",
    value: function setResourceList(resourceList) {
      this[workspaceSymbol].setResourceList(resourceList);
    }
  }, {
    key: "onResourceListChange",
    value: function onResourceListChange(fn) {
      return this[workspaceSymbol].onResourceListChange(fn);
    }
  }, {
    key: "isActive",
    get: function get() {
      return this[workspaceSymbol].isActive;
    }
  }, {
    key: "window",
    get: function get() {
      if (!this[workspaceSymbol].window) {
        return null;
      }
      return new window_Window(this[workspaceSymbol].window);
    }
  }, {
    key: "resourceTypeList",
    get: function get() {
      return Array.from(this[workspaceSymbol].resourceTypeMap.values()).map(function (d) {
        var resourceName = d.name,
          resourceType = d.type;
        var _d$resourceTypeModel = d.resourceTypeModel({}, {}),
          description = _d$resourceTypeModel.description,
          editorViews = _d$resourceTypeModel.editorViews;
        return {
          resourceName: resourceName,
          resourceType: resourceType,
          description: description,
          editorViews: editorViews.map(function (d) {
            return {
              viewName: d.viewName,
              viewType: d.viewType || 'editor'
            };
          })
        };
      });
    }
  }, {
    key: "onWindowRendererReady",
    value: function onWindowRendererReady(fn) {
      return this[workspaceSymbol].onWindowRendererReady(fn);
    }
  }, {
    key: "registerResourceType",
    value: function registerResourceType(resourceTypeModel) {
      this[workspaceSymbol].registerResourceType(resourceTypeModel);
    }
  }, {
    key: "openEditorWindow",
    value: function () {
      var _openEditorWindow = workspace_asyncToGenerator(/*#__PURE__*/workspace_regenerator().m(function _callee() {
        var _arguments$,
          _args = arguments;
        return workspace_regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              if (!(typeof _args[0] === 'string')) {
                _context.n = 2;
                break;
              }
              _context.n = 1;
              return this[workspaceSymbol].openEditorWindow(_args[0], _args[1], _args[2], _args[3], _args[4]);
            case 1:
              _context.n = 3;
              break;
            case 2:
              _context.n = 3;
              return this[workspaceSymbol].openEditorWindowByResource((_arguments$ = _args[0]) === null || _arguments$ === void 0 ? void 0 : _arguments$[resourceSymbol], _args[1]);
            case 3:
              return _context.a(2);
          }
        }, _callee, this);
      }));
      function openEditorWindow() {
        return _openEditorWindow.apply(this, arguments);
      }
      return openEditorWindow;
    }()
  }, {
    key: "openEditorWindowById",
    value: function openEditorWindowById(id) {
      this[workspaceSymbol].openEditorWindowById(id);
    }
  }, {
    key: "removeEditorWindow",
    value: function removeEditorWindow() {
      if (typeof arguments[0] === 'string') {
        this[workspaceSymbol].removeEditorWindow(arguments[0], arguments[1]);
      } else {
        var _arguments$2;
        this[workspaceSymbol].removeEditorWindowByResource((_arguments$2 = arguments[0]) === null || _arguments$2 === void 0 ? void 0 : _arguments$2[resourceSymbol]);
      }
    }
  }, {
    key: "removeEditorWindowById",
    value: function removeEditorWindowById(id) {
      this[workspaceSymbol].removeEditorWindowById(id);
    }
  }, {
    key: "plugins",
    get: function get() {
      return new plugins_Plugins(this[workspaceSymbol].plugins, true).toProxy();
    }
  }, {
    key: "skeleton",
    get: function get() {
      return new skeleton_Skeleton(this[workspaceSymbol].skeleton, 'workspace', true);
    }
  }, {
    key: "windows",
    get: function get() {
      return this[workspaceSymbol].windows.map(function (d) {
        return new window_Window(d);
      });
    }
  }, {
    key: "onChangeWindows",
    value: function onChangeWindows(fn) {
      return this[workspaceSymbol].onChangeWindows(fn);
    }
  }, {
    key: "onChangeActiveWindow",
    value: function onChangeActiveWindow(fn) {
      return this[workspaceSymbol].onChangeActiveWindow(fn);
    }
  }, {
    key: "onChangeActiveEditorView",
    value: function onChangeActiveEditorView(fn) {
      return this[workspaceSymbol].onChangeActiveEditorView(fn);
    }
  }]);
}();
// CONCATENATED MODULE: ../shell/src/api/config.ts
function config_typeof(o) { "@babel/helpers - typeof"; return config_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, config_typeof(o); }
function config_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function config_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, config_toPropertyKey(o.key), o); } }
function config_createClass(e, r, t) { return r && config_defineProperties(e.prototype, r), t && config_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function config_toPropertyKey(t) { var i = config_toPrimitive(t, "string"); return "symbol" == config_typeof(i) ? i : i + ""; }
function config_toPrimitive(t, r) { if ("object" != config_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != config_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

var config_Config = /*#__PURE__*/function () {
  function Config(innerEngineConfig) {
    config_classCallCheck(this, Config);
    this[configSymbol] = void 0;
    this[configSymbol] = innerEngineConfig;
  }
  return config_createClass(Config, [{
    key: "has",
    value: function has(key) {
      return this[configSymbol].has(key);
    }
  }, {
    key: "get",
    value: function get(key, defaultValue) {
      return this[configSymbol].get(key, defaultValue);
    }
  }, {
    key: "set",
    value: function set(key, value) {
      this[configSymbol].set(key, value);
    }
  }, {
    key: "setConfig",
    value: function setConfig(config) {
      this[configSymbol].setConfig(config);
    }
  }, {
    key: "onceGot",
    value: function onceGot(key) {
      return this[configSymbol].onceGot(key);
    }
  }, {
    key: "onGot",
    value: function onGot(key, fn) {
      return this[configSymbol].onGot(key, fn);
    }
  }, {
    key: "getPreference",
    value: function getPreference() {
      return this[configSymbol].getPreference();
    }
  }]);
}();
// CONCATENATED MODULE: ../shell/src/components/context-menu.tsx



function ContextMenu(_ref) {
  var children = _ref.children,
    menus = _ref.menus,
    pluginContext = _ref.pluginContext;
  var handleContextMenu = Object(external_window_React_["useCallback"])(function (event) {
    event.preventDefault();
    event.stopPropagation();
    var destroyFn;
    var destroy = function destroy() {
      var _destroyFn;
      (_destroyFn = destroyFn) === null || _destroyFn === void 0 ? void 0 : _destroyFn();
    };
    var children = Object(utils_src["cb" /* parseContextMenuAsReactNode */])(Object(utils_src["db" /* parseContextMenuProperties */])(menus, {
      destroy: destroy,
      pluginContext: pluginContext
    }), {
      pluginContext: pluginContext
    });
    if (!(children !== null && children !== void 0 && children.length)) {
      return;
    }
    destroyFn = Object(utils_src["o" /* createContextMenu */])(children, {
      event: event
    });
  }, [menus]);
  if (!src["engineConfig"].get('enableContextMenu')) {
    return /*#__PURE__*/external_window_React_default.a.createElement(external_window_React_default.a.Fragment, null, children);
  }
  if (!menus) {
    return /*#__PURE__*/external_window_React_default.a.createElement(external_window_React_default.a.Fragment, null, children);
  }
  // 克隆 children 并添加 onContextMenu 事件处理器
  var childrenWithContextMenu = external_window_React_default.a.Children.map(children, function (child) {
    return /*#__PURE__*/external_window_React_default.a.cloneElement(child, {
      onContextMenu: handleContextMenu
    });
  });
  return /*#__PURE__*/external_window_React_default.a.createElement(external_window_React_default.a.Fragment, null, childrenWithContextMenu);
}
ContextMenu.create = function (pluginContext, menus, event) {
  event.preventDefault();
  event.stopPropagation();
  var children = Object(utils_src["cb" /* parseContextMenuAsReactNode */])(Object(utils_src["db" /* parseContextMenuProperties */])(menus, {
    pluginContext: pluginContext
  }), {
    pluginContext: pluginContext
  });
  if (!(children !== null && children !== void 0 && children.length)) {
    return;
  }
  return Object(utils_src["o" /* createContextMenu */])(children, {
    event: event
  });
};
// CONCATENATED MODULE: ../shell/src/api/commonUI.tsx
function commonUI_typeof(o) { "@babel/helpers - typeof"; return commonUI_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, commonUI_typeof(o); }
function commonUI_extends() { return commonUI_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, commonUI_extends.apply(null, arguments); }
function commonUI_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function commonUI_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, commonUI_toPropertyKey(o.key), o); } }
function commonUI_createClass(e, r, t) { return r && commonUI_defineProperties(e.prototype, r), t && commonUI_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function commonUI_toPropertyKey(t) { var i = commonUI_toPrimitive(t, "string"); return "symbol" == commonUI_typeof(i) ? i : i + ""; }
function commonUI_toPrimitive(t, r) { if ("object" != commonUI_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != commonUI_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }




var commonUI_CommonUI = /*#__PURE__*/function () {
  function CommonUI(editor) {
    commonUI_classCallCheck(this, CommonUI);
    this[editorSymbol] = void 0;
    this.Balloon = external_Next_["Balloon"];
    this.Breadcrumb = external_Next_["Breadcrumb"];
    this.Button = external_Next_["Button"];
    this.Card = external_Next_["Card"];
    this.Checkbox = external_Next_["Checkbox"];
    this.DatePicker = external_Next_["DatePicker"];
    this.Dialog = external_Next_["Dialog"];
    this.Dropdown = external_Next_["Dropdown"];
    this.Form = external_Next_["Form"];
    this.Icon = external_Next_["Icon"];
    this.Input = external_Next_["Input"];
    this.Loading = external_Next_["Loading"];
    this.Message = external_Next_["Message"];
    this.Overlay = external_Next_["Overlay"];
    this.Pagination = external_Next_["Pagination"];
    this.Radio = external_Next_["Radio"];
    this.Search = external_Next_["Search"];
    this.Select = external_Next_["Select"];
    this.SplitButton = external_Next_["SplitButton"];
    this.Step = external_Next_["Step"];
    this.Switch = external_Next_["Switch"];
    this.Tab = external_Next_["Tab"];
    this.Table = external_Next_["Table"];
    this.Tree = external_Next_["Tree"];
    this.TreeSelect = external_Next_["TreeSelect"];
    this.Upload = external_Next_["Upload"];
    this.Divider = external_Next_["Divider"];
    this.ContextMenu = void 0;
    this[editorSymbol] = editor;
    var innerContextMenu = function innerContextMenu(props) {
      var pluginContext = editor.get('pluginContext');
      return /*#__PURE__*/React.createElement(ContextMenu, commonUI_extends({}, props, {
        pluginContext: pluginContext
      }));
    };
    innerContextMenu.create = function (menus, event) {
      var pluginContext = editor.get('pluginContext');
      return ContextMenu.create(pluginContext, menus, event);
    };
    this.ContextMenu = innerContextMenu;
  }
  return commonUI_createClass(CommonUI, [{
    key: "Tip",
    get: function get() {
      return src["Tip"];
    }
  }, {
    key: "HelpTip",
    get: function get() {
      return src["HelpTip"];
    }
  }, {
    key: "Title",
    get: function get() {
      return src["Title"];
    }
  }]);
}();
// CONCATENATED MODULE: ../shell/src/api/command.ts
function command_typeof(o) { "@babel/helpers - typeof"; return command_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, command_typeof(o); }
function command_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function command_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, command_toPropertyKey(o.key), o); } }
function command_createClass(e, r, t) { return r && command_defineProperties(e.prototype, r), t && command_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function command_toPropertyKey(t) { var i = command_toPrimitive(t, "string"); return "symbol" == command_typeof(i) ? i : i + ""; }
function command_toPrimitive(t, r) { if ("object" != command_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != command_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

var optionsSymbol = Symbol('options');
var commandScopeSet = new Set();
var command_Command = /*#__PURE__*/function () {
  function Command(innerCommand, pluginContext, options) {
    command_classCallCheck(this, Command);
    this[commandSymbol] = void 0;
    this[optionsSymbol] = void 0;
    this[pluginContextSymbol] = void 0;
    this[commandSymbol] = innerCommand;
    this[optionsSymbol] = options;
    this[pluginContextSymbol] = pluginContext;
    var commandScope = options === null || options === void 0 ? void 0 : options.commandScope;
    if (commandScope && commandScopeSet.has(commandScope)) {
      throw new Error("Command scope \"".concat(commandScope, "\" has been registered."));
    }
  }
  return command_createClass(Command, [{
    key: "registerCommand",
    value: function registerCommand(command) {
      this[commandSymbol].registerCommand(command, this[optionsSymbol]);
    }
  }, {
    key: "batchExecuteCommand",
    value: function batchExecuteCommand(commands) {
      this[commandSymbol].batchExecuteCommand(commands, this[pluginContextSymbol]);
    }
  }, {
    key: "executeCommand",
    value: function executeCommand(name, args) {
      this[commandSymbol].executeCommand(name, args);
    }
  }, {
    key: "listCommands",
    value: function listCommands() {
      return this[commandSymbol].listCommands();
    }
  }, {
    key: "unregisterCommand",
    value: function unregisterCommand(name) {
      this[commandSymbol].unregisterCommand(name);
    }
  }, {
    key: "onCommandError",
    value: function onCommandError(callback) {
      this[commandSymbol].onCommandError(callback);
    }
  }]);
}();
// CONCATENATED MODULE: ../shell/src/api/index.ts















// CONCATENATED MODULE: ../shell/src/model/modal-nodes-manager.ts
function model_modal_nodes_manager_typeof(o) { "@babel/helpers - typeof"; return model_modal_nodes_manager_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, model_modal_nodes_manager_typeof(o); }
function model_modal_nodes_manager_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function model_modal_nodes_manager_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, model_modal_nodes_manager_toPropertyKey(o.key), o); } }
function model_modal_nodes_manager_createClass(e, r, t) { return r && model_modal_nodes_manager_defineProperties(e.prototype, r), t && model_modal_nodes_manager_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function model_modal_nodes_manager_toPropertyKey(t) { var i = model_modal_nodes_manager_toPrimitive(t, "string"); return "symbol" == model_modal_nodes_manager_typeof(i) ? i : i + ""; }
function model_modal_nodes_manager_toPrimitive(t, r) { if ("object" != model_modal_nodes_manager_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != model_modal_nodes_manager_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }


var model_modal_nodes_manager_ModalNodesManager = /*#__PURE__*/function () {
  function ModalNodesManager(modalNodesManager) {
    model_modal_nodes_manager_classCallCheck(this, ModalNodesManager);
    this[modalNodesManagerSymbol] = void 0;
    this[modalNodesManagerSymbol] = modalNodesManager;
  }
  return model_modal_nodes_manager_createClass(ModalNodesManager, [{
    key: "setNodes",
    value:
    /**
     * 设置模态节点，触发内部事件
     */
    function setNodes() {
      this[modalNodesManagerSymbol].setNodes();
    }
    /**
     * 获取模态节点（们）
     */
  }, {
    key: "getModalNodes",
    value: function getModalNodes() {
      var innerNodes = this[modalNodesManagerSymbol].getModalNodes();
      var shellNodes = [];
      innerNodes === null || innerNodes === void 0 ? void 0 : innerNodes.forEach(function (node) {
        var shellNode = model_node_Node.create(node);
        if (shellNode) {
          shellNodes.push(shellNode);
        }
      });
      return shellNodes;
    }
    /**
     * 获取当前可见的模态节点
     */
  }, {
    key: "getVisibleModalNode",
    value: function getVisibleModalNode() {
      return model_node_Node.create(this[modalNodesManagerSymbol].getVisibleModalNode());
    }
    /**
     * 隐藏模态节点（们）
     */
  }, {
    key: "hideModalNodes",
    value: function hideModalNodes() {
      this[modalNodesManagerSymbol].hideModalNodes();
    }
    /**
     * 设置指定节点为可见态
     * @param node Node
     */
  }, {
    key: "setVisible",
    value: function setVisible(node) {
      this[modalNodesManagerSymbol].setVisible(node[nodeSymbol]);
    }
    /**
     * 设置指定节点为不可见态
     * @param node Node
     */
  }, {
    key: "setInvisible",
    value: function setInvisible(node) {
      this[modalNodesManagerSymbol].setInvisible(node[nodeSymbol]);
    }
  }], [{
    key: "create",
    value: function create(modalNodesManager) {
      if (!modalNodesManager) {
        return null;
      }
      return new ModalNodesManager(modalNodesManager);
    }
  }]);
}();
// CONCATENATED MODULE: ../shell/src/model/document-model.ts
function model_document_model_typeof(o) { "@babel/helpers - typeof"; return model_document_model_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, model_document_model_typeof(o); }
function model_document_model_createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = model_document_model_unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t.return || t.return(); } finally { if (u) throw o; } } }; }
function model_document_model_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return model_document_model_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? model_document_model_arrayLikeToArray(r, a) : void 0; } }
function model_document_model_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function model_document_model_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function model_document_model_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, model_document_model_toPropertyKey(o.key), o); } }
function model_document_model_createClass(e, r, t) { return r && model_document_model_defineProperties(e.prototype, r), t && model_document_model_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function model_document_model_toPropertyKey(t) { var i = model_document_model_toPrimitive(t, "string"); return "symbol" == model_document_model_typeof(i) ? i : i + ""; }
function model_document_model_toPrimitive(t, r) { if ("object" != model_document_model_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != model_document_model_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }











var shellDocSymbol = Symbol('shellDocSymbol');
var model_document_model_DocumentModel = /*#__PURE__*/function () {
  function DocumentModel(document) {
    var _document$designer;
    model_document_model_classCallCheck(this, DocumentModel);
    this[documentSymbol] = void 0;
    this[editorSymbol] = void 0;
    this._focusNode = void 0;
    this.selection = void 0;
    this.detecting = void 0;
    this.history = void 0;
    /**
     * @deprecated use canvas API instead
     */
    this.canvas = void 0;
    this[documentSymbol] = document;
    this[editorSymbol] = (_document$designer = document.designer) === null || _document$designer === void 0 ? void 0 : _document$designer.editor;
    this.selection = new model_selection_Selection(document);
    this.detecting = new model_detecting_Detecting(document);
    this.history = new model_history_History(document);
    this.canvas = new canvas_Canvas(this[editorSymbol]);
    this._focusNode = model_node_Node.create(this[documentSymbol].focusNode);
  }
  return model_document_model_createClass(DocumentModel, [{
    key: "id",
    get:
    /**
     * id
     */
    function get() {
      return this[documentSymbol].id;
    },
    set: function set(id) {
      this[documentSymbol].id = id;
    }
    /**
     * 获取当前文档所属的 project
     * @returns
     */
  }, {
    key: "project",
    get: function get() {
      return api_project_Project.create(this[documentSymbol].project, true);
    }
    /**
     * 获取文档的根节点
     * root node of this documentModel
     * @returns
     */
  }, {
    key: "root",
    get: function get() {
      return model_node_Node.create(this[documentSymbol].rootNode);
    }
  }, {
    key: "focusNode",
    get: function get() {
      return this._focusNode || this.root;
    },
    set: function set(node) {
      this._focusNode = node;
      this[editorSymbol].eventBus.emit('shell.document.focusNodeChanged', {
        document: this,
        focusNode: node
      });
    }
    /**
     * 获取文档下所有节点 Map, key 为 nodeId
     * get map of all nodes , using node.id as key
     */
  }, {
    key: "nodesMap",
    get: function get() {
      var map = new Map();
      var _iterator = model_document_model_createForOfIteratorHelper(this[documentSymbol].nodesMap.keys()),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var id = _step.value;
          map.set(id, this.getNodeById(id));
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      return map;
    }
    /**
     * 模态节点管理
     */
  }, {
    key: "modalNodesManager",
    get: function get() {
      return model_modal_nodes_manager_ModalNodesManager.create(this[documentSymbol].modalNodesManager);
    }
  }, {
    key: "dropLocation",
    get: function get() {
      return drop_location_DropLocation.create(this[documentSymbol].dropLocation);
    },
    set: function set(loc) {
      this[documentSymbol].dropLocation = loc;
    }
    /**
     * 根据 nodeId 返回 Node 实例
     * get node instance by nodeId
     * @param {string} nodeId
     */
  }, {
    key: "getNodeById",
    value: function getNodeById(nodeId) {
      return model_node_Node.create(this[documentSymbol].getNode(nodeId));
    }
    /**
     * 导入 schema
     * @param schema
     */
  }, {
    key: "importSchema",
    value: function importSchema(schema) {
      this[documentSymbol].import(schema);
      this[editorSymbol].eventBus.emit('shell.document.importSchema', schema);
    }
    /**
     * 导出 schema
     * @param stage
     * @returns
     */
  }, {
    key: "exportSchema",
    value: function exportSchema() {
      var stage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : types_src["i" /* IPublicEnumTransformStage */].Render;
      return this[documentSymbol].export(stage);
    }
    /**
     * 插入节点
     * @param parent
     * @param thing
     * @param at
     * @param copy
     * @returns
     */
  }, {
    key: "insertNode",
    value: function insertNode(parent, thing, at, copy) {
      var node = this[documentSymbol].insertNode(parent[nodeSymbol] ? parent[nodeSymbol] : parent, thing !== null && thing !== void 0 && thing[nodeSymbol] ? thing[nodeSymbol] : thing, at, copy);
      return model_node_Node.create(node);
    }
    /**
     * 创建一个节点
     * @param data
     * @returns
     */
  }, {
    key: "createNode",
    value: function createNode(data) {
      return model_node_Node.create(this[documentSymbol].createNode(data));
    }
    /**
     * 移除指定节点/节点id
     * @param idOrNode
     */
  }, {
    key: "removeNode",
    value: function removeNode(idOrNode) {
      this[documentSymbol].removeNode(idOrNode);
    }
    /**
     * componentsMap of documentModel
     * @param extraComps
     * @returns
     */
  }, {
    key: "getComponentsMap",
    value: function getComponentsMap(extraComps) {
      return this[documentSymbol].getComponentsMap(extraComps);
    }
    /**
     * 检查拖拽放置的目标节点是否可以放置该拖拽对象
     * @param dropTarget 拖拽放置的目标节点
     * @param dragObject 拖拽的对象
     * @returns boolean 是否可以放置
     */
  }, {
    key: "checkNesting",
    value: function checkNesting(dropTarget, dragObject) {
      var innerDragObject = dragObject;
      if (Object(utils_src["E" /* isDragNodeObject */])(dragObject)) {
        var _innerDragObject$node;
        innerDragObject.nodes = (_innerDragObject$node = innerDragObject.nodes) === null || _innerDragObject$node === void 0 ? void 0 : _innerDragObject$node.map(function (node) {
          return node[nodeSymbol] || node;
        });
      }
      return this[documentSymbol].checkNesting(dropTarget[nodeSymbol] || dropTarget, innerDragObject);
    }
    /**
     * 当前 document 新增节点事件
     */
  }, {
    key: "onAddNode",
    value: function onAddNode(fn) {
      return this[documentSymbol].onNodeCreate(function (node) {
        fn(model_node_Node.create(node));
      });
    }
    /**
     * 当前 document 新增节点事件，此时节点已经挂载到 document 上
     */
  }, {
    key: "onMountNode",
    value: function onMountNode(fn) {
      return this[documentSymbol].onMountNode(function (_ref) {
        var node = _ref.node;
        fn({
          node: model_node_Node.create(node)
        });
      });
    }
    /**
     * 当前 document 删除节点事件
     */
  }, {
    key: "onRemoveNode",
    value: function onRemoveNode(fn) {
      return this[documentSymbol].onNodeDestroy(function (node) {
        fn(model_node_Node.create(node));
      });
    }
    /**
     * 当前 document 的 hover 变更事件
     */
  }, {
    key: "onChangeDetecting",
    value: function onChangeDetecting(fn) {
      return this[documentSymbol].designer.detecting.onDetectingChange(function (node) {
        fn(model_node_Node.create(node));
      });
    }
    /**
     * 当前 document 的选中变更事件
     */
  }, {
    key: "onChangeSelection",
    value: function onChangeSelection(fn) {
      return this[documentSymbol].selection.onSelectionChange(function (ids) {
        fn(ids);
      });
    }
    /**
     * 当前 document 的节点显隐状态变更事件
     * @param fn
     */
  }, {
    key: "onChangeNodeVisible",
    value: function onChangeNodeVisible(fn) {
      return this[documentSymbol].onChangeNodeVisible(function (node, visible) {
        fn(model_node_Node.create(node), visible);
      });
    }
    /**
     * 当前 document 的节点 children 变更事件
     * @param fn
     */
  }, {
    key: "onChangeNodeChildren",
    value: function onChangeNodeChildren(fn) {
      return this[documentSymbol].onChangeNodeChildren(function (info) {
        if (!info) {
          return;
        }
        fn({
          type: info.type,
          node: model_node_Node.create(info.node)
        });
      });
    }
    /**
     * 当前 document 节点属性修改事件
     * @param fn
     */
  }, {
    key: "onChangeNodeProp",
    value: function onChangeNodeProp(fn) {
      var _this = this;
      var callback = function callback(info) {
        fn({
          key: info.key,
          oldValue: info.oldValue,
          newValue: info.newValue,
          prop: model_prop_Prop.create(info.prop),
          node: model_node_Node.create(info.node)
        });
      };
      this[editorSymbol].on(types_src["e" /* GlobalEvent */].Node.Prop.InnerChange, callback);
      return function () {
        _this[editorSymbol].off(types_src["e" /* GlobalEvent */].Node.Prop.InnerChange, callback);
      };
    }
    /**
     * import schema event
     * @param fn
     */
  }, {
    key: "onImportSchema",
    value: function onImportSchema(fn) {
      return this[editorSymbol].eventBus.on('shell.document.importSchema', fn);
    }
  }, {
    key: "isDetectingNode",
    value: function isDetectingNode(node) {
      return this.detecting.current === node;
    }
  }, {
    key: "onFocusNodeChanged",
    value: function onFocusNodeChanged(fn) {
      if (!fn) {
        return function () {};
      }
      return this[editorSymbol].eventBus.on('shell.document.focusNodeChanged', function (payload) {
        var document = payload.document,
          focusNode = payload.focusNode;
        fn(document, focusNode);
      });
    }
  }, {
    key: "onDropLocationChanged",
    value: function onDropLocationChanged(fn) {
      if (!fn) {
        return function () {};
      }
      return this[editorSymbol].eventBus.on('document.dropLocation.changed', function (payload) {
        var document = payload.document;
        fn(document);
      });
    }
  }], [{
    key: "create",
    value: function create(document) {
      if (!document) {
        return null;
      }
      // @ts-ignore 直接返回已挂载的 shell doc 实例
      if (document[shellDocSymbol]) {
        return document[shellDocSymbol];
      }
      var shellDoc = new DocumentModel(document);
      // @ts-ignore 直接返回已挂载的 shell doc 实例
      document[shellDocSymbol] = shellDoc;
      return shellDoc;
    }
  }]);
}();
// CONCATENATED MODULE: ../shell/src/model/node-children.ts
function model_node_children_typeof(o) { "@babel/helpers - typeof"; return model_node_children_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, model_node_children_typeof(o); }
function model_node_children_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function model_node_children_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, model_node_children_toPropertyKey(o.key), o); } }
function model_node_children_createClass(e, r, t) { return r && model_node_children_defineProperties(e.prototype, r), t && model_node_children_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function model_node_children_toPropertyKey(t) { var i = model_node_children_toPrimitive(t, "string"); return "symbol" == model_node_children_typeof(i) ? i : i + ""; }
function model_node_children_toPrimitive(t, r) { if ("object" != model_node_children_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != model_node_children_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }



var model_node_children_NodeChildren = /*#__PURE__*/function () {
  function NodeChildren(nodeChildren) {
    model_node_children_classCallCheck(this, NodeChildren);
    this[nodeChildrenSymbol] = void 0;
    this[nodeChildrenSymbol] = nodeChildren;
  }
  return model_node_children_createClass(NodeChildren, [{
    key: "owner",
    get:
    /**
     * 返回当前 children 实例所属的节点实例
     */
    function get() {
      return model_node_Node.create(this[nodeChildrenSymbol].owner);
    }
    /**
     * children 内的节点实例数
     */
  }, {
    key: "size",
    get: function get() {
      return this[nodeChildrenSymbol].size;
    }
    /**
     * @deprecated
     * 是否为空
     * @returns
     */
  }, {
    key: "isEmpty",
    get: function get() {
      return this[nodeChildrenSymbol].isEmptyNode;
    }
    /**
     * 是否为空
     * @returns
     */
  }, {
    key: "isEmptyNode",
    get: function get() {
      return this[nodeChildrenSymbol].isEmptyNode;
    }
    /**
     * @deprecated
     * judge if it is not empty
     */
  }, {
    key: "notEmpty",
    get: function get() {
      return this[nodeChildrenSymbol].notEmptyNode;
    }
    /**
     * judge if it is not empty
     */
  }, {
    key: "notEmptyNode",
    get: function get() {
      return this[nodeChildrenSymbol].notEmptyNode;
    }
    /**
     * 删除指定节点
     * delete the node
     * @param node
     */
  }, {
    key: "delete",
    value: function _delete(node) {
      return this[nodeChildrenSymbol].delete(node === null || node === void 0 ? void 0 : node[nodeSymbol]);
    }
    /**
     * 插入一个节点
     * @param node 待插入节点
     * @param at 插入下标
     * @returns
     */
  }, {
    key: "insert",
    value: function insert(node, at) {
      return this[nodeChildrenSymbol].insert(node === null || node === void 0 ? void 0 : node[nodeSymbol], at);
    }
    /**
     * 返回指定节点的下标
     * @param node
     * @returns
     */
  }, {
    key: "indexOf",
    value: function indexOf(node) {
      return this[nodeChildrenSymbol].indexOf(node === null || node === void 0 ? void 0 : node[nodeSymbol]);
    }
    /**
     * 类似数组 splice 操作
     * @param start
     * @param deleteCount
     * @param node
     */
  }, {
    key: "splice",
    value: function splice(start, deleteCount, node) {
      this[nodeChildrenSymbol].splice(start, deleteCount, node === null || node === void 0 ? void 0 : node[nodeSymbol]);
    }
    /**
     * 返回指定下标的节点
     * @param index
     * @returns
     */
  }, {
    key: "get",
    value: function get(index) {
      return model_node_Node.create(this[nodeChildrenSymbol].get(index));
    }
    /**
     * 是否包含指定节点
     * @param node
     * @returns
     */
  }, {
    key: "has",
    value: function has(node) {
      return this[nodeChildrenSymbol].has(node === null || node === void 0 ? void 0 : node[nodeSymbol]);
    }
    /**
     * 类似数组的 forEach
     * @param fn
     */
  }, {
    key: "forEach",
    value: function forEach(fn) {
      this[nodeChildrenSymbol].forEach(function (item, index) {
        fn(model_node_Node.create(item), index);
      });
    }
    /**
     * 类似数组的 reverse
     */
  }, {
    key: "reverse",
    value: function reverse() {
      return this[nodeChildrenSymbol].reverse().map(function (d) {
        return model_node_Node.create(d);
      });
    }
    /**
     * 类似数组的 map
     * @param fn
     */
  }, {
    key: "map",
    value: function map(fn) {
      return this[nodeChildrenSymbol].map(function (item, index) {
        return fn(model_node_Node.create(item), index);
      });
    }
    /**
     * 类似数组的 every
     * @param fn
     */
  }, {
    key: "every",
    value: function every(fn) {
      return this[nodeChildrenSymbol].every(function (item, index) {
        return fn(model_node_Node.create(item), index);
      });
    }
    /**
     * 类似数组的 some
     * @param fn
     */
  }, {
    key: "some",
    value: function some(fn) {
      return this[nodeChildrenSymbol].some(function (item, index) {
        return fn(model_node_Node.create(item), index);
      });
    }
    /**
     * 类似数组的 filter
     * @param fn
     */
  }, {
    key: "filter",
    value: function filter(fn) {
      return this[nodeChildrenSymbol].filter(function (item, index) {
        return fn(model_node_Node.create(item), index);
      }).map(function (item) {
        return model_node_Node.create(item);
      });
    }
    /**
     * 类似数组的 find
     * @param fn
     */
  }, {
    key: "find",
    value: function find(fn) {
      return model_node_Node.create(this[nodeChildrenSymbol].find(function (item, index) {
        return fn(model_node_Node.create(item), index);
      }));
    }
    /**
     * 类似数组的 reduce
     * @param fn
     */
  }, {
    key: "reduce",
    value: function reduce(fn, initialValue) {
      return this[nodeChildrenSymbol].reduce(function (acc, cur) {
        return fn(acc, model_node_Node.create(cur));
      }, initialValue);
    }
    /**
     * 导入 schema
     * @param data
     */
  }, {
    key: "importSchema",
    value: function importSchema(data) {
      this[nodeChildrenSymbol].import(data);
    }
    /**
     * 导出 schema
     * @param stage
     * @returns
     */
  }, {
    key: "exportSchema",
    value: function exportSchema() {
      var stage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : types_src["i" /* IPublicEnumTransformStage */].Render;
      return this[nodeChildrenSymbol].export(stage);
    }
    /**
     * 执行新增、删除、排序等操作
     * @param remover
     * @param adder
     * @param sorter
     */
  }, {
    key: "mergeChildren",
    value: function mergeChildren(remover, adder, originalSorter) {
      var sorter = originalSorter;
      if (!sorter) {
        sorter = function sorter() {
          return 0;
        };
      }
      this[nodeChildrenSymbol].mergeChildren(function (node, idx) {
        return remover(model_node_Node.create(node), idx);
      }, function (children) {
        return adder(children.map(function (node) {
          return model_node_Node.create(node);
        }));
      }, function (firstNode, secondNode) {
        return sorter(model_node_Node.create(firstNode), model_node_Node.create(secondNode));
      });
    }
  }], [{
    key: "create",
    value: function create(nodeChildren) {
      if (!nodeChildren) {
        return null;
      }
      return new NodeChildren(nodeChildren);
    }
  }]);
}();
// CONCATENATED MODULE: ../shell/src/model/setting-field.ts
function model_setting_field_typeof(o) { "@babel/helpers - typeof"; return model_setting_field_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, model_setting_field_typeof(o); }
function model_setting_field_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function model_setting_field_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, model_setting_field_toPropertyKey(o.key), o); } }
function model_setting_field_createClass(e, r, t) { return r && model_setting_field_defineProperties(e.prototype, r), t && model_setting_field_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function model_setting_field_toPropertyKey(t) { var i = model_setting_field_toPrimitive(t, "string"); return "symbol" == model_setting_field_typeof(i) ? i : i + ""; }
function model_setting_field_toPrimitive(t, r) { if ("object" != model_setting_field_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != model_setting_field_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }






var model_setting_field_SettingField = /*#__PURE__*/function () {
  function SettingField(prop) {
    model_setting_field_classCallCheck(this, SettingField);
    this[settingFieldSymbol] = void 0;
    this[settingFieldSymbol] = prop;
  }
  return model_setting_field_createClass(SettingField, [{
    key: "isGroup",
    get:
    /**
     * 获取设置属性的 isGroup
     */
    function get() {
      return this[settingFieldSymbol].isGroup;
    }
    /**
     * 获取设置属性的 id
     */
  }, {
    key: "id",
    get: function get() {
      return this[settingFieldSymbol].id;
    }
    /**
     * 获取设置属性的 name
     */
  }, {
    key: "name",
    get: function get() {
      return this[settingFieldSymbol].name;
    }
    /**
     * 获取设置属性的 key
     */
  }, {
    key: "key",
    get: function get() {
      return this[settingFieldSymbol].getKey();
    }
    /**
     * 获取设置属性的 path
     */
  }, {
    key: "path",
    get: function get() {
      return this[settingFieldSymbol].path;
    }
    /**
     * 获取设置属性的 title
     */
  }, {
    key: "title",
    get: function get() {
      return this[settingFieldSymbol].title;
    }
    /**
     * 获取设置属性的 setter
     */
  }, {
    key: "setter",
    get: function get() {
      return this[settingFieldSymbol].setter;
    }
    /**
     * 获取设置属性的 expanded
     */
  }, {
    key: "expanded",
    get: function get() {
      return this[settingFieldSymbol].expanded;
    }
    /**
     * 获取设置属性的 extraProps
     */
  }, {
    key: "extraProps",
    get: function get() {
      return this[settingFieldSymbol].extraProps;
    }
  }, {
    key: "props",
    get: function get() {
      return model_setting_top_entry_SettingTopEntry.create(this[settingFieldSymbol].props);
    }
    /**
     * 获取设置属性对应的节点实例
     */
  }, {
    key: "node",
    get: function get() {
      return model_node_Node.create(this[settingFieldSymbol].getNode());
    }
    /**
     * 获取设置属性的父设置属性
     */
  }, {
    key: "parent",
    get: function get() {
      if (setting_field_isSettingField(this[settingFieldSymbol].parent)) {
        return SettingField.create(this[settingFieldSymbol].parent);
      }
      return model_setting_top_entry_SettingTopEntry.create(this[settingFieldSymbol].parent);
    }
    /**
     * 获取顶级设置属性
     */
  }, {
    key: "top",
    get: function get() {
      return model_setting_top_entry_SettingTopEntry.create(this[settingFieldSymbol].top);
    }
    /**
     * 是否是 SettingField 实例
     */
  }, {
    key: "isSettingField",
    get: function get() {
      return this[settingFieldSymbol].isSettingField;
    }
    /**
     * componentMeta
     */
  }, {
    key: "componentMeta",
    get: function get() {
      return model_component_meta_ComponentMeta.create(this[settingFieldSymbol].componentMeta);
    }
    /**
     * 获取设置属性的 items
     */
  }, {
    key: "items",
    get: function get() {
      var _this$settingFieldSym;
      return (_this$settingFieldSym = this[settingFieldSymbol].items) === null || _this$settingFieldSym === void 0 ? void 0 : _this$settingFieldSym.map(function (item) {
        if (Object(utils_src["A" /* isCustomView */])(item)) {
          return item;
        }
        return item.internalToShellField();
      });
    }
    /**
     * 设置 key 值
     * @param key
     */
  }, {
    key: "setKey",
    value: function setKey(key) {
      this[settingFieldSymbol].setKey(key);
    }
    /**
     * @deprecated use .node instead
     */
  }, {
    key: "getNode",
    value: function getNode() {
      return this.node;
    }
    /**
     * @deprecated use .parent instead
     */
  }, {
    key: "getParent",
    value: function getParent() {
      return this.parent;
    }
    /**
     * 设置值
     * @param val 值
     */
  }, {
    key: "setValue",
    value: function setValue(val, extraOptions) {
      this[settingFieldSymbol].setValue(val, false, false, extraOptions);
    }
    /**
     * 设置子级属性值
     * @param propName 子属性名
     * @param value 值
     */
  }, {
    key: "setPropValue",
    value: function setPropValue(propName, value) {
      this[settingFieldSymbol].setPropValue(propName, value);
    }
    /**
     * 清空指定属性值
     * @param propName
     */
  }, {
    key: "clearPropValue",
    value: function clearPropValue(propName) {
      this[settingFieldSymbol].clearPropValue(propName);
    }
    /**
     * 获取配置的默认值
     * @returns
     */
  }, {
    key: "getDefaultValue",
    value: function getDefaultValue() {
      return this[settingFieldSymbol].getDefaultValue();
    }
    /**
     * 获取值
     * @returns
     */
  }, {
    key: "getValue",
    value: function getValue() {
      return this[settingFieldSymbol].getValue();
    }
    /**
     * 获取子级属性值
     * @param propName 子属性名
     * @returns
     */
  }, {
    key: "getPropValue",
    value: function getPropValue(propName) {
      return this[settingFieldSymbol].getPropValue(propName);
    }
    /**
     * 获取顶层附属属性值
     */
  }, {
    key: "getExtraPropValue",
    value: function getExtraPropValue(propName) {
      return this[settingFieldSymbol].getExtraPropValue(propName);
    }
    /**
     * 设置顶层附属属性值
     */
  }, {
    key: "setExtraPropValue",
    value: function setExtraPropValue(propName, value) {
      this[settingFieldSymbol].setExtraPropValue(propName, value);
    }
    /**
     * 获取设置属性集
     * @returns
     */
  }, {
    key: "getProps",
    value: function getProps() {
      return model_setting_top_entry_SettingTopEntry.create(this[settingFieldSymbol].getProps());
    }
    /**
     * 是否绑定了变量
     * @returns
     */
  }, {
    key: "isUseVariable",
    value: function isUseVariable() {
      return this[settingFieldSymbol].isUseVariable();
    }
    /**
     * 设置绑定变量
     * @param flag
     */
  }, {
    key: "setUseVariable",
    value: function setUseVariable(flag) {
      this[settingFieldSymbol].setUseVariable(flag);
    }
    /**
     * 创建一个设置 field 实例
     * @param config
     * @returns
     */
  }, {
    key: "createField",
    value: function createField(config) {
      return SettingField.create(this[settingFieldSymbol].createField(config));
    }
    /**
     * 获取值，当为变量时，返回 mock
     * @returns
     */
  }, {
    key: "getMockOrValue",
    value: function getMockOrValue() {
      return this[settingFieldSymbol].getMockOrValue();
    }
    /**
     * 销毁当前 field 实例
     */
  }, {
    key: "purge",
    value: function purge() {
      this[settingFieldSymbol].purge();
    }
    /**
     * 移除当前 field 实例
     */
  }, {
    key: "remove",
    value: function remove() {
      this[settingFieldSymbol].remove();
    }
    /**
     * 设置 autorun
     * @param action
     * @returns
     */
  }, {
    key: "onEffect",
    value: function onEffect(action) {
      return this[settingFieldSymbol].onEffect(action);
    }
    /**
     * 返回 shell 模型，兼容某些场景下 field 已经是 shell field 了
     * @returns
     */
  }, {
    key: "internalToShellField",
    value: function internalToShellField() {
      return this;
    }
  }], [{
    key: "create",
    value: function create(prop) {
      return new SettingField(prop);
    }
  }]);
}();
// CONCATENATED MODULE: ../shell/src/model/setting-top-entry.ts
function model_setting_top_entry_typeof(o) { "@babel/helpers - typeof"; return model_setting_top_entry_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, model_setting_top_entry_typeof(o); }
function model_setting_top_entry_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function model_setting_top_entry_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, model_setting_top_entry_toPropertyKey(o.key), o); } }
function model_setting_top_entry_createClass(e, r, t) { return r && model_setting_top_entry_defineProperties(e.prototype, r), t && model_setting_top_entry_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function model_setting_top_entry_toPropertyKey(t) { var i = model_setting_top_entry_toPrimitive(t, "string"); return "symbol" == model_setting_top_entry_typeof(i) ? i : i + ""; }
function model_setting_top_entry_toPrimitive(t, r) { if ("object" != model_setting_top_entry_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != model_setting_top_entry_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }



var model_setting_top_entry_SettingTopEntry = /*#__PURE__*/function () {
  function SettingTopEntry(prop) {
    model_setting_top_entry_classCallCheck(this, SettingTopEntry);
    this[settingTopEntrySymbol] = void 0;
    this[settingTopEntrySymbol] = prop;
  }
  return model_setting_top_entry_createClass(SettingTopEntry, [{
    key: "node",
    get:
    /**
     * 返回所属的节点实例
     */
    function get() {
      return model_node_Node.create(this[settingTopEntrySymbol].getNode());
    }
    /**
     * 获取子级属性对象
     * @param propName
     * @returns
     */
  }, {
    key: "get",
    value: function get(propName) {
      return model_setting_field_SettingField.create(this[settingTopEntrySymbol].get(propName));
    }
    /**
     * @deprecated use .node instead
     */
  }, {
    key: "getNode",
    value: function getNode() {
      return this.node;
    }
    /**
     * 获取指定 propName 的值
     * @param propName
     * @returns
     */
  }, {
    key: "getPropValue",
    value: function getPropValue(propName) {
      return this[settingTopEntrySymbol].getPropValue(propName);
    }
    /**
     * 设置指定 propName 的值
     * @param propName
     * @param value
     */
  }, {
    key: "setPropValue",
    value: function setPropValue(propName, value) {
      this[settingTopEntrySymbol].setPropValue(propName, value);
    }
  }, {
    key: "clearPropValue",
    value: function clearPropValue(propName) {
      this[settingTopEntrySymbol].clearPropValue(propName);
    }
  }], [{
    key: "create",
    value: function create(prop) {
      return new SettingTopEntry(prop);
    }
  }]);
}();
// CONCATENATED MODULE: ../shell/src/model/condition-group.ts
function condition_group_typeof(o) { "@babel/helpers - typeof"; return condition_group_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, condition_group_typeof(o); }
function condition_group_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function condition_group_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, condition_group_toPropertyKey(o.key), o); } }
function condition_group_createClass(e, r, t) { return r && condition_group_defineProperties(e.prototype, r), t && condition_group_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function condition_group_toPropertyKey(t) { var i = condition_group_toPrimitive(t, "string"); return "symbol" == condition_group_typeof(i) ? i : i + ""; }
function condition_group_toPrimitive(t, r) { if ("object" != condition_group_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != condition_group_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }


var condition_group_ConditionGroup = /*#__PURE__*/function () {
  function ConditionGroup(conditionGroup) {
    condition_group_classCallCheck(this, ConditionGroup);
    this[conditionGroupSymbol] = void 0;
    this[conditionGroupSymbol] = conditionGroup;
  }
  return condition_group_createClass(ConditionGroup, [{
    key: "id",
    get: function get() {
      var _this$conditionGroupS;
      return (_this$conditionGroupS = this[conditionGroupSymbol]) === null || _this$conditionGroupS === void 0 ? void 0 : _this$conditionGroupS.id;
    }
  }, {
    key: "title",
    get: function get() {
      var _this$conditionGroupS2;
      return (_this$conditionGroupS2 = this[conditionGroupSymbol]) === null || _this$conditionGroupS2 === void 0 ? void 0 : _this$conditionGroupS2.title;
    }
  }, {
    key: "firstNode",
    get: function get() {
      var _this$conditionGroupS3;
      return model_node_Node.create((_this$conditionGroupS3 = this[conditionGroupSymbol]) === null || _this$conditionGroupS3 === void 0 ? void 0 : _this$conditionGroupS3.firstNode);
    }
  }, {
    key: "setVisible",
    value: function setVisible(node) {
      var _this$conditionGroupS4;
      (_this$conditionGroupS4 = this[conditionGroupSymbol]) === null || _this$conditionGroupS4 === void 0 ? void 0 : _this$conditionGroupS4.setVisible(node[nodeSymbol] ? node[nodeSymbol] : node);
    }
  }], [{
    key: "create",
    value: function create(conditionGroup) {
      if (!conditionGroup) {
        return null;
      }
      // @ts-ignore
      if (conditionGroup[conditionGroupSymbol]) {
        return conditionGroup[conditionGroupSymbol];
      }
      var shellConditionGroup = new ConditionGroup(conditionGroup);
      // @ts-ignore
      shellConditionGroup[conditionGroupSymbol] = shellConditionGroup;
      return shellConditionGroup;
    }
  }]);
}();
// CONCATENATED MODULE: ../shell/src/model/node.ts
function model_node_typeof(o) { "@babel/helpers - typeof"; return model_node_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, model_node_typeof(o); }
function model_node_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function model_node_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, model_node_toPropertyKey(o.key), o); } }
function model_node_createClass(e, r, t) { return r && model_node_defineProperties(e.prototype, r), t && model_node_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function model_node_toPropertyKey(t) { var i = model_node_toPrimitive(t, "string"); return "symbol" == model_node_typeof(i) ? i : i + ""; }
function model_node_toPrimitive(t, r) { if ("object" != model_node_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != model_node_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }









var shellNodeSymbol = Symbol('shellNodeSymbol');
function isShellNode(node) {
  return node[shellNodeSymbol];
}
var model_node_Node = /*#__PURE__*/function () {
  function Node(node) {
    model_node_classCallCheck(this, Node);
    this[documentSymbol] = void 0;
    this[nodeSymbol] = void 0;
    this._id = void 0;
    /**
     * judge if it is a node or not
     */
    this.isNode = true;
    this[nodeSymbol] = node;
    this[documentSymbol] = node.document;
    this._id = this[nodeSymbol].id;
  }
  return model_node_createClass(Node, [{
    key: "id",
    get:
    /**
     * 节点 id
     */
    function get() {
      return this._id;
    }
    /**
     * set id
     */,
    set: function set(id) {
      this._id = id;
    }
    /**
     * 节点标题
     */
  }, {
    key: "title",
    get: function get() {
      return this[nodeSymbol].title;
    }
    /**
     * @deprecated
     * 是否为「容器型」节点
     */
  }, {
    key: "isContainer",
    get: function get() {
      return this[nodeSymbol].isContainerNode;
    }
    /**
     * 是否为「容器型」节点
     */
  }, {
    key: "isContainerNode",
    get: function get() {
      return this[nodeSymbol].isContainerNode;
    }
    /**
     * @deprecated
     * 是否为根节点
     */
  }, {
    key: "isRoot",
    get: function get() {
      return this[nodeSymbol].isRootNode;
    }
    /**
     * 是否为根节点
     */
  }, {
    key: "isRootNode",
    get: function get() {
      return this[nodeSymbol].isRootNode;
    }
    /**
     * @deprecated
     * 是否为空节点（无 children 或者 children 为空）
     */
  }, {
    key: "isEmpty",
    get: function get() {
      return this[nodeSymbol].isEmptyNode;
    }
    /**
     * 是否为空节点（无 children 或者 children 为空）
     */
  }, {
    key: "isEmptyNode",
    get: function get() {
      return this[nodeSymbol].isEmptyNode;
    }
    /**
     * @deprecated
     * 是否为 Page 节点
     */
  }, {
    key: "isPage",
    get: function get() {
      return this[nodeSymbol].isPageNode;
    }
    /**
     * 是否为 Page 节点
     */
  }, {
    key: "isPageNode",
    get: function get() {
      return this[nodeSymbol].isPageNode;
    }
    /**
     * @deprecated
     * 是否为 Component 节点
     */
  }, {
    key: "isComponent",
    get: function get() {
      return this[nodeSymbol].isComponentNode;
    }
    /**
     * 是否为 Component 节点
     */
  }, {
    key: "isComponentNode",
    get: function get() {
      return this[nodeSymbol].isComponentNode;
    }
    /**
     * @deprecated
     * 是否为「模态框」节点
     */
  }, {
    key: "isModal",
    get: function get() {
      return this[nodeSymbol].isModalNode;
    }
    /**
     * 是否为「模态框」节点
     */
  }, {
    key: "isModalNode",
    get: function get() {
      return this[nodeSymbol].isModalNode;
    }
    /**
     * @deprecated
     * 是否为插槽节点
     */
  }, {
    key: "isSlot",
    get: function get() {
      return this[nodeSymbol].isSlotNode;
    }
    /**
     * 是否为插槽节点
     */
  }, {
    key: "isSlotNode",
    get: function get() {
      return this[nodeSymbol].isSlotNode;
    }
    /**
     * @deprecated
     * 是否为父类/分支节点
     */
  }, {
    key: "isParental",
    get: function get() {
      return this[nodeSymbol].isParentalNode;
    }
    /**
     * 是否为父类/分支节点
     */
  }, {
    key: "isParentalNode",
    get: function get() {
      return this[nodeSymbol].isParentalNode;
    }
    /**
     * @deprecated
     * 是否为叶子节点
     */
  }, {
    key: "isLeaf",
    get: function get() {
      return this[nodeSymbol].isLeafNode;
    }
    /**
     * 是否为叶子节点
     */
  }, {
    key: "isLeafNode",
    get: function get() {
      return this[nodeSymbol].isLeafNode;
    }
  }, {
    key: "isLocked",
    get:
    /**
     * 获取当前节点的锁定状态
     */
    function get() {
      return this[nodeSymbol].isLocked;
    }
    /**
     * 下标
     */
  }, {
    key: "index",
    get: function get() {
      return this[nodeSymbol].index;
    }
    /**
     * 图标
     */
  }, {
    key: "icon",
    get: function get() {
      return this[nodeSymbol].icon;
    }
    /**
     * 节点所在树的层级深度，根节点深度为 0
     */
  }, {
    key: "zLevel",
    get: function get() {
      return this[nodeSymbol].zLevel;
    }
    /**
     * 节点 componentName
     */
  }, {
    key: "componentName",
    get: function get() {
      return this[nodeSymbol].componentName;
    }
    /**
     * 节点的物料元数据
     */
  }, {
    key: "componentMeta",
    get: function get() {
      return model_component_meta_ComponentMeta.create(this[nodeSymbol].componentMeta);
    }
    /**
     * 获取节点所属的文档模型对象
     * @returns
     */
  }, {
    key: "document",
    get: function get() {
      return model_document_model_DocumentModel.create(this[documentSymbol]);
    }
    /**
     * 获取当前节点的前一个兄弟节点
     * @returns
     */
  }, {
    key: "prevSibling",
    get: function get() {
      return Node.create(this[nodeSymbol].prevSibling);
    }
    /**
     * 获取当前节点的后一个兄弟节点
     * @returns
     */
  }, {
    key: "nextSibling",
    get: function get() {
      return Node.create(this[nodeSymbol].nextSibling);
    }
    /**
     * 获取当前节点的父亲节点
     * @returns
     */
  }, {
    key: "parent",
    get: function get() {
      return Node.create(this[nodeSymbol].parent);
    }
    /**
     * 获取当前节点的孩子节点模型
     * @returns
     */
  }, {
    key: "children",
    get: function get() {
      return model_node_children_NodeChildren.create(this[nodeSymbol].children);
    }
    /**
     * 节点上挂载的插槽节点们
     */
  }, {
    key: "slots",
    get: function get() {
      return this[nodeSymbol].slots.map(function (node) {
        return Node.create(node);
      });
    }
    /**
     * 当前节点为插槽节点时，返回节点对应的属性实例
     */
  }, {
    key: "slotFor",
    get: function get() {
      return model_prop_Prop.create(this[nodeSymbol].slotFor);
    }
    /**
     * 返回节点的属性集
     */
  }, {
    key: "props",
    get: function get() {
      return model_props_Props.create(this[nodeSymbol].props);
    }
    /**
     * 返回节点的属性集
     */
  }, {
    key: "propsData",
    get: function get() {
      return this[nodeSymbol].propsData;
    }
    /**
     * 获取符合搭建协议 - 节点 schema 结构
     */
  }, {
    key: "schema",
    get: function get() {
      return this[nodeSymbol].schema;
    }
  }, {
    key: "settingEntry",
    get: function get() {
      return model_setting_top_entry_SettingTopEntry.create(this[nodeSymbol].settingEntry);
    }
  }, {
    key: "getChildren",
    value:
    /**
     * @deprecated use .children instead
     */
    function getChildren() {
      return this.children;
    }
    /**
     * 获取节点实例对应的 dom 节点
     */
  }, {
    key: "getDOMNode",
    value: function getDOMNode() {
      return this[nodeSymbol].getDOMNode();
    }
    /**
     * 执行新增、删除、排序等操作
     * @param remover
     * @param adder
     * @param sorter
     */
  }, {
    key: "mergeChildren",
    value: function mergeChildren(remover, adder, sorter) {
      var _this$children;
      return (_this$children = this.children) === null || _this$children === void 0 ? void 0 : _this$children.mergeChildren(remover, adder, sorter);
    }
    /**
     * 返回节点的尺寸、位置信息
     * @returns
     */
  }, {
    key: "getRect",
    value: function getRect() {
      return this[nodeSymbol].getRect();
    }
    /**
     * 是否有挂载插槽节点
     * @returns
     */
  }, {
    key: "hasSlots",
    value: function hasSlots() {
      return this[nodeSymbol].hasSlots();
    }
    /**
     * 是否设定了渲染条件
     * @returns
     */
  }, {
    key: "hasCondition",
    value: function hasCondition() {
      return this[nodeSymbol].hasCondition();
    }
    /**
     * 是否设定了循环数据
     * @returns
     */
  }, {
    key: "hasLoop",
    value: function hasLoop() {
      return this[nodeSymbol].hasLoop();
    }
  }, {
    key: "visible",
    get: function get() {
      return this[nodeSymbol].getVisible();
    },
    set: function set(value) {
      this[nodeSymbol].setVisible(value);
    }
  }, {
    key: "getVisible",
    value: function getVisible() {
      return this[nodeSymbol].getVisible();
    }
  }, {
    key: "setVisible",
    value: function setVisible(flag) {
      this[nodeSymbol].setVisible(flag);
    }
  }, {
    key: "isConditionalVisible",
    value: function isConditionalVisible() {
      return this[nodeSymbol].isConditionalVisible();
    }
    /**
     * 设置节点锁定状态
     * @param flag
     */
  }, {
    key: "lock",
    value: function lock(flag) {
      this[nodeSymbol].lock(flag);
    }
    /**
     * @deprecated use .props instead
     */
  }, {
    key: "getProps",
    value: function getProps() {
      return this.props;
    }
  }, {
    key: "contains",
    value: function contains(node) {
      return this[nodeSymbol].contains(node[nodeSymbol]);
    }
    /**
     * 获取指定 path 的属性模型实例
     * @param path 属性路径，支持 a / a.b / a.0 等格式
     * @returns
     */
  }, {
    key: "getProp",
    value: function getProp(path) {
      var createIfNone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      return model_prop_Prop.create(this[nodeSymbol].getProp(path, createIfNone));
    }
    /**
     * 获取指定 path 的属性模型实例值
     * @param path 属性路径，支持 a / a.b / a.0 等格式
     * @returns
     */
  }, {
    key: "getPropValue",
    value: function getPropValue(path) {
      var _this$getProp;
      return (_this$getProp = this.getProp(path, false)) === null || _this$getProp === void 0 ? void 0 : _this$getProp.getValue();
    }
    /**
     * 获取指定 path 的属性模型实例，
     *  注：导出时，不同于普通属性，该属性并不挂载在 props 之下，而是与 props 同级
     * @param path 属性路径，支持 a / a.b / a.0 等格式
     * @param createIfNone 当没有属性的时候，是否创建一个属性
     * @returns
     */
  }, {
    key: "getExtraProp",
    value: function getExtraProp(path, createIfNone) {
      return model_prop_Prop.create(this[nodeSymbol].getExtraProp(path, createIfNone));
    }
    /**
     * 获取指定 path 的属性模型实例，
     *  注：导出时，不同于普通属性，该属性并不挂载在 props 之下，而是与 props 同级
     * @param path 属性路径，支持 a / a.b / a.0 等格式
     * @returns
     */
  }, {
    key: "getExtraPropValue",
    value: function getExtraPropValue(path) {
      var _this$getExtraProp;
      return (_this$getExtraProp = this.getExtraProp(path)) === null || _this$getExtraProp === void 0 ? void 0 : _this$getExtraProp.getValue();
    }
    /**
     * 设置指定 path 的属性模型实例值
     * @param path 属性路径，支持 a / a.b / a.0 等格式
     * @param value 值
     * @returns
     */
  }, {
    key: "setPropValue",
    value: function setPropValue(path, value) {
      var _this$getProp2;
      return (_this$getProp2 = this.getProp(path)) === null || _this$getProp2 === void 0 ? void 0 : _this$getProp2.setValue(value);
    }
    /**
     * 设置指定 path 的属性模型实例值
     * @param path 属性路径，支持 a / a.b / a.0 等格式
     * @param value 值
     * @returns
     */
  }, {
    key: "setExtraPropValue",
    value: function setExtraPropValue(path, value) {
      var _this$getExtraProp2;
      return (_this$getExtraProp2 = this.getExtraProp(path)) === null || _this$getExtraProp2 === void 0 ? void 0 : _this$getExtraProp2.setValue(value);
    }
    /**
     * 导入节点数据
     * @param data
     */
  }, {
    key: "importSchema",
    value: function importSchema(data) {
      this[nodeSymbol].import(data);
    }
    /**
     * 导出节点数据
     * @param stage
     * @param options
     * @returns
     */
  }, {
    key: "exportSchema",
    value: function exportSchema() {
      var stage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : types_src["i" /* IPublicEnumTransformStage */].Render;
      var options = arguments.length > 1 ? arguments[1] : undefined;
      return this[nodeSymbol].export(stage, options);
    }
    /**
     * 在指定位置之前插入一个节点
     * @param node
     * @param ref
     * @param useMutator
     */
  }, {
    key: "insertBefore",
    value: function insertBefore(node, ref, useMutator) {
      this[nodeSymbol].insertBefore(node[nodeSymbol] || node, ref === null || ref === void 0 ? void 0 : ref[nodeSymbol], useMutator);
    }
    /**
     * 在指定位置之后插入一个节点
     * @param node
     * @param ref
     * @param useMutator
     */
  }, {
    key: "insertAfter",
    value: function insertAfter(node, ref, useMutator) {
      this[nodeSymbol].insertAfter(node[nodeSymbol] || node, ref === null || ref === void 0 ? void 0 : ref[nodeSymbol], useMutator);
    }
    /**
     * 替换指定节点
     * @param node 待替换的子节点
     * @param data 用作替换的节点对象或者节点描述
     * @returns
     */
  }, {
    key: "replaceChild",
    value: function replaceChild(node, data) {
      return Node.create(this[nodeSymbol].replaceChild(node[nodeSymbol], data));
    }
    /**
     * 将当前节点替换成指定节点描述
     * @param schema
     */
  }, {
    key: "replaceWith",
    value: function replaceWith(schema) {
      this[nodeSymbol].replaceWith(schema);
    }
    /**
     * 选中当前节点实例
     */
  }, {
    key: "select",
    value: function select() {
      this[nodeSymbol].select();
    }
    /**
     * 设置悬停态
     * @param flag
     */
  }, {
    key: "hover",
    value: function hover() {
      var flag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      this[nodeSymbol].hover(flag);
    }
    /**
     * 删除当前节点实例
     */
  }, {
    key: "remove",
    value: function remove() {
      this[nodeSymbol].remove();
    }
    /**
     * @deprecated
     * 设置为磁贴布局节点
     */
  }, {
    key: "isRGLContainer",
    get:
    /**
     * @deprecated
     * 获取磁贴布局节点设置状态
     * @returns Boolean
     */
    function get() {
      return this[nodeSymbol].isRGLContainerNode;
    }
    /**
     * 设置为磁贴布局节点
     */,
    set: function set(flag) {
      this[nodeSymbol].isRGLContainerNode = flag;
    }
  }, {
    key: "isRGLContainerNode",
    get:
    /**
     * 获取磁贴布局节点设置状态
     * @returns Boolean
     */
    function get() {
      return this[nodeSymbol].isRGLContainerNode;
    },
    set: function set(flag) {
      this[nodeSymbol].isRGLContainerNode = flag;
    }
  }, {
    key: "internalToShellNode",
    value: function internalToShellNode() {
      return this;
    }
  }, {
    key: "canPerformAction",
    value: function canPerformAction(actionName) {
      return this[nodeSymbol].canPerformAction(actionName);
    }
    /**
     * get conditionGroup
     * @since v1.1.0
     */
  }, {
    key: "conditionGroup",
    get: function get() {
      return condition_group_ConditionGroup.create(this[nodeSymbol].conditionGroup);
    }
    /**
     * set value for conditionalVisible
     * @since v1.1.0
     */
  }, {
    key: "setConditionalVisible",
    value: function setConditionalVisible() {
      this[nodeSymbol].setConditionalVisible();
    }
  }, {
    key: "getRGL",
    value: function getRGL() {
      var _this$nodeSymbol$getR = this[nodeSymbol].getRGL(),
        isContainerNode = _this$nodeSymbol$getR.isContainerNode,
        isEmptyNode = _this$nodeSymbol$getR.isEmptyNode,
        isRGLContainerNode = _this$nodeSymbol$getR.isRGLContainerNode,
        isRGLNode = _this$nodeSymbol$getR.isRGLNode,
        isRGL = _this$nodeSymbol$getR.isRGL,
        rglNode = _this$nodeSymbol$getR.rglNode;
      return {
        isContainerNode: isContainerNode,
        isEmptyNode: isEmptyNode,
        isRGLContainerNode: isRGLContainerNode,
        isRGLNode: isRGLNode,
        isRGL: isRGL,
        rglNode: Node.create(rglNode)
      };
    }
  }], [{
    key: "create",
    value: function create(node) {
      if (!node) {
        return null;
      }
      // @ts-ignore 直接返回已挂载的 shell node 实例
      if (isShellNode(node)) {
        return node[shellNodeSymbol];
      }
      var shellNode = new Node(node);
      // @ts-ignore 挂载 shell node 实例
      // eslint-disable-next-line no-param-reassign
      node[shellNodeSymbol] = shellNode;
      return shellNode;
    }
  }]);
}();
// CONCATENATED MODULE: ../shell/src/model/detecting.ts
function model_detecting_typeof(o) { "@babel/helpers - typeof"; return model_detecting_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, model_detecting_typeof(o); }
function model_detecting_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function model_detecting_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, model_detecting_toPropertyKey(o.key), o); } }
function model_detecting_createClass(e, r, t) { return r && model_detecting_defineProperties(e.prototype, r), t && model_detecting_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function model_detecting_toPropertyKey(t) { var i = model_detecting_toPrimitive(t, "string"); return "symbol" == model_detecting_typeof(i) ? i : i + ""; }
function model_detecting_toPrimitive(t, r) { if ("object" != model_detecting_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != model_detecting_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }


var model_detecting_Detecting = /*#__PURE__*/function () {
  function Detecting(document) {
    var _document$designer;
    model_detecting_classCallCheck(this, Detecting);
    this[documentSymbol] = void 0;
    this[detectingSymbol] = void 0;
    this[documentSymbol] = document;
    this[detectingSymbol] = (_document$designer = document.designer) === null || _document$designer === void 0 ? void 0 : _document$designer.detecting;
  }
  /**
   * 控制大纲树 hover 时是否出现悬停效果
   */
  return model_detecting_createClass(Detecting, [{
    key: "enable",
    get: function get() {
      return this[detectingSymbol].enable;
    }
    /**
     * 当前 hover 的节点
     */
  }, {
    key: "current",
    get: function get() {
      return model_node_Node.create(this[detectingSymbol].current);
    }
    /**
     * hover 指定节点
     * @param id 节点 id
     */
  }, {
    key: "capture",
    value: function capture(id) {
      this[detectingSymbol].capture(this[documentSymbol].getNode(id));
    }
    /**
     * hover 离开指定节点
     * @param id 节点 id
     */
  }, {
    key: "release",
    value: function release(id) {
      this[detectingSymbol].release(this[documentSymbol].getNode(id));
    }
    /**
     * 清空 hover 态
     */
  }, {
    key: "leave",
    value: function leave() {
      this[detectingSymbol].leave(this[documentSymbol]);
    }
  }, {
    key: "onDetectingChange",
    value: function onDetectingChange(fn) {
      var innerFn = function innerFn(innerNode) {
        var shellNode = model_node_Node.create(innerNode);
        fn(shellNode);
      };
      return this[detectingSymbol].onDetectingChange(innerFn);
    }
  }]);
}();
// CONCATENATED MODULE: ../shell/src/model/drag-object.ts
function drag_object_typeof(o) { "@babel/helpers - typeof"; return drag_object_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, drag_object_typeof(o); }
function drag_object_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function drag_object_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, drag_object_toPropertyKey(o.key), o); } }
function drag_object_createClass(e, r, t) { return r && drag_object_defineProperties(e.prototype, r), t && drag_object_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function drag_object_toPropertyKey(t) { var i = drag_object_toPrimitive(t, "string"); return "symbol" == drag_object_typeof(i) ? i : i + ""; }
function drag_object_toPrimitive(t, r) { if ("object" != drag_object_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != drag_object_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }


var drag_object_DragObject = /*#__PURE__*/function () {
  function DragObject(dragObject) {
    drag_object_classCallCheck(this, DragObject);
    this[dragObjectSymbol] = void 0;
    this[dragObjectSymbol] = dragObject;
  }
  return drag_object_createClass(DragObject, [{
    key: "type",
    get: function get() {
      return this[dragObjectSymbol].type;
    }
  }, {
    key: "nodes",
    get: function get() {
      var nodes = this[dragObjectSymbol].nodes;
      if (!nodes) {
        return null;
      }
      return nodes.map(model_node_Node.create);
    }
  }, {
    key: "data",
    get: function get() {
      return this[dragObjectSymbol].data;
    }
  }], [{
    key: "create",
    value: function create(dragObject) {
      if (!dragObject) {
        return null;
      }
      return new DragObject(dragObject);
    }
  }]);
}();
// CONCATENATED MODULE: ../shell/src/model/locate-event.ts
function locate_event_typeof(o) { "@babel/helpers - typeof"; return locate_event_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, locate_event_typeof(o); }
function locate_event_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function locate_event_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, locate_event_toPropertyKey(o.key), o); } }
function locate_event_createClass(e, r, t) { return r && locate_event_defineProperties(e.prototype, r), t && locate_event_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function locate_event_toPropertyKey(t) { var i = locate_event_toPrimitive(t, "string"); return "symbol" == locate_event_typeof(i) ? i : i + ""; }
function locate_event_toPrimitive(t, r) { if ("object" != locate_event_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != locate_event_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }


var locate_event_LocateEvent = /*#__PURE__*/function () {
  function LocateEvent(locateEvent) {
    locate_event_classCallCheck(this, LocateEvent);
    this[locateEventSymbol] = void 0;
    this[locateEventSymbol] = locateEvent;
  }
  return locate_event_createClass(LocateEvent, [{
    key: "type",
    get: function get() {
      return this[locateEventSymbol].type;
    }
  }, {
    key: "globalX",
    get: function get() {
      return this[locateEventSymbol].globalX;
    }
  }, {
    key: "globalY",
    get: function get() {
      return this[locateEventSymbol].globalY;
    }
  }, {
    key: "originalEvent",
    get: function get() {
      return this[locateEventSymbol].originalEvent;
    }
  }, {
    key: "target",
    get: function get() {
      return this[locateEventSymbol].target;
    }
  }, {
    key: "canvasX",
    get: function get() {
      return this[locateEventSymbol].canvasX;
    }
  }, {
    key: "canvasY",
    get: function get() {
      return this[locateEventSymbol].canvasY;
    }
  }, {
    key: "dragObject",
    get: function get() {
      return drag_object_DragObject.create(this[locateEventSymbol].dragObject);
    }
  }], [{
    key: "create",
    value: function create(locateEvent) {
      if (!locateEvent) {
        return null;
      }
      return new LocateEvent(locateEvent);
    }
  }]);
}();

// CONCATENATED MODULE: ../shell/src/model/dragon.ts
function model_dragon_typeof(o) { "@babel/helpers - typeof"; return model_dragon_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, model_dragon_typeof(o); }
function dragon_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function dragon_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? dragon_ownKeys(Object(t), !0).forEach(function (r) { dragon_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : dragon_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function dragon_defineProperty(e, r, t) { return (r = model_dragon_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function model_dragon_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function model_dragon_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, model_dragon_toPropertyKey(o.key), o); } }
function model_dragon_createClass(e, r, t) { return r && model_dragon_defineProperties(e.prototype, r), t && model_dragon_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function model_dragon_toPropertyKey(t) { var i = model_dragon_toPrimitive(t, "string"); return "symbol" == model_dragon_typeof(i) ? i : i + ""; }
function model_dragon_toPrimitive(t, r) { if ("object" != model_dragon_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != model_dragon_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }




var innerDragonSymbol = Symbol('innerDragonSymbol');
var model_dragon_Dragon = /*#__PURE__*/function () {
  function Dragon(innerDragon, workspaceMode) {
    model_dragon_classCallCheck(this, Dragon);
    this.workspaceMode = void 0;
    this[innerDragonSymbol] = void 0;
    this.workspaceMode = workspaceMode;
    this[innerDragonSymbol] = innerDragon;
  }
  return model_dragon_createClass(Dragon, [{
    key: dragonSymbol,
    get: function get() {
      if (this.workspaceMode) {
        return this[innerDragonSymbol];
      }
      var workspace = src["globalContext"].get('workspace');
      var editor = src["globalContext"].get('editor');
      if (workspace.isActive) {
        editor = workspace.window.editor;
      }
      var designer = editor.get('designer');
      return designer.dragon;
    }
  }, {
    key: "dragging",
    get:
    /**
     * is dragging or not
     */
    function get() {
      return this[dragonSymbol].dragging;
    }
    /**
     * 绑定 dragstart 事件
     * @param func
     * @returns
     */
  }, {
    key: "onDragstart",
    value: function onDragstart(func) {
      return this[dragonSymbol].onDragstart(function (e) {
        return func(locate_event_LocateEvent.create(e));
      });
    }
    /**
     * 绑定 drag 事件
     * @param func
     * @returns
     */
  }, {
    key: "onDrag",
    value: function onDrag(func) {
      return this[dragonSymbol].onDrag(function (e) {
        return func(locate_event_LocateEvent.create(e));
      });
    }
    /**
     * 绑定 dragend 事件
     * @param func
     * @returns
     */
  }, {
    key: "onDragend",
    value: function onDragend(func) {
      return this[dragonSymbol].onDragend(function (o) {
        var dragObject = drag_object_DragObject.create(o.dragObject);
        var copy = o.copy;
        return func({
          dragObject: dragObject,
          copy: copy
        });
      });
    }
    /**
     * 设置拖拽监听的区域 shell，以及自定义拖拽转换函数 boost
     * @param shell 拖拽监听的区域
     * @param boost 拖拽转换函数
     */
  }, {
    key: "from",
    value: function from(shell, boost) {
      return this[dragonSymbol].from(shell, boost);
    }
    /**
     * boost your dragObject for dragging(flying) 发射拖拽对象
     *
     * @param dragObject 拖拽对象
     * @param boostEvent 拖拽初始时事件
     */
  }, {
    key: "boost",
    value: function boost(dragObject, boostEvent, fromRglNode) {
      return this[dragonSymbol].boost(dragon_objectSpread(dragon_objectSpread({}, dragObject), {}, {
        nodes: dragObject.nodes.map(function (node) {
          return node[nodeSymbol];
        })
      }), boostEvent, fromRglNode === null || fromRglNode === void 0 ? void 0 : fromRglNode[nodeSymbol]);
    }
    /**
     * 添加投放感应区
     */
  }, {
    key: "addSensor",
    value: function addSensor(sensor) {
      return this[dragonSymbol].addSensor(sensor);
    }
    /**
     * 移除投放感应
     */
  }, {
    key: "removeSensor",
    value: function removeSensor(sensor) {
      return this[dragonSymbol].removeSensor(sensor);
    }
  }], [{
    key: "create",
    value: function create(dragon, workspaceMode) {
      if (!dragon) {
        return null;
      }
      return new Dragon(dragon, workspaceMode);
    }
  }]);
}();
// CONCATENATED MODULE: ../shell/src/model/resource.ts
function resource_typeof(o) { "@babel/helpers - typeof"; return resource_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, resource_typeof(o); }
function resource_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function resource_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, resource_toPropertyKey(o.key), o); } }
function resource_createClass(e, r, t) { return r && resource_defineProperties(e.prototype, r), t && resource_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function resource_toPropertyKey(t) { var i = resource_toPrimitive(t, "string"); return "symbol" == resource_typeof(i) ? i : i + ""; }
function resource_toPrimitive(t, r) { if ("object" != resource_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != resource_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

var resource_Resource = /*#__PURE__*/function () {
  function Resource(resource) {
    resource_classCallCheck(this, Resource);
    this[resourceSymbol] = void 0;
    this[resourceSymbol] = resource;
  }
  return resource_createClass(Resource, [{
    key: "title",
    get: function get() {
      return this[resourceSymbol].title;
    }
  }, {
    key: "id",
    get: function get() {
      return this[resourceSymbol].id;
    }
  }, {
    key: "icon",
    get: function get() {
      return this[resourceSymbol].icon;
    }
  }, {
    key: "options",
    get: function get() {
      return this[resourceSymbol].options;
    }
  }, {
    key: "name",
    get: function get() {
      return this[resourceSymbol].resourceType.name;
    }
  }, {
    key: "config",
    get: function get() {
      return this[resourceSymbol].config;
    }
  }, {
    key: "type",
    get: function get() {
      return this[resourceSymbol].resourceType.type;
    }
  }, {
    key: "category",
    get: function get() {
      return this[resourceSymbol].category;
    }
  }, {
    key: "description",
    get: function get() {
      return this[resourceSymbol].description;
    }
  }, {
    key: "children",
    get: function get() {
      return this[resourceSymbol].children.map(function (child) {
        return new Resource(child);
      });
    }
  }, {
    key: "viewName",
    get: function get() {
      return this[resourceSymbol].viewName;
    }
  }]);
}();
// CONCATENATED MODULE: ../shell/src/model/active-tracker.ts
function model_active_tracker_typeof(o) { "@babel/helpers - typeof"; return model_active_tracker_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, model_active_tracker_typeof(o); }
function model_active_tracker_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function model_active_tracker_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, model_active_tracker_toPropertyKey(o.key), o); } }
function model_active_tracker_createClass(e, r, t) { return r && model_active_tracker_defineProperties(e.prototype, r), t && model_active_tracker_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function model_active_tracker_toPropertyKey(t) { var i = model_active_tracker_toPrimitive(t, "string"); return "symbol" == model_active_tracker_typeof(i) ? i : i + ""; }
function model_active_tracker_toPrimitive(t, r) { if ("object" != model_active_tracker_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != model_active_tracker_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }


var activeTrackerSymbol = Symbol('activeTracker');
var model_active_tracker_ActiveTracker = /*#__PURE__*/function () {
  function ActiveTracker(innerTracker) {
    model_active_tracker_classCallCheck(this, ActiveTracker);
    this[activeTrackerSymbol] = void 0;
    this[activeTrackerSymbol] = innerTracker;
  }
  return model_active_tracker_createClass(ActiveTracker, [{
    key: "target",
    get: function get() {
      var _target = this[activeTrackerSymbol]._target;
      if (!_target) {
        return null;
      }
      var innerNode = _target.node,
        detail = _target.detail,
        instance = _target.instance;
      var publicNode = model_node_Node.create(innerNode);
      return {
        node: publicNode,
        detail: detail,
        instance: instance
      };
    }
  }, {
    key: "onChange",
    value: function onChange(fn) {
      if (!fn) {
        return function () {};
      }
      return this[activeTrackerSymbol].onChange(function (t) {
        var innerNode = t.node,
          detail = t.detail,
          instance = t.instance;
        var publicNode = model_node_Node.create(innerNode);
        var publicActiveTarget = {
          node: publicNode,
          detail: detail,
          instance: instance
        };
        fn(publicActiveTarget);
      });
    }
  }, {
    key: "track",
    value: function track(node) {
      this[activeTrackerSymbol].track(node[nodeSymbol]);
    }
  }]);
}();
// CONCATENATED MODULE: ../shell/src/model/plugin-instance.ts
function plugin_instance_typeof(o) { "@babel/helpers - typeof"; return plugin_instance_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, plugin_instance_typeof(o); }
function plugin_instance_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function plugin_instance_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, plugin_instance_toPropertyKey(o.key), o); } }
function plugin_instance_createClass(e, r, t) { return r && plugin_instance_defineProperties(e.prototype, r), t && plugin_instance_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function plugin_instance_toPropertyKey(t) { var i = plugin_instance_toPrimitive(t, "string"); return "symbol" == plugin_instance_typeof(i) ? i : i + ""; }
function plugin_instance_toPrimitive(t, r) { if ("object" != plugin_instance_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != plugin_instance_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

var plugin_instance_PluginInstance = /*#__PURE__*/function () {
  function PluginInstance(pluginInstance) {
    plugin_instance_classCallCheck(this, PluginInstance);
    this[pluginInstanceSymbol] = void 0;
    this[pluginInstanceSymbol] = pluginInstance;
  }
  return plugin_instance_createClass(PluginInstance, [{
    key: "pluginName",
    get: function get() {
      return this[pluginInstanceSymbol].name;
    }
  }, {
    key: "dep",
    get: function get() {
      return this[pluginInstanceSymbol].dep;
    }
  }, {
    key: "disabled",
    get: function get() {
      return this[pluginInstanceSymbol].disabled;
    },
    set: function set(disabled) {
      this[pluginInstanceSymbol].setDisabled(disabled);
    }
  }, {
    key: "meta",
    get: function get() {
      return this[pluginInstanceSymbol].meta;
    }
  }]);
}();
// CONCATENATED MODULE: ../shell/src/model/editor-view.ts
function editor_view_typeof(o) { "@babel/helpers - typeof"; return editor_view_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, editor_view_typeof(o); }
function editor_view_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function editor_view_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, editor_view_toPropertyKey(o.key), o); } }
function editor_view_createClass(e, r, t) { return r && editor_view_defineProperties(e.prototype, r), t && editor_view_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function editor_view_toPropertyKey(t) { var i = editor_view_toPrimitive(t, "string"); return "symbol" == editor_view_typeof(i) ? i : i + ""; }
function editor_view_toPrimitive(t, r) { if ("object" != editor_view_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != editor_view_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

var editor_view_EditorView = /*#__PURE__*/function () {
  function EditorView(editorView) {
    editor_view_classCallCheck(this, EditorView);
    this[editorViewSymbol] = void 0;
    this[pluginContextSymbol] = void 0;
    this[editorViewSymbol] = editorView;
    this[pluginContextSymbol] = this[editorViewSymbol].innerPlugins._getLowCodePluginContext({
      pluginName: editorView.editorWindow + editorView.viewName
    });
  }
  return editor_view_createClass(EditorView, [{
    key: "toProxy",
    value: function toProxy() {
      return new Proxy(this, {
        get: function get(target, prop, receiver) {
          if (target[pluginContextSymbol][prop]) {
            return Reflect.get(target[pluginContextSymbol], prop, receiver);
          }
          return Reflect.get(target, prop, receiver);
        }
      });
    }
  }, {
    key: "viewName",
    get: function get() {
      return this[editorViewSymbol].viewName;
    }
  }, {
    key: "viewType",
    get: function get() {
      return this[editorViewSymbol].viewType;
    }
  }]);
}();
// CONCATENATED MODULE: ../shell/src/model/window.ts
function window_typeof(o) { "@babel/helpers - typeof"; return window_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, window_typeof(o); }
function window_regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return window_regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i.return) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (window_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, window_regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, window_regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), window_regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", window_regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), window_regeneratorDefine2(u), window_regeneratorDefine2(u, o, "Generator"), window_regeneratorDefine2(u, n, function () { return this; }), window_regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (window_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function window_regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } window_regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { window_regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, window_regeneratorDefine2(e, r, n, t); }
function window_asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function window_asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { window_asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { window_asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function window_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function window_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, window_toPropertyKey(o.key), o); } }
function window_createClass(e, r, t) { return r && window_defineProperties(e.prototype, r), t && window_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function window_toPropertyKey(t) { var i = window_toPrimitive(t, "string"); return "symbol" == window_typeof(i) ? i : i + ""; }
function window_toPrimitive(t, r) { if ("object" != window_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != window_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }



var window_Window = /*#__PURE__*/function () {
  function Window(editorWindow) {
    window_classCallCheck(this, Window);
    this[windowSymbol] = void 0;
    this[windowSymbol] = editorWindow;
  }
  return window_createClass(Window, [{
    key: "id",
    get: function get() {
      var _this$windowSymbol;
      return (_this$windowSymbol = this[windowSymbol]) === null || _this$windowSymbol === void 0 ? void 0 : _this$windowSymbol.id;
    }
  }, {
    key: "title",
    get: function get() {
      return this[windowSymbol].title;
    }
  }, {
    key: "icon",
    get: function get() {
      return this[windowSymbol].icon;
    }
  }, {
    key: "resource",
    get: function get() {
      return new resource_Resource(this[windowSymbol].resource);
    }
  }, {
    key: "importSchema",
    value: function importSchema(schema) {
      this[windowSymbol].importSchema(schema);
    }
  }, {
    key: "changeViewType",
    value: function changeViewType(viewName) {
      this[windowSymbol].changeViewName(viewName, false);
    }
  }, {
    key: "onChangeViewType",
    value: function onChangeViewType(fun) {
      return this[windowSymbol].onChangeViewType(fun);
    }
  }, {
    key: "save",
    value: function () {
      var _save = window_asyncToGenerator(/*#__PURE__*/window_regenerator().m(function _callee() {
        return window_regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              _context.n = 1;
              return this[windowSymbol].save();
            case 1:
              return _context.a(2, _context.v);
          }
        }, _callee, this);
      }));
      function save() {
        return _save.apply(this, arguments);
      }
      return save;
    }()
  }, {
    key: "onSave",
    value: function onSave(fn) {
      return this[windowSymbol].onSave(fn);
    }
  }, {
    key: "currentEditorView",
    get: function get() {
      if (this[windowSymbol]._editorView) {
        return new editor_view_EditorView(this[windowSymbol]._editorView).toProxy();
      }
      return null;
    }
  }, {
    key: "editorViews",
    get: function get() {
      return Array.from(this[windowSymbol].editorViews.values()).map(function (d) {
        return new editor_view_EditorView(d).toProxy();
      });
    }
  }]);
}();
// CONCATENATED MODULE: ../shell/src/model/clipboard.ts
function model_clipboard_typeof(o) { "@babel/helpers - typeof"; return model_clipboard_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, model_clipboard_typeof(o); }
function model_clipboard_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function model_clipboard_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, model_clipboard_toPropertyKey(o.key), o); } }
function model_clipboard_createClass(e, r, t) { return r && model_clipboard_defineProperties(e.prototype, r), t && model_clipboard_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function model_clipboard_toPropertyKey(t) { var i = model_clipboard_toPrimitive(t, "string"); return "symbol" == model_clipboard_typeof(i) ? i : i + ""; }
function model_clipboard_toPrimitive(t, r) { if ("object" != model_clipboard_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != model_clipboard_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }


var model_clipboard_Clipboard = /*#__PURE__*/function () {
  function Clipboard() {
    model_clipboard_classCallCheck(this, Clipboard);
    this[clipboardSymbol] = void 0;
    this[clipboardSymbol] = clipboard_clipboard;
  }
  return model_clipboard_createClass(Clipboard, [{
    key: "setData",
    value: function setData(data) {
      this[clipboardSymbol].setData(data);
    }
  }, {
    key: "waitPasteData",
    value: function waitPasteData(keyboardEvent, cb) {
      this[clipboardSymbol].waitPasteData(keyboardEvent, cb);
    }
  }]);
}();
// CONCATENATED MODULE: ../shell/src/model/index.ts























// CONCATENATED MODULE: ../shell/src/index.ts



/**
 * 所有 shell 层模型的 API 设计约定：
 *  1. 所有 API 命名空间都按照 variables / functions / events 来组织
 *  2. 事件（events）的命名格式为：on[Will|Did]VerbNoun?，参考 https://code.visualstudio.com/api/references/vscode-api#events
 *  3. 基于 Disposable 模式，对于事件的绑定、快捷键的绑定函数，返回值则是解绑函数
 *  4. 对于属性的导出，统一用 .xxx 的 getter 模式，不能使用 .getXxx()
 */

// CONCATENATED MODULE: ../editor-skeleton/src/widget/utils.ts
function utils_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function utils_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? utils_ownKeys(Object(t), !0).forEach(function (r) { utils_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : utils_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function utils_defineProperty(e, r, t) { return (r = widget_utils_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function widget_utils_toPropertyKey(t) { var i = widget_utils_toPrimitive(t, "string"); return "symbol" == widget_utils_typeof(i) ? i : i + ""; }
function widget_utils_toPrimitive(t, r) { if ("object" != widget_utils_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != widget_utils_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function widget_utils_typeof(o) { "@babel/helpers - typeof"; return widget_utils_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, widget_utils_typeof(o); }


function composeTitle(title, icon, tip, tipAsTitle, noIcon) {
  var _title;
  if (!title) {
    _title = {};
    if (!icon || tipAsTitle) {
      _title = {
        label: tip
      };
      tip = undefined;
    }
  } else {
    _title = title;
  }
  if (icon || tip) {
    if (widget_utils_typeof(_title) !== 'object' || /*#__PURE__*/Object(external_window_React_["isValidElement"])(_title) || Object(utils_src["I" /* isI18nData */])(_title)) {
      if (/*#__PURE__*/Object(external_window_React_["isValidElement"])(_title)) {
        if (_title.type === 'svg' || _title.type.getIcon) {
          if (!icon) {
            icon = _title;
          }
          if (tipAsTitle) {
            _title = tip;
            tip = null;
          } else {
            _title = undefined;
          }
        }
      }
      _title = {
        label: _title,
        icon: icon,
        tip: tip
      };
    } else {
      _title = utils_objectSpread(utils_objectSpread({}, _title), {}, {
        icon: icon,
        tip: tip
      });
    }
  }
  if (Object(utils_src["ab" /* isTitleConfig */])(_title) && noIcon) {
    if (! /*#__PURE__*/Object(external_window_React_["isValidElement"])(_title)) {
      _title.icon = undefined;
    }
  }
  return _title;
}
// EXTERNAL MODULE: ../editor-skeleton/src/components/draggable-line/index.less
var draggable_line = __webpack_require__(119);

// CONCATENATED MODULE: ../editor-skeleton/src/components/draggable-line/index.tsx
function draggable_line_typeof(o) { "@babel/helpers - typeof"; return draggable_line_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, draggable_line_typeof(o); }
function draggable_line_defineProperty(e, r, t) { return (r = draggable_line_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function draggable_line_readOnlyError(r) { throw new TypeError('"' + r + '" is read-only'); }
function draggable_line_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function draggable_line_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, draggable_line_toPropertyKey(o.key), o); } }
function draggable_line_createClass(e, r, t) { return r && draggable_line_defineProperties(e.prototype, r), t && draggable_line_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function draggable_line_toPropertyKey(t) { var i = draggable_line_toPrimitive(t, "string"); return "symbol" == draggable_line_typeof(i) ? i : i + ""; }
function draggable_line_toPrimitive(t, r) { if ("object" != draggable_line_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != draggable_line_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function draggable_line_callSuper(t, o, e) { return o = draggable_line_getPrototypeOf(o), draggable_line_possibleConstructorReturn(t, draggable_line_isNativeReflectConstruct() ? Reflect.construct(o, e || [], draggable_line_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function draggable_line_possibleConstructorReturn(t, e) { if (e && ("object" == draggable_line_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return draggable_line_assertThisInitialized(t); }
function draggable_line_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function draggable_line_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (draggable_line_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function draggable_line_getPrototypeOf(t) { return draggable_line_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, draggable_line_getPrototypeOf(t); }
function draggable_line_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && draggable_line_setPrototypeOf(t, e); }
function draggable_line_setPrototypeOf(t, e) { return draggable_line_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, draggable_line_setPrototypeOf(t, e); }



var draggable_line_DraggableLine = /*#__PURE__*/function (_Component) {
  function DraggableLine(props) {
    var _this;
    draggable_line_classCallCheck(this, DraggableLine);
    _this = draggable_line_callSuper(this, DraggableLine, [props]);
    _this.startDrag = void 0;
    _this.canDrag = void 0;
    _this.offset = void 0;
    _this.currentOffset = void 0;
    _this.offEvent = void 0;
    _this.offDragEvent = void 0;
    _this.startOffset = void 0;
    _this.shell = null;
    _this.startDrag = false;
    _this.canDrag = false;
    _this.offset = 0;
    _this.currentOffset = 0;
    return _this;
  }
  draggable_line_inherits(DraggableLine, _Component);
  return draggable_line_createClass(DraggableLine, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.offEvent = this.initEvent();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.offEvent) {
        this.offEvent();
      }
    }
  }, {
    key: "onSelectStart",
    value: function onSelectStart(e) {
      if (this.startDrag) {
        e.preventDefault();
      }
    }
  }, {
    key: "onStartMove",
    value: function onStartMove(e) {
      var onDragStart = this.props.onDragStart;
      if (!this.startDrag) {
        onDragStart && onDragStart();
      }
      this.startDrag = true;
      this.canDrag = true;
      this.currentOffset = 0;
      this.offDragEvent = this.initDragEvent();
      this.startOffset = this.getClientPosition(e);
    }
  }, {
    key: "onEndMove",
    value: function onEndMove() {
      var onDragEnd = this.props.onDragEnd;
      if (this.startDrag) {
        if (this.offDragEvent) {
          this.offDragEvent();
        }
        this.startDrag = false;
        this.offset = this.currentOffset;
      }
      onDragEnd && onDragEnd();
    }
  }, {
    key: "onDrag",
    value: function onDrag(e) {
      var _this$props = this.props,
        position = _this$props.position,
        onDrag = _this$props.onDrag,
        _this$props$maxIncrem = _this$props.maxIncrement,
        maxIncrement = _this$props$maxIncrem === void 0 ? 100 : _this$props$maxIncrem,
        _this$props$maxDecrem = _this$props.maxDecrement,
        maxDecrement = _this$props$maxDecrem === void 0 ? 0 : _this$props$maxDecrem;
      if (this.startDrag) {
        if (position === 'left' || position === 'top') {
          this.currentOffset = this.offset + this.startOffset - this.getClientPosition(e);
        } else {
          this.currentOffset = this.offset + this.getClientPosition(e) - this.startOffset;
        }
        if (this.currentOffset < -maxDecrement) {
          this.currentOffset = -maxDecrement;
        } else if (this.currentOffset > maxIncrement) {
          this.currentOffset = maxIncrement;
        }
        onDrag(this.currentOffset, e);
      }
    }
  }, {
    key: "getClientPosition",
    value: function getClientPosition(e) {
      var position = this.props.position;
      return position === 'left' || position === 'right' ? e.clientX : e.clientY;
    }
  }, {
    key: "initEvent",
    value: function initEvent() {
      var selectStart = this.onSelectStart.bind(this);
      document.addEventListener('selectstart', selectStart);
      return function () {
        return document.removeEventListener('selectstart', selectStart);
      };
    }
  }, {
    key: "initDragEvent",
    value: function initDragEvent() {
      var onDrag = this.onDrag.bind(this);
      var onEndMove = this.onEndMove.bind(this);
      document.addEventListener('mousemove', onDrag);
      document.addEventListener('mouseup', onEndMove);
      return function () {
        document.removeEventListener('mousemove', onDrag);
        document.removeEventListener('mouseup', onEndMove);
      };
    }
  }, {
    key: "getParent",
    value: function getParent() {
      var _this$shell;
      return (_this$shell = this.shell) === null || _this$shell === void 0 ? void 0 : _this$shell.parentElement;
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;
      var _this$props2 = this.props,
        _this$props2$classNam = _this$props2.className,
        className = _this$props2$classNam === void 0 ? '' : _this$props2$classNam,
        position = _this$props2.position;
      return /*#__PURE__*/React.createElement("div", {
        ref: function ref(_ref) {
          _this2.shell = _ref;
        },
        className: classnames_default()(position === 'left' || position === 'right' ? 'lc-draggable-line-vertical' : 'lc-draggable-line-horizontal', draggable_line_defineProperty({}, className, !!className)),
        onMouseDown: function onMouseDown(e) {
          return _this2.onStartMove(e);
        }
      });
    }
  }]);
}(external_window_React_["Component"]);
draggable_line_DraggableLine.displayName = 'DraggableLine';
draggable_line_DraggableLine.defaultProps = {
  onDrag: function onDrag() {},
  position: 'right',
  className: '',
  maxIncrement: 100,
  maxDecrement: 0
};

// CONCATENATED MODULE: ../editor-skeleton/src/icons/fix.tsx
function fix_extends() { return fix_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, fix_extends.apply(null, arguments); }

function IconFix(props) {
  var rect = {
    width: 13,
    height: 13
  };
  return /*#__PURE__*/React.createElement(utils_src["f" /* SVGIcon */], fix_extends({
    viewBox: "0 0 1024 1024"
  }, props, rect), /*#__PURE__*/React.createElement("path", {
    d: "M750.848 28.928l245.248 242.944a66.048 66.048 0 1 1-93.184 93.184l-25.6-19.456-249.6 353.792 78.336 78.336a66.048 66.048 0 0 1-93.184 92.672l-460.8-464.64a66.048 66.048 0 0 1 93.184-93.184l76.8 78.336 354.048-249.856-18.176-18.944a66.048 66.048 0 1 1 93.184-93.184zM380.672 732.416l-91.904-90.88c-74.24 89.6-191.488 219.904-212.736 247.04a419.84 419.84 0 0 0-70.656 128 419.84 419.84 0 0 0 128-70.144c27.136-21.248 157.44-138.496 246.528-214.016z"
  }));
}
IconFix.displayName = 'Fix';
// CONCATENATED MODULE: ../editor-skeleton/src/icons/float.tsx
function float_extends() { return float_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, float_extends.apply(null, arguments); }

function IconFloat(props) {
  return /*#__PURE__*/React.createElement(utils_src["f" /* SVGIcon */], float_extends({
    viewBox: "0 0 1024 1024"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M160.256 816.64C116.224 872.448 102.4 921.6 102.4 921.6s49.152-13.824 104.96-57.856c22.016-17.408 128-112.64 200.704-174.08l-73.728-73.728c-61.44 72.704-157.184 178.688-174.08 200.704zM648.704 209.408L442.368 355.328l226.304 226.304 145.92-206.336 15.872 15.872c20.992 20.992 54.784 20.992 75.776 0s20.992-54.784 0-75.776l-197.12-197.12c-20.992-20.992-54.784-20.992-75.776 0-20.992 20.992-20.992 54.784 0 75.776l15.36 15.36zM247.808 334.848c-9.728 2.048-18.944 6.656-26.624 14.336-20.992 20.992-20.992 54.784 0 75.776l377.856 377.856c20.992 20.992 54.784 20.992 75.776 0 7.68-7.68 12.288-16.896 14.336-26.624L247.808 334.848z"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M840.704 879.104c-9.728 0-19.456-3.584-27.136-11.264L155.648 210.432c-14.848-14.848-14.848-39.424 0-54.272 14.848-14.848 39.424-14.848 54.272 0L867.84 814.08c14.848 14.848 14.848 39.424 0 54.272-7.168 7.168-16.896 10.752-27.136 10.752z"
  }));
}
IconFloat.displayName = 'Float';
// CONCATENATED MODULE: ../editor-skeleton/src/components/widget-views/panel-operation-row.tsx
function panel_operation_row_typeof(o) { "@babel/helpers - typeof"; return panel_operation_row_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, panel_operation_row_typeof(o); }
function panel_operation_row_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function panel_operation_row_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, panel_operation_row_toPropertyKey(o.key), o); } }
function panel_operation_row_createClass(e, r, t) { return r && panel_operation_row_defineProperties(e.prototype, r), t && panel_operation_row_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function panel_operation_row_toPropertyKey(t) { var i = panel_operation_row_toPrimitive(t, "string"); return "symbol" == panel_operation_row_typeof(i) ? i : i + ""; }
function panel_operation_row_toPrimitive(t, r) { if ("object" != panel_operation_row_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != panel_operation_row_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function panel_operation_row_callSuper(t, o, e) { return o = panel_operation_row_getPrototypeOf(o), panel_operation_row_possibleConstructorReturn(t, panel_operation_row_isNativeReflectConstruct() ? Reflect.construct(o, e || [], panel_operation_row_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function panel_operation_row_possibleConstructorReturn(t, e) { if (e && ("object" == panel_operation_row_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return panel_operation_row_assertThisInitialized(t); }
function panel_operation_row_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function panel_operation_row_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (panel_operation_row_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function panel_operation_row_getPrototypeOf(t) { return panel_operation_row_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, panel_operation_row_getPrototypeOf(t); }
function panel_operation_row_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && panel_operation_row_setPrototypeOf(t, e); }
function panel_operation_row_setPrototypeOf(t, e) { return panel_operation_row_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, panel_operation_row_setPrototypeOf(t, e); }






var panel_operation_row_PanelOperationRow = /*#__PURE__*/function (_Component) {
  function PanelOperationRow(props) {
    var _this;
    panel_operation_row_classCallCheck(this, PanelOperationRow);
    _this = panel_operation_row_callSuper(this, PanelOperationRow, [props]);
    Object(src["makeObservable"])(_this);
    return _this;
  }
  // fix or float
  panel_operation_row_inherits(PanelOperationRow, _Component);
  return panel_operation_row_createClass(PanelOperationRow, [{
    key: "setDisplay",
    value: function setDisplay() {
      var panel = this.props.panel;
      var current = panel;
      if (!current) {
        return;
      }
      panel.skeleton.toggleFloatStatus(panel);
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props$panel$con, _panel$config$props, _panel$config$props2, _panel$parent;
      var panel = this.props.panel;
      var isRightArea = ((_this$props$panel$con = this.props.panel.config) === null || _this$props$panel$con === void 0 ? void 0 : _this$props$panel$con.area) === 'rightArea';
      if (isRightArea) {
        return null;
      }
      // can be set fixed by default
      var canSetFixed = true;
      if ((panel === null || panel === void 0 ? void 0 : (_panel$config$props = panel.config.props) === null || _panel$config$props === void 0 ? void 0 : _panel$config$props.canSetFixed) === false) {
        canSetFixed = false;
      }
      var hideTitleBar = panel === null || panel === void 0 ? void 0 : (_panel$config$props2 = panel.config.props) === null || _panel$config$props2 === void 0 ? void 0 : _panel$config$props2.hideTitleBar;
      var areaName = panel === null || panel === void 0 ? void 0 : (_panel$parent = panel.parent) === null || _panel$parent === void 0 ? void 0 : _panel$parent.name;
      var area = panel.skeleton[areaName];
      return /*#__PURE__*/React.createElement(external_window_React_["Fragment"], null, !hideTitleBar && /*#__PURE__*/React.createElement(external_window_React_["Fragment"], null, canSetFixed &&
      /*#__PURE__*/
      // eslint-disable-next-line react/jsx-no-bind
      React.createElement(external_Next_["Button"], {
        text: true,
        className: "lc-pane-icon-fix",
        onClick: this.setDisplay.bind(this)
      }, areaName === 'leftFloatArea' ? /*#__PURE__*/React.createElement(IconFix, null) : /*#__PURE__*/React.createElement(IconFloat, null)), /*#__PURE__*/React.createElement(external_Next_["Button"], {
        text: true,
        className: "lc-pane-icon-close",
        onClick: function onClick() {
          area && area.setVisible(false);
        }
      }, /*#__PURE__*/React.createElement(external_Next_["Icon"], {
        type: "close"
      }))));
    }
  }]);
}(external_window_React_["Component"]);

Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", []), Object(tslib_es6["d" /* __metadata */])("design:returntype", void 0)], panel_operation_row_PanelOperationRow.prototype, "setDisplay", null);
// EXTERNAL MODULE: ../editor-skeleton/src/components/widget-views/index.less
var widget_views = __webpack_require__(120);

// CONCATENATED MODULE: ../editor-skeleton/src/components/widget-views/index.tsx
var widget_views_excluded = ["dock", "className", "onClick"];
function widget_views_typeof(o) { "@babel/helpers - typeof"; return widget_views_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, widget_views_typeof(o); }
function widget_views_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function widget_views_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? widget_views_ownKeys(Object(t), !0).forEach(function (r) { widget_views_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : widget_views_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function widget_views_objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = widget_views_objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }
function widget_views_objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }
function widget_views_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function widget_views_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, widget_views_toPropertyKey(o.key), o); } }
function widget_views_createClass(e, r, t) { return r && widget_views_defineProperties(e.prototype, r), t && widget_views_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function widget_views_callSuper(t, o, e) { return o = widget_views_getPrototypeOf(o), widget_views_possibleConstructorReturn(t, widget_views_isNativeReflectConstruct() ? Reflect.construct(o, e || [], widget_views_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function widget_views_possibleConstructorReturn(t, e) { if (e && ("object" == widget_views_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return widget_views_assertThisInitialized(t); }
function widget_views_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function widget_views_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (widget_views_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function widget_views_getPrototypeOf(t) { return widget_views_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, widget_views_getPrototypeOf(t); }
function widget_views_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && widget_views_setPrototypeOf(t, e); }
function widget_views_setPrototypeOf(t, e) { return widget_views_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, widget_views_setPrototypeOf(t, e); }
function widget_views_defineProperty(e, r, t) { return (r = widget_views_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function widget_views_toPropertyKey(t) { var i = widget_views_toPrimitive(t, "string"); return "symbol" == widget_views_typeof(i) ? i : i + ""; }
function widget_views_toPrimitive(t, r) { if ("object" != widget_views_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != widget_views_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }









function DockView(_ref) {
  var title = _ref.title,
    icon = _ref.icon,
    description = _ref.description,
    size = _ref.size,
    className = _ref.className,
    onClick = _ref.onClick;
  return /*#__PURE__*/React.createElement(src["Title"], {
    title: composeTitle(title, icon, description),
    className: classnames_default()('lc-dock', className, widget_views_defineProperty({}, "lc-dock-".concat(size), size)),
    onClick: onClick
  });
}
var widget_views_PanelDockView = /*#__PURE__*/function (_Component) {
  function PanelDockView() {
    var _this;
    widget_views_classCallCheck(this, PanelDockView);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = widget_views_callSuper(this, PanelDockView, [].concat(args));
    _this.lastActived = false;
    return _this;
  }
  widget_views_inherits(PanelDockView, _Component);
  return widget_views_createClass(PanelDockView, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.checkActived();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this.checkActived();
    }
  }, {
    key: "checkActived",
    value: function checkActived() {
      var dock = this.props.dock;
      if (dock.actived !== this.lastActived) {
        this.lastActived = dock.actived;
        if (this.lastActived) {
          dock.skeleton.postEvent(SkeletonEvents.PANEL_DOCK_ACTIVE, dock.name, dock);
        } else {
          dock.skeleton.postEvent(SkeletonEvents.PANEL_DOCK_UNACTIVE, dock.name, dock);
        }
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
        dock = _this$props.dock,
        className = _this$props.className,
        _onClick = _this$props.onClick,
        props = widget_views_objectWithoutProperties(_this$props, widget_views_excluded);
      return DockView(widget_views_objectSpread(widget_views_objectSpread({}, props), {}, {
        className: classnames_default()(className, {
          actived: dock.actived
        }),
        onClick: function onClick() {
          _onClick && _onClick();
          dock.togglePanel();
        }
      }));
    }
  }]);
}(external_window_React_["Component"]);
widget_views_PanelDockView = Object(tslib_es6["b" /* __decorate */])([src["observer"]], widget_views_PanelDockView);

var DialogDockView = /*#__PURE__*/function (_Component2) {
  function DialogDockView() {
    widget_views_classCallCheck(this, DialogDockView);
    return widget_views_callSuper(this, DialogDockView, arguments);
  }
  widget_views_inherits(DialogDockView, _Component2);
  return widget_views_createClass(DialogDockView);
}(external_window_React_["Component"]);
var widget_views_DraggableLineView = /*#__PURE__*/function (_Component3) {
  function DraggableLineView() {
    var _this2;
    widget_views_classCallCheck(this, DraggableLineView);
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }
    _this2 = widget_views_callSuper(this, DraggableLineView, [].concat(args));
    _this2.shell = void 0;
    _this2.defaultWidth = void 0;
    return _this2;
  }
  widget_views_inherits(DraggableLineView, _Component3);
  return widget_views_createClass(DraggableLineView, [{
    key: "getDefaultWidth",
    value: function getDefaultWidth() {
      var _this$props$panel, _this$props$panel$con, _this$shell;
      var configWidth = (_this$props$panel = this.props.panel) === null || _this$props$panel === void 0 ? void 0 : (_this$props$panel$con = _this$props$panel.config.props) === null || _this$props$panel$con === void 0 ? void 0 : _this$props$panel$con.width;
      if (configWidth) {
        return configWidth;
      }
      if (this.defaultWidth) {
        return this.defaultWidth;
      }
      var containerRef = (_this$shell = this.shell) === null || _this$shell === void 0 ? void 0 : _this$shell.getParent();
      if (containerRef) {
        this.defaultWidth = containerRef.offsetWidth;
        return this.defaultWidth;
      }
      return 300;
    }
  }, {
    key: "onDrag",
    value: function onDrag(value) {
      var _this$shell2;
      var defaultWidth = this.getDefaultWidth();
      var width = defaultWidth + value;
      var containerRef = (_this$shell2 = this.shell) === null || _this$shell2 === void 0 ? void 0 : _this$shell2.getParent();
      if (containerRef) {
        containerRef.style.width = "".concat(width, "px");
      }
      // 抛出事件，对于有些需要 panel 插件随着 度变化进行再次渲染的，由panel插件内部监听事件实现
      var editor = this.props.panel.skeleton.editor;
      editor === null || editor === void 0 ? void 0 : editor.eventBus.emit('dockpane.drag', width);
    }
  }, {
    key: "onDragChange",
    value: function onDragChange(type) {
      var editor = this.props.panel.skeleton.editor;
      editor === null || editor === void 0 ? void 0 : editor.eventBus.emit('dockpane.dragchange', type);
      // builtinSimulator 屏蔽掉 鼠标事件
      editor === null || editor === void 0 ? void 0 : editor.eventBus.emit('designer.builtinSimulator.disabledEvents', type === 'start');
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props$panel$con2,
        _this$props$panel$con3,
        _this$props$panel2,
        _this$props$panel2$pa,
        _this3 = this;
      // left fixed 下不允许改变宽度
      // 默认 关闭，通过配置开启
      var enableDrag = (_this$props$panel$con2 = this.props.panel.config.props) === null || _this$props$panel$con2 === void 0 ? void 0 : _this$props$panel$con2.enableDrag;
      var isRightArea = ((_this$props$panel$con3 = this.props.panel.config) === null || _this$props$panel$con3 === void 0 ? void 0 : _this$props$panel$con3.area) === 'rightArea';
      if (isRightArea || !enableDrag || ((_this$props$panel2 = this.props.panel) === null || _this$props$panel2 === void 0 ? void 0 : (_this$props$panel2$pa = _this$props$panel2.parent) === null || _this$props$panel2$pa === void 0 ? void 0 : _this$props$panel2$pa.name) === 'leftFixedArea') {
        return null;
      }
      return /*#__PURE__*/React.createElement(draggable_line_DraggableLine, {
        ref: function ref(_ref2) {
          _this3.shell = _ref2;
        },
        position: "right",
        className: "lc-engine-slate-draggable-line-right",
        onDrag: function onDrag(e) {
          return _this3.onDrag(e);
        },
        onDragStart: function onDragStart() {
          return _this3.onDragChange('start');
        },
        onDragEnd: function onDragEnd() {
          return _this3.onDragChange('end');
        },
        maxIncrement: 500,
        maxDecrement: 0
      });
    }
  }]);
}(external_window_React_["Component"]);
var widget_views_TitledPanelView = /*#__PURE__*/function (_Component4) {
  function TitledPanelView() {
    var _this4;
    widget_views_classCallCheck(this, TitledPanelView);
    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      args[_key3] = arguments[_key3];
    }
    _this4 = widget_views_callSuper(this, TitledPanelView, [].concat(args));
    _this4.lastVisible = false;
    return _this4;
  }
  widget_views_inherits(TitledPanelView, _Component4);
  return widget_views_createClass(TitledPanelView, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.checkVisible();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this.checkVisible();
    }
  }, {
    key: "checkVisible",
    value: function checkVisible() {
      var panel = this.props.panel;
      var currentVisible = panel.inited && panel.visible;
      if (currentVisible !== this.lastVisible) {
        this.lastVisible = currentVisible;
        if (this.lastVisible) {
          panel.skeleton.postEvent(SkeletonEvents.PANEL_SHOW, panel.name, panel);
        } else {
          panel.skeleton.postEvent(SkeletonEvents.PANEL_HIDE, panel.name, panel);
        }
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _panel$config$props;
      var _this$props2 = this.props,
        panel = _this$props2.panel,
        area = _this$props2.area;
      if (!panel.inited) {
        return null;
      }
      var editor = panel.skeleton.editor;
      var panelName = area ? "".concat(area, "-").concat(panel.name) : panel.name;
      editor === null || editor === void 0 ? void 0 : editor.eventBus.emit('skeleton.panel.toggle', {
        name: panelName || '',
        status: panel.visible ? 'show' : 'hide'
      });
      return /*#__PURE__*/React.createElement("div", {
        className: classnames_default()('lc-titled-panel', {
          hidden: !panel.visible
        }),
        id: panelName,
        "data-keep-visible-while-dragging": (_panel$config$props = panel.config.props) === null || _panel$config$props === void 0 ? void 0 : _panel$config$props.keepVisibleWhileDragging
      }, /*#__PURE__*/React.createElement(panel_operation_row_PanelOperationRow, {
        panel: panel
      }), /*#__PURE__*/React.createElement(widget_views_PanelTitle, {
        panel: panel
      }), /*#__PURE__*/React.createElement("div", {
        className: "lc-panel-body"
      }, panel.body), /*#__PURE__*/React.createElement(widget_views_DraggableLineView, {
        panel: panel
      }));
    }
  }]);
}(external_window_React_["Component"]);
widget_views_TitledPanelView = Object(tslib_es6["b" /* __decorate */])([src["observer"]], widget_views_TitledPanelView);

var widget_views_PanelView = /*#__PURE__*/function (_Component5) {
  function PanelView() {
    var _this5;
    widget_views_classCallCheck(this, PanelView);
    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
      args[_key4] = arguments[_key4];
    }
    _this5 = widget_views_callSuper(this, PanelView, [].concat(args));
    _this5.lastVisible = false;
    return _this5;
  }
  widget_views_inherits(PanelView, _Component5);
  return widget_views_createClass(PanelView, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.checkVisible();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this.checkVisible();
    }
  }, {
    key: "checkVisible",
    value: function checkVisible() {
      var panel = this.props.panel;
      var currentVisible = panel.inited && panel.visible;
      if (currentVisible !== this.lastVisible) {
        this.lastVisible = currentVisible;
        if (this.lastVisible) {
          panel.skeleton.postEvent(SkeletonEvents.PANEL_SHOW, panel.name, panel);
        } else {
          panel.skeleton.postEvent(SkeletonEvents.PANEL_HIDE, panel.name, panel);
        }
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _panel$config$props2;
      var _this$props3 = this.props,
        panel = _this$props3.panel,
        area = _this$props3.area,
        hideOperationRow = _this$props3.hideOperationRow,
        hideDragLine = _this$props3.hideDragLine;
      if (!panel.inited) {
        return null;
      }
      var editor = panel.skeleton.editor;
      var panelName = area ? "".concat(area, "-").concat(panel.name) : panel.name;
      editor === null || editor === void 0 ? void 0 : editor.eventBus.emit('skeleton.panel.toggle', {
        name: panelName || '',
        status: panel.visible ? 'show' : 'hide'
      });
      return /*#__PURE__*/React.createElement("div", {
        className: classnames_default()('lc-panel', {
          hidden: !panel.visible
        }),
        id: panelName,
        "data-keep-visible-while-dragging": (_panel$config$props2 = panel.config.props) === null || _panel$config$props2 === void 0 ? void 0 : _panel$config$props2.keepVisibleWhileDragging
      }, !hideOperationRow && /*#__PURE__*/React.createElement(panel_operation_row_PanelOperationRow, {
        panel: panel
      }), panel.body, !hideDragLine && /*#__PURE__*/React.createElement(widget_views_DraggableLineView, {
        panel: panel
      }));
    }
  }]);
}(external_window_React_["Component"]);
widget_views_PanelView = Object(tslib_es6["b" /* __decorate */])([src["observer"]], widget_views_PanelView);

var TabsPanelView = /*#__PURE__*/function (_Component6) {
  function TabsPanelView() {
    widget_views_classCallCheck(this, TabsPanelView);
    return widget_views_callSuper(this, TabsPanelView, arguments);
  }
  widget_views_inherits(TabsPanelView, _Component6);
  return widget_views_createClass(TabsPanelView, [{
    key: "render",
    value: function render() {
      var container = this.props.container;
      var titles = [];
      var contents = [];
      // 如果只有一个标签且 shouldHideSingleTab 为 true，则不显示 Tabs
      if (this.props.shouldHideSingleTab && container.items.length === 1) {
        contents.push(/*#__PURE__*/React.createElement(widget_views_PanelView, {
          key: container.items[0].id,
          panel: container.items[0],
          hideOperationRow: true,
          hideDragLine: true
        }));
      } else {
        container.items.forEach(function (item) {
          titles.push(/*#__PURE__*/React.createElement(widget_views_PanelTitle, {
            key: item.id,
            panel: item,
            className: "lc-tab-title"
          }));
          contents.push(/*#__PURE__*/React.createElement(widget_views_PanelView, {
            key: item.id,
            panel: item,
            hideOperationRow: true,
            hideDragLine: true
          }));
        });
      }
      if (!titles.length) {
        return contents;
      }
      return /*#__PURE__*/React.createElement("div", {
        className: "lc-tabs"
      }, /*#__PURE__*/React.createElement("div", {
        className: "lc-tabs-title",
        onClick: function onClick(e) {
          var shell = e.currentTarget;
          var t = e.target;
          var elt = shell.firstElementChild;
          while (elt) {
            if (elt.contains(t)) {
              break;
            }
            elt = elt.nextElementSibling;
          }
          if (elt) {
            container.active(elt.dataset.name);
          }
        }
      }, titles), /*#__PURE__*/React.createElement("div", {
        className: "lc-tabs-content"
      }, contents));
    }
  }]);
}(external_window_React_["Component"]);
TabsPanelView = Object(tslib_es6["b" /* __decorate */])([src["observer"]], TabsPanelView);

var widget_views_PanelTitle = /*#__PURE__*/function (_Component7) {
  function PanelTitle() {
    widget_views_classCallCheck(this, PanelTitle);
    return widget_views_callSuper(this, PanelTitle, arguments);
  }
  widget_views_inherits(PanelTitle, _Component7);
  return widget_views_createClass(PanelTitle, [{
    key: "render",
    value: function render() {
      var _this$props4 = this.props,
        panel = _this$props4.panel,
        className = _this$props4.className;
      return /*#__PURE__*/React.createElement("div", {
        className: classnames_default()('lc-panel-title', className, {
          actived: panel.actived
        }),
        "data-name": panel.name
      }, /*#__PURE__*/React.createElement(src["Title"], {
        title: panel.title || panel.name
      }), panel.help ? /*#__PURE__*/React.createElement(src["HelpTip"], {
        help: panel.help
      }) : null);
    }
  }]);
}(external_window_React_["Component"]);
widget_views_PanelTitle = Object(tslib_es6["b" /* __decorate */])([src["observer"]], widget_views_PanelTitle);
var widget_views_WidgetView = /*#__PURE__*/function (_Component8) {
  function WidgetView() {
    var _this6;
    widget_views_classCallCheck(this, WidgetView);
    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
      args[_key5] = arguments[_key5];
    }
    _this6 = widget_views_callSuper(this, WidgetView, [].concat(args));
    _this6.lastVisible = false;
    _this6.lastDisabled = false;
    return _this6;
  }
  widget_views_inherits(WidgetView, _Component8);
  return widget_views_createClass(WidgetView, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.checkVisible();
      this.checkDisabled();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this.checkVisible();
      this.checkDisabled();
    }
  }, {
    key: "checkVisible",
    value: function checkVisible() {
      var widget = this.props.widget;
      var currentVisible = widget.visible;
      if (currentVisible !== this.lastVisible) {
        this.lastVisible = currentVisible;
        if (this.lastVisible) {
          widget.skeleton.postEvent(SkeletonEvents.WIDGET_SHOW, widget.name, widget);
        } else {
          widget.skeleton.postEvent(SkeletonEvents.WIDGET_SHOW, widget.name, widget);
        }
      }
    }
  }, {
    key: "checkDisabled",
    value: function checkDisabled() {
      var widget = this.props.widget;
      var currentDisabled = widget.disabled;
      if (currentDisabled !== this.lastDisabled) {
        this.lastDisabled = currentDisabled;
        if (this.lastDisabled) {
          widget.skeleton.postEvent(SkeletonEvents.WIDGET_DISABLE, widget.name, widget);
        } else {
          widget.skeleton.postEvent(SkeletonEvents.WIDGET_ENABLE, widget.name, widget);
        }
      }
    }
  }, {
    key: "render",
    value: function render() {
      var widget = this.props.widget;
      if (!widget.visible) {
        return null;
      }
      if (widget.disabled) {
        return /*#__PURE__*/React.createElement("div", {
          className: "lc-widget-disabled"
        }, widget.body);
      }
      return widget.body;
    }
  }]);
}(external_window_React_["Component"]);
widget_views_WidgetView = Object(tslib_es6["b" /* __decorate */])([src["observer"]], widget_views_WidgetView);

// CONCATENATED MODULE: ../editor-skeleton/src/widget/panel-dock.ts
function panel_dock_typeof(o) { "@babel/helpers - typeof"; return panel_dock_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, panel_dock_typeof(o); }
function panel_dock_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function panel_dock_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? panel_dock_ownKeys(Object(t), !0).forEach(function (r) { panel_dock_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : panel_dock_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function panel_dock_defineProperty(e, r, t) { return (r = panel_dock_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function panel_dock_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function panel_dock_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, panel_dock_toPropertyKey(o.key), o); } }
function panel_dock_createClass(e, r, t) { return r && panel_dock_defineProperties(e.prototype, r), t && panel_dock_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function panel_dock_toPropertyKey(t) { var i = panel_dock_toPrimitive(t, "string"); return "symbol" == panel_dock_typeof(i) ? i : i + ""; }
function panel_dock_toPrimitive(t, r) { if ("object" != panel_dock_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != panel_dock_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }







var panel_dock_PanelDock = /*#__PURE__*/function () {
  function PanelDock(skeleton, config) {
    panel_dock_classCallCheck(this, PanelDock);
    this.skeleton = void 0;
    this.config = void 0;
    this.isWidget = true;
    this.isPanelDock = true;
    this.id = void 0;
    this.name = void 0;
    this.align = void 0;
    this.inited = false;
    this._body = void 0;
    this._shell = null;
    this._visible = true;
    this.panelName = void 0;
    this._panel = void 0;
    this._disabled = false;
    this.skeleton = skeleton;
    this.config = config;
    Object(src["makeObservable"])(this);
    var content = config.content,
      contentProps = config.contentProps,
      panelProps = config.panelProps,
      name = config.name,
      props = config.props;
    this.name = name;
    this.id = Object(utils_src["ib" /* uniqueId */])("dock:".concat(name, "$"));
    this.panelName = config.panelName || name;
    this.align = props === null || props === void 0 ? void 0 : props.align;
    if (content) {
      var _panelProps = panel_dock_objectSpread({}, panelProps);
      if (_panelProps.title == null && props) {
        _panelProps.title = composeTitle(props.title, undefined, props.description, true, true);
      }
      this._panel = this.skeleton.add({
        type: 'Panel',
        name: this.panelName,
        props: _panelProps,
        contentProps: contentProps,
        content: content,
        area: panelProps === null || panelProps === void 0 ? void 0 : panelProps.area
      });
    }
    if (props !== null && props !== void 0 && props.onInit) {
      props.onInit.call(this, this);
    }
  }
  return panel_dock_createClass(PanelDock, [{
    key: "body",
    get: function get() {
      if (this.inited) {
        return this._body;
      }
      this.inited = true;
      var props = this.config.props;
      this._body = /*#__PURE__*/Object(external_window_React_["createElement"])(widget_views_PanelDockView, panel_dock_objectSpread(panel_dock_objectSpread({}, props), {}, {
        dock: this
      }));
      return this._body;
    }
  }, {
    key: "content",
    get: function get() {
      var _this = this;
      return /*#__PURE__*/Object(external_window_React_["createElement"])(widget_views_WidgetView, {
        widget: this,
        ref: function ref(_ref) {
          _this._shell = _ref;
        },
        key: this.id
      });
    }
  }, {
    key: "visible",
    get: function get() {
      return this._visible;
    }
  }, {
    key: "actived",
    get: function get() {
      var _this$panel;
      return ((_this$panel = this.panel) === null || _this$panel === void 0 ? void 0 : _this$panel.visible) || false;
    }
  }, {
    key: "panel",
    get: function get() {
      return this._panel || this.skeleton.getPanel(this.panelName);
    }
  }, {
    key: "getDOMNode",
    value: function getDOMNode() {
      // eslint-disable-next-line react/no-find-dom-node
      return this._shell ? Object(external_window_ReactDOM_["findDOMNode"])(this._shell) : null;
    }
  }, {
    key: "setVisible",
    value: function setVisible(flag) {
      if (flag === this._visible) {
        return;
      }
      if (flag) {
        this._visible = true;
      } else if (this.inited) {
        this._visible = false;
      }
    }
  }, {
    key: "hide",
    value: function hide() {
      this.setVisible(false);
    }
  }, {
    key: "show",
    value: function show() {
      this.setVisible(true);
    }
  }, {
    key: "toggle",
    value: function toggle() {
      this.setVisible(!this._visible);
    }
  }, {
    key: "setDisabled",
    value: function setDisabled(flag) {
      if (this._disabled === flag) return;
      this._disabled = flag;
    }
  }, {
    key: "disable",
    value: function disable() {
      this.setDisabled(true);
    }
  }, {
    key: "enable",
    value: function enable() {
      this.setDisabled(false);
    }
  }, {
    key: "disabled",
    get: function get() {
      return this._disabled;
    }
  }, {
    key: "togglePanel",
    value: function togglePanel() {
      var _this$panel2;
      (_this$panel2 = this.panel) === null || _this$panel2 === void 0 ? void 0 : _this$panel2.toggle();
    }
  }, {
    key: "getName",
    value: function getName() {
      return this.name;
    }
  }, {
    key: "getContent",
    value: function getContent() {
      return this.content;
    }
  }, {
    key: "hidePanel",
    value: function hidePanel() {
      var _this$panel3;
      (_this$panel3 = this.panel) === null || _this$panel3 === void 0 ? void 0 : _this$panel3.setActive(false);
    }
  }, {
    key: "showPanel",
    value: function showPanel() {
      var _this$panel4;
      (_this$panel4 = this.panel) === null || _this$panel4 === void 0 ? void 0 : _this$panel4.setActive(true);
    }
    /**
     * @deprecated
     */
  }, {
    key: "onActiveChange",
    value: function onActiveChange(func) {
      var _this$panel5;
      return (_this$panel5 = this.panel) === null || _this$panel5 === void 0 ? void 0 : _this$panel5.onActiveChange(func);
    }
  }]);
}();
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], panel_dock_PanelDock.prototype, "_visible", void 0);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Boolean), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], panel_dock_PanelDock.prototype, "actived", null);
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], panel_dock_PanelDock.prototype, "_disabled", void 0);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], panel_dock_PanelDock.prototype, "panel", null);
function isPanelDock(obj) {
  return obj && obj.isPanelDock;
}
// CONCATENATED MODULE: ../editor-skeleton/src/widget/panel.ts
function panel_typeof(o) { "@babel/helpers - typeof"; return panel_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, panel_typeof(o); }
function panel_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function panel_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? panel_ownKeys(Object(t), !0).forEach(function (r) { panel_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : panel_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function panel_defineProperty(e, r, t) { return (r = panel_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function panel_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function panel_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, panel_toPropertyKey(o.key), o); } }
function panel_createClass(e, r, t) { return r && panel_defineProperties(e.prototype, r), t && panel_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function panel_toPropertyKey(t) { var i = panel_toPrimitive(t, "string"); return "symbol" == panel_typeof(i) ? i : i + ""; }
function panel_toPrimitive(t, r) { if ("object" != panel_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != panel_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var panel_a;









var panel_Panel = /*#__PURE__*/function () {
  function Panel(skeleton, config) {
    var _this = this;
    panel_classCallCheck(this, Panel);
    this.skeleton = void 0;
    this.config = void 0;
    this.isWidget = true;
    this.name = void 0;
    this.id = void 0;
    this.inited = false;
    this._actived = false;
    this.emitter = Object(src["createModuleEventBus"])('Panel');
    this.isPanel = true;
    this.title = void 0;
    this.help = void 0;
    this.plain = false;
    this.container = void 0;
    this.parent = void 0;
    this.skeleton = skeleton;
    this.config = config;
    Object(src["makeObservable"])(this);
    var name = config.name,
      content = config.content,
      _config$props = config.props,
      props = _config$props === void 0 ? {} : _config$props;
    var hideTitleBar = props.hideTitleBar,
      title = props.title,
      icon = props.icon,
      description = props.description,
      help = props.help;
    this.name = name;
    this.id = Object(utils_src["ib" /* uniqueId */])("pane:".concat(name, "$"));
    this.title = composeTitle(title || name, icon, description);
    this.plain = hideTitleBar || !title;
    this.help = help;
    if (Array.isArray(content)) {
      this.container = this.skeleton.createContainer(name, function (item) {
        if (isPanel(item)) {
          return item;
        }
        return _this.skeleton.createPanel(item);
      }, true, function () {
        return _this.visible;
      }, true);
      content.forEach(function (item) {
        return _this.add(item);
      });
    }
    if (props.onInit) {
      props.onInit.call(this, this);
    }
    if (typeof content !== 'string' && content && content.onInit) {
      content.onInit.call(this, this);
    }
    // todo: process shortcut
  }
  return panel_createClass(Panel, [{
    key: "actived",
    get: function get() {
      return this._actived;
    }
  }, {
    key: "visible",
    get: function get() {
      if (!this.parent || this.parent.visible) {
        var props = this.config.props;
        if (props !== null && props !== void 0 && props.condition) {
          return props.condition(this);
        }
        return this._actived;
      }
      return false;
    }
  }, {
    key: "body",
    get: function get() {
      if (this.container) {
        return /*#__PURE__*/Object(external_window_React_["createElement"])(TabsPanelView, {
          container: this.container,
          shouldHideSingleTab: true
        });
      }
      var _this$config = this.config,
        content = _this$config.content,
        contentProps = _this$config.contentProps;
      return Object(utils_src["n" /* createContent */])(content, panel_objectSpread(panel_objectSpread({}, contentProps), {}, {
        editor: getEvent(this.skeleton.editor),
        config: this.config,
        panel: this,
        pane: this
      }));
    }
  }, {
    key: "content",
    get: function get() {
      var _this$config2, _this$parent;
      var area = ((_this$config2 = this.config) === null || _this$config2 === void 0 ? void 0 : _this$config2.area) || ((_this$parent = this.parent) === null || _this$parent === void 0 ? void 0 : _this$parent.name);
      if (this.plain) {
        return /*#__PURE__*/Object(external_window_React_["createElement"])(widget_views_PanelView, {
          panel: this,
          key: this.id,
          area: area
        });
      }
      return /*#__PURE__*/Object(external_window_React_["createElement"])(widget_views_TitledPanelView, {
        panel: this,
        key: this.id,
        area: area
      });
    }
  }, {
    key: "setParent",
    value: function setParent(parent) {
      if (parent === this.parent) {
        return;
      }
      if (this.parent) {
        this.parent.remove(this);
      }
      this.parent = parent;
    }
  }, {
    key: "add",
    value: function add(item) {
      var _this$container;
      return (_this$container = this.container) === null || _this$container === void 0 ? void 0 : _this$container.add(item);
    }
  }, {
    key: "getPane",
    value: function getPane(name) {
      var _this$container2;
      return ((_this$container2 = this.container) === null || _this$container2 === void 0 ? void 0 : _this$container2.get(name)) || null;
    }
  }, {
    key: "remove",
    value: function remove(item) {
      var _this$container3;
      return (_this$container3 = this.container) === null || _this$container3 === void 0 ? void 0 : _this$container3.remove(item);
    }
  }, {
    key: "active",
    value: function active(item) {
      if (item) {
        var _this$container4;
        (_this$container4 = this.container) === null || _this$container4 === void 0 ? void 0 : _this$container4.active(item);
      } else {
        this.setActive(true);
      }
    }
  }, {
    key: "getName",
    value: function getName() {
      return this.name;
    }
  }, {
    key: "getContent",
    value: function getContent() {
      return this.content;
    }
    /**
     * check is current panel is in float area or not
     *
     * @returns {boolean}
     * @memberof Panel
     */
  }, {
    key: "isChildOfFloatArea",
    value: function isChildOfFloatArea() {
      var _this$parent2;
      return ((_this$parent2 = this.parent) === null || _this$parent2 === void 0 ? void 0 : _this$parent2.name) === 'leftFloatArea';
    }
    /**
     * check is current panel is in fixed area or not
     *
     * @returns {boolean}
     * @memberof Panel
     */
  }, {
    key: "isChildOfFixedArea",
    value: function isChildOfFixedArea() {
      var _this$parent3;
      return ((_this$parent3 = this.parent) === null || _this$parent3 === void 0 ? void 0 : _this$parent3.name) === 'leftFixedArea';
    }
  }, {
    key: "setActive",
    value: function setActive(flag) {
      if (flag === this._actived) {
        // TODO: 如果移动到另外一个 container，会有问题
        return;
      }
      if (flag) {
        var _this$parent4;
        // 对于 Area 的直接 Child，要专门处理 Float & Fixed 分组切换, 其他情况不需要
        if (this.isChildOfFloatArea()) {
          this.skeleton.leftFixedArea.container.unactiveAll();
        } else if (this.isChildOfFixedArea()) {
          this.skeleton.leftFloatArea.container.unactiveAll();
        }
        this._actived = true;
        (_this$parent4 = this.parent) === null || _this$parent4 === void 0 ? void 0 : _this$parent4.active(this);
        if (!this.inited) {
          this.inited = true;
        }
        this.emitter.emit('activechange', true);
      } else if (this.inited) {
        var _this$parent5, _this$parent6;
        if ((_this$parent5 = this.parent) !== null && _this$parent5 !== void 0 && _this$parent5.name && this.name.startsWith(this.parent.name)) {
          this.inited = false;
        }
        this._actived = false;
        (_this$parent6 = this.parent) === null || _this$parent6 === void 0 ? void 0 : _this$parent6.unactive(this);
        this.emitter.emit('activechange', false);
      }
    }
  }, {
    key: "toggle",
    value: function toggle() {
      this.setActive(!this._actived);
    }
  }, {
    key: "hide",
    value: function hide() {
      this.setActive(false);
    }
  }, {
    key: "disable",
    value: function disable() {}
  }, {
    key: "enable",
    value: function enable() {}
  }, {
    key: "show",
    value: function show() {
      this.setActive(true);
    }
  }, {
    key: "getAssocDocks",
    value: function getAssocDocks() {
      var _this2 = this;
      return this.skeleton.widgets.filter(function (item) {
        return isPanelDock(item) && item.panelName === _this2.name;
      });
    }
    /**
     * @deprecated
     */
  }, {
    key: "getSupportedPositions",
    value: function getSupportedPositions() {
      return ['default'];
    }
    /**
     * @deprecated
     */
  }, {
    key: "getCurrentPosition",
    value: function getCurrentPosition() {
      return 'default';
    }
    /**
     * @deprecated
     */
  }, {
    key: "setPosition",
    value: function setPosition(/* position: string */
    ) {
      // noop
    }
    /**
     * @deprecated
     */
  }, {
    key: "onActiveChange",
    value: function onActiveChange(fn) {
      var _this3 = this;
      this.emitter.on('activechange', fn);
      return function () {
        _this3.emitter.removeListener('activechange', fn);
      };
    }
  }]);
}();
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], panel_Panel.prototype, "inited", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], panel_Panel.prototype, "_actived", void 0);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Boolean), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], panel_Panel.prototype, "actived", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Boolean), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], panel_Panel.prototype, "visible", null);
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", typeof (panel_a = typeof widget_container_WidgetContainer !== "undefined" && widget_container_WidgetContainer) === "function" ? panel_a : Object)], panel_Panel.prototype, "parent", void 0);
function isPanel(obj) {
  return obj && obj.isPanel;
}
// CONCATENATED MODULE: ../editor-skeleton/src/widget/widget.ts
function widget_typeof(o) { "@babel/helpers - typeof"; return widget_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, widget_typeof(o); }
function widget_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function widget_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? widget_ownKeys(Object(t), !0).forEach(function (r) { widget_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : widget_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function widget_defineProperty(e, r, t) { return (r = widget_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function widget_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function widget_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, widget_toPropertyKey(o.key), o); } }
function widget_createClass(e, r, t) { return r && widget_defineProperties(e.prototype, r), t && widget_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function widget_toPropertyKey(t) { var i = widget_toPrimitive(t, "string"); return "symbol" == widget_typeof(i) ? i : i + ""; }
function widget_toPrimitive(t, r) { if ("object" != widget_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != widget_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }






var widget_Widget = /*#__PURE__*/function () {
  function Widget(skeleton, config) {
    widget_classCallCheck(this, Widget);
    this.skeleton = void 0;
    this.config = void 0;
    this.isWidget = true;
    this.id = Object(utils_src["ib" /* uniqueId */])('widget');
    this.name = void 0;
    this.align = void 0;
    this._visible = true;
    this.inited = false;
    this._disabled = false;
    this._body = void 0;
    this.title = void 0;
    this.skeleton = skeleton;
    this.config = config;
    Object(src["makeObservable"])(this);
    var _config$props = config.props,
      props = _config$props === void 0 ? {} : _config$props,
      name = config.name;
    this.name = name;
    this.align = props.align;
    this.title = props.title || name;
    if (props.onInit) {
      props.onInit.call(this, this);
    }
  }
  return widget_createClass(Widget, [{
    key: "visible",
    get: function get() {
      return this._visible;
    }
  }, {
    key: "body",
    get: function get() {
      if (this.inited) {
        return this._body;
      }
      this.inited = true;
      var _this$config = this.config,
        content = _this$config.content,
        contentProps = _this$config.contentProps;
      this._body = Object(utils_src["n" /* createContent */])(content, widget_objectSpread(widget_objectSpread({}, contentProps), {}, {
        config: this.config,
        editor: getEvent(this.skeleton.editor)
      }));
      return this._body;
    }
  }, {
    key: "content",
    get: function get() {
      return /*#__PURE__*/Object(external_window_React_["createElement"])(widget_views_WidgetView, {
        widget: this,
        key: this.id
      });
    }
  }, {
    key: "getId",
    value: function getId() {
      return this.id;
    }
  }, {
    key: "getName",
    value: function getName() {
      return this.name;
    }
  }, {
    key: "getContent",
    value: function getContent() {
      return this.content;
    }
  }, {
    key: "hide",
    value: function hide() {
      this.setVisible(false);
    }
  }, {
    key: "show",
    value: function show() {
      this.setVisible(true);
    }
  }, {
    key: "setVisible",
    value: function setVisible(flag) {
      if (flag === this._visible) {
        return;
      }
      if (flag) {
        this._visible = true;
      } else if (this.inited) {
        this._visible = false;
      }
    }
  }, {
    key: "toggle",
    value: function toggle() {
      this.setVisible(!this._visible);
    }
  }, {
    key: "setDisabled",
    value: function setDisabled(flag) {
      if (this._disabled === flag) return;
      this._disabled = flag;
    }
  }, {
    key: "disable",
    value: function disable() {
      this.setDisabled(true);
    }
  }, {
    key: "enable",
    value: function enable() {
      this.setDisabled(false);
    }
  }, {
    key: "disabled",
    get: function get() {
      return this._disabled;
    }
  }]);
}();
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], widget_Widget.prototype, "_visible", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], widget_Widget.prototype, "inited", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], widget_Widget.prototype, "_disabled", void 0);
function isWidget(obj) {
  return obj && obj.isWidget;
}
// CONCATENATED MODULE: ../editor-skeleton/src/widget/dock.ts
function dock_typeof(o) { "@babel/helpers - typeof"; return dock_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, dock_typeof(o); }
function dock_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function dock_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? dock_ownKeys(Object(t), !0).forEach(function (r) { dock_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : dock_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function dock_defineProperty(e, r, t) { return (r = dock_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function dock_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function dock_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, dock_toPropertyKey(o.key), o); } }
function dock_createClass(e, r, t) { return r && dock_defineProperties(e.prototype, r), t && dock_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function dock_toPropertyKey(t) { var i = dock_toPrimitive(t, "string"); return "symbol" == dock_typeof(i) ? i : i + ""; }
function dock_toPrimitive(t, r) { if ("object" != dock_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != dock_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }






/**
 * 带图标（主要）/标题（次要）的扩展
 */
var dock_Dock = /*#__PURE__*/function () {
  function Dock(skeleton, config) {
    dock_classCallCheck(this, Dock);
    this.skeleton = void 0;
    this.config = void 0;
    this.isWidget = true;
    this.id = Object(utils_src["ib" /* uniqueId */])('dock');
    this.name = void 0;
    this.align = void 0;
    this._visible = true;
    this._disabled = false;
    this.inited = false;
    this._body = void 0;
    this.skeleton = skeleton;
    this.config = config;
    Object(src["makeObservable"])(this);
    var _config$props = config.props,
      props = _config$props === void 0 ? {} : _config$props,
      name = config.name;
    this.name = name;
    this.align = props.align;
    if (props.onInit) {
      props.onInit.call(this, this);
    }
  }
  return dock_createClass(Dock, [{
    key: "visible",
    get: function get() {
      return this._visible;
    }
  }, {
    key: "content",
    get: function get() {
      return /*#__PURE__*/Object(external_window_React_["createElement"])(widget_views_WidgetView, {
        widget: this,
        key: this.id
      });
    }
  }, {
    key: "body",
    get: function get() {
      if (this.inited) {
        return this._body;
      }
      var _this$config = this.config,
        props = _this$config.props,
        content = _this$config.content,
        contentProps = _this$config.contentProps;
      if (content) {
        this._body = Object(utils_src["n" /* createContent */])(content, dock_objectSpread(dock_objectSpread({}, contentProps), {}, {
          config: this.config,
          editor: getEvent(this.skeleton.editor)
        }));
      } else {
        this._body = /*#__PURE__*/Object(external_window_React_["createElement"])(DockView, props);
      }
      this.inited = true;
      return this._body;
    }
  }, {
    key: "setVisible",
    value: function setVisible(flag) {
      if (flag === this._visible) {
        return;
      }
      if (flag) {
        this._visible = true;
      } else if (this.inited) {
        this._visible = false;
      }
    }
  }, {
    key: "setDisabled",
    value: function setDisabled(flag) {
      if (this._disabled === flag) return;
      this._disabled = flag;
    }
  }, {
    key: "disable",
    value: function disable() {
      this.setDisabled(true);
    }
  }, {
    key: "enable",
    value: function enable() {
      this.setDisabled(false);
    }
  }, {
    key: "disabled",
    get: function get() {
      return this._disabled;
    }
  }, {
    key: "getContent",
    value: function getContent() {
      return this.content;
    }
  }, {
    key: "getName",
    value: function getName() {
      return this.name;
    }
  }, {
    key: "hide",
    value: function hide() {
      this.setVisible(false);
    }
  }, {
    key: "show",
    value: function show() {
      this.setVisible(true);
    }
  }, {
    key: "toggle",
    value: function toggle() {
      this.setVisible(!this._visible);
    }
  }]);
}();
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], dock_Dock.prototype, "_visible", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], dock_Dock.prototype, "_disabled", void 0);
// CONCATENATED MODULE: ../editor-skeleton/src/widget/stage.ts
function stage_typeof(o) { "@babel/helpers - typeof"; return stage_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, stage_typeof(o); }
function stage_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function stage_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, stage_toPropertyKey(o.key), o); } }
function stage_createClass(e, r, t) { return r && stage_defineProperties(e.prototype, r), t && stage_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function stage_toPropertyKey(t) { var i = stage_toPrimitive(t, "string"); return "symbol" == stage_typeof(i) ? i : i + ""; }
function stage_toPrimitive(t, r) { if ("object" != stage_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != stage_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function stage_callSuper(t, o, e) { return o = stage_getPrototypeOf(o), stage_possibleConstructorReturn(t, stage_isNativeReflectConstruct() ? Reflect.construct(o, e || [], stage_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function stage_possibleConstructorReturn(t, e) { if (e && ("object" == stage_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return stage_assertThisInitialized(t); }
function stage_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function stage_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (stage_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function stage_getPrototypeOf(t) { return stage_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, stage_getPrototypeOf(t); }
function stage_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && stage_setPrototypeOf(t, e); }
function stage_setPrototypeOf(t, e) { return stage_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, stage_setPrototypeOf(t, e); }
// import { uniqueId } from '@alilc/lowcode-utils';

var stage_Stage = /*#__PURE__*/function (_Widget) {
  function Stage(skeleton, config) {
    var _this;
    stage_classCallCheck(this, Stage);
    _this = stage_callSuper(this, Stage, [skeleton, config]);
    _this.isRoot = void 0;
    _this.previous = void 0;
    _this.refer = void 0;
    _this.isRoot = config.isRoot || false;
    return _this;
  }
  stage_inherits(Stage, _Widget);
  return stage_createClass(Stage, [{
    key: "setPrevious",
    value: function setPrevious(stage) {
      this.previous = stage;
    }
  }, {
    key: "getPrevious",
    value: function getPrevious() {
      return this.previous;
    }
  }, {
    key: "hasBack",
    value: function hasBack() {
      return !!(this.previous && !this.isRoot);
    }
  }, {
    key: "setRefer",
    value: function setRefer(stage, direction) {
      this.refer = {
        stage: stage,
        direction: direction
      };
    }
  }, {
    key: "setReferRight",
    value: function setReferRight(stage) {
      this.setRefer(stage, 'right');
    }
  }, {
    key: "setReferLeft",
    value: function setReferLeft(stage) {
      this.setRefer(stage, 'left');
    }
  }, {
    key: "getRefer",
    value: function getRefer() {
      var refer = this.refer;
      this.refer = undefined;
      return refer;
    }
  }]);
}(widget_Widget);
// CONCATENATED MODULE: ../editor-skeleton/src/skeleton.ts
var skeleton_excluded = ["dialogProps", "balloonProps", "panelProps", "linkProps"],
  skeleton_excluded2 = ["content"];
function src_skeleton_typeof(o) { "@babel/helpers - typeof"; return src_skeleton_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, src_skeleton_typeof(o); }
function src_skeleton_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function src_skeleton_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? src_skeleton_ownKeys(Object(t), !0).forEach(function (r) { src_skeleton_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : src_skeleton_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function src_skeleton_defineProperty(e, r, t) { return (r = src_skeleton_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function skeleton_objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = skeleton_objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }
function skeleton_objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }
function src_skeleton_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function src_skeleton_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, src_skeleton_toPropertyKey(o.key), o); } }
function src_skeleton_createClass(e, r, t) { return r && src_skeleton_defineProperties(e.prototype, r), t && src_skeleton_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function src_skeleton_toPropertyKey(t) { var i = src_skeleton_toPrimitive(t, "string"); return "symbol" == src_skeleton_typeof(i) ? i : i + ""; }
function src_skeleton_toPrimitive(t, r) { if ("object" != src_skeleton_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != src_skeleton_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var skeleton_a, skeleton_b;













var src_skeleton_logger = new utils_src["e" /* Logger */]({
  level: 'warn',
  bizName: 'skeleton'
});
var SkeletonEvents;
(function (SkeletonEvents) {
  SkeletonEvents["PANEL_DOCK_ACTIVE"] = "skeleton.panel-dock.active";
  SkeletonEvents["PANEL_DOCK_UNACTIVE"] = "skeleton.panel-dock.unactive";
  SkeletonEvents["PANEL_SHOW"] = "skeleton.panel.show";
  SkeletonEvents["PANEL_HIDE"] = "skeleton.panel.hide";
  SkeletonEvents["WIDGET_SHOW"] = "skeleton.widget.show";
  SkeletonEvents["WIDGET_HIDE"] = "skeleton.widget.hide";
  SkeletonEvents["WIDGET_DISABLE"] = "skeleton.widget.disable";
  SkeletonEvents["WIDGET_ENABLE"] = "skeleton.widget.enable";
})(SkeletonEvents || (SkeletonEvents = {}));
var src_skeleton_Skeleton = /*#__PURE__*/function () {
  function Skeleton(editor) {
    var _this = this;
    var viewName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'global';
    src_skeleton_classCallCheck(this, Skeleton);
    this.editor = void 0;
    this.viewName = void 0;
    this.panels = new Map();
    this.configTransducers = [];
    this.containers = new Map();
    this.leftArea = void 0;
    this.topArea = void 0;
    this.subTopArea = void 0;
    this.toolbar = void 0;
    this.leftFixedArea = void 0;
    this.leftFloatArea = void 0;
    this.rightArea = void 0;
    this.mainArea = void 0;
    this.bottomArea = void 0;
    this.stages = void 0;
    this.widgets = [];
    this.focusTracker = new src["FocusTracker"]();
    this.editor = editor;
    this.viewName = viewName;
    Object(src["makeObservable"])(this);
    this.leftArea = new area_Area(this, 'leftArea', function (config) {
      if (isWidget(config)) {
        return config;
      }
      return _this.createWidget(config);
    }, false);
    this.topArea = new area_Area(this, 'topArea', function (config) {
      if (isWidget(config)) {
        return config;
      }
      return _this.createWidget(config);
    }, false);
    this.subTopArea = new area_Area(this, 'subTopArea', function (config) {
      if (isWidget(config)) {
        return config;
      }
      return _this.createWidget(config);
    }, false);
    this.toolbar = new area_Area(this, 'toolbar', function (config) {
      if (isWidget(config)) {
        return config;
      }
      return _this.createWidget(config);
    }, false);
    this.leftFixedArea = new area_Area(this, 'leftFixedArea', function (config) {
      if (isPanel(config)) {
        return config;
      }
      return _this.createPanel(config);
    }, true);
    this.leftFloatArea = new area_Area(this, 'leftFloatArea', function (config) {
      if (isPanel(config)) {
        return config;
      }
      return _this.createPanel(config);
    }, true);
    this.rightArea = new area_Area(this, 'rightArea', function (config) {
      if (isPanel(config)) {
        return config;
      }
      return _this.createPanel(config);
    }, false, true);
    this.mainArea = new area_Area(this, 'mainArea', function (config) {
      if (isWidget(config)) {
        return config;
      }
      return _this.createWidget(config);
    }, true, true);
    this.bottomArea = new area_Area(this, 'bottomArea', function (config) {
      if (isPanel(config)) {
        return config;
      }
      return _this.createPanel(config);
    }, true);
    this.stages = new area_Area(this, 'stages', function (config) {
      if (isWidget(config)) {
        return config;
      }
      return new stage_Stage(_this, config);
    });
    this.setupPlugins();
    this.setupEvents();
    this.focusTracker.mount(window);
  }
  /**
   * setup events
   *
   * @memberof Skeleton
   */
  return src_skeleton_createClass(Skeleton, [{
    key: "setupEvents",
    value: function setupEvents() {
      var _this2 = this;
      // adjust pinned status when panel shown
      this.editor.eventBus.on(SkeletonEvents.PANEL_SHOW, function (panelName, panel) {
        var _engineConfig$getPref;
        var panelNameKey = "".concat(panelName, "-pinned-status-isFloat");
        var isInFloatAreaPreferenceExists = (_engineConfig$getPref = src["engineConfig"].getPreference()) === null || _engineConfig$getPref === void 0 ? void 0 : _engineConfig$getPref.contains(panelNameKey, 'skeleton');
        if (isInFloatAreaPreferenceExists) {
          var _engineConfig$getPref2;
          var isInFloatAreaFromPreference = (_engineConfig$getPref2 = src["engineConfig"].getPreference()) === null || _engineConfig$getPref2 === void 0 ? void 0 : _engineConfig$getPref2.get(panelNameKey, 'skeleton');
          var isCurrentInFloatArea = panel === null || panel === void 0 ? void 0 : panel.isChildOfFloatArea();
          if (isInFloatAreaFromPreference !== isCurrentInFloatArea) {
            _this2.toggleFloatStatus(panel);
          }
        }
      });
    }
    /**
     * set isFloat status for panel
     *
     * @param {*} panel
     * @memberof Skeleton
     */
  }, {
    key: "toggleFloatStatus",
    value: function toggleFloatStatus(panel) {
      var _panel$parent;
      var isFloat = (panel === null || panel === void 0 ? void 0 : (_panel$parent = panel.parent) === null || _panel$parent === void 0 ? void 0 : _panel$parent.name) === 'leftFloatArea';
      if (isFloat) {
        this.leftFloatArea.remove(panel);
        this.leftFixedArea.add(panel);
        this.leftFixedArea.container.active(panel);
      } else {
        this.leftFixedArea.remove(panel);
        this.leftFloatArea.add(panel);
        this.leftFloatArea.container.active(panel);
      }
      src["engineConfig"].getPreference().set("".concat(panel.name, "-pinned-status-isFloat"), !isFloat, 'skeleton');
    }
  }, {
    key: "buildFromConfig",
    value: function buildFromConfig(config) {
      var components = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      if (config) {
        this.editor.init(config, components);
      }
      this.setupPlugins();
    }
  }, {
    key: "setupPlugins",
    value: function setupPlugins() {
      var _this3 = this;
      var _this$editor = this.editor,
        config = _this$editor.config,
        _this$editor$componen = _this$editor.components,
        components = _this$editor$componen === void 0 ? {} : _this$editor$componen;
      if (!config) {
        return;
      }
      var plugins = config.plugins;
      if (!plugins) {
        return;
      }
      Object.keys(plugins).forEach(function (area) {
        plugins[area].forEach(function (item) {
          var pluginKey = item.pluginKey,
            type = item.type,
            _item$props = item.props,
            props = _item$props === void 0 ? {} : _item$props,
            pluginProps = item.pluginProps;
          var config = {
            area: area,
            type: 'Widget',
            name: pluginKey,
            contentProps: pluginProps
          };
          var dialogProps = props.dialogProps,
            balloonProps = props.balloonProps,
            panelProps = props.panelProps,
            linkProps = props.linkProps,
            restProps = skeleton_objectWithoutProperties(props, skeleton_excluded);
          config.props = restProps;
          if (dialogProps) {
            config.dialogProps = dialogProps;
          }
          if (balloonProps) {
            config.balloonProps = balloonProps;
          }
          if (panelProps) {
            config.panelProps = panelProps;
          }
          if (linkProps) {
            config.linkProps = linkProps;
          }
          if (type === 'TabPanel') {
            config.type = 'Panel';
          } else if (/Icon$/.test(type)) {
            config.type = type.replace('Icon', 'Dock');
          }
          if (pluginKey in components) {
            config.content = components[pluginKey];
          }
          _this3.add(config);
        });
      });
    }
  }, {
    key: "postEvent",
    value: function postEvent(event) {
      var _this$editor$eventBus;
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }
      (_this$editor$eventBus = this.editor.eventBus).emit.apply(_this$editor$eventBus, [event].concat(args));
    }
  }, {
    key: "createWidget",
    value: function createWidget(config) {
      if (isWidget(config)) {
        return config;
      }
      config = this.parseConfig(config);
      var widget;
      if (isDockConfig(config)) {
        if (isPanelDockConfig(config)) {
          widget = new panel_dock_PanelDock(this, config);
        } else if (false) {} else {
          widget = new dock_Dock(this, config);
        }
      } else if (isDividerConfig(config)) {
        widget = new widget_Widget(this, src_skeleton_objectSpread(src_skeleton_objectSpread({}, config), {}, {
          type: 'Widget',
          content: external_Next_["Divider"]
        }));
      } else if (isPanelConfig(config)) {
        widget = this.createPanel(config);
      } else {
        widget = new widget_Widget(this, config);
      }
      this.widgets.push(widget);
      return widget;
    }
  }, {
    key: "getWidget",
    value: function getWidget(name) {
      return this.widgets.find(function (widget) {
        return widget.name === name;
      });
    }
  }, {
    key: "createPanel",
    value: function createPanel(config) {
      var parsedConfig = this.parseConfig(config);
      var panel = new panel_Panel(this, parsedConfig);
      this.panels.set(panel.name, panel);
      src_skeleton_logger.debug("Panel created with name: ".concat(panel.name, " \nconfig:"), config, '\n current panels: ', this.panels);
      return panel;
    }
  }, {
    key: "getPanel",
    value: function getPanel(name) {
      return this.panels.get(name);
    }
  }, {
    key: "getStage",
    value: function getStage(name) {
      return this.stages.container.get(name);
    }
  }, {
    key: "createStage",
    value: function createStage(config) {
      var _stage$getName;
      var stage = this.add(src_skeleton_objectSpread({
        name: Object(utils_src["ib" /* uniqueId */])('stage'),
        area: 'stages'
      }, config));
      return stage === null || stage === void 0 ? void 0 : (_stage$getName = stage.getName) === null || _stage$getName === void 0 ? void 0 : _stage$getName.call(stage);
    }
  }, {
    key: "createContainer",
    value: function createContainer(name, handle) {
      var exclusive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      var checkVisible = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function () {
        return true;
      };
      var defaultSetCurrent = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
      var container = new widget_container_WidgetContainer(name, handle, exclusive, checkVisible, defaultSetCurrent);
      this.containers.set(name, container);
      return container;
    }
  }, {
    key: "parseConfig",
    value: function parseConfig(config) {
      if (config.parsed) {
        return config;
      }
      var content = config.content,
        restConfig = skeleton_objectWithoutProperties(config, skeleton_excluded2);
      if (content) {
        if (Object(utils_src["R" /* isPlainObject */])(content) && ! /*#__PURE__*/Object(external_window_React_["isValidElement"])(content)) {
          Object.keys(content).forEach(function (key) {
            if (/props$/i.test(key) && restConfig[key]) {
              restConfig[key] = src_skeleton_objectSpread(src_skeleton_objectSpread({}, restConfig[key]), content[key]);
            } else {
              restConfig[key] = content[key];
            }
          });
        } else {
          restConfig.content = content;
        }
      }
      restConfig.pluginKey = restConfig.name;
      restConfig.parsed = true;
      return restConfig;
    }
  }, {
    key: "registerConfigTransducer",
    value: function registerConfigTransducer(transducer) {
      var level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;
      var id = arguments.length > 2 ? arguments[2] : undefined;
      transducer.level = level;
      transducer.id = id;
      var i = this.configTransducers.findIndex(function (item) {
        return item.level != null && item.level > level;
      });
      if (i < 0) {
        this.configTransducers.push(transducer);
      } else {
        this.configTransducers.splice(i, 0, transducer);
      }
    }
  }, {
    key: "getRegisteredConfigTransducers",
    value: function getRegisteredConfigTransducers() {
      return this.configTransducers;
    }
  }, {
    key: "add",
    value: function add(config, extraConfig) {
      var registeredTransducers = this.getRegisteredConfigTransducers();
      var parsedConfig = registeredTransducers.reduce(function (prevConfig, current) {
        return current(prevConfig);
      }, src_skeleton_objectSpread(src_skeleton_objectSpread({}, this.parseConfig(config)), extraConfig));
      var area = parsedConfig.area;
      if (!area) {
        if (parsedConfig.type === 'Panel') {
          area = 'leftFloatArea';
        } else if (parsedConfig.type === 'Widget') {
          area = 'mainArea';
        } else {
          area = 'leftArea';
        }
      }
      switch (area) {
        case 'leftArea':
        case 'left':
          return this.leftArea.add(parsedConfig);
        case 'rightArea':
        case 'right':
          return this.rightArea.add(parsedConfig);
        case 'topArea':
        case 'top':
          return this.topArea.add(parsedConfig);
        case 'subTopArea':
          return this.subTopArea.add(parsedConfig);
        case 'toolbar':
          return this.toolbar.add(parsedConfig);
        case 'mainArea':
        case 'main':
        case 'center':
        case 'centerArea':
          return this.mainArea.add(parsedConfig);
        case 'bottomArea':
        case 'bottom':
          return this.bottomArea.add(parsedConfig);
        case 'leftFixedArea':
          return this.leftFixedArea.add(parsedConfig);
        case 'leftFloatArea':
          return this.leftFloatArea.add(parsedConfig);
        case 'stages':
          return this.stages.add(parsedConfig);
        default:
        // do nothing
      }
    }
  }]);
}();
Object(tslib_es6["b" /* __decorate */])([src["obx"], Object(tslib_es6["d" /* __metadata */])("design:type", typeof (skeleton_a = typeof area_Area !== "undefined" && area_Area) === "function" ? skeleton_a : Object)], src_skeleton_Skeleton.prototype, "mainArea", void 0);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [typeof (skeleton_b = typeof panel_Panel !== "undefined" && panel_Panel) === "function" ? skeleton_b : Object]), Object(tslib_es6["d" /* __metadata */])("design:returntype", void 0)], src_skeleton_Skeleton.prototype, "toggleFloatStatus", null);
// EXTERNAL MODULE: ../editor-skeleton/src/components/settings/style.less
var settings_style = __webpack_require__(121);

// CONCATENATED MODULE: ../editor-skeleton/src/components/settings/main.ts
function main_typeof(o) { "@babel/helpers - typeof"; return main_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, main_typeof(o); }
function main_regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return main_regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i.return) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (main_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, main_regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, main_regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), main_regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", main_regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), main_regeneratorDefine2(u), main_regeneratorDefine2(u, o, "Generator"), main_regeneratorDefine2(u, n, function () { return this; }), main_regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (main_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function main_regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } main_regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { main_regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, main_regeneratorDefine2(e, r, n, t); }
function main_asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function main_asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { main_asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { main_asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function main_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function main_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, main_toPropertyKey(o.key), o); } }
function main_createClass(e, r, t) { return r && main_defineProperties(e.prototype, r), t && main_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function main_toPropertyKey(t) { var i = main_toPrimitive(t, "string"); return "symbol" == main_typeof(i) ? i : i + ""; }
function main_toPrimitive(t, r) { if ("object" != main_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != main_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var main_a;



function main_generateSessionId(nodes) {
  return nodes.map(function (node) {
    return node.id;
  }).sort().join(',');
}
var main_SettingsMain = /*#__PURE__*/function () {
  function SettingsMain(editor) {
    main_classCallCheck(this, SettingsMain);
    this.editor = void 0;
    this.emitter = Object(src["createModuleEventBus"])('SettingsMain');
    this._sessionId = '';
    this._settings = void 0;
    this.disposeListener = void 0;
    this.designer = void 0;
    this.editor = editor;
    Object(src["makeObservable"])(this);
    this.init();
  }
  return main_createClass(SettingsMain, [{
    key: "length",
    get: function get() {
      var _this$_settings;
      return (_this$_settings = this._settings) === null || _this$_settings === void 0 ? void 0 : _this$_settings.nodes.length;
    }
  }, {
    key: "componentMeta",
    get: function get() {
      var _this$_settings2;
      return (_this$_settings2 = this._settings) === null || _this$_settings2 === void 0 ? void 0 : _this$_settings2.componentMeta;
    }
  }, {
    key: "settings",
    get: function get() {
      return this._settings;
    }
  }, {
    key: "init",
    value: function () {
      var _init = main_asyncToGenerator(/*#__PURE__*/main_regenerator().m(function _callee() {
        var _this = this;
        var setupSelection, designer;
        return main_regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              setupSelection = function setupSelection(selection) {
                if (selection) {
                  _this.setup(selection.getNodes());
                } else {
                  _this.setup([]);
                }
              };
              this.editor.eventBus.on('designer.selection.change', setupSelection);
              this.disposeListener = function () {
                _this.editor.removeListener('designer.selection.change', setupSelection);
              };
              _context.n = 1;
              return this.editor.onceGot('designer');
            case 1:
              designer = _context.v;
              this.designer = designer;
              setupSelection(designer.currentSelection);
            case 2:
              return _context.a(2);
          }
        }, _callee, this);
      }));
      function init() {
        return _init.apply(this, arguments);
      }
      return init;
    }()
  }, {
    key: "setup",
    value: function setup(nodes) {
      // check nodes change
      var sessionId = main_generateSessionId(nodes);
      if (sessionId === this._sessionId) {
        return;
      }
      this._sessionId = sessionId;
      if (nodes.length < 1) {
        this._settings = undefined;
        return;
      }
      if (!this.designer) {
        this.designer = nodes[0].document.designer;
      }
      // 当节点只有一个时，复用 node 上挂载的 settingEntry，不会产生平行的两个实例，这样在整个系统中对
      // 某个节点操作的 SettingTopEntry 只有一个实例，后续的 getProp() 也会拿到相同的 SettingField 实例
      if (nodes.length === 1) {
        this._settings = nodes[0].settingEntry;
      } else {
        this._settings = this.designer.createSettingEntry(nodes);
      }
    }
  }, {
    key: "purge",
    value: function purge() {
      this.disposeListener();
      this.emitter.removeAllListeners();
    }
  }]);
}();
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", typeof (main_a = typeof setting_top_entry_SettingTopEntry !== "undefined" && setting_top_entry_SettingTopEntry) === "function" ? main_a : Object)], main_SettingsMain.prototype, "_settings", void 0);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], main_SettingsMain.prototype, "length", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], main_SettingsMain.prototype, "componentMeta", null);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], main_SettingsMain.prototype, "settings", null);
Object(tslib_es6["b" /* __decorate */])([src["action"], Object(tslib_es6["d" /* __metadata */])("design:type", Function), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Array]), Object(tslib_es6["d" /* __metadata */])("design:returntype", void 0)], main_SettingsMain.prototype, "setup", null);
// EXTERNAL MODULE: ../editor-skeleton/src/components/field/index.less
var components_field = __webpack_require__(52);

// EXTERNAL MODULE: ../editor-skeleton/src/components/popup/style.less
var popup_style = __webpack_require__(122);

// CONCATENATED MODULE: ../editor-skeleton/src/components/popup/index.tsx
function popup_typeof(o) { "@babel/helpers - typeof"; return popup_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, popup_typeof(o); }
function popup_toConsumableArray(r) { return popup_arrayWithoutHoles(r) || popup_iterableToArray(r) || popup_unsupportedIterableToArray(r) || popup_nonIterableSpread(); }
function popup_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function popup_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return popup_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? popup_arrayLikeToArray(r, a) : void 0; } }
function popup_iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function popup_arrayWithoutHoles(r) { if (Array.isArray(r)) return popup_arrayLikeToArray(r); }
function popup_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function popup_callSuper(t, o, e) { return o = popup_getPrototypeOf(o), popup_possibleConstructorReturn(t, popup_isNativeReflectConstruct() ? Reflect.construct(o, e || [], popup_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function popup_possibleConstructorReturn(t, e) { if (e && ("object" == popup_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return popup_assertThisInitialized(t); }
function popup_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function popup_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (popup_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function popup_getPrototypeOf(t) { return popup_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, popup_getPrototypeOf(t); }
function popup_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && popup_setPrototypeOf(t, e); }
function popup_setPrototypeOf(t, e) { return popup_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, popup_setPrototypeOf(t, e); }
function popup_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function popup_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? popup_ownKeys(Object(t), !0).forEach(function (r) { popup_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : popup_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function popup_defineProperty(e, r, t) { return (r = popup_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function popup_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function popup_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, popup_toPropertyKey(o.key), o); } }
function popup_createClass(e, r, t) { return r && popup_defineProperties(e.prototype, r), t && popup_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function popup_toPropertyKey(t) { var i = popup_toPrimitive(t, "string"); return "symbol" == popup_typeof(i) ? i : i + ""; }
function popup_toPrimitive(t, r) { if ("object" != popup_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != popup_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }





var PopupContext = /*#__PURE__*/Object(external_window_React_["createContext"])({});
var popup_PopupPipe = /*#__PURE__*/function () {
  function PopupPipe() {
    popup_classCallCheck(this, PopupPipe);
    this.emitter = Object(src["createModuleEventBus"])('PopupPipe');
    this.currentId = void 0;
  }
  return popup_createClass(PopupPipe, [{
    key: "create",
    value: function create(props) {
      var _this = this;
      var sendContent = null;
      var sendTitle = null;
      var id = Object(utils_src["ib" /* uniqueId */])('popup');
      return {
        send: function send(content, title) {
          sendContent = content;
          sendTitle = title;
          if (_this.currentId === id) {
            _this.popup(popup_objectSpread(popup_objectSpread({}, props), {}, {
              content: content,
              title: title
            }));
          }
        },
        show: function show(target, actionKey) {
          _this.currentId = id;
          _this.popup(popup_objectSpread(popup_objectSpread({}, props), {}, {
            actionKey: actionKey,
            content: sendContent,
            title: sendTitle
          }), target);
        }
      };
    }
  }, {
    key: "popup",
    value: function popup(props, target) {
      var _this2 = this;
      Promise.resolve().then(function () {
        _this2.emitter.emit('popupchange', props, target);
      });
    }
  }, {
    key: "onPopupChange",
    value: function onPopupChange(fn) {
      var _this3 = this;
      this.emitter.on('popupchange', fn);
      return function () {
        _this3.emitter.removeListener('popupchange', fn);
      };
    }
  }, {
    key: "purge",
    value: function purge() {
      this.emitter.removeAllListeners();
    }
  }]);
}();
var PopupService = /*#__PURE__*/function (_Component) {
  function PopupService() {
    var _this4;
    popup_classCallCheck(this, PopupService);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this4 = popup_callSuper(this, PopupService, [].concat(args));
    _this4.popupPipe = _this4.props.popupPipe || new popup_PopupPipe();
    return _this4;
  }
  popup_inherits(PopupService, _Component);
  return popup_createClass(PopupService, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.popupPipe.purge();
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
        children = _this$props.children,
        actionKey = _this$props.actionKey,
        safeId = _this$props.safeId,
        popupContainer = _this$props.popupContainer;
      return /*#__PURE__*/React.createElement(PopupContext.Provider, {
        value: this.popupPipe
      }, children, /*#__PURE__*/React.createElement(popup_PopupContent, {
        key: "pop".concat(actionKey),
        safeId: safeId,
        popupContainer: popupContainer
      }));
    }
  }]);
}(external_window_React_["Component"]);

var popup_PopupContent = /*#__PURE__*/function (_PureComponent) {
  function PopupContent() {
    var _this5;
    popup_classCallCheck(this, PopupContent);
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }
    _this5 = popup_callSuper(this, PopupContent, [].concat(args));
    _this5.popupContainerId = Object(utils_src["ib" /* uniqueId */])('popupContainer');
    _this5.state = {
      visible: false,
      offsetX: -300
    };
    _this5.dispose = _this5.context.onPopupChange(function (props, target) {
      var state = popup_objectSpread(popup_objectSpread({}, props), {}, {
        visible: true
      });
      if (target) {
        var rect = target.getBoundingClientRect();
        state.pos = {
          top: rect.top,
          height: rect.height
        };
        // todo: compute the align method
      }
      _this5.setState(state);
    });
    _this5.onClose = function () {
      _this5.setState({
        visible: false
      });
    };
    return _this5;
  }
  popup_inherits(PopupContent, _PureComponent);
  return popup_createClass(PopupContent, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var clientWidth = document.documentElement.clientWidth || document.body.clientWidth;
      if (clientWidth >= 1860) {
        this.setState({
          offsetX: -400
        });
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.dispose();
    }
  }, {
    key: "render",
    value: function render() {
      var _this6 = this;
      var _this$state = this.state,
        content = _this$state.content,
        visible = _this$state.visible,
        title = _this$state.title,
        actionKey = _this$state.actionKey,
        pos = _this$state.pos,
        offsetX = _this$state.offsetX,
        _this$state$width = _this$state.width,
        width = _this$state$width === void 0 ? 360 : _this$state$width,
        _this$state$hasMask = _this$state.hasMask,
        hasMask = _this$state$hasMask === void 0 ? false : _this$state$hasMask,
        _this$state$canCloseB = _this$state.canCloseByOutSideClick,
        canCloseByOutSideClick = _this$state$canCloseB === void 0 ? true : _this$state$canCloseB,
        _this$state$safeNode = _this$state.safeNode,
        safeNode = _this$state$safeNode === void 0 ? [] : _this$state$safeNode;
      if (!visible) {
        return null;
      }
      var avoidLaterHidden = true;
      setTimeout(function () {
        avoidLaterHidden = false;
      }, 10);
      var id = Object(utils_src["ib" /* uniqueId */])('ball');
      return /*#__PURE__*/React.createElement(external_Next_["Drawer"], {
        width: width,
        visible: visible,
        offset: [offsetX, 0],
        hasMask: hasMask,
        onVisibleChange: function onVisibleChange(_visible, type) {
          if (avoidLaterHidden) {
            return;
          }
          if (!_visible && type === 'closeClick') {
            _this6.setState({
              visible: false
            });
          }
        },
        trigger: /*#__PURE__*/React.createElement("div", {
          className: "lc-popup-placeholder",
          style: pos
        }),
        triggerType: "click",
        canCloseByOutSideClick: canCloseByOutSideClick,
        animation: false,
        onClose: this.onClose,
        id: this.props.safeId,
        safeNode: [id].concat(popup_toConsumableArray(safeNode)),
        closeable: true,
        container: this.props.popupContainer
      }, /*#__PURE__*/React.createElement("div", {
        className: "lc-ballon-title"
      }, title), /*#__PURE__*/React.createElement("div", {
        className: "lc-ballon-content"
      }, /*#__PURE__*/React.createElement(PopupService, {
        actionKey: actionKey,
        safeId: id,
        popupContainer: this.popupContainerId
      }, /*#__PURE__*/React.createElement(external_Next_["ConfigProvider"], {
        popupContainer: this.popupContainerId
      }, content))), /*#__PURE__*/React.createElement("div", {
        id: this.popupContainerId
      }), /*#__PURE__*/React.createElement("div", {
        id: "engine-variable-setter-dialog"
      }), /*#__PURE__*/React.createElement("div", {
        id: "engine-popup-container"
      }));
    }
  }]);
}(external_window_React_["PureComponent"]);
popup_PopupContent.contextType = PopupContext;
// CONCATENATED MODULE: ../editor-skeleton/src/components/field/inlinetip.tsx
function inlinetip_typeof(o) { "@babel/helpers - typeof"; return inlinetip_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, inlinetip_typeof(o); }
function inlinetip_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function inlinetip_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, inlinetip_toPropertyKey(o.key), o); } }
function inlinetip_createClass(e, r, t) { return r && inlinetip_defineProperties(e.prototype, r), t && inlinetip_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function inlinetip_toPropertyKey(t) { var i = inlinetip_toPrimitive(t, "string"); return "symbol" == inlinetip_typeof(i) ? i : i + ""; }
function inlinetip_toPrimitive(t, r) { if ("object" != inlinetip_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != inlinetip_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function inlinetip_callSuper(t, o, e) { return o = inlinetip_getPrototypeOf(o), inlinetip_possibleConstructorReturn(t, inlinetip_isNativeReflectConstruct() ? Reflect.construct(o, e || [], inlinetip_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function inlinetip_possibleConstructorReturn(t, e) { if (e && ("object" == inlinetip_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return inlinetip_assertThisInitialized(t); }
function inlinetip_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function inlinetip_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (inlinetip_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function inlinetip_getPrototypeOf(t) { return inlinetip_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, inlinetip_getPrototypeOf(t); }
function inlinetip_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && inlinetip_setPrototypeOf(t, e); }
function inlinetip_setPrototypeOf(t, e) { return inlinetip_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, inlinetip_setPrototypeOf(t, e); }

var inlinetip_InlineTip = /*#__PURE__*/function (_React$Component) {
  function InlineTip() {
    inlinetip_classCallCheck(this, InlineTip);
    return inlinetip_callSuper(this, InlineTip, arguments);
  }
  inlinetip_inherits(InlineTip, _React$Component);
  return inlinetip_createClass(InlineTip, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
        position = _this$props.position,
        theme = _this$props.theme,
        children = _this$props.children;
      return /*#__PURE__*/external_window_React_["createElement"]("div", {
        style: {
          display: 'none'
        },
        "data-role": "tip",
        "data-position": position,
        "data-theme": theme
      }, children);
    }
  }]);
}(external_window_React_["Component"]);
inlinetip_InlineTip.displayName = 'InlineTip';
inlinetip_InlineTip.defaultProps = {
  position: 'auto',
  theme: 'black'
};

// EXTERNAL MODULE: ../editor-skeleton/src/locale/en-US.json
var locale_en_US = __webpack_require__(63);

// EXTERNAL MODULE: ../editor-skeleton/src/locale/zh-CN.json
var locale_zh_CN = __webpack_require__(64);

// CONCATENATED MODULE: ../editor-skeleton/src/locale/index.ts



var locale_createIntl = Object(src["createIntl"])({
    'en-US': locale_en_US,
    'zh-CN': locale_zh_CN
  }),
  src_locale_intl = locale_createIntl.intl,
  src_locale_intlNode = locale_createIntl.intlNode,
  src_locale_getLocale = locale_createIntl.getLocale,
  locale_setLocale = locale_createIntl.setLocale;

// CONCATENATED MODULE: ../editor-skeleton/src/components/field/fields.tsx
function fields_typeof(o) { "@babel/helpers - typeof"; return fields_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, fields_typeof(o); }
function fields_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function fields_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, fields_toPropertyKey(o.key), o); } }
function fields_createClass(e, r, t) { return r && fields_defineProperties(e.prototype, r), t && fields_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function fields_toPropertyKey(t) { var i = fields_toPrimitive(t, "string"); return "symbol" == fields_typeof(i) ? i : i + ""; }
function fields_toPrimitive(t, r) { if ("object" != fields_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != fields_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function fields_callSuper(t, o, e) { return o = fields_getPrototypeOf(o), fields_possibleConstructorReturn(t, fields_isNativeReflectConstruct() ? Reflect.construct(o, e || [], fields_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function fields_possibleConstructorReturn(t, e) { if (e && ("object" == fields_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return fields_assertThisInitialized(t); }
function fields_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function fields_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (fields_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function fields_getPrototypeOf(t) { return fields_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, fields_getPrototypeOf(t); }
function fields_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && fields_setPrototypeOf(t, e); }
function fields_setPrototypeOf(t, e) { return fields_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, fields_setPrototypeOf(t, e); }
/* eslint-disable react/no-unused-prop-types */










var fields_logger = new utils_src["e" /* Logger */]({
  level: 'warn',
  bizName: 'skeleton:field'
});
var fields_Field = /*#__PURE__*/function (_Component) {
  function Field(props) {
    var _this;
    fields_classCallCheck(this, Field);
    _this = fields_callSuper(this, Field, [props]);
    _this.state = {
      collapsed: _this.props.collapsed,
      display: _this.props.defaultDisplay || 'inline',
      hasError: false
    };
    _this.body = null;
    _this.dispose = void 0;
    _this.toggleExpand = function () {
      var onExpandChange = _this.props.onExpandChange;
      // eslint-disable-next-line react/no-access-state-in-setstate
      var collapsed = !_this.state.collapsed;
      _this.setState({
        collapsed: collapsed
      });
      onExpandChange && onExpandChange(!collapsed);
    };
    _this.handleClear = _this.handleClear.bind(_this);
    _this.clickHandler = _this.clickHandler.bind(_this);
    return _this;
  }
  fields_inherits(Field, _Component);
  return fields_createClass(Field, [{
    key: "deployBlockTesting",
    value: function deployBlockTesting() {
      var _this2 = this;
      if (this.dispose) {
        this.dispose();
      }
      var body = this.body;
      if (!body) {
        return;
      }
      var check = function check() {
        var setter = body.firstElementChild;
        if (setter && setter.classList.contains('lc-block-setter')) {
          _this2.setState({
            display: 'block'
          });
        } else {
          _this2.setState({
            display: 'inline'
          });
        }
      };
      var observer = new MutationObserver(check);
      check();
      observer.observe(body, {
        childList: true,
        subtree: true,
        attributes: true,
        attributeFilter: ['class']
      });
      this.dispose = function () {
        return observer.disconnect();
      };
    }
  }, {
    key: "handleClear",
    value: function handleClear(e) {
      e.stopPropagation();
      this.props.onClear && this.props.onClear();
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var defaultDisplay = this.props.defaultDisplay;
      if (!defaultDisplay || defaultDisplay === 'inline') {
        this.deployBlockTesting();
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.dispose) {
        this.dispose();
      }
    }
  }, {
    key: "componentDidCatch",
    value: function componentDidCatch(error, errorInfo) {
      fields_logger.error("".concat(this.props.title, " has error"), error, errorInfo);
    }
  }, {
    key: "getTipContent",
    value: function getTipContent(propName, tip) {
      var tipContent = /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("div", null, src_locale_intl('Attribute: '), propName));
      if (Object(external_["isObject"])(tip)) {
        tipContent = /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("div", null, src_locale_intl('Attribute: '), propName), /*#__PURE__*/React.createElement("div", null, src_locale_intl('Description: '), tip.content));
      } else if (tip) {
        tipContent = /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("div", null, src_locale_intl('Attribute: '), propName), /*#__PURE__*/React.createElement("div", null, src_locale_intl('Description: '), tip));
      }
      return tipContent;
    }
  }, {
    key: "clickHandler",
    value: function clickHandler(event) {
      var _this$props = this.props,
        editor = _this$props.editor,
        name = _this$props.name,
        title = _this$props.title,
        meta = _this$props.meta;
      editor === null || editor === void 0 ? void 0 : editor.eventBus.emit('setting.setter.field.click', {
        name: name,
        title: title,
        meta: meta,
        event: event
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;
      var hasError = this.state.hasError;
      if (hasError) {
        return null;
      }
      var _this$props2 = this.props,
        className = _this$props2.className,
        children = _this$props2.children,
        meta = _this$props2.meta,
        title = _this$props2.title,
        valueState = _this$props2.valueState,
        propName = _this$props2.name,
        tip = _this$props2.tip;
      var _this$state = this.state,
        display = _this$state.display,
        collapsed = _this$state.collapsed;
      var isAccordion = display === 'accordion';
      var hostName = '';
      if (fields_typeof(meta) === 'object') {
        hostName = "".concat((meta === null || meta === void 0 ? void 0 : meta.package) || '', "-").concat(meta.componentName || '');
      } else if (typeof meta === 'string') {
        hostName = meta;
      }
      var id = "".concat(hostName, "-").concat(propName || title['en-US'] || title['zh-CN']);
      var tipContent = this.getTipContent(propName, tip);
      return /*#__PURE__*/React.createElement("div", {
        className: classnames_default()("lc-field lc-".concat(display, "-field"), className, {
          'lc-field-is-collapsed': isAccordion && collapsed
        }),
        id: id
      }, display !== 'plain' && /*#__PURE__*/React.createElement("div", {
        className: "lc-field-head",
        onClick: isAccordion ? this.toggleExpand : undefined
      }, /*#__PURE__*/React.createElement("div", {
        className: "lc-field-title"
      }, createValueState(valueState, this.handleClear), /*#__PURE__*/React.createElement(src["Title"], {
        title: title || '',
        onClick: this.clickHandler
      }), /*#__PURE__*/React.createElement(inlinetip_InlineTip, {
        position: "top"
      }, tipContent)), isAccordion && /*#__PURE__*/React.createElement(external_Next_["Icon"], {
        className: "lc-field-icon",
        type: "arrow-up",
        size: "xs"
      })), /*#__PURE__*/React.createElement("div", {
        key: "body",
        ref: function ref(shell) {
          _this3.body = shell;
        },
        className: "lc-field-body"
      }, children));
    }
  }], [{
    key: "getDerivedStateFromError",
    value: function getDerivedStateFromError() {
      return {
        hasError: true
      };
    }
  }]);
}(external_window_React_["Component"]);
/**
 * **交互专利点**
 *
 * -1 多种值
 * 0 | null 无值
 * 1 类似值，比如数组长度一样
 * 2 单一植
 * 10 必填
 *
 * TODO: turn number to enum
 */
function createValueState(/* valueState?: number, onClear?: (e: React.MouseEvent) => void */
) {
  return null;
}
var fields_PopupField = /*#__PURE__*/function (_Component2) {
  function PopupField() {
    var _this4;
    fields_classCallCheck(this, PopupField);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this4 = fields_callSuper(this, PopupField, [].concat(args));
    _this4.pipe = void 0;
    return _this4;
  }
  fields_inherits(PopupField, _Component2);
  return fields_createClass(PopupField, [{
    key: "render",
    value: function render() {
      var _this5 = this;
      var _this$props3 = this.props,
        className = _this$props3.className,
        children = _this$props3.children,
        title = _this$props3.title,
        width = _this$props3.width;
      if (!this.pipe) {
        this.pipe = this.context.create({
          width: width
        });
      }
      var titleElement = title && /*#__PURE__*/React.createElement("div", {
        className: "lc-field-title"
      }, /*#__PURE__*/React.createElement(src["Title"], {
        title: title
      }));
      this.pipe.send(/*#__PURE__*/React.createElement("div", {
        className: "lc-field-body"
      }, children), titleElement);
      return /*#__PURE__*/React.createElement("div", {
        className: classnames_default()('lc-field lc-popup-field', className)
      }, title && /*#__PURE__*/React.createElement("div", {
        className: "lc-field-head",
        onClick: function onClick(e) {
          _this5.pipe.show(e.target);
        }
      }, /*#__PURE__*/React.createElement("div", {
        className: "lc-field-title"
      }, /*#__PURE__*/React.createElement(src["Title"], {
        title: title
      })), /*#__PURE__*/React.createElement(external_Next_["Icon"], {
        className: "lc-field-icon",
        type: "arrow-left",
        size: "xs"
      })));
    }
  }]);
}(external_window_React_["Component"]);
fields_PopupField.contextType = PopupContext;
fields_PopupField.defaultProps = {
  width: 300
};
var fields_EntryField = /*#__PURE__*/function (_Component3) {
  function EntryField() {
    fields_classCallCheck(this, EntryField);
    return fields_callSuper(this, EntryField, arguments);
  }
  fields_inherits(EntryField, _Component3);
  return fields_createClass(EntryField, [{
    key: "render",
    value: function render() {
      var _this$props4 = this.props,
        title = _this$props4.title,
        className = _this$props4.className,
        stageName = _this$props4.stageName;
      var classNameList = classnames_default()('lc-field', 'lc-entry-field', className);
      return /*#__PURE__*/React.createElement("div", {
        className: classNameList
      }, /*#__PURE__*/React.createElement("div", {
        className: "lc-field-head",
        "data-stage-target": stageName
      }, /*#__PURE__*/React.createElement("div", {
        className: "lc-field-title"
      }, /*#__PURE__*/React.createElement(src["Title"], {
        title: title || ''
      })), /*#__PURE__*/React.createElement(external_Next_["Icon"], {
        className: "lc-field-icon",
        type: "arrow-right",
        size: "xs"
      })));
    }
  }]);
}(external_window_React_["Component"]);
var fields_PlainField = /*#__PURE__*/function (_Component4) {
  function PlainField() {
    fields_classCallCheck(this, PlainField);
    return fields_callSuper(this, PlainField, arguments);
  }
  fields_inherits(PlainField, _Component4);
  return fields_createClass(PlainField, [{
    key: "render",
    value: function render() {
      var _this$props5 = this.props,
        className = _this$props5.className,
        children = _this$props5.children;
      return /*#__PURE__*/React.createElement("div", {
        className: classnames_default()('lc-field lc-plain-field', className)
      }, /*#__PURE__*/React.createElement("div", {
        className: "lc-field-body"
      }, children));
    }
  }]);
}(external_window_React_["Component"]);
// CONCATENATED MODULE: ../editor-skeleton/src/components/field/index.ts
function field_typeof(o) { "@babel/helpers - typeof"; return field_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, field_typeof(o); }
function field_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function field_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? field_ownKeys(Object(t), !0).forEach(function (r) { field_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : field_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function field_defineProperty(e, r, t) { return (r = field_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function field_toPropertyKey(t) { var i = field_toPrimitive(t, "string"); return "symbol" == field_typeof(i) ? i : i + ""; }
function field_toPrimitive(t, r) { if ("object" != field_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != field_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }



function field_createField(props, children, type) {
  if (type === 'popup') {
    return /*#__PURE__*/Object(external_window_React_["createElement"])(fields_PopupField, props, children);
  }
  if (type === 'entry') {
    return /*#__PURE__*/Object(external_window_React_["createElement"])(fields_EntryField, props, children);
  }
  if (type === 'plain' || !props.title) {
    return /*#__PURE__*/Object(external_window_React_["createElement"])(fields_PlainField, props, children);
  }
  return /*#__PURE__*/Object(external_window_React_["createElement"])(fields_Field, field_objectSpread(field_objectSpread({}, props), {}, {
    defaultDisplay: type
  }), children);
}

// CONCATENATED MODULE: ../editor-skeleton/src/components/settings/settings-pane.tsx
function settings_pane_typeof(o) { "@babel/helpers - typeof"; return settings_pane_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, settings_pane_typeof(o); }
var _SettingFieldView, _SettingGroupView, _SettingsPane;
function settings_pane_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function settings_pane_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? settings_pane_ownKeys(Object(t), !0).forEach(function (r) { settings_pane_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : settings_pane_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function settings_pane_defineProperty(e, r, t) { return (r = settings_pane_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function settings_pane_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function settings_pane_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, settings_pane_toPropertyKey(o.key), o); } }
function settings_pane_createClass(e, r, t) { return r && settings_pane_defineProperties(e.prototype, r), t && settings_pane_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function settings_pane_toPropertyKey(t) { var i = settings_pane_toPrimitive(t, "string"); return "symbol" == settings_pane_typeof(i) ? i : i + ""; }
function settings_pane_toPrimitive(t, r) { if ("object" != settings_pane_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != settings_pane_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function settings_pane_callSuper(t, o, e) { return o = settings_pane_getPrototypeOf(o), settings_pane_possibleConstructorReturn(t, settings_pane_isNativeReflectConstruct() ? Reflect.construct(o, e || [], settings_pane_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function settings_pane_possibleConstructorReturn(t, e) { if (e && ("object" == settings_pane_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return settings_pane_assertThisInitialized(t); }
function settings_pane_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function settings_pane_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (settings_pane_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function settings_pane_getPrototypeOf(t) { return settings_pane_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, settings_pane_getPrototypeOf(t); }
function settings_pane_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && settings_pane_setPrototypeOf(t, e); }
function settings_pane_setPrototypeOf(t, e) { return settings_pane_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, settings_pane_setPrototypeOf(t, e); }
var settings_pane_a;










function isStandardComponent(componentMeta) {
  if (!componentMeta) return false;
  var prototype = componentMeta.prototype;
  return prototype == null;
}
/**
 * 判断 initialValue 是否为非空，非空条件：
 *  1. 当为 slot 结构时，value 为有长度的数组且 visible 不为 false
 *  2. 不为 slot 结构，为非 undefined / null 值
 * @param initialValue
 * @returns
 */
function isInitialValueNotEmpty(initialValue) {
  if (Object(utils_src["L" /* isJSSlot */])(initialValue)) {
    // @ts-ignore visible 为 false 代表默认不展示
    return initialValue.visible !== false && Array.isArray(initialValue.value) && initialValue.value.length > 0;
  }
  return initialValue !== undefined && initialValue !== null;
}
var settings_pane_SettingFieldView = (_SettingFieldView = /*#__PURE__*/function (_Component) {
  function SettingFieldView(props) {
    var _field$designer;
    var _this;
    settings_pane_classCallCheck(this, SettingFieldView);
    _this = settings_pane_callSuper(this, SettingFieldView, [props]);
    _this.stageName = void 0;
    _this.setters = void 0;
    var field = _this.props.field;
    var extraProps = field.extraProps;
    var display = extraProps.display;
    var editor = (_field$designer = field.designer) === null || _field$designer === void 0 ? void 0 : _field$designer.editor;
    var skeleton = editor === null || editor === void 0 ? void 0 : editor.get('skeleton');
    var _ref = skeleton || {},
      stages = _ref.stages;
    _this.setters = editor === null || editor === void 0 ? void 0 : editor.get('setters');
    var stageName;
    if (display === 'entry') {
      Object(src["runInAction"])(function () {
        var _field$name;
        stageName = "".concat(field.getNode().id, "_").concat((_field$name = field.name) === null || _field$name === void 0 ? void 0 : _field$name.toString());
        // 清除原 stage，不然 content 引用的一直是老的 field，导致数据无法得到更新
        stages.container.remove(stageName);
        stages.add({
          type: 'Widget',
          name: stageName,
          content: /*#__PURE__*/React.createElement(external_window_React_["Fragment"], null, field.items.map(function (item, index) {
            return settings_pane_createSettingFieldView(item, field, index);
          })),
          props: {
            title: field.title
          }
        });
      });
    }
    _this.stageName = stageName;
    return _this;
  }
  settings_pane_inherits(SettingFieldView, _Component);
  return settings_pane_createClass(SettingFieldView, [{
    key: "field",
    get: function get() {
      return this.props.field;
    }
  }, {
    key: "visible",
    get: function get() {
      var extraProps = this.field.extraProps;
      var condition = extraProps.condition;
      try {
        return typeof condition === 'function' ? condition(this.field.internalToShellField()) !== false : true;
      } catch (error) {
        console.error('exception when condition (hidden) is excuted', error);
      }
      return true;
    }
  }, {
    key: "ignoreDefaultValue",
    get: function get() {
      var extraProps = this.field.extraProps;
      var ignoreDefaultValue = extraProps.ignoreDefaultValue;
      try {
        if (typeof ignoreDefaultValue === 'function') {
          return ignoreDefaultValue(this.field.internalToShellField());
        }
        return false;
      } catch (error) {
        console.error('exception when ignoreDefaultValue is excuted', error);
      }
      return false;
    }
  }, {
    key: "setterInfo",
    get: function get() {
      var _this$field$extraProp;
      var _this$field = this.field,
        extraProps = _this$field.extraProps,
        componentMeta = _this$field.componentMeta;
      var defaultValue = extraProps.defaultValue;
      var setter = this.field.setter;
      var setterProps = {};
      var setterType;
      var initialValue = null;
      if (Array.isArray(setter)) {
        setterType = 'MixedSetter';
        setterProps = {
          setters: setter
        };
      } else if (Object(utils_src["X" /* isSetterConfig */])(setter)) {
        setterType = setter.componentName;
        if (setter.props) {
          setterProps = setter.props;
          if (typeof setterProps === 'function') {
            setterProps = setterProps(this.field.internalToShellField());
          }
        }
        if (setter.initialValue != null) {
          initialValue = setter.initialValue;
        }
      } else if (setter) {
        setterType = setter;
      }
      if (defaultValue != null && !('defaultValue' in setterProps)) {
        setterProps.defaultValue = defaultValue;
        if (initialValue == null) {
          initialValue = defaultValue;
        }
      }
      if (this.field.valueState === -1) {
        setterProps.multiValue = true;
        if (!('placeholder' in setterProps)) {
          setterProps.placeholder = src_locale_intl('Multiple Value');
        }
      }
      // 根据是否支持变量配置做相应的更改
      var supportVariable = (_this$field$extraProp = this.field.extraProps) === null || _this$field$extraProp === void 0 ? void 0 : _this$field$extraProp.supportVariable;
      // supportVariableGlobally 只对标准组件生效，vc 需要单独配置
      var supportVariableGlobally = src["engineConfig"].get('supportVariableGlobally', false) && isStandardComponent(componentMeta);
      var isUseVariableSetter = Object(utils_src["gb" /* shouldUseVariableSetter */])(supportVariable, supportVariableGlobally);
      if (isUseVariableSetter === false) {
        return {
          setterProps: setterProps,
          initialValue: initialValue,
          setterType: setterType
        };
      }
      if (setterType === 'MixedSetter') {
        // VariableSetter 不单独使用
        if (Array.isArray(setterProps.setters) && !setterProps.setters.includes('VariableSetter')) {
          setterProps.setters.push('VariableSetter');
        }
      } else {
        setterType = 'MixedSetter';
        setterProps = {
          setters: [setter, 'VariableSetter']
        };
      }
      return {
        setterProps: setterProps,
        initialValue: initialValue,
        setterType: setterType
      };
    }
  }, {
    key: "value",
    get: function get() {
      return this.field.valueState === -1 ? null : this.field.getValue();
    }
  }, {
    key: "initDefaultValue",
    value: function initDefaultValue() {
      var _this$state;
      var initialValue = this.setterInfo.initialValue;
      if ((_this$state = this.state) !== null && _this$state !== void 0 && _this$state.fromOnChange || !isInitialValueNotEmpty(initialValue) || this.ignoreDefaultValue || this.value !== undefined) {
        return;
      }
      // 当前 field 没有 value 值时，将 initialValue 写入 field
      // 之所以用 initialValue，而不是 defaultValue 是为了保持跟 props.onInitial 的逻辑一致
      var _initialValue = typeof initialValue === 'function' ? initialValue(this.field.internalToShellField()) : initialValue;
      this.field.setValue(_initialValue);
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      this.initDefaultValue();
    }
  }, {
    key: "render",
    value: function render() {
      var _field$componentMeta,
        _field$componentMeta2,
        _this$setters,
        _field$top,
        _field$top$getNode,
        _this2 = this;
      var field = this.field;
      var extraProps = field.extraProps;
      var visible = this.visible;
      if (!visible) {
        return null;
      }
      var _this$setterInfo = this.setterInfo,
        _this$setterInfo$sett = _this$setterInfo.setterProps,
        setterProps = _this$setterInfo$sett === void 0 ? {} : _this$setterInfo$sett,
        setterType = _this$setterInfo.setterType,
        _this$setterInfo$init = _this$setterInfo.initialValue,
        initialValue = _this$setterInfo$init === void 0 ? null : _this$setterInfo$init;
      var value = this.value;
      var onChangeAPI = extraProps === null || extraProps === void 0 ? void 0 : extraProps.onChange;
      var stageName = this.stageName;
      return field_createField(settings_pane_objectSpread({
        meta: (field === null || field === void 0 ? void 0 : (_field$componentMeta = field.componentMeta) === null || _field$componentMeta === void 0 ? void 0 : _field$componentMeta.npm) || (field === null || field === void 0 ? void 0 : (_field$componentMeta2 = field.componentMeta) === null || _field$componentMeta2 === void 0 ? void 0 : _field$componentMeta2.componentName) || '',
        title: field.title,
        // editor: field.editor,
        collapsed: !field.expanded,
        valueState: field.isRequired ? 10 : field.valueState,
        onExpandChange: function onExpandChange(expandState) {
          return field.setExpanded(expandState);
        },
        onClear: function onClear() {
          return field.clearValue();
        },
        // field: field,
        // stages,
        stageName: stageName
      }, extraProps), !stageName && ((_this$setters = this.setters) === null || _this$setters === void 0 ? void 0 : _this$setters.createSetterContent(setterType, settings_pane_objectSpread(settings_pane_objectSpread({}, Object(src["shallowIntl"])(setterProps)), {}, {
        forceInline: extraProps.forceInline,
        key: field.id,
        // === injection
        prop: field.internalToShellField(),
        selected: (_field$top = field.top) === null || _field$top === void 0 ? void 0 : (_field$top$getNode = _field$top.getNode()) === null || _field$top$getNode === void 0 ? void 0 : _field$top$getNode.internalToShellNode(),
        field: field.internalToShellField(),
        // === IO
        value: value,
        initialValue: initialValue,
        onChange: function onChange(value) {
          _this2.setState({
            fromOnChange: true,
            // eslint-disable-next-line react/no-unused-state
            value: value
          });
          field.setValue(value, true);
          if (onChangeAPI) onChangeAPI(value, field.internalToShellField());
        },
        onInitial: function onInitial() {
          if (initialValue == null) {
            return;
          }
          var value = typeof initialValue === 'function' ? initialValue(field.internalToShellField()) : initialValue;
          _this2.setState({
            // eslint-disable-next-line react/no-unused-state
            value: value
          });
          field.setValue(value, true);
        },
        removeProp: function removeProp() {
          if (field.name) {
            field.parent.clearPropValue(field.name);
          }
        }
      }))), extraProps.forceInline ? 'plain' : extraProps.display);
    }
  }]);
}(external_window_React_["Component"]), _SettingFieldView.contextType = SkeletonContext, _SettingFieldView);
settings_pane_SettingFieldView = Object(tslib_es6["b" /* __decorate */])([src["observer"], Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Object])], settings_pane_SettingFieldView);
var settings_pane_SettingGroupView = (_SettingGroupView = /*#__PURE__*/function (_Component2) {
  function SettingGroupView(props) {
    var _this3$props$field$de;
    var _this3;
    settings_pane_classCallCheck(this, SettingGroupView);
    _this3 = settings_pane_callSuper(this, SettingGroupView, [props]);
    _this3.stageName = void 0;
    var field = _this3.props.field;
    var extraProps = field.extraProps;
    var display = extraProps.display;
    var editor = (_this3$props$field$de = _this3.props.field.designer) === null || _this3$props$field$de === void 0 ? void 0 : _this3$props$field$de.editor;
    var _editor$get = editor === null || editor === void 0 ? void 0 : editor.get('skeleton'),
      stages = _editor$get.stages;
    // const items = field.items;
    var stageName;
    if (display === 'entry') {
      Object(src["runInAction"])(function () {
        var _field$name2;
        stageName = "".concat(field.getNode().id, "_").concat((_field$name2 = field.name) === null || _field$name2 === void 0 ? void 0 : _field$name2.toString());
        // 清除原 stage，不然 content 引用的一直是老的 field，导致数据无法得到更新
        stages.container.remove(stageName);
        stages.add({
          type: 'Widget',
          name: stageName,
          content: /*#__PURE__*/React.createElement(external_window_React_["Fragment"], null, field.items.map(function (item, index) {
            return settings_pane_createSettingFieldView(item, field, index);
          })),
          props: {
            title: field.title
          }
        });
      });
    }
    _this3.stageName = stageName;
    return _this3;
  }
  settings_pane_inherits(SettingGroupView, _Component2);
  return settings_pane_createClass(SettingGroupView, [{
    key: "render",
    value: function render() {
      var _field$componentMeta3, _field$componentMeta4;
      var field = this.props.field;
      var extraProps = field.extraProps;
      var condition = extraProps.condition,
        display = extraProps.display;
      var visible = field.isSingle && typeof condition === 'function' ? condition(field.internalToShellField()) !== false : true;
      if (!visible) {
        return null;
      }
      // todo: split collapsed state | field.items for optimize
      return field_createField({
        meta: ((_field$componentMeta3 = field.componentMeta) === null || _field$componentMeta3 === void 0 ? void 0 : _field$componentMeta3.npm) || ((_field$componentMeta4 = field.componentMeta) === null || _field$componentMeta4 === void 0 ? void 0 : _field$componentMeta4.componentName) || '',
        title: field.title,
        // editor: field.editor,
        collapsed: !field.expanded,
        onExpandChange: function onExpandChange(expandState) {
          return field.setExpanded(expandState);
        },
        // field: field,
        // stages,
        stageName: this.stageName
      }, field.items.map(function (item, index) {
        return settings_pane_createSettingFieldView(item, field, index);
      }), display);
    }
  }]);
}(external_window_React_["Component"]), _SettingGroupView.contextType = SkeletonContext, _SettingGroupView);
settings_pane_SettingGroupView = Object(tslib_es6["b" /* __decorate */])([src["observer"], Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Object])], settings_pane_SettingGroupView);
function settings_pane_createSettingFieldView(field, fieldEntry, index) {
  if (setting_field_isSettingField(field)) {
    if (field.isGroup) {
      return /*#__PURE__*/React.createElement(settings_pane_SettingGroupView, {
        field: field,
        key: field.id
      });
    } else {
      return /*#__PURE__*/React.createElement(settings_pane_SettingFieldView, {
        field: field,
        key: field.id
      });
    }
  } else {
    return Object(utils_src["n" /* createContent */])(field, {
      key: index,
      field: fieldEntry
    });
  }
}
var settings_pane_SettingsPane = (_SettingsPane = /*#__PURE__*/function (_Component3) {
  function SettingsPane() {
    var _this4;
    settings_pane_classCallCheck(this, SettingsPane);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this4 = settings_pane_callSuper(this, SettingsPane, [].concat(args));
    _this4.currentStage = void 0;
    _this4.popupPipe = new popup_PopupPipe();
    _this4.pipe = _this4.popupPipe.create();
    _this4.handleClick = function (e) {
      // compatiable vision stageBox
      // TODO: optimize these codes
      var _this4$props$usePopup = _this4.props.usePopup,
        usePopup = _this4$props$usePopup === void 0 ? true : _this4$props$usePopup;
      if (!usePopup) return;
      var pane = e.currentTarget;
      function getTarget(node) {
        if (!pane.contains(node) || node.nodeName === 'A' && node.getAttribute('href')) {
          return null;
        }
        var target = node.dataset ? node.dataset.stageTarget : null;
        if (target) {
          return target;
        }
        return getTarget(node.parentNode);
      }
      var target = getTarget(e.target);
      if (!target) {
        return;
      }
      var skeleton = _this4.context;
      if (!skeleton || !skeleton.stages) {
        return;
      }
      var stage = skeleton.stages.container.get(target);
      if (stage) {
        if (_this4.currentStage) {
          stage.setPrevious(_this4.currentStage);
        }
        _this4.currentStage = stage;
      }
    };
    return _this4;
  }
  settings_pane_inherits(SettingsPane, _Component3);
  return settings_pane_createClass(SettingsPane, [{
    key: "popStage",
    value: function popStage() {
      var _this$currentStage;
      this.currentStage = (_this$currentStage = this.currentStage) === null || _this$currentStage === void 0 ? void 0 : _this$currentStage.getPrevious();
    }
  }, {
    key: "render",
    value: function render() {
      var target = this.props.target;
      var items = target.items;
      return /*#__PURE__*/React.createElement("div", {
        className: "lc-settings-pane",
        onClick: this.handleClick
      }, /*#__PURE__*/React.createElement(PopupService, {
        popupPipe: this.popupPipe
      }, /*#__PURE__*/React.createElement("div", {
        className: "lc-settings-content"
      }, items.map(function (item, index) {
        return settings_pane_createSettingFieldView(item, target, index);
      }))));
    }
  }]);
}(external_window_React_["Component"]), _SettingsPane.contextType = SkeletonContext, _SettingsPane);
Object(tslib_es6["b" /* __decorate */])([src["obx"], Object(tslib_es6["d" /* __metadata */])("design:type", typeof (settings_pane_a = typeof stage_Stage !== "undefined" && stage_Stage) === "function" ? settings_pane_a : Object)], settings_pane_SettingsPane.prototype, "currentStage", void 0);
settings_pane_SettingsPane = Object(tslib_es6["b" /* __decorate */])([src["observer"]], settings_pane_SettingsPane);

// CONCATENATED MODULE: ../editor-skeleton/src/components/stage-box/stage-chain.ts
function stage_chain_typeof(o) { "@babel/helpers - typeof"; return stage_chain_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, stage_chain_typeof(o); }
function stage_chain_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function stage_chain_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, stage_chain_toPropertyKey(o.key), o); } }
function stage_chain_createClass(e, r, t) { return r && stage_chain_defineProperties(e.prototype, r), t && stage_chain_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function stage_chain_toPropertyKey(t) { var i = stage_chain_toPrimitive(t, "string"); return "symbol" == stage_chain_typeof(i) ? i : i + ""; }
function stage_chain_toPrimitive(t, r) { if ("object" != stage_chain_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != stage_chain_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

var stage_chain_StageChain = /*#__PURE__*/function () {
  function StageChain(stage) {
    stage_chain_classCallCheck(this, StageChain);
    this.emitter = void 0;
    this.stage = void 0;
    this.emitter = Object(src["createModuleEventBus"])('StageChain');
    this.stage = stage;
  }
  return stage_chain_createClass(StageChain, [{
    key: "stagePush",
    value: function stagePush(stage) {
      if (!stage) return;
      stage.setPrevious(this.stage);
      stage.setReferLeft(this.stage);
      this.stage = stage;
      this.emitter.emit('stagechange');
    }
  }, {
    key: "stageBack",
    value: function stageBack() {
      var stage = this.stage.getPrevious();
      if (!stage) return;
      stage.setReferRight(this.stage);
      this.stage = stage;
      this.emitter.emit('stagechange');
    }
    /**
     * 回到最开始
     */
  }, {
    key: "stageBackToRoot",
    value: function stageBackToRoot() {
      var rootStage = this.stage.getPrevious();
      while (rootStage && !rootStage.isRoot) {
        rootStage = rootStage.getPrevious();
      }
      if (!rootStage) return;
      rootStage.setReferRight(this.stage);
      this.stage = rootStage;
      this.emitter.emit('stagechange');
    }
  }, {
    key: "getCurrentStage",
    value: function getCurrentStage() {
      return this.stage;
    }
  }, {
    key: "onStageChange",
    value: function onStageChange(func) {
      var _this = this;
      this.emitter.on('stagechange', func);
      return function () {
        _this.emitter.removeListener('stagechange', func);
      };
    }
  }]);
}();

// CONCATENATED MODULE: ../editor-skeleton/src/icons/arrow.tsx
function arrow_extends() { return arrow_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, arrow_extends.apply(null, arguments); }

function IconArrow(props) {
  return /*#__PURE__*/React.createElement(utils_src["f" /* SVGIcon */], arrow_extends({
    viewBox: "0 0 1024 1024"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M512.002047 771.904425c-10.152221 0.518816-20.442588-2.800789-28.202319-10.598382L77.902254 315.937602c-14.548344-14.618952-14.548344-38.318724 0-52.933583 14.544251-14.614859 38.118156-14.614859 52.662407 0l381.437385 418.531212L893.432269 263.004019c14.544251-14.614859 38.125319-14.614859 52.662407 0 14.552437 14.614859 14.552437 38.314631 0 52.933583L540.205389 761.307066C532.451798 769.103636 522.158361 772.424264 512.002047 771.904425z"
  }));
}
IconArrow.displayName = 'Arrow';
// CONCATENATED MODULE: ../editor-skeleton/src/icons/exit.tsx
function exit_extends() { return exit_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, exit_extends.apply(null, arguments); }

function IconExit(props) {
  return /*#__PURE__*/React.createElement(utils_src["f" /* SVGIcon */], exit_extends({
    viewBox: "0 0 1024 1024"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M723.872 478.4l-81.12-81.152L688 352l135.776 135.776L846.4 510.4 688 668.8l-45.248-45.28 81.12-81.12H384v-64h339.872zM576 896H256.192A64.16 64.16 0 0 1 192 831.84V192.16c0-35.424 28.704-64.16 64.192-64.16H576v64H288.224A31.968 31.968 0 0 0 256 223.744v576.512C256 817.44 270.4 832 288.224 832H576v64z"
  }));
}
IconExit.displayName = 'Exit';
// CONCATENATED MODULE: ../editor-skeleton/src/components/stage-box/stage.tsx
function stage_box_stage_typeof(o) { "@babel/helpers - typeof"; return stage_box_stage_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, stage_box_stage_typeof(o); }
function stage_box_stage_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function stage_box_stage_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, stage_box_stage_toPropertyKey(o.key), o); } }
function stage_box_stage_createClass(e, r, t) { return r && stage_box_stage_defineProperties(e.prototype, r), t && stage_box_stage_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function stage_box_stage_toPropertyKey(t) { var i = stage_box_stage_toPrimitive(t, "string"); return "symbol" == stage_box_stage_typeof(i) ? i : i + ""; }
function stage_box_stage_toPrimitive(t, r) { if ("object" != stage_box_stage_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != stage_box_stage_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function stage_box_stage_callSuper(t, o, e) { return o = stage_box_stage_getPrototypeOf(o), stage_box_stage_possibleConstructorReturn(t, stage_box_stage_isNativeReflectConstruct() ? Reflect.construct(o, e || [], stage_box_stage_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function stage_box_stage_possibleConstructorReturn(t, e) { if (e && ("object" == stage_box_stage_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return stage_box_stage_assertThisInitialized(t); }
function stage_box_stage_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function stage_box_stage_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (stage_box_stage_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function stage_box_stage_getPrototypeOf(t) { return stage_box_stage_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, stage_box_stage_getPrototypeOf(t); }
function stage_box_stage_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && stage_box_stage_setPrototypeOf(t, e); }
function stage_box_stage_setPrototypeOf(t, e) { return stage_box_stage_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, stage_box_stage_setPrototypeOf(t, e); }
// @todo 改成 hooks





var StageDefaultProps = {
  current: false
};
var stage_box_stage_Stage = /*#__PURE__*/function (_Component) {
  function Stage() {
    var _this;
    stage_box_stage_classCallCheck(this, Stage);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = stage_box_stage_callSuper(this, Stage, [].concat(args));
    _this.timer = void 0;
    _this.additionClassName = void 0;
    _this.shell = void 0;
    return _this;
  }
  stage_box_stage_inherits(Stage, _Component);
  return stage_box_stage_createClass(Stage, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.doSkate();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this.doSkate();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      window.clearTimeout(this.timer);
    }
  }, {
    key: "doSkate",
    value: function doSkate() {
      var _this2 = this;
      window.clearTimeout(this.timer);
      if (this.additionClassName) {
        this.timer = window.setTimeout(function () {
          var elem = _this2.shell;
          if (elem) {
            if (_this2.props.current) {
              elem.classList.remove(_this2.additionClassName);
            } else {
              elem.classList.add(_this2.additionClassName);
            }
            _this2.additionClassName = null;
          }
        }, 15);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;
      var _this$props = this.props,
        stage = _this$props.stage,
        current = _this$props.current,
        direction = _this$props.direction;
      var content = stage === null || stage === void 0 ? void 0 : stage.getContent();
      var title = stage.title;
      var newTitle = Object(utils_src["ab" /* isTitleConfig */])(title) ? title.label : title;
      if (current) {
        if (direction) {
          this.additionClassName = "skeleton-stagebox-stagein-".concat(direction);
        }
      } else if (direction) {
        this.additionClassName = "skeleton-stagebox-stageout-".concat(direction);
      }
      var className = classnames_default()('skeleton-stagebox-stage', {
        'skeleton-stagebox-refer': !current
      }, this.additionClassName);
      var stageBacker = stage !== null && stage !== void 0 && stage.hasBack() ? /*#__PURE__*/external_window_React_default.a.createElement("div", {
        className: "skeleton-stagebox-stagebacker"
      }, /*#__PURE__*/external_window_React_default.a.createElement(IconArrow, {
        className: "skeleton-stagebox-stage-arrow",
        size: "medium",
        "data-stage-target": "stageback"
      }), /*#__PURE__*/external_window_React_default.a.createElement("span", {
        className: "skeleton-stagebox-stage-title"
      }, newTitle), /*#__PURE__*/external_window_React_default.a.createElement(IconExit, {
        className: "skeleton-stagebox-stage-exit",
        size: "medium",
        "data-stage-target": "stageexit"
      })) : null;
      return /*#__PURE__*/external_window_React_default.a.createElement("div", {
        ref: function ref(_ref) {
          _this3.shell = _ref;
        },
        className: className
      }, stageBacker, /*#__PURE__*/external_window_React_default.a.createElement("div", {
        className: "skeleton-stagebox-stage-content"
      }, content));
    }
  }]);
}(external_window_React_["Component"]);
stage_box_stage_Stage.defaultProps = StageDefaultProps;

// CONCATENATED MODULE: ../editor-skeleton/src/components/stage-box/stage-box.tsx
function stage_box_typeof(o) { "@babel/helpers - typeof"; return stage_box_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, stage_box_typeof(o); }
var _StageBox;
function stage_box_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function stage_box_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, stage_box_toPropertyKey(o.key), o); } }
function stage_box_createClass(e, r, t) { return r && stage_box_defineProperties(e.prototype, r), t && stage_box_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function stage_box_toPropertyKey(t) { var i = stage_box_toPrimitive(t, "string"); return "symbol" == stage_box_typeof(i) ? i : i + ""; }
function stage_box_toPrimitive(t, r) { if ("object" != stage_box_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != stage_box_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function stage_box_callSuper(t, o, e) { return o = stage_box_getPrototypeOf(o), stage_box_possibleConstructorReturn(t, stage_box_isNativeReflectConstruct() ? Reflect.construct(o, e || [], stage_box_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function stage_box_possibleConstructorReturn(t, e) { if (e && ("object" == stage_box_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return stage_box_assertThisInitialized(t); }
function stage_box_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function stage_box_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (stage_box_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function stage_box_getPrototypeOf(t) { return stage_box_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, stage_box_getPrototypeOf(t); }
function stage_box_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && stage_box_setPrototypeOf(t, e); }
function stage_box_setPrototypeOf(t, e) { return stage_box_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, stage_box_setPrototypeOf(t, e); }







var StageBoxDefaultProps = {};
var stage_box_StageBox = (_StageBox = /*#__PURE__*/function (_Component) {
  function StageBox(props) {
    var _this;
    stage_box_classCallCheck(this, StageBox);
    _this = stage_box_callSuper(this, StageBox, [props]);
    _this.stageChain = void 0;
    _this.willDetach = [];
    _this.shell = void 0;
    _this.popupPipe = new popup_PopupPipe();
    _this.pipe = _this.popupPipe.create();
    var _this$props = _this.props,
      stageChain = _this$props.stageChain,
      children = _this$props.children,
      skeleton = _this$props.skeleton;
    if (stageChain) {
      _this.stageChain = stageChain;
    } else {
      var stateName = skeleton.createStage({
        content: children,
        isRoot: true
      });
      _this.stageChain = new stage_chain_StageChain(skeleton.getStage(stateName));
    }
    _this.willDetach.push(_this.stageChain.onStageChange(function () {
      return _this.forceUpdate();
    }));
    return _this;
  }
  stage_box_inherits(StageBox, _Component);
  return stage_box_createClass(StageBox, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;
      var shell = this.shell;
      /**
       * 向上层递归寻找 target
       * @param node 节点
       * @returns 节点的 dataset.stageTarget 信息
       */
      var _getTarget = function getTarget(node) {
        if (!node || !(shell !== null && shell !== void 0 && shell.contains(node)) || node.nodeName === 'A' && node.getAttribute('href')) {
          return null;
        }
        var target = node.dataset ? node.dataset.stageTarget : null;
        if (target) {
          return target;
        }
        return _getTarget(node.parentNode);
      };
      var click = function click(e) {
        var target = _getTarget(e.target);
        if (!target) {
          return;
        }
        if (target === 'stageback') {
          _this2.stageChain.stageBack();
        } else if (target === 'stageexit') {
          _this2.stageChain.stageBackToRoot();
        } else {
          var skeleton = _this2.props.skeleton;
          _this2.stageChain.stagePush(skeleton.getStage(target));
        }
      };
      shell === null || shell === void 0 ? void 0 : shell.addEventListener('click', click, false);
      this.willDetach.push(function () {
        return shell === null || shell === void 0 ? void 0 : shell.removeEventListener('click', click, false);
      });
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.willDetach) {
        this.willDetach.forEach(function (off) {
          return off();
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;
      var className = classnames_default()('skeleton-stagebox', this.props.className);
      var stage = this.stageChain.getCurrentStage();
      var refer = stage === null || stage === void 0 ? void 0 : stage.getRefer();
      var contentCurrent = null;
      var contentRefer = null;
      if (refer) {
        var _refer$stage;
        contentCurrent = /*#__PURE__*/external_window_React_default.a.createElement(stage_box_stage_Stage, {
          key: stage.getId(),
          stage: stage,
          direction: refer.direction,
          current: true
        });
        contentRefer = /*#__PURE__*/external_window_React_default.a.createElement(stage_box_stage_Stage, {
          key: refer === null || refer === void 0 ? void 0 : (_refer$stage = refer.stage) === null || _refer$stage === void 0 ? void 0 : _refer$stage.getId(),
          stage: refer === null || refer === void 0 ? void 0 : refer.stage,
          direction: refer.direction
        });
      } else {
        contentCurrent = /*#__PURE__*/external_window_React_default.a.createElement(stage_box_stage_Stage, {
          key: stage.getId(),
          stage: stage,
          current: true
        });
      }
      return /*#__PURE__*/external_window_React_default.a.createElement("div", {
        ref: function ref(_ref) {
          _this3.shell = _ref;
        },
        className: className
      }, /*#__PURE__*/external_window_React_default.a.createElement(PopupService, {
        popupPipe: this.popupPipe
      }, contentRefer, contentCurrent));
    }
  }]);
}(external_window_React_["Component"]), _StageBox.defaultProps = StageBoxDefaultProps, _StageBox.displayName = 'StageBox', _StageBox);
stage_box_StageBox = Object(tslib_es6["b" /* __decorate */])([src["observer"], Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Object])], stage_box_StageBox);
/* harmony default export */ var stage_box = (stage_box_StageBox);
// EXTERNAL MODULE: ../editor-skeleton/src/components/stage-box/index.less
var components_stage_box = __webpack_require__(123);

// CONCATENATED MODULE: ../editor-skeleton/src/components/stage-box/index.ts



// CONCATENATED MODULE: ../editor-skeleton/src/components/settings/settings-primary-pane.tsx
function settings_primary_pane_typeof(o) { "@babel/helpers - typeof"; return settings_primary_pane_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, settings_primary_pane_typeof(o); }
function settings_primary_pane_extends() { return settings_primary_pane_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, settings_primary_pane_extends.apply(null, arguments); }
function settings_primary_pane_regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return settings_primary_pane_regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i.return) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (settings_primary_pane_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, settings_primary_pane_regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, settings_primary_pane_regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), settings_primary_pane_regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", settings_primary_pane_regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), settings_primary_pane_regeneratorDefine2(u), settings_primary_pane_regeneratorDefine2(u, o, "Generator"), settings_primary_pane_regeneratorDefine2(u, n, function () { return this; }), settings_primary_pane_regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (settings_primary_pane_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function settings_primary_pane_regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } settings_primary_pane_regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { settings_primary_pane_regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, settings_primary_pane_regeneratorDefine2(e, r, n, t); }
function settings_primary_pane_asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function settings_primary_pane_asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { settings_primary_pane_asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { settings_primary_pane_asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function settings_primary_pane_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function settings_primary_pane_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, settings_primary_pane_toPropertyKey(o.key), o); } }
function settings_primary_pane_createClass(e, r, t) { return r && settings_primary_pane_defineProperties(e.prototype, r), t && settings_primary_pane_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function settings_primary_pane_toPropertyKey(t) { var i = settings_primary_pane_toPrimitive(t, "string"); return "symbol" == settings_primary_pane_typeof(i) ? i : i + ""; }
function settings_primary_pane_toPrimitive(t, r) { if ("object" != settings_primary_pane_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != settings_primary_pane_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function settings_primary_pane_callSuper(t, o, e) { return o = settings_primary_pane_getPrototypeOf(o), settings_primary_pane_possibleConstructorReturn(t, settings_primary_pane_isNativeReflectConstruct() ? Reflect.construct(o, e || [], settings_primary_pane_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function settings_primary_pane_possibleConstructorReturn(t, e) { if (e && ("object" == settings_primary_pane_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return settings_primary_pane_assertThisInitialized(t); }
function settings_primary_pane_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function settings_primary_pane_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (settings_primary_pane_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function settings_primary_pane_getPrototypeOf(t) { return settings_primary_pane_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, settings_primary_pane_getPrototypeOf(t); }
function settings_primary_pane_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && settings_primary_pane_setPrototypeOf(t, e); }
function settings_primary_pane_setPrototypeOf(t, e) { return settings_primary_pane_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, settings_primary_pane_setPrototypeOf(t, e); }












var settings_primary_pane_SettingsPrimaryPane = /*#__PURE__*/function (_Component) {
  function SettingsPrimaryPane(props) {
    var _this;
    settings_primary_pane_classCallCheck(this, SettingsPrimaryPane);
    _this = settings_primary_pane_callSuper(this, SettingsPrimaryPane, [props]);
    _this.state = {
      shouldIgnoreRoot: false
    };
    _this.main = new main_SettingsMain(_this.props.engineEditor);
    _this._activeKey = void 0;
    Object(src["makeObservable"])(_this);
    return _this;
  }
  settings_primary_pane_inherits(SettingsPrimaryPane, _Component);
  return settings_primary_pane_createClass(SettingsPrimaryPane, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;
      this.setShouldIgnoreRoot();
      var editor = this.props.engineEditor;
      editor.eventBus.on('designer.selection.change', function () {
        if (!src["engineConfig"].get('stayOnTheSameSettingTab', false)) {
          _this2._activeKey = null;
        }
      });
    }
  }, {
    key: "setShouldIgnoreRoot",
    value: function () {
      var _setShouldIgnoreRoot = settings_primary_pane_asyncToGenerator(/*#__PURE__*/settings_primary_pane_regenerator().m(function _callee() {
        var designMode;
        return settings_primary_pane_regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              _context.n = 1;
              return src["globalContext"].get('editor').get('designMode');
            case 1:
              designMode = _context.v;
              this.setState({
                shouldIgnoreRoot: designMode === 'live'
              });
            case 2:
              return _context.a(2);
          }
        }, _callee, this);
      }));
      function setShouldIgnoreRoot() {
        return _setShouldIgnoreRoot.apply(this, arguments);
      }
      return setShouldIgnoreRoot;
    }()
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.main.purge();
    }
  }, {
    key: "renderBreadcrumb",
    value: function renderBreadcrumb() {
      var _designer$currentSele, _designer$currentSele2, _node$document, _this$main$componentM;
      var _this$main = this.main,
        settings = _this$main.settings,
        editor = _this$main.editor;
      // const shouldIgnoreRoot = config.props?.ignoreRoot;
      var shouldIgnoreRoot = this.state.shouldIgnoreRoot;
      if (!settings) {
        return null;
      }
      if (settings.isMultiple) {
        var _settings$componentMe;
        return /*#__PURE__*/external_window_React_default.a.createElement("div", {
          className: "lc-settings-navigator"
        }, Object(utils_src["p" /* createIcon */])((_settings$componentMe = settings.componentMeta) === null || _settings$componentMe === void 0 ? void 0 : _settings$componentMe.icon, {
          className: 'lc-settings-navigator-icon'
        }), /*#__PURE__*/external_window_React_default.a.createElement("div", {
          style: {
            marginLeft: '5px'
          }
        }, /*#__PURE__*/external_window_React_default.a.createElement(src["Title"], {
          title: settings.componentMeta.title
        }), /*#__PURE__*/external_window_React_default.a.createElement("span", null, " x ", settings.nodes.length)));
      }
      var designer = editor.get('designer');
      var current = designer === null || designer === void 0 ? void 0 : (_designer$currentSele = designer.currentSelection) === null || _designer$currentSele === void 0 ? void 0 : (_designer$currentSele2 = _designer$currentSele.getNodes()) === null || _designer$currentSele2 === void 0 ? void 0 : _designer$currentSele2[0];
      var node = settings.first;
      var focusNode = (_node$document = node.document) === null || _node$document === void 0 ? void 0 : _node$document.focusNode;
      var items = [];
      var l = 3;
      var _loop = function _loop() {
        var _node = node;
        // dirty code: should remove
        if (shouldIgnoreRoot && node.isRoot()) {
          return 1; // break
        }
        if (focusNode && node.contains(focusNode)) {
          l = 0;
        }
        var props = l === 2 ? {} : {
          onMouseOver: hoverNode.bind(null, _node, true),
          onMouseOut: hoverNode.bind(null, _node, false),
          onClick: function onClick() {
            if (!_node) {
              return;
            }
            selectNode.call(null, _node);
            var getName = function getName(node) {
              var _node$componentMeta, _node$componentMeta2;
              var npm = node === null || node === void 0 ? void 0 : (_node$componentMeta = node.componentMeta) === null || _node$componentMeta === void 0 ? void 0 : _node$componentMeta.npm;
              return [npm === null || npm === void 0 ? void 0 : npm.package, npm === null || npm === void 0 ? void 0 : npm.componentName].filter(function (item) {
                return !!item;
              }).join('-') || (node === null || node === void 0 ? void 0 : (_node$componentMeta2 = node.componentMeta) === null || _node$componentMeta2 === void 0 ? void 0 : _node$componentMeta2.componentName) || '';
            };
            var selected = getName(current);
            var target = getName(_node);
            editor === null || editor === void 0 ? void 0 : editor.eventBus.emit('skeleton.settingsPane.Breadcrumb', {
              selected: selected,
              target: target
            });
          }
        };
        items.unshift(/*#__PURE__*/external_window_React_default.a.createElement(external_Next_["Breadcrumb"].Item, settings_primary_pane_extends({}, props, {
          key: node.id
        }), /*#__PURE__*/external_window_React_default.a.createElement(src["Title"], {
          title: node.title
        })));
        node = node.parent;
      };
      while (l-- > 0 && node) {
        if (_loop()) break;
      }
      return /*#__PURE__*/external_window_React_default.a.createElement("div", {
        className: "lc-settings-navigator"
      }, Object(utils_src["p" /* createIcon */])((_this$main$componentM = this.main.componentMeta) === null || _this$main$componentM === void 0 ? void 0 : _this$main$componentM.icon, {
        className: 'lc-settings-navigator-icon',
        class: 'lc-settings-navigator-icon'
      }), /*#__PURE__*/external_window_React_default.a.createElement(external_Next_["Breadcrumb"], {
        className: "lc-settings-node-breadcrumb"
      }, items));
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;
      var settings = this.main.settings;
      var editor = this.props.engineEditor;
      if (!settings) {
        // 未选中节点，提示选中 或者 显示根节点设置
        return /*#__PURE__*/external_window_React_default.a.createElement("div", {
          className: "lc-settings-main"
        }, /*#__PURE__*/external_window_React_default.a.createElement("div", {
          className: "lc-settings-notice"
        }, /*#__PURE__*/external_window_React_default.a.createElement("p", null, src_locale_intl('Please select a node in canvas'))));
      }
      // 当节点被锁定，且未开启锁定后容器可设置属性
      if (settings.isLocked && !src["engineConfig"].get('enableLockedNodeSetting', false)) {
        return /*#__PURE__*/external_window_React_default.a.createElement("div", {
          className: "lc-settings-main"
        }, /*#__PURE__*/external_window_React_default.a.createElement("div", {
          className: "lc-settings-notice"
        }, /*#__PURE__*/external_window_React_default.a.createElement("p", null, src_locale_intl('Current node is locked'))));
      }
      if (Array.isArray(settings.items) && settings.items.length === 0) {
        return /*#__PURE__*/external_window_React_default.a.createElement("div", {
          className: "lc-settings-main"
        }, /*#__PURE__*/external_window_React_default.a.createElement("div", {
          className: "lc-settings-notice"
        }, /*#__PURE__*/external_window_React_default.a.createElement("p", null, src_locale_intl('No config found for this type of component'))));
      }
      if (!settings.isSameComponent) {
        // TODO: future support 获取设置项交集编辑
        return /*#__PURE__*/external_window_React_default.a.createElement("div", {
          className: "lc-settings-main"
        }, /*#__PURE__*/external_window_React_default.a.createElement("div", {
          className: "lc-settings-notice"
        }, /*#__PURE__*/external_window_React_default.a.createElement("p", null, src_locale_intl('Please select same kind of components'))));
      }
      var items = settings.items;
      if (items.length > 5 || items.some(function (item) {
        return !setting_field_isSettingField(item) || !item.isGroup;
      })) {
        return /*#__PURE__*/external_window_React_default.a.createElement("div", {
          className: "lc-settings-main"
        }, this.renderBreadcrumb(), /*#__PURE__*/external_window_React_default.a.createElement("div", {
          className: "lc-settings-body"
        }, /*#__PURE__*/external_window_React_default.a.createElement(SkeletonContext.Consumer, null, function (skeleton) {
          if (skeleton) {
            return /*#__PURE__*/external_window_React_default.a.createElement(stage_box, {
              skeleton: skeleton,
              target: settings,
              key: settings.id
            }, /*#__PURE__*/external_window_React_default.a.createElement(settings_pane_SettingsPane, {
              target: settings,
              usePopup: false
            }));
          }
          return null;
        })));
      }
      var matched = false;
      var tabs = items.map(function (field) {
        if (_this3._activeKey === field.name) {
          matched = true;
        }
        return /*#__PURE__*/external_window_React_default.a.createElement(external_Next_["Tab"].Item, {
          className: "lc-settings-tab-item",
          title: /*#__PURE__*/external_window_React_default.a.createElement(src["Title"], {
            title: field.title
          }),
          key: field.name,
          onClick: function onClick() {
            editor === null || editor === void 0 ? void 0 : editor.eventBus.emit('skeleton.settingsPane.change', {
              name: field.name,
              title: field.title
            });
          }
        }, /*#__PURE__*/external_window_React_default.a.createElement(SkeletonContext.Consumer, null, function (skeleton) {
          if (skeleton) {
            return /*#__PURE__*/external_window_React_default.a.createElement(stage_box, {
              skeleton: skeleton,
              target: field,
              key: field.id
            }, /*#__PURE__*/external_window_React_default.a.createElement(settings_pane_SettingsPane, {
              target: field,
              key: field.id,
              usePopup: false
            }));
          }
          return null;
        }));
      });
      var activeKey = matched ? this._activeKey : items[0].name;
      var className = classnames_default()('lc-settings-main', {
        'lc-settings-hide-tabs': items.length === 1 && src["engineConfig"].get('hideSettingsTabsWhenOnlyOneItem', false)
      });
      return /*#__PURE__*/external_window_React_default.a.createElement("div", {
        className: className
      }, this.renderBreadcrumb(), /*#__PURE__*/external_window_React_default.a.createElement(external_Next_["Tab"], {
        activeKey: activeKey,
        onChange: function onChange(tabKey) {
          _this3._activeKey = tabKey;
        },
        navClassName: "lc-settings-tabs",
        animation: false,
        excessMode: "dropdown",
        contentClassName: "lc-settings-tabs-content"
      }, tabs));
    }
  }]);
}(external_window_React_["Component"]);
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], settings_primary_pane_SettingsPrimaryPane.prototype, "_activeKey", void 0);
settings_primary_pane_SettingsPrimaryPane = Object(tslib_es6["b" /* __decorate */])([src["observer"], Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Object])], settings_primary_pane_SettingsPrimaryPane);

function hoverNode(node, flag) {
  node.hover(flag);
}
function selectNode(node) {
  node === null || node === void 0 ? void 0 : node.select();
}
// CONCATENATED MODULE: ../editor-skeleton/src/components/settings/index.ts



// CONCATENATED MODULE: ../editor-skeleton/src/transducers/parse-func.ts

var leadingFnRe = /^function/;
var leadingFnNameRe = /^\w+\s*\(/;
var parse_func_logger = Object(utils_src["t" /* getLogger */])({
  level: 'warn',
  bizName: 'skeleton:transducers'
});
/**
 * 将函数字符串转成函数，支持几种类型
 *   类型一：() => {} / val => {}
 *   类型二：setValue() {}
 *   类型三：function() {} / function setValue() {}
 * @param str
 * @returns
 */
function transformStringToFunction(str) {
  if (typeof str !== 'string') return str;
  var fn;
  if (leadingFnNameRe.test(str) && !leadingFnRe.test(str)) {
    str = "function ".concat(str);
  }
  var fnBody = "\n    return function() {\n      const self = this;\n      try {\n        return (".concat(str, ").apply(self, arguments);\n      } catch(e) {\n        console.warn('call function which parsed by lowcode failed: ', e);\n        return e.message;\n      }\n    };\n  ");
  try {
    // eslint-disable-next-line no-new-func
    fn = new Function(fnBody)();
  } catch (e) {
    parse_func_logger.error(str);
    parse_func_logger.error(e.message);
  }
  return fn;
}
function parseJSFunc(obj) {
  var enableAllowedKeys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  if (!obj) return;
  Object.keys(obj).forEach(function (key) {
    var item = obj[key];
    if (Object(utils_src["K" /* isJSFunction */])(item)) {
      obj[key] = transformStringToFunction(item.value);
    } else if (Array.isArray(item)) {
      item.forEach(function (o) {
        return parseJSFunc(o, enableAllowedKeys);
      });
    } else if (Object(utils_src["R" /* isPlainObject */])(item)) {
      parseJSFunc(item, enableAllowedKeys);
    }
  });
}
/* harmony default export */ var parse_func = (function (metadata) {
  parseJSFunc(metadata, false);
  return metadata;
});
// CONCATENATED MODULE: ../editor-skeleton/src/transducers/parse-props.ts
function parse_props_toConsumableArray(r) { return parse_props_arrayWithoutHoles(r) || parse_props_iterableToArray(r) || parse_props_unsupportedIterableToArray(r) || parse_props_nonIterableSpread(); }
function parse_props_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function parse_props_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return parse_props_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? parse_props_arrayLikeToArray(r, a) : void 0; } }
function parse_props_iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function parse_props_arrayWithoutHoles(r) { if (Array.isArray(r)) return parse_props_arrayLikeToArray(r); }
function parse_props_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function parse_props_typeof(o) { "@babel/helpers - typeof"; return parse_props_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, parse_props_typeof(o); }
function parse_props_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function parse_props_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? parse_props_ownKeys(Object(t), !0).forEach(function (r) { parse_props_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : parse_props_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function parse_props_defineProperty(e, r, t) { return (r = parse_props_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function parse_props_toPropertyKey(t) { var i = parse_props_toPrimitive(t, "string"); return "symbol" == parse_props_typeof(i) ? i : i + ""; }
function parse_props_toPrimitive(t, r) { if ("object" != parse_props_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != parse_props_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function propConfigToFieldConfig(propConfig) {
  var name = propConfig.name,
    description = propConfig.description;
  var title = {
    label: {
      type: 'i18n',
      'en-US': name,
      'zh-CN': (description === null || description === void 0 ? void 0 : description.slice(0, 10)) || name
    },
    tip: description ? "".concat(name, " | ").concat(description) : undefined
  };
  return parse_props_objectSpread(parse_props_objectSpread({
    title: title
  }, propConfig), {}, {
    // TODO 这边直接用propConfig，将setter丢在propconfig里，需要确认是否在PropConfig扩展还是换实现
    setter: propConfig.setter ? propConfig.setter : propTypeToSetter(propConfig.propType)
  });
}
function propTypeToSetter(propType) {
  var typeName;
  var isRequired = false;
  if (typeof propType === 'string') {
    typeName = propType;
  } else if (parse_props_typeof(propType) === 'object') {
    typeName = propType.type;
    isRequired = propType.isRequired;
  } else {
    typeName = 'string';
  }
  // TODO: use mixinSetter wrapper
  switch (typeName) {
    case 'string':
      return {
        componentName: 'StringSetter',
        isRequired: isRequired,
        initialValue: ''
      };
    case 'number':
      return {
        componentName: 'NumberSetter',
        isRequired: isRequired,
        initialValue: 0
      };
    case 'bool':
      return {
        componentName: 'BoolSetter',
        isRequired: isRequired,
        initialValue: false
      };
    case 'oneOf':
      var dataSource = (propType.value || []).map(function (value, index) {
        var t = parse_props_typeof(value);
        return {
          label: t === 'string' || t === 'number' || t === 'boolean' ? String(value) : "value ".concat(index),
          value: value
        };
      });
      var componentName = dataSource.length >= 4 ? 'SelectSetter' : 'RadioGroupSetter';
      return {
        componentName: componentName,
        props: {
          dataSource: dataSource,
          options: dataSource
        },
        isRequired: isRequired,
        initialValue: dataSource[0] ? dataSource[0].value : null
      };
    case 'element':
    case 'node':
      // TODO: use Mixin
      return {
        // slotSetter
        componentName: 'SlotSetter',
        props: {
          mode: typeName
        },
        isRequired: isRequired,
        initialValue: {
          type: 'JSSlot',
          value: []
        }
      };
    case 'shape':
    case 'exact':
      var items = (propType.value || []).map(function (item) {
        return propConfigToFieldConfig(item);
      });
      return {
        componentName: 'ObjectSetter',
        props: {
          config: {
            items: items,
            extraSetter: typeName === 'shape' ? propTypeToSetter('any') : null
          }
        },
        isRequired: isRequired,
        initialValue: function initialValue(field) {
          var data = {};
          items.forEach(function (item) {
            var initial = item.defaultValue;
            if (initial == null && item.setter && parse_props_typeof(item.setter) === 'object') {
              initial = item.setter.initialValue;
            }
            data[item.name] = initial ? typeof initial === 'function' ? initial(field) : initial : null;
          });
          return data;
        }
      };
    case 'object':
    case 'objectOf':
      return {
        componentName: 'ObjectSetter',
        props: {
          config: {
            extraSetter: propTypeToSetter(typeName === 'objectOf' ? propType.value : 'any')
          }
        },
        isRequired: isRequired,
        initialValue: {}
      };
    case 'array':
    case 'arrayOf':
      return {
        componentName: 'ArraySetter',
        props: {
          itemSetter: propTypeToSetter(typeName === 'arrayOf' ? propType.value : 'any')
        },
        isRequired: isRequired,
        initialValue: []
      };
    case 'func':
      return {
        componentName: 'FunctionSetter',
        isRequired: isRequired
      };
    case 'color':
      return {
        componentName: 'ColorSetter',
        isRequired: isRequired
      };
    case 'oneOfType':
      return {
        componentName: 'MixedSetter',
        props: {
          // TODO:
          setters: propType.value.map(function (item) {
            return propTypeToSetter(item);
          })
        },
        isRequired: isRequired
      };
    default:
    // do nothing
  }
  return {
    componentName: 'MixedSetter',
    isRequired: isRequired,
    props: {}
  };
}
var EVENT_RE = /^on|after|before[A-Z][\w]*$/;
/* harmony default export */ var parse_props = (function (metadata) {
  var _metadata$configure = metadata.configure,
    configure = _metadata$configure === void 0 ? {} : _metadata$configure;
  // TODO types后续补充
  var extendsProps = null;
  if (configure.props) {
    if (Array.isArray(configure.props)) {
      return metadata;
    }
    var _configure$props = configure.props,
      isExtends = _configure$props.isExtends,
      _configure$props$over = _configure$props.override,
      override = _configure$props$over === void 0 ? [] : _configure$props$over;
    // 不开启继承时，直接返回configure配置
    if (!isExtends) {
      return parse_props_objectSpread(parse_props_objectSpread({}, metadata), {}, {
        configure: parse_props_objectSpread(parse_props_objectSpread({}, configure), {}, {
          props: parse_props_toConsumableArray(override)
        })
      });
    }
    extendsProps = {};
    // 开启继承后，缓存重写内容的配置
    override.forEach(function (prop) {
      extendsProps[prop.name] = prop;
    });
  }
  if (!metadata.props) {
    return parse_props_objectSpread(parse_props_objectSpread({}, metadata), {}, {
      configure: parse_props_objectSpread(parse_props_objectSpread({}, configure), {}, {
        props: []
      })
    });
  }
  var _configure$component = configure.component,
    component = _configure$component === void 0 ? {} : _configure$component,
    _configure$supports = configure.supports,
    supports = _configure$supports === void 0 ? {} : _configure$supports;
  var supportedEvents = supports.events ? null : [];
  var props = [];
  metadata.props.forEach(function (prop) {
    var _prop = prop,
      name = _prop.name,
      propType = _prop.propType,
      description = _prop.description;
    if (name === 'children' && (component.isContainer || propType === 'node' || propType === 'element' || propType === 'any')) {
      if (component.isContainer !== false) {
        component.isContainer = true;
        props.push(propConfigToFieldConfig(prop));
        return;
      }
    }
    if (EVENT_RE.test(name) && (propType === 'func' || propType === 'any')) {
      if (supportedEvents) {
        supportedEvents.push({
          name: name,
          description: description
        });
        supports.events = supportedEvents;
      }
      return;
    }
    if (name === 'className' && (propType === 'string' || propType === 'any')) {
      if (supports.className == null) {
        supports.className = true;
      }
      return;
    }
    if (name === 'style' && (propType === 'object' || propType === 'any')) {
      if (supports.style == null) {
        supports.style = true;
      }
      return;
    }
    // 存在覆盖配置时
    if (extendsProps) {
      if (name in extendsProps) {
        prop = extendsProps[name];
      }
    }
    props.push(propConfigToFieldConfig(prop));
  });
  return parse_props_objectSpread(parse_props_objectSpread({}, metadata), {}, {
    configure: parse_props_objectSpread(parse_props_objectSpread({}, configure), {}, {
      props: props,
      supports: supports,
      component: component
    })
  });
});
// CONCATENATED MODULE: ../editor-skeleton/src/icons/slot.tsx
function slot_extends() { return slot_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, slot_extends.apply(null, arguments); }

function IconSlot(props) {
  return /*#__PURE__*/React.createElement(utils_src["f" /* SVGIcon */], slot_extends({
    viewBox: "0 0 1024 1024"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M682.325333 135.509333V204.8H819.2v613.376h-614.741333V204.8h136.874666v-69.290667h-206.165333v752.298667h754.346667V135.509333z",
    c: "Q29weXJpZ2h0IChjKSAyMDIwLXByZXNlbnQgQWxpYmFiYSBJbmMu"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M512 512m-170.325333 0a170.325333 170.325333 0 1 0 340.650666 0 170.325333 170.325333 0 1 0-340.650666 0Z"
  }));
}
IconSlot.displayName = 'IconSlot';
// CONCATENATED MODULE: ../editor-skeleton/src/transducers/addon-combine.ts
function addon_combine_typeof(o) { "@babel/helpers - typeof"; return addon_combine_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, addon_combine_typeof(o); }
function addon_combine_toConsumableArray(r) { return addon_combine_arrayWithoutHoles(r) || addon_combine_iterableToArray(r) || addon_combine_unsupportedIterableToArray(r) || addon_combine_nonIterableSpread(); }
function addon_combine_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function addon_combine_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return addon_combine_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? addon_combine_arrayLikeToArray(r, a) : void 0; } }
function addon_combine_iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function addon_combine_arrayWithoutHoles(r) { if (Array.isArray(r)) return addon_combine_arrayLikeToArray(r); }
function addon_combine_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function addon_combine_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function addon_combine_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? addon_combine_ownKeys(Object(t), !0).forEach(function (r) { addon_combine_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : addon_combine_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function addon_combine_defineProperty(e, r, t) { return (r = addon_combine_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function addon_combine_toPropertyKey(t) { var i = addon_combine_toPrimitive(t, "string"); return "symbol" == addon_combine_typeof(i) ? i : i + ""; }
function addon_combine_toPrimitive(t, r) { if ("object" != addon_combine_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != addon_combine_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }


/* harmony default export */ var addon_combine = (function (metadata) {
  var componentName = metadata.componentName,
    _metadata$configure = metadata.configure,
    configure = _metadata$configure === void 0 ? {} : _metadata$configure;
  // 如果已经处理过，不再重新执行一遍
  if (configure.combined) {
    return metadata;
  }
  if (componentName === 'Leaf') {
    return addon_combine_objectSpread(addon_combine_objectSpread({}, metadata), {}, {
      configure: addon_combine_objectSpread(addon_combine_objectSpread({}, configure), {}, {
        combined: [{
          name: 'children',
          title: {
            type: 'i18n',
            'zh-CN': '内容设置',
            'en-US': 'Content'
          },
          setter: {
            componentName: 'MixedSetter',
            props: {
              // TODO:
              setters: [{
                componentName: 'StringSetter',
                props: {
                  // TODO: textarea mode
                  multiline: true
                },
                initialValue: ''
              }, {
                componentName: 'ExpressionSetter',
                initialValue: {
                  type: 'JSExpression',
                  value: ''
                }
              }]
            }
          }
        }]
      })
    });
  }
  var props = configure.props,
    _configure$supports = configure.supports,
    supports = _configure$supports === void 0 ? {} : _configure$supports;
  var isRoot = componentName === 'Page' || componentName === 'Component';
  var eventsDefinition = [];
  var supportedLifecycles = supports.lifecycles || (isRoot ?
  /* [
    {
      description: '初始化时',
      name: 'constructor',
    },
    {
      description: '装载后',
      name: 'componentDidMount',
    },
    {
      description: '更新时',
      name: 'componentDidUpdate',
    },
    {
      description: '卸载时',
      name: 'componentWillUnmount',
    },
  ] */
  null : null);
  if (supportedLifecycles) {
    eventsDefinition.push({
      type: 'lifeCycleEvent',
      title: '生命周期',
      list: supportedLifecycles.map(function (event) {
        return typeof event === 'string' ? {
          name: event
        } : event;
      })
    });
  }
  if (supports.events) {
    eventsDefinition.push({
      type: 'events',
      title: '事件',
      list: (supports.events || []).map(function (event) {
        return typeof event === 'string' ? {
          name: event
        } : event;
      })
    });
  }
  //  通用设置
  var propsGroup = props ? addon_combine_toConsumableArray(props) : [];
  var basicInfo = {};
  if (componentName === 'Slot') {
    if (!configure.component) {
      configure.component = {
        isContainer: true
      };
    } else if (addon_combine_typeof(configure.component) === 'object') {
      configure.component.isContainer = true;
    }
    basicInfo.icon = IconSlot;
    propsGroup = [{
      name: props_getConvertedExtraKey('title'),
      title: {
        type: 'i18n',
        'en-US': 'Slot Title',
        'zh-CN': '插槽标题'
      },
      setter: 'StringSetter',
      defaultValue: '插槽容器'
    }];
  }
  // propsGroup.push({
  //   name: '#generals',
  //   title: { type: 'i18n', 'zh-CN': '通用', 'en-US': 'General' },
  //   items: [
  //     {
  //       name: 'id',
  //       title: 'ID',
  //       setter: 'StringSetter',
  //     },
  //     {
  //       name: 'key',
  //       title: 'Key',
  //       // todo: use Mixin
  //       setter: 'StringSetter',
  //     },
  //     {
  //       name: 'ref',
  //       title: 'Ref',
  //       setter: 'StringSetter',
  //     },
  //     {
  //       name: '!more',
  //       title: '更多',
  //       setter: 'PropertiesSetter',
  //     },
  //   ],
  // });
  var stylesGroup = [];
  var advancedGroup = [];
  if (propsGroup) {
    var l = propsGroup.length;
    while (l-- > 0) {
      var item = propsGroup[l];
      // if (item.type === 'group' && (item.title === '高级' || item.title?.label === '高级')) {
      //   advancedGroup = item.items || [];
      //   propsGroup.splice(l, 1);
      // }
      if (item.name === '__style__' || item.name === 'style' || item.name === 'containerStyle' || item.name === 'pageStyle') {
        var _item$extraProps;
        propsGroup.splice(l, 1);
        stylesGroup.push(item);
        if ((_item$extraProps = item.extraProps) !== null && _item$extraProps !== void 0 && _item$extraProps.defaultCollapsed && item.name !== 'containerStyle') {
          item.extraProps.defaultCollapsed = false;
        }
      }
    }
  }
  var combined = [{
    title: {
      type: 'i18n',
      'zh-CN': '属性',
      'en-US': 'Props'
    },
    name: '#props',
    items: propsGroup
  }];
  if (supports.className) {
    stylesGroup.push({
      name: 'className',
      title: {
        type: 'i18n',
        'zh-CN': '类名绑定',
        'en-US': 'ClassName'
      },
      setter: 'ClassNameSetter'
    });
  }
  if (supports.style) {
    stylesGroup.push({
      name: 'style',
      title: {
        type: 'i18n',
        'zh-CN': '行内样式',
        'en-US': 'Style'
      },
      setter: 'StyleSetter',
      extraProps: {
        display: 'block'
      }
    });
  }
  if (stylesGroup.length > 0) {
    combined.push({
      name: '#styles',
      title: {
        type: 'i18n',
        'zh-CN': '样式',
        'en-US': 'Styles'
      },
      items: stylesGroup
    });
  }
  if (eventsDefinition.length > 0) {
    combined.push({
      name: '#events',
      title: {
        type: 'i18n',
        'zh-CN': '事件',
        'en-US': 'Events'
      },
      items: [{
        name: '__events',
        title: {
          type: 'i18n',
          'zh-CN': '事件设置',
          'en-US': 'Events'
        },
        setter: {
          componentName: 'EventsSetter',
          props: {
            definition: eventsDefinition
          }
        },
        getValue: function getValue(field, val) {
          return val;
        },
        setValue: function setValue(field, eventData) {
          var eventDataList = eventData.eventDataList,
            eventList = eventData.eventList;
          Array.isArray(eventList) && eventList.map(function (item) {
            field.parent.clearPropValue(item.name);
            return item;
          });
          Array.isArray(eventDataList) && eventDataList.map(function (item) {
            field.parent.setPropValue(item.name, {
              type: 'JSFunction',
              // 需要传下入参
              value: "function(){return this.".concat(item.relatedEventName, ".apply(this,Array.prototype.slice.call(arguments).concat([").concat(item.paramStr ? item.paramStr : '', "])) }")
            });
            return item;
          });
        }
      }]
    });
  }
  if (!isRoot) {
    if (supports.condition !== false) {
      advancedGroup.push({
        name: props_getConvertedExtraKey('condition'),
        title: {
          type: 'i18n',
          'zh-CN': '是否渲染',
          'en-US': 'Condition'
        },
        defaultValue: true,
        setter: [{
          componentName: 'BoolSetter'
        }, {
          componentName: 'VariableSetter'
        }],
        extraProps: {
          display: 'block'
        }
      });
    }
    if (supports.loop !== false) {
      advancedGroup.push({
        name: '#loop',
        title: {
          type: 'i18n',
          'zh-CN': '循环',
          'en-US': 'Loop'
        },
        items: [{
          name: props_getConvertedExtraKey('loop'),
          title: {
            type: 'i18n',
            'zh-CN': '循环数据',
            'en-US': 'Loop Data'
          },
          setter: [{
            componentName: 'JsonSetter',
            props: {
              label: {
                type: 'i18n',
                'zh-CN': '编辑数据',
                'en-US': 'Edit Data'
              },
              defaultValue: '[]'
            }
          }, {
            componentName: 'VariableSetter'
          }]
        }, {
          name: props_getConvertedExtraKey('loopArgs.0'),
          title: {
            type: 'i18n',
            'zh-CN': '迭代变量名',
            'en-US': 'Loop Item'
          },
          setter: {
            componentName: 'StringSetter',
            props: {
              placeholder: {
                type: 'i18n',
                'zh-CN': '默认为: item',
                'en-US': 'Defaults: item'
              }
            }
          }
        }, {
          name: props_getConvertedExtraKey('loopArgs.1'),
          title: {
            type: 'i18n',
            'zh-CN': '索引变量名',
            'en-US': 'Loop Index'
          },
          setter: {
            componentName: 'StringSetter',
            props: {
              placeholder: {
                type: 'i18n',
                'zh-CN': '默认为: index',
                'en-US': 'Defaults: index'
              }
            }
          }
        }, {
          name: 'key',
          title: {
            type: 'i18n',
            'zh-CN': '循环 Key',
            'en-US': 'Loop Key'
          },
          setter: [{
            componentName: 'StringSetter'
          }, {
            componentName: 'VariableSetter'
          }]
        }],
        extraProps: {
          display: 'accordion'
        }
      });
    }
    if (supports.condition !== false || supports.loop !== false) {
      advancedGroup.push({
        name: 'key',
        title: {
          label: {
            type: 'i18n',
            'zh-CN': '渲染唯一标识 (key)',
            'en-US': 'Render unique identifier (key)'
          },
          tip: {
            type: 'i18n',
            'zh-CN': '搭配「条件渲染」或「循环渲染」时使用，和 react 组件中的 key 原理相同，点击查看帮助',
            'en-US': 'Used with 「Conditional Rendering」or「Cycle Rendering」, the same principle as the key in the react component, click to view the help'
          },
          docUrl: 'https://www.yuque.com/lce/doc/qm75w3'
        },
        setter: [{
          componentName: 'StringSetter'
        }, {
          componentName: 'VariableSetter'
        }],
        extraProps: {
          display: 'block'
        }
      });
    }
  }
  if (advancedGroup.length > 0) {
    combined.push({
      name: '#advanced',
      title: {
        type: 'i18n',
        'zh-CN': '高级',
        'en-US': 'Advanced'
      },
      items: advancedGroup
    });
  }
  return addon_combine_objectSpread(addon_combine_objectSpread(addon_combine_objectSpread({}, metadata), basicInfo), {}, {
    configure: addon_combine_objectSpread(addon_combine_objectSpread({}, configure), {}, {
      combined: combined
    })
  });
});
// CONCATENATED MODULE: ../editor-skeleton/src/register-defaults.ts



var register_defaults_registerDefaults = function registerDefaults(ctx) {
  var material = ctx.material;
  return {
    init: function init() {
      // parseFunc
      material.registerMetadataTransducer(parse_func, 1, 'parse-func');
      // parseProps
      material.registerMetadataTransducer(parse_props, 5, 'parse-props');
      // addon/platform custom
      material.registerMetadataTransducer(addon_combine, 10, 'combine-props');
    }
  };
};
register_defaults_registerDefaults.pluginName = '___register_defaults___';
// CONCATENATED MODULE: ../editor-skeleton/src/widget/index.ts






// CONCATENATED MODULE: ../editor-skeleton/src/layouts/sub-top-area.tsx
function sub_top_area_typeof(o) { "@babel/helpers - typeof"; return sub_top_area_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, sub_top_area_typeof(o); }
function sub_top_area_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function sub_top_area_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, sub_top_area_toPropertyKey(o.key), o); } }
function sub_top_area_createClass(e, r, t) { return r && sub_top_area_defineProperties(e.prototype, r), t && sub_top_area_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function sub_top_area_toPropertyKey(t) { var i = sub_top_area_toPrimitive(t, "string"); return "symbol" == sub_top_area_typeof(i) ? i : i + ""; }
function sub_top_area_toPrimitive(t, r) { if ("object" != sub_top_area_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != sub_top_area_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function sub_top_area_callSuper(t, o, e) { return o = sub_top_area_getPrototypeOf(o), sub_top_area_possibleConstructorReturn(t, sub_top_area_isNativeReflectConstruct() ? Reflect.construct(o, e || [], sub_top_area_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function sub_top_area_possibleConstructorReturn(t, e) { if (e && ("object" == sub_top_area_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return sub_top_area_assertThisInitialized(t); }
function sub_top_area_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function sub_top_area_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (sub_top_area_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function sub_top_area_getPrototypeOf(t) { return sub_top_area_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, sub_top_area_getPrototypeOf(t); }
function sub_top_area_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && sub_top_area_setPrototypeOf(t, e); }
function sub_top_area_setPrototypeOf(t, e) { return sub_top_area_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, sub_top_area_setPrototypeOf(t, e); }




var sub_top_area_SubTopArea = /*#__PURE__*/function (_Component) {
  function SubTopArea() {
    sub_top_area_classCallCheck(this, SubTopArea);
    return sub_top_area_callSuper(this, SubTopArea, arguments);
  }
  sub_top_area_inherits(SubTopArea, _Component);
  return sub_top_area_createClass(SubTopArea, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
        area = _this$props.area,
        itemClassName = _this$props.itemClassName;
      if (area.isEmpty()) {
        return null;
      }
      return /*#__PURE__*/React.createElement("div", {
        className: classnames_default()('lc-workspace-sub-top-area lc-sub-top-area engine-actionpane', {
          'lc-area-visible': area.visible
        })
      }, /*#__PURE__*/React.createElement(sub_top_area_Contents, {
        area: area,
        itemClassName: itemClassName
      }));
    }
  }]);
}(external_window_React_["Component"]);
sub_top_area_SubTopArea = Object(tslib_es6["b" /* __decorate */])([src["observer"]], sub_top_area_SubTopArea);
/* harmony default export */ var sub_top_area = (sub_top_area_SubTopArea);
var sub_top_area_Contents = /*#__PURE__*/function (_Component2) {
  function Contents() {
    sub_top_area_classCallCheck(this, Contents);
    return sub_top_area_callSuper(this, Contents, arguments);
  }
  sub_top_area_inherits(Contents, _Component2);
  return sub_top_area_createClass(Contents, [{
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
        area = _this$props2.area,
        itemClassName = _this$props2.itemClassName;
      var left = [];
      var center = [];
      var right = [];
      area.container.items.slice().sort(function (a, b) {
        var _a$config, _b$config;
        var index1 = ((_a$config = a.config) === null || _a$config === void 0 ? void 0 : _a$config.index) || 0;
        var index2 = ((_b$config = b.config) === null || _b$config === void 0 ? void 0 : _b$config.index) || 0;
        return index1 === index2 ? 0 : index1 > index2 ? 1 : -1;
      }).forEach(function (item) {
        var content = /*#__PURE__*/React.createElement("div", {
          className: itemClassName || '',
          key: "top-area-".concat(item.name)
        }, item.content);
        if (item.align === 'center') {
          center.push(content);
        } else if (item.align === 'left') {
          left.push(content);
        } else {
          right.push(content);
        }
      });
      var children = [];
      if (left && left.length) {
        children.push(/*#__PURE__*/React.createElement("div", {
          className: "lc-workspace-sub-top-area-left lc-sub-top-area-left"
        }, left));
      }
      if (center && center.length) {
        children.push(/*#__PURE__*/React.createElement("div", {
          className: "lc-workspace-sub-top-area-center lc-sub-top-area-center"
        }, center));
      }
      if (right && right.length) {
        children.push(/*#__PURE__*/React.createElement("div", {
          className: "lc-workspace-sub-top-area-right lc-sub-top-area-right"
        }, right));
      }
      return /*#__PURE__*/React.createElement(external_window_React_["Fragment"], null, children);
    }
  }]);
}(external_window_React_["Component"]);
sub_top_area_Contents = Object(tslib_es6["b" /* __decorate */])([src["observer"]], sub_top_area_Contents);
// CONCATENATED MODULE: ../editor-skeleton/src/layouts/index.ts







// CONCATENATED MODULE: ../editor-skeleton/src/index.ts











// CONCATENATED MODULE: ../workspace/src/context/base-context.ts
function base_context_typeof(o) { "@babel/helpers - typeof"; return base_context_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, base_context_typeof(o); }
function base_context_regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return base_context_regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i.return) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (base_context_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, base_context_regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, base_context_regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), base_context_regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", base_context_regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), base_context_regeneratorDefine2(u), base_context_regeneratorDefine2(u, o, "Generator"), base_context_regeneratorDefine2(u, n, function () { return this; }), base_context_regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (base_context_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function base_context_regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } base_context_regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { base_context_regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, base_context_regeneratorDefine2(e, r, n, t); }
function base_context_asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function base_context_asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { base_context_asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { base_context_asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function base_context_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, base_context_toPropertyKey(o.key), o); } }
function base_context_createClass(e, r, t) { return r && base_context_defineProperties(e.prototype, r), t && base_context_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function base_context_toPropertyKey(t) { var i = base_context_toPrimitive(t, "string"); return "symbol" == base_context_typeof(i) ? i : i + ""; }
function base_context_toPrimitive(t, r) { if ("object" != base_context_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != base_context_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function base_context_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }






var base_context_BasicContext = /*#__PURE__*/base_context_createClass(function BasicContext(innerWorkspace, viewName, registerLevel, editorWindow) {
  base_context_classCallCheck(this, BasicContext);
  this.registerLevel = void 0;
  this.editorWindow = void 0;
  this.skeleton = void 0;
  this.plugins = void 0;
  this.project = void 0;
  this.setters = void 0;
  this.material = void 0;
  this.common = void 0;
  this.config = void 0;
  this.event = void 0;
  this.logger = void 0;
  this.hotkey = void 0;
  this.innerProject = void 0;
  this.editor = void 0;
  this.designer = void 0;
  this.registerInnerPlugins = void 0;
  this.innerSetters = void 0;
  this.innerSkeleton = void 0;
  this.innerHotkey = void 0;
  this.innerPlugins = void 0;
  this.canvas = void 0;
  this.pluginEvent = void 0;
  this.preference = void 0;
  this.workspace = void 0;
  this.registerLevel = registerLevel;
  this.editorWindow = editorWindow;
  var editor = new src["Editor"](viewName, true);
  var innerSkeleton = new src_skeleton_Skeleton(editor, viewName);
  editor.set('skeleton', innerSkeleton);
  var designer = new designer_Designer({
    editor: editor,
    viewName: viewName,
    shellModelFactory: innerWorkspace === null || innerWorkspace === void 0 ? void 0 : innerWorkspace.shellModelFactory
  });
  editor.set('designer', designer);
  var innerProject = designer.project;
  var workspace = new workspace_Workspace(innerWorkspace);
  var innerHotkey = new src["Hotkey"](viewName);
  var hotkey = new hotkey_Hotkey(innerHotkey, true);
  var innerSetters = new src["Setters"](viewName);
  var setters = new setters_Setters(innerSetters, true);
  var material = new material_Material(editor, true);
  var project = new api_project_Project(innerProject, true);
  var config = src["engineConfig"];
  var event = new event_Event(src["commonEvent"], {
    prefix: 'common'
  });
  var logger = Object(utils_src["t" /* getLogger */])({
    level: 'warn',
    bizName: 'common'
  });
  var skeleton = new skeleton_Skeleton(innerSkeleton, 'any', true);
  var canvas = new canvas_Canvas(editor, true);
  var commonUI = new commonUI_CommonUI(editor);
  var innerCommand = new src["Command"]();
  editor.set('setters', setters);
  editor.set('project', project);
  editor.set('material', material);
  editor.set('hotkey', hotkey);
  editor.set('innerHotkey', innerHotkey);
  this.innerSetters = innerSetters;
  this.innerSkeleton = innerSkeleton;
  this.skeleton = skeleton;
  this.innerProject = innerProject;
  this.project = project;
  this.setters = setters;
  this.material = material;
  this.config = config;
  this.event = event;
  this.logger = logger;
  this.hotkey = hotkey;
  this.innerHotkey = innerHotkey;
  this.editor = editor;
  this.designer = designer;
  this.canvas = canvas;
  var common = new common_Common(editor, innerSkeleton);
  this.common = common;
  var plugins;
  var pluginContextApiAssembler = {
    assembleApis: function assembleApis(context, pluginName, meta) {
      context.workspace = workspace;
      context.hotkey = hotkey;
      context.project = project;
      context.skeleton = new skeleton_Skeleton(innerSkeleton, pluginName, true);
      context.setters = setters;
      context.material = material;
      var eventPrefix = (meta === null || meta === void 0 ? void 0 : meta.eventPrefix) || 'common';
      var commandScope = meta === null || meta === void 0 ? void 0 : meta.commandScope;
      context.event = new event_Event(src["commonEvent"], {
        prefix: eventPrefix
      });
      context.config = config;
      context.common = common;
      context.plugins = plugins;
      context.logger = new logger_Logger({
        level: 'warn',
        bizName: "plugin:".concat(pluginName)
      });
      context.canvas = canvas;
      context.commonUI = commonUI;
      if (editorWindow) {
        context.editorWindow = new window_Window(editorWindow);
      }
      context.command = new command_Command(innerCommand, context, {
        commandScope: commandScope
      });
      context.registerLevel = registerLevel;
      context.isPluginRegisteredInWorkspace = registerLevel === types_src["h" /* IPublicEnumPluginRegisterLevel */].Workspace;
      editor.set('pluginContext', context);
    }
  };
  var innerPlugins = new plugin_manager_LowCodePluginManager(pluginContextApiAssembler, viewName);
  this.innerPlugins = innerPlugins;
  plugins = new plugins_Plugins(innerPlugins, true).toProxy();
  editor.set('plugins', plugins);
  editor.set('innerPlugins', innerPlugins);
  this.plugins = plugins;
  // 注册一批内置插件
  this.registerInnerPlugins = /*#__PURE__*/function () {
    var _registerPlugins = base_context_asyncToGenerator(/*#__PURE__*/base_context_regenerator().m(function _callee() {
      return base_context_regenerator().w(function (_context) {
        while (1) switch (_context.n) {
          case 0:
            _context.n = 1;
            return innerWorkspace === null || innerWorkspace === void 0 ? void 0 : innerWorkspace.registryInnerPlugin(designer, editor, plugins);
          case 1:
            return _context.a(2);
        }
      }, _callee);
    }));
    function registerPlugins() {
      return _registerPlugins.apply(this, arguments);
    }
    return registerPlugins;
  }();
});
// EXTERNAL MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/mobx/dist/mobx.esm.js
var mobx_esm = __webpack_require__(7);

// CONCATENATED MODULE: ../workspace/src/inner-plugins/webview.tsx
function webview_DesignerView(props) {
  return /*#__PURE__*/React.createElement("div", {
    className: "lc-designer lowcode-plugin-designer"
  }, /*#__PURE__*/React.createElement("div", {
    className: "lc-project"
  }, /*#__PURE__*/React.createElement("div", {
    className: "lc-simulator-shell"
  }, /*#__PURE__*/React.createElement("iframe", {
    name: "webview-view-".concat(props.viewName),
    className: "lc-simulator-content-frame",
    style: {
      height: '100%',
      width: '100%'
    },
    src: props.url
  }))));
}
function getWebviewPlugin(url, viewName) {
  function webviewPlugin(ctx) {
    var skeleton = ctx.skeleton;
    return {
      init: function init() {
        skeleton.add({
          area: 'mainArea',
          name: 'designer',
          type: 'Widget',
          content: webview_DesignerView,
          contentProps: {
            ctx: ctx,
            url: url,
            viewName: viewName
          }
        });
      }
    };
  }
  webviewPlugin.pluginName = '___webview_plugin___';
  return webviewPlugin;
}
// CONCATENATED MODULE: ../workspace/src/context/view-context.ts
function view_context_typeof(o) { "@babel/helpers - typeof"; return view_context_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, view_context_typeof(o); }
function view_context_asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function view_context_asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { view_context_asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { view_context_asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function view_context_regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return view_context_regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i.return) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (view_context_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, view_context_regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, view_context_regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), view_context_regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", view_context_regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), view_context_regeneratorDefine2(u), view_context_regeneratorDefine2(u, o, "Generator"), view_context_regeneratorDefine2(u, n, function () { return this; }), view_context_regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (view_context_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function view_context_regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } view_context_regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { view_context_regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, view_context_regeneratorDefine2(e, r, n, t); }
function view_context_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function view_context_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, view_context_toPropertyKey(o.key), o); } }
function view_context_createClass(e, r, t) { return r && view_context_defineProperties(e.prototype, r), t && view_context_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function view_context_toPropertyKey(t) { var i = view_context_toPrimitive(t, "string"); return "symbol" == view_context_typeof(i) ? i : i + ""; }
function view_context_toPrimitive(t, r) { if ("object" != view_context_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != view_context_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function view_context_callSuper(t, o, e) { return o = view_context_getPrototypeOf(o), view_context_possibleConstructorReturn(t, view_context_isNativeReflectConstruct() ? Reflect.construct(o, e || [], view_context_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function view_context_possibleConstructorReturn(t, e) { if (e && ("object" == view_context_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return view_context_assertThisInitialized(t); }
function view_context_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function view_context_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (view_context_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function view_context_getPrototypeOf(t) { return view_context_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, view_context_getPrototypeOf(t); }
function view_context_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && view_context_setPrototypeOf(t, e); }
function view_context_setPrototypeOf(t, e) { return view_context_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, view_context_setPrototypeOf(t, e); }






var view_context_Context = /*#__PURE__*/function (_BasicContext) {
  function Context(workspace, editorWindow, editorView, options) {
    var _this;
    view_context_classCallCheck(this, Context);
    _this = view_context_callSuper(this, Context, [workspace, editorView.viewName, types_src["h" /* IPublicEnumPluginRegisterLevel */].EditorView, editorWindow]);
    _this.workspace = void 0;
    _this.editorWindow = void 0;
    _this.editorView = void 0;
    _this.viewName = 'editor-view';
    _this.instance = void 0;
    _this.viewType = void 0;
    _this._activate = false;
    _this.isInit = false;
    _this.init = Object(mobx_esm["flow"])(/*#__PURE__*/view_context_regenerator().m(function _callee() {
      var _this$instance2, _this$instance2$init;
      var _this$instance, _this$instance$url, url;
      return view_context_regenerator().w(function (_context) {
        while (1) switch (_context.n) {
          case 0:
            if (!(this.viewType === 'webview')) {
              _context.n = 3;
              break;
            }
            _context.n = 1;
            return (_this$instance = this.instance) === null || _this$instance === void 0 ? void 0 : (_this$instance$url = _this$instance.url) === null || _this$instance$url === void 0 ? void 0 : _this$instance$url.call(_this$instance);
          case 1:
            url = _context.v;
            _context.n = 2;
            return this.plugins.register(getWebviewPlugin(url, this.viewName));
          case 2:
            _context.n = 4;
            break;
          case 3:
            _context.n = 4;
            return this.registerInnerPlugins();
          case 4:
            _context.n = 5;
            return (_this$instance2 = this.instance) === null || _this$instance2 === void 0 ? void 0 : (_this$instance2$init = _this$instance2.init) === null || _this$instance2$init === void 0 ? void 0 : _this$instance2$init.call(_this$instance2);
          case 5:
            _context.n = 6;
            return this.innerPlugins.init();
          case 6:
            this.isInit = true;
          case 7:
            return _context.a(2);
        }
      }, _callee, this);
    }));
    _this.onSimulatorRendererReady = function () {
      return new Promise(function (resolve) {
        _this.project.onSimulatorRendererReady(function () {
          resolve();
        });
      });
    };
    _this.setActivate = function (_activate) {
      _this._activate = _activate;
      _this.innerHotkey.activate(_this._activate);
    };
    _this.workspace = workspace;
    _this.editorWindow = editorWindow;
    _this.editorView = editorView;
    _this.viewType = editorView.viewType || 'editor';
    _this.viewName = editorView.viewName;
    _this.instance = editorView(_this.innerPlugins._getLowCodePluginContext({
      pluginName: 'any'
    }), options);
    Object(src["makeObservable"])(_this);
    return _this;
  }
  view_context_inherits(Context, _BasicContext);
  return view_context_createClass(Context, [{
    key: "active",
    get: function get() {
      return this._activate;
    }
  }, {
    key: "save",
    value: function () {
      var _save = view_context_asyncToGenerator(/*#__PURE__*/view_context_regenerator().m(function _callee2() {
        var _this$instance3, _this$instance3$save;
        return view_context_regenerator().w(function (_context2) {
          while (1) switch (_context2.n) {
            case 0:
              _context2.n = 1;
              return (_this$instance3 = this.instance) === null || _this$instance3 === void 0 ? void 0 : (_this$instance3$save = _this$instance3.save) === null || _this$instance3$save === void 0 ? void 0 : _this$instance3$save.call(_this$instance3);
            case 1:
              return _context2.a(2, _context2.v);
          }
        }, _callee2, this);
      }));
      function save() {
        return _save.apply(this, arguments);
      }
      return save;
    }()
  }]);
}(base_context_BasicContext);
Object(tslib_es6["b" /* __decorate */])([src["obx"], Object(tslib_es6["d" /* __metadata */])("design:type", Object)], view_context_Context.prototype, "_activate", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"], Object(tslib_es6["d" /* __metadata */])("design:type", Boolean)], view_context_Context.prototype, "isInit", void 0);
Object(tslib_es6["b" /* __decorate */])([src["computed"], Object(tslib_es6["d" /* __metadata */])("design:type", Object), Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [])], view_context_Context.prototype, "active", null);
// CONCATENATED MODULE: ../workspace/src/window.ts
function src_window_typeof(o) { "@babel/helpers - typeof"; return src_window_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, src_window_typeof(o); }
function src_window_regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return src_window_regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i.return) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (src_window_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, src_window_regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, src_window_regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), src_window_regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", src_window_regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), src_window_regeneratorDefine2(u), src_window_regeneratorDefine2(u, o, "Generator"), src_window_regeneratorDefine2(u, n, function () { return this; }), src_window_regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (src_window_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function src_window_regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } src_window_regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { src_window_regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, src_window_regeneratorDefine2(e, r, n, t); }
function src_window_asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function src_window_asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { src_window_asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { src_window_asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function src_window_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function src_window_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, src_window_toPropertyKey(o.key), o); } }
function src_window_createClass(e, r, t) { return r && src_window_defineProperties(e.prototype, r), t && src_window_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function src_window_toPropertyKey(t) { var i = src_window_toPrimitive(t, "string"); return "symbol" == src_window_typeof(i) ? i : i + ""; }
function src_window_toPrimitive(t, r) { if ("object" != src_window_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != src_window_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var window_a, window_b;




var WINDOW_STATE;
(function (WINDOW_STATE) {
  // 睡眠
  WINDOW_STATE["sleep"] = "sleep";
  // 激活
  WINDOW_STATE["active"] = "active";
  // 未激活
  WINDOW_STATE["inactive"] = "inactive";
  // 销毁
  WINDOW_STATE["destroyed"] = "destroyed";
})(WINDOW_STATE || (WINDOW_STATE = {}));
var window_EditorWindow = /*#__PURE__*/function () {
  function EditorWindow(resource, workspace, config) {
    var _this = this;
    src_window_classCallCheck(this, EditorWindow);
    this.resource = void 0;
    this.workspace = void 0;
    this.config = void 0;
    this.id = Object(utils_src["ib" /* uniqueId */])('window');
    this.icon = void 0;
    this.emitter = Object(src["createModuleEventBus"])('Project');
    this.title = void 0;
    this.url = void 0;
    this._editorView = void 0;
    this.editorViews = new Map();
    this.initReady = false;
    this.sleep = void 0;
    this.initViewTypes = /*#__PURE__*/src_window_asyncToGenerator(/*#__PURE__*/src_window_regenerator().m(function _callee() {
      var editorViews, i, name;
      return src_window_regenerator().w(function (_context) {
        while (1) switch (_context.n) {
          case 0:
            editorViews = _this.resource.editorViews;
            if (editorViews) {
              _context.n = 1;
              break;
            }
            return _context.a(2);
          case 1:
            i = 0;
          case 2:
            if (!(i < editorViews.length)) {
              _context.n = 5;
              break;
            }
            name = editorViews[i].viewName;
            _context.n = 3;
            return _this.initViewType(name);
          case 3:
            if (!_this._editorView) {
              _this.changeViewName(name);
            }
          case 4:
            i++;
            _context.n = 2;
            break;
          case 5:
            return _context.a(2);
        }
      }, _callee);
    }));
    this.execViewTypesInit = /*#__PURE__*/src_window_asyncToGenerator(/*#__PURE__*/src_window_regenerator().m(function _callee2() {
      var editorViews, i, _this$editorViews$get, name;
      return src_window_regenerator().w(function (_context2) {
        while (1) switch (_context2.n) {
          case 0:
            editorViews = _this.resource.editorViews;
            if (editorViews) {
              _context2.n = 1;
              break;
            }
            return _context2.a(2);
          case 1:
            i = 0;
          case 2:
            if (!(i < editorViews.length)) {
              _context2.n = 4;
              break;
            }
            name = editorViews[i].viewName;
            _this.changeViewName(name);
            _context2.n = 3;
            return (_this$editorViews$get = _this.editorViews.get(name)) === null || _this$editorViews$get === void 0 ? void 0 : _this$editorViews$get.init();
          case 3:
            i++;
            _context2.n = 2;
            break;
          case 4:
            return _context2.a(2);
        }
      }, _callee2);
    }));
    this.setDefaultViewName = function () {
      var _this$config$viewName;
      _this.changeViewName((_this$config$viewName = _this.config.viewName) !== null && _this$config$viewName !== void 0 ? _this$config$viewName : _this.resource.defaultViewName);
    };
    this.initViewType = /*#__PURE__*/function () {
      var _ref3 = src_window_asyncToGenerator(/*#__PURE__*/src_window_regenerator().m(function _callee3(name) {
        var viewInfo, editorView;
        return src_window_regenerator().w(function (_context3) {
          while (1) switch (_context3.n) {
            case 0:
              viewInfo = _this.resource.getEditorView(name);
              if (!_this.editorViews.get(name)) {
                _context3.n = 1;
                break;
              }
              return _context3.a(2);
            case 1:
              editorView = new view_context_Context(_this.workspace, _this, viewInfo, _this.config.options);
              _this.editorViews.set(name, editorView);
            case 2:
              return _context3.a(2);
          }
        }, _callee3);
      }));
      return function (_x) {
        return _ref3.apply(this, arguments);
      };
    }();
    this.changeViewName = function (name) {
      var _this$_editorView;
      var ignoreEmit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      (_this$_editorView = _this._editorView) === null || _this$_editorView === void 0 ? void 0 : _this$_editorView.setActivate(false);
      _this._editorView = _this.editorViews.get(name);
      if (!_this._editorView) {
        return;
      }
      _this._editorView.setActivate(true);
      if (!ignoreEmit) {
        _this.emitter.emit('window.change.view.type', name);
        if (_this.id === _this.workspace.window.id) {
          _this.workspace.emitChangeActiveEditorView();
        }
      }
    };
    this.resource = resource;
    this.workspace = workspace;
    this.config = config;
    Object(src["makeObservable"])(this);
    this.title = config.title;
    this.icon = resource.icon;
    this.sleep = config.sleep;
    if (config.sleep) {
      this.updateState(WINDOW_STATE.sleep);
    }
  }
  return src_window_createClass(EditorWindow, [{
    key: "editorView",
    get: function get() {
      if (!this._editorView) {
        return this.editorViews.values().next().value;
      }
      return this._editorView;
    }
  }, {
    key: "updateState",
    value: function updateState(state) {
      var _this$_editorView2, _this$_editorView3;
      switch (state) {
        case WINDOW_STATE.active:
          (_this$_editorView2 = this._editorView) === null || _this$_editorView2 === void 0 ? void 0 : _this$_editorView2.setActivate(true);
          break;
        case WINDOW_STATE.inactive:
          (_this$_editorView3 = this._editorView) === null || _this$_editorView3 === void 0 ? void 0 : _this$_editorView3.setActivate(false);
          break;
        case WINDOW_STATE.destroyed:
          break;
      }
    }
  }, {
    key: "importSchema",
    value: function () {
      var _importSchema = src_window_asyncToGenerator(/*#__PURE__*/src_window_regenerator().m(function _callee4(schema) {
        var _this2 = this;
        var newSchema;
        return src_window_regenerator().w(function (_context4) {
          while (1) switch (_context4.n) {
            case 0:
              _context4.n = 1;
              return this.resource.import(schema);
            case 1:
              newSchema = _context4.v;
              if (newSchema) {
                _context4.n = 2;
                break;
              }
              return _context4.a(2);
            case 2:
              Object.keys(newSchema).forEach(function (key) {
                var view = _this2.editorViews.get(key);
                view === null || view === void 0 ? void 0 : view.project.importSchema(newSchema[key]);
              });
            case 3:
              return _context4.a(2);
          }
        }, _callee4, this);
      }));
      function importSchema(_x2) {
        return _importSchema.apply(this, arguments);
      }
      return importSchema;
    }()
  }, {
    key: "save",
    value: function () {
      var _save = src_window_asyncToGenerator(/*#__PURE__*/src_window_regenerator().m(function _callee5() {
        var value, editorViews, i, _this$editorViews$get2, name, saveResult, result;
        return src_window_regenerator().w(function (_context5) {
          while (1) switch (_context5.n) {
            case 0:
              value = {};
              editorViews = this.resource.editorViews;
              if (editorViews) {
                _context5.n = 1;
                break;
              }
              return _context5.a(2);
            case 1:
              i = 0;
            case 2:
              if (!(i < editorViews.length)) {
                _context5.n = 5;
                break;
              }
              name = editorViews[i].viewName;
              _context5.n = 3;
              return (_this$editorViews$get2 = this.editorViews.get(name)) === null || _this$editorViews$get2 === void 0 ? void 0 : _this$editorViews$get2.save();
            case 3:
              saveResult = _context5.v;
              value[name] = saveResult;
            case 4:
              i++;
              _context5.n = 2;
              break;
            case 5:
              _context5.n = 6;
              return this.resource.save(value);
            case 6:
              result = _context5.v;
              this.emitter.emit('handle.save');
              return _context5.a(2, result);
          }
        }, _callee5, this);
      }));
      function save() {
        return _save.apply(this, arguments);
      }
      return save;
    }()
  }, {
    key: "onSave",
    value: function onSave(fn) {
      var _this3 = this;
      this.emitter.on('handle.save', fn);
      return function () {
        _this3.emitter.off('handle.save', fn);
      };
    }
  }, {
    key: "init",
    value: function () {
      var _init = src_window_asyncToGenerator(/*#__PURE__*/src_window_regenerator().m(function _callee6() {
        var _this4 = this;
        return src_window_regenerator().w(function (_context6) {
          while (1) switch (_context6.n) {
            case 0:
              _context6.n = 1;
              return this.initViewTypes();
            case 1:
              _context6.n = 2;
              return this.execViewTypesInit();
            case 2:
              Promise.all(Array.from(this.editorViews.values()).map(function (d) {
                return d.onSimulatorRendererReady();
              })).then(function () {
                _this4.workspace.emitWindowRendererReady();
              });
              _context6.n = 3;
              return this.resource.url();
            case 3:
              this.url = _context6.v;
              this.setDefaultViewName();
              this.initReady = true;
              this.workspace.checkWindowQueue();
              this.sleep = false;
              this.updateState(WINDOW_STATE.active);
            case 4:
              return _context6.a(2);
          }
        }, _callee6, this);
      }));
      function init() {
        return _init.apply(this, arguments);
      }
      return init;
    }()
  }, {
    key: "onChangeViewType",
    value: function onChangeViewType(fn) {
      var _this5 = this;
      this.emitter.on('window.change.view.type', fn);
      return function () {
        _this5.emitter.off('window.change.view.type', fn);
      };
    }
  }, {
    key: "resourceType",
    get: function get() {
      return this.resource.resourceType.type;
    }
  }, {
    key: "project",
    get: function get() {
      var _this$editorView;
      return (_this$editorView = this.editorView) === null || _this$editorView === void 0 ? void 0 : _this$editorView.project;
    }
  }, {
    key: "innerProject",
    get: function get() {
      var _this$editorView2;
      return (_this$editorView2 = this.editorView) === null || _this$editorView2 === void 0 ? void 0 : _this$editorView2.innerProject;
    }
  }, {
    key: "innerSkeleton",
    get: function get() {
      var _this$editorView3;
      return (_this$editorView3 = this.editorView) === null || _this$editorView3 === void 0 ? void 0 : _this$editorView3.innerSkeleton;
    }
  }, {
    key: "innerSetters",
    get: function get() {
      var _this$editorView4;
      return (_this$editorView4 = this.editorView) === null || _this$editorView4 === void 0 ? void 0 : _this$editorView4.innerSetters;
    }
  }, {
    key: "innerHotkey",
    get: function get() {
      var _this$editorView5;
      return (_this$editorView5 = this.editorView) === null || _this$editorView5 === void 0 ? void 0 : _this$editorView5.innerHotkey;
    }
  }, {
    key: "editor",
    get: function get() {
      var _this$editorView6;
      return (_this$editorView6 = this.editorView) === null || _this$editorView6 === void 0 ? void 0 : _this$editorView6.editor;
    }
  }, {
    key: "designer",
    get: function get() {
      var _this$editorView7;
      return (_this$editorView7 = this.editorView) === null || _this$editorView7 === void 0 ? void 0 : _this$editorView7.designer;
    }
  }, {
    key: "plugins",
    get: function get() {
      var _this$editorView8;
      return (_this$editorView8 = this.editorView) === null || _this$editorView8 === void 0 ? void 0 : _this$editorView8.plugins;
    }
  }, {
    key: "innerPlugins",
    get: function get() {
      var _this$editorView9;
      return (_this$editorView9 = this.editorView) === null || _this$editorView9 === void 0 ? void 0 : _this$editorView9.innerPlugins;
    }
  }]);
}();
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", typeof (window_a = typeof view_context_Context !== "undefined" && view_context_Context) === "function" ? window_a : Object)], window_EditorWindow.prototype, "_editorView", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"], Object(tslib_es6["d" /* __metadata */])("design:type", typeof (window_b = typeof Map !== "undefined" && Map) === "function" ? window_b : Object)], window_EditorWindow.prototype, "editorViews", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"], Object(tslib_es6["d" /* __metadata */])("design:type", Object)], window_EditorWindow.prototype, "initReady", void 0);
// CONCATENATED MODULE: ../workspace/src/resource.ts
function src_resource_typeof(o) { "@babel/helpers - typeof"; return src_resource_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, src_resource_typeof(o); }
function resource_regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return resource_regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i.return) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (resource_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, resource_regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, resource_regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), resource_regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", resource_regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), resource_regeneratorDefine2(u), resource_regeneratorDefine2(u, o, "Generator"), resource_regeneratorDefine2(u, n, function () { return this; }), resource_regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (resource_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function resource_regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } resource_regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { resource_regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, resource_regeneratorDefine2(e, r, n, t); }
function resource_asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function resource_asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { resource_asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { resource_asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function src_resource_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function src_resource_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, src_resource_toPropertyKey(o.key), o); } }
function src_resource_createClass(e, r, t) { return r && src_resource_defineProperties(e.prototype, r), t && src_resource_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function src_resource_toPropertyKey(t) { var i = src_resource_toPrimitive(t, "string"); return "symbol" == src_resource_typeof(i) ? i : i + ""; }
function src_resource_toPrimitive(t, r) { if ("object" != src_resource_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != src_resource_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }



var resource_logger = new utils_src["e" /* Logger */]({
  level: 'warn',
  bizName: 'workspace:resource'
});
var src_resource_Resource = /*#__PURE__*/function () {
  function Resource(resourceData, resourceType, workspace) {
    var _this = this,
      _this$resourceData,
      _this$resourceData$ch;
    src_resource_classCallCheck(this, Resource);
    this.resourceData = void 0;
    this.resourceType = void 0;
    this.workspace = void 0;
    this.context = void 0;
    this.resourceTypeInstance = void 0;
    this.editorViewMap = new Map();
    this.children = void 0;
    this.resourceData = resourceData;
    this.resourceType = resourceType;
    this.workspace = workspace;
    this.context = new base_context_BasicContext(workspace, "resource-".concat(resourceData.resourceName || resourceType.name), types_src["h" /* IPublicEnumPluginRegisterLevel */].Resource);
    this.resourceTypeInstance = resourceType.resourceTypeModel(this.context.innerPlugins._getLowCodePluginContext({
      pluginName: ''
    }), this.options);
    this.init();
    if (this.resourceTypeInstance.editorViews) {
      this.resourceTypeInstance.editorViews.forEach(function (d) {
        _this.editorViewMap.set(d.viewName, d);
      });
    }
    if (!resourceType) {
      resource_logger.error("resourceType[".concat(resourceType, "] is unValid."));
    }
    this.children = ((_this$resourceData = this.resourceData) === null || _this$resourceData === void 0 ? void 0 : (_this$resourceData$ch = _this$resourceData.children) === null || _this$resourceData$ch === void 0 ? void 0 : _this$resourceData$ch.map(function (d) {
      return new Resource(d, _this.workspace.getResourceType(d.resourceName || _this.resourceType.name), _this.workspace);
    })) || [];
  }
  return src_resource_createClass(Resource, [{
    key: "name",
    get: function get() {
      return this.resourceType.name;
    }
  }, {
    key: "viewName",
    get: function get() {
      return this.resourceData.viewName || this.resourceData.viewType || this.defaultViewName;
    }
  }, {
    key: "description",
    get: function get() {
      var _this$resourceTypeIns;
      return (_this$resourceTypeIns = this.resourceTypeInstance) === null || _this$resourceTypeIns === void 0 ? void 0 : _this$resourceTypeIns.description;
    }
  }, {
    key: "icon",
    get: function get() {
      var _this$resourceTypeIns2;
      return this.resourceData.icon || ((_this$resourceTypeIns2 = this.resourceTypeInstance) === null || _this$resourceTypeIns2 === void 0 ? void 0 : _this$resourceTypeIns2.icon);
    }
  }, {
    key: "type",
    get: function get() {
      return this.resourceType.type;
    }
  }, {
    key: "title",
    get: function get() {
      return this.resourceData.title || this.resourceTypeInstance.defaultTitle;
    }
  }, {
    key: "id",
    get: function get() {
      return this.resourceData.id;
    }
  }, {
    key: "options",
    get: function get() {
      return this.resourceData.options;
    }
  }, {
    key: "category",
    get: function get() {
      var _this$resourceData2;
      return (_this$resourceData2 = this.resourceData) === null || _this$resourceData2 === void 0 ? void 0 : _this$resourceData2.category;
    }
  }, {
    key: "skeleton",
    get: function get() {
      return this.context.innerSkeleton;
    }
  }, {
    key: "config",
    get: function get() {
      return this.resourceData.config;
    }
  }, {
    key: "init",
    value: function () {
      var _init = resource_asyncToGenerator(/*#__PURE__*/resource_regenerator().m(function _callee() {
        var _this$resourceTypeIns3, _this$resourceTypeIns4;
        return resource_regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              _context.n = 1;
              return (_this$resourceTypeIns3 = (_this$resourceTypeIns4 = this.resourceTypeInstance).init) === null || _this$resourceTypeIns3 === void 0 ? void 0 : _this$resourceTypeIns3.call(_this$resourceTypeIns4);
            case 1:
              _context.n = 2;
              return this.context.innerPlugins.init();
            case 2:
              return _context.a(2);
          }
        }, _callee, this);
      }));
      function init() {
        return _init.apply(this, arguments);
      }
      return init;
    }()
  }, {
    key: "import",
    value: function () {
      var _import2 = resource_asyncToGenerator(/*#__PURE__*/resource_regenerator().m(function _callee2(schema) {
        var _this$resourceTypeIns5, _this$resourceTypeIns6;
        return resource_regenerator().w(function (_context2) {
          while (1) switch (_context2.n) {
            case 0:
              _context2.n = 1;
              return (_this$resourceTypeIns5 = (_this$resourceTypeIns6 = this.resourceTypeInstance).import) === null || _this$resourceTypeIns5 === void 0 ? void 0 : _this$resourceTypeIns5.call(_this$resourceTypeIns6, schema);
            case 1:
              return _context2.a(2, _context2.v);
          }
        }, _callee2, this);
      }));
      function _import(_x) {
        return _import2.apply(this, arguments);
      }
      return _import;
    }()
  }, {
    key: "url",
    value: function () {
      var _url = resource_asyncToGenerator(/*#__PURE__*/resource_regenerator().m(function _callee3() {
        var _this$resourceTypeIns7, _this$resourceTypeIns8;
        return resource_regenerator().w(function (_context3) {
          while (1) switch (_context3.n) {
            case 0:
              _context3.n = 1;
              return (_this$resourceTypeIns7 = (_this$resourceTypeIns8 = this.resourceTypeInstance).url) === null || _this$resourceTypeIns7 === void 0 ? void 0 : _this$resourceTypeIns7.call(_this$resourceTypeIns8);
            case 1:
              return _context3.a(2, _context3.v);
          }
        }, _callee3, this);
      }));
      function url() {
        return _url.apply(this, arguments);
      }
      return url;
    }()
  }, {
    key: "save",
    value: function () {
      var _save = resource_asyncToGenerator(/*#__PURE__*/resource_regenerator().m(function _callee4(value) {
        var _this$resourceTypeIns9, _this$resourceTypeIns0;
        return resource_regenerator().w(function (_context4) {
          while (1) switch (_context4.n) {
            case 0:
              _context4.n = 1;
              return (_this$resourceTypeIns9 = (_this$resourceTypeIns0 = this.resourceTypeInstance).save) === null || _this$resourceTypeIns9 === void 0 ? void 0 : _this$resourceTypeIns9.call(_this$resourceTypeIns0, value);
            case 1:
              return _context4.a(2, _context4.v);
          }
        }, _callee4, this);
      }));
      function save(_x2) {
        return _save.apply(this, arguments);
      }
      return save;
    }()
  }, {
    key: "editorViews",
    get: function get() {
      return this.resourceTypeInstance.editorViews;
    }
  }, {
    key: "defaultViewName",
    get: function get() {
      return this.resourceTypeInstance.defaultViewName || this.resourceTypeInstance.defaultViewType;
    }
  }, {
    key: "getEditorView",
    value: function getEditorView(name) {
      return this.editorViewMap.get(name);
    }
  }]);
}();
// CONCATENATED MODULE: ../workspace/src/resource-type.ts
function resource_type_typeof(o) { "@babel/helpers - typeof"; return resource_type_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, resource_type_typeof(o); }
function resource_type_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function resource_type_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, resource_type_toPropertyKey(o.key), o); } }
function resource_type_createClass(e, r, t) { return r && resource_type_defineProperties(e.prototype, r), t && resource_type_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function resource_type_toPropertyKey(t) { var i = resource_type_toPrimitive(t, "string"); return "symbol" == resource_type_typeof(i) ? i : i + ""; }
function resource_type_toPrimitive(t, r) { if ("object" != resource_type_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != resource_type_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var ResourceType = /*#__PURE__*/function () {
  function ResourceType(resourceTypeModel) {
    resource_type_classCallCheck(this, ResourceType);
    this.resourceTypeModel = void 0;
    this.resourceTypeModel = resourceTypeModel;
  }
  return resource_type_createClass(ResourceType, [{
    key: "name",
    get: function get() {
      return this.resourceTypeModel.resourceName;
    }
  }, {
    key: "type",
    get: function get() {
      return this.resourceTypeModel.resourceType;
    }
  }]);
}();
// CONCATENATED MODULE: ../workspace/src/workspace.ts
function src_workspace_typeof(o) { "@babel/helpers - typeof"; return src_workspace_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, src_workspace_typeof(o); }
function src_workspace_regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return src_workspace_regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i.return) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (src_workspace_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, src_workspace_regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, src_workspace_regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), src_workspace_regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", src_workspace_regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), src_workspace_regeneratorDefine2(u), src_workspace_regeneratorDefine2(u, o, "Generator"), src_workspace_regeneratorDefine2(u, n, function () { return this; }), src_workspace_regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (src_workspace_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function src_workspace_regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } src_workspace_regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { src_workspace_regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, src_workspace_regeneratorDefine2(e, r, n, t); }
function workspace_toConsumableArray(r) { return workspace_arrayWithoutHoles(r) || workspace_iterableToArray(r) || workspace_unsupportedIterableToArray(r) || workspace_nonIterableSpread(); }
function workspace_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function workspace_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return workspace_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? workspace_arrayLikeToArray(r, a) : void 0; } }
function workspace_iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function workspace_arrayWithoutHoles(r) { if (Array.isArray(r)) return workspace_arrayLikeToArray(r); }
function workspace_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function src_workspace_asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function src_workspace_asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { src_workspace_asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { src_workspace_asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function src_workspace_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function src_workspace_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, src_workspace_toPropertyKey(o.key), o); } }
function src_workspace_createClass(e, r, t) { return r && src_workspace_defineProperties(e.prototype, r), t && src_workspace_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function src_workspace_toPropertyKey(t) { var i = src_workspace_toPrimitive(t, "string"); return "symbol" == src_workspace_typeof(i) ? i : i + ""; }
function src_workspace_toPrimitive(t, r) { if ("object" != src_workspace_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != src_workspace_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }







var EVENT;
(function (EVENT) {
  EVENT["CHANGE_WINDOW"] = "change_window";
  EVENT["CHANGE_ACTIVE_WINDOW"] = "change_active_window";
  EVENT["WINDOW_RENDER_READY"] = "window_render_ready";
  EVENT["CHANGE_ACTIVE_EDITOR_VIEW"] = "change_active_editor_view";
})(EVENT || (EVENT = {}));
var CHANGE_EVENT = 'resource.list.change';
var src_workspace_Workspace = /*#__PURE__*/function () {
  function Workspace(registryInnerPlugin, shellModelFactory) {
    src_workspace_classCallCheck(this, Workspace);
    this.registryInnerPlugin = void 0;
    this.shellModelFactory = void 0;
    this.context = void 0;
    this.enableAutoOpenFirstWindow = void 0;
    this.resourceTypeMap = new Map();
    this.emitter = Object(src["createModuleEventBus"])('workspace');
    this._isActive = false;
    this.resourceList = [];
    this.windows = [];
    this.editorWindowMap = new Map();
    this.window = void 0;
    this.windowQueue = [];
    this.registryInnerPlugin = registryInnerPlugin;
    this.shellModelFactory = shellModelFactory;
    this.context = new base_context_BasicContext(this, '', types_src["h" /* IPublicEnumPluginRegisterLevel */].Workspace);
    this.context.innerHotkey.activate(true);
    Object(src["makeObservable"])(this);
  }
  return src_workspace_createClass(Workspace, [{
    key: "skeleton",
    get: function get() {
      return this.context.innerSkeleton;
    }
  }, {
    key: "plugins",
    get: function get() {
      return this.context.innerPlugins;
    }
  }, {
    key: "isActive",
    get: function get() {
      return this._isActive;
    }
  }, {
    key: "defaultResourceType",
    get: function get() {
      if (this.resourceTypeMap.size >= 1) {
        return Array.from(this.resourceTypeMap.values())[0];
      }
      return null;
    }
  }, {
    key: "checkWindowQueue",
    value: function checkWindowQueue() {
      if (!this.windowQueue || !this.windowQueue.length) {
        return;
      }
      var windowInfo = this.windowQueue.shift();
      if (windowInfo instanceof src_resource_Resource) {
        this.openEditorWindowByResource(windowInfo);
      } else if (windowInfo) {
        this.openEditorWindow(windowInfo.name, windowInfo.title, windowInfo.options, windowInfo.viewName);
      }
    }
  }, {
    key: "initWindow",
    value: function () {
      var _initWindow = src_workspace_asyncToGenerator(/*#__PURE__*/src_workspace_regenerator().m(function _callee() {
        var resourceName, resource;
        return src_workspace_regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              if (!(!this.defaultResourceType || this.enableAutoOpenFirstWindow === false)) {
                _context.n = 1;
                break;
              }
              return _context.a(2);
            case 1:
              resourceName = this.defaultResourceType.name;
              resource = new src_resource_Resource({
                resourceName: resourceName,
                options: {}
              }, this.defaultResourceType, this);
              this.window = new window_EditorWindow(resource, this, {
                title: resource.title
              });
              _context.n = 2;
              return this.window.init();
            case 2:
              this.editorWindowMap.set(this.window.id, this.window);
              this.windows = [].concat(workspace_toConsumableArray(this.windows), [this.window]);
              this.emitChangeWindow();
              this.emitChangeActiveWindow();
            case 3:
              return _context.a(2);
          }
        }, _callee, this);
      }));
      function initWindow() {
        return _initWindow.apply(this, arguments);
      }
      return initWindow;
    }()
  }, {
    key: "setActive",
    value: function setActive(value) {
      this._isActive = value;
    }
  }, {
    key: "registerResourceType",
    value: function () {
      var _registerResourceType = src_workspace_asyncToGenerator(/*#__PURE__*/src_workspace_regenerator().m(function _callee2(resourceTypeModel) {
        var resourceType;
        return src_workspace_regenerator().w(function (_context2) {
          while (1) switch (_context2.n) {
            case 0:
              resourceType = new ResourceType(resourceTypeModel);
              this.resourceTypeMap.set(resourceTypeModel.resourceName, resourceType);
              if (!this.window && this.defaultResourceType && this._isActive) {
                this.initWindow();
              }
            case 1:
              return _context2.a(2);
          }
        }, _callee2, this);
      }));
      function registerResourceType(_x) {
        return _registerResourceType.apply(this, arguments);
      }
      return registerResourceType;
    }()
  }, {
    key: "getResourceList",
    value: function getResourceList() {
      return this.resourceList;
    }
  }, {
    key: "setResourceList",
    value: function setResourceList(resourceList) {
      var _this = this;
      this.resourceList = resourceList.map(function (d) {
        return new src_resource_Resource(d, _this.getResourceType(d.resourceName), _this);
      });
      this.emitter.emit(CHANGE_EVENT, resourceList);
    }
  }, {
    key: "onResourceListChange",
    value: function onResourceListChange(fn) {
      var _this2 = this;
      this.emitter.on(CHANGE_EVENT, fn);
      return function () {
        _this2.emitter.off(CHANGE_EVENT, fn);
      };
    }
  }, {
    key: "onWindowRendererReady",
    value: function onWindowRendererReady(fn) {
      var _this3 = this;
      this.emitter.on(EVENT.WINDOW_RENDER_READY, fn);
      return function () {
        _this3.emitter.off(EVENT.WINDOW_RENDER_READY, fn);
      };
    }
  }, {
    key: "emitWindowRendererReady",
    value: function emitWindowRendererReady() {
      this.emitter.emit(EVENT.WINDOW_RENDER_READY);
    }
  }, {
    key: "getResourceType",
    value: function getResourceType(resourceName) {
      return this.resourceTypeMap.get(resourceName);
    }
  }, {
    key: "removeResourceType",
    value: function removeResourceType(resourceName) {
      if (this.resourceTypeMap.has(resourceName)) {
        this.resourceTypeMap.delete(resourceName);
      }
    }
  }, {
    key: "removeEditorWindowById",
    value: function removeEditorWindowById(id) {
      var index = this.windows.findIndex(function (d) {
        return d.id === id;
      });
      this.remove(index);
    }
  }, {
    key: "remove",
    value: function () {
      var _remove = src_workspace_asyncToGenerator(/*#__PURE__*/src_workspace_regenerator().m(function _callee3(index) {
        var _this$window, _this$window3;
        var window, _this$window2;
        return src_workspace_regenerator().w(function (_context3) {
          while (1) switch (_context3.n) {
            case 0:
              if (!(index < 0)) {
                _context3.n = 1;
                break;
              }
              return _context3.a(2);
            case 1:
              window = this.windows[index];
              this.windows.splice(index, 1);
              (_this$window = this.window) === null || _this$window === void 0 ? void 0 : _this$window.updateState(WINDOW_STATE.destroyed);
              if (!(this.window === window)) {
                _context3.n = 3;
                break;
              }
              this.window = this.windows[index] || this.windows[index + 1] || this.windows[index - 1];
              if (!((_this$window2 = this.window) !== null && _this$window2 !== void 0 && _this$window2.sleep)) {
                _context3.n = 2;
                break;
              }
              _context3.n = 2;
              return this.window.init();
            case 2:
              this.emitChangeActiveWindow();
            case 3:
              this.emitChangeWindow();
              (_this$window3 = this.window) === null || _this$window3 === void 0 ? void 0 : _this$window3.updateState(WINDOW_STATE.active);
            case 4:
              return _context3.a(2);
          }
        }, _callee3, this);
      }));
      function remove(_x2) {
        return _remove.apply(this, arguments);
      }
      return remove;
    }()
  }, {
    key: "removeEditorWindow",
    value: function removeEditorWindow(resourceName, id) {
      var index = this.windows.findIndex(function (d) {
        var _d$resource;
        return ((_d$resource = d.resource) === null || _d$resource === void 0 ? void 0 : _d$resource.name) === resourceName && (d.title === id || d.resource.id === id);
      });
      this.remove(index);
    }
  }, {
    key: "removeEditorWindowByResource",
    value: function removeEditorWindowByResource(resource) {
      var index = this.windows.findIndex(function (d) {
        var _d$resource2;
        return ((_d$resource2 = d.resource) === null || _d$resource2 === void 0 ? void 0 : _d$resource2.id) === resource.id;
      });
      this.remove(index);
    }
  }, {
    key: "openEditorWindowById",
    value: function () {
      var _openEditorWindowById = src_workspace_asyncToGenerator(/*#__PURE__*/src_workspace_regenerator().m(function _callee4(id) {
        var _this$window4, _this$window5;
        var window;
        return src_workspace_regenerator().w(function (_context4) {
          while (1) switch (_context4.n) {
            case 0:
              window = this.editorWindowMap.get(id);
              (_this$window4 = this.window) === null || _this$window4 === void 0 ? void 0 : _this$window4.updateState(WINDOW_STATE.inactive);
              if (!window) {
                _context4.n = 2;
                break;
              }
              this.window = window;
              if (!window.sleep) {
                _context4.n = 1;
                break;
              }
              _context4.n = 1;
              return window.init();
            case 1:
              this.emitChangeActiveWindow();
            case 2:
              (_this$window5 = this.window) === null || _this$window5 === void 0 ? void 0 : _this$window5.updateState(WINDOW_STATE.active);
            case 3:
              return _context4.a(2);
          }
        }, _callee4, this);
      }));
      function openEditorWindowById(_x3) {
        return _openEditorWindowById.apply(this, arguments);
      }
      return openEditorWindowById;
    }()
  }, {
    key: "openEditorWindowByResource",
    value: function () {
      var _openEditorWindowByResource = src_workspace_asyncToGenerator(/*#__PURE__*/src_workspace_regenerator().m(function _callee5(resource) {
        var _this$window6, _this$window7, _this$window9;
        var sleep,
          filterWindows,
          _this$window8,
          window,
          _args5 = arguments;
        return src_workspace_regenerator().w(function (_context5) {
          while (1) switch (_context5.n) {
            case 0:
              sleep = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : false;
              if (!(this.window && !this.window.sleep && !((_this$window6 = this.window) !== null && _this$window6 !== void 0 && _this$window6.initReady) && !sleep)) {
                _context5.n = 1;
                break;
              }
              this.windowQueue.push(resource);
              return _context5.a(2);
            case 1:
              (_this$window7 = this.window) === null || _this$window7 === void 0 ? void 0 : _this$window7.updateState(WINDOW_STATE.inactive);
              filterWindows = this.windows.filter(function (d) {
                var _d$resource3;
                return ((_d$resource3 = d.resource) === null || _d$resource3 === void 0 ? void 0 : _d$resource3.id) === resource.id;
              });
              if (!(filterWindows && filterWindows.length)) {
                _context5.n = 5;
                break;
              }
              this.window = filterWindows[0];
              if (!(!sleep && this.window.sleep)) {
                _context5.n = 3;
                break;
              }
              _context5.n = 2;
              return this.window.init();
            case 2:
              _context5.n = 4;
              break;
            case 3:
              this.checkWindowQueue();
            case 4:
              this.emitChangeActiveWindow();
              (_this$window8 = this.window) === null || _this$window8 === void 0 ? void 0 : _this$window8.updateState(WINDOW_STATE.active);
              return _context5.a(2);
            case 5:
              window = new window_EditorWindow(resource, this, {
                title: resource.title,
                options: resource.options,
                viewName: resource.viewName,
                sleep: sleep
              });
              this.windows = [].concat(workspace_toConsumableArray(this.windows), [window]);
              this.editorWindowMap.set(window.id, window);
              if (!sleep) {
                _context5.n = 6;
                break;
              }
              this.emitChangeWindow();
              return _context5.a(2);
            case 6:
              this.window = window;
              _context5.n = 7;
              return this.window.init();
            case 7:
              this.emitChangeWindow();
              this.emitChangeActiveWindow();
              (_this$window9 = this.window) === null || _this$window9 === void 0 ? void 0 : _this$window9.updateState(WINDOW_STATE.active);
            case 8:
              return _context5.a(2);
          }
        }, _callee5, this);
      }));
      function openEditorWindowByResource(_x4) {
        return _openEditorWindowByResource.apply(this, arguments);
      }
      return openEditorWindowByResource;
    }()
  }, {
    key: "openEditorWindow",
    value: function () {
      var _openEditorWindow = src_workspace_asyncToGenerator(/*#__PURE__*/src_workspace_regenerator().m(function _callee6(name, title, options, viewName, sleep) {
        var _this$window0, _this$window1, _this$window11;
        var resourceType, filterWindows, _this$window10, resource, window;
        return src_workspace_regenerator().w(function (_context6) {
          while (1) switch (_context6.n) {
            case 0:
              if (!(this.window && !this.window.sleep && !((_this$window0 = this.window) !== null && _this$window0 !== void 0 && _this$window0.initReady) && !sleep)) {
                _context6.n = 1;
                break;
              }
              this.windowQueue.push({
                name: name,
                title: title,
                options: options,
                viewName: viewName
              });
              return _context6.a(2);
            case 1:
              resourceType = this.resourceTypeMap.get(name);
              if (resourceType) {
                _context6.n = 2;
                break;
              }
              console.error("".concat(name, " resourceType is not available"));
              return _context6.a(2);
            case 2:
              (_this$window1 = this.window) === null || _this$window1 === void 0 ? void 0 : _this$window1.updateState(WINDOW_STATE.inactive);
              filterWindows = this.windows.filter(function (d) {
                var _d$resource4;
                return ((_d$resource4 = d.resource) === null || _d$resource4 === void 0 ? void 0 : _d$resource4.name) === name && d.resource.title == title || d.resource.id == title;
              });
              if (!(filterWindows && filterWindows.length)) {
                _context6.n = 6;
                break;
              }
              this.window = filterWindows[0];
              if (!(!sleep && this.window.sleep)) {
                _context6.n = 4;
                break;
              }
              _context6.n = 3;
              return this.window.init();
            case 3:
              _context6.n = 5;
              break;
            case 4:
              this.checkWindowQueue();
            case 5:
              this.emitChangeActiveWindow();
              (_this$window10 = this.window) === null || _this$window10 === void 0 ? void 0 : _this$window10.updateState(WINDOW_STATE.active);
              return _context6.a(2);
            case 6:
              resource = new src_resource_Resource({
                resourceName: name,
                title: title,
                options: options,
                id: title === null || title === void 0 ? void 0 : title.toString()
              }, resourceType, this);
              window = new window_EditorWindow(resource, this, {
                title: title,
                options: options,
                viewName: viewName,
                sleep: sleep
              });
              this.windows = [].concat(workspace_toConsumableArray(this.windows), [window]);
              this.editorWindowMap.set(window.id, window);
              if (!sleep) {
                _context6.n = 7;
                break;
              }
              this.emitChangeWindow();
              return _context6.a(2);
            case 7:
              this.window = window;
              _context6.n = 8;
              return this.window.init();
            case 8:
              this.emitChangeWindow();
              this.emitChangeActiveWindow();
              (_this$window11 = this.window) === null || _this$window11 === void 0 ? void 0 : _this$window11.updateState(WINDOW_STATE.active);
            case 9:
              return _context6.a(2);
          }
        }, _callee6, this);
      }));
      function openEditorWindow(_x5, _x6, _x7, _x8, _x9) {
        return _openEditorWindow.apply(this, arguments);
      }
      return openEditorWindow;
    }()
  }, {
    key: "onChangeWindows",
    value: function onChangeWindows(fn) {
      var _this4 = this;
      this.emitter.on(EVENT.CHANGE_WINDOW, fn);
      return function () {
        _this4.emitter.removeListener(EVENT.CHANGE_WINDOW, fn);
      };
    }
  }, {
    key: "onChangeActiveEditorView",
    value: function onChangeActiveEditorView(fn) {
      var _this5 = this;
      this.emitter.on(EVENT.CHANGE_ACTIVE_EDITOR_VIEW, fn);
      return function () {
        _this5.emitter.removeListener(EVENT.CHANGE_ACTIVE_EDITOR_VIEW, fn);
      };
    }
  }, {
    key: "emitChangeActiveEditorView",
    value: function emitChangeActiveEditorView() {
      this.emitter.emit(EVENT.CHANGE_ACTIVE_EDITOR_VIEW);
    }
  }, {
    key: "emitChangeWindow",
    value: function emitChangeWindow() {
      this.emitter.emit(EVENT.CHANGE_WINDOW);
    }
  }, {
    key: "emitChangeActiveWindow",
    value: function emitChangeActiveWindow() {
      this.emitter.emit(EVENT.CHANGE_ACTIVE_WINDOW);
      this.emitChangeActiveEditorView();
    }
  }, {
    key: "onChangeActiveWindow",
    value: function onChangeActiveWindow(fn) {
      var _this6 = this;
      this.emitter.on(EVENT.CHANGE_ACTIVE_WINDOW, fn);
      return function () {
        _this6.emitter.removeListener(EVENT.CHANGE_ACTIVE_WINDOW, fn);
      };
    }
  }]);
}();
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Array)], src_workspace_Workspace.prototype, "windows", void 0);
Object(tslib_es6["b" /* __decorate */])([src["obx"].ref, Object(tslib_es6["d" /* __metadata */])("design:type", Object)], src_workspace_Workspace.prototype, "window", void 0);
// CONCATENATED MODULE: ../workspace/src/view/editor-view.tsx
function view_editor_view_typeof(o) { "@babel/helpers - typeof"; return view_editor_view_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, view_editor_view_typeof(o); }
function view_editor_view_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function view_editor_view_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, view_editor_view_toPropertyKey(o.key), o); } }
function view_editor_view_createClass(e, r, t) { return r && view_editor_view_defineProperties(e.prototype, r), t && view_editor_view_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function view_editor_view_toPropertyKey(t) { var i = view_editor_view_toPrimitive(t, "string"); return "symbol" == view_editor_view_typeof(i) ? i : i + ""; }
function view_editor_view_toPrimitive(t, r) { if ("object" != view_editor_view_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != view_editor_view_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function editor_view_callSuper(t, o, e) { return o = editor_view_getPrototypeOf(o), editor_view_possibleConstructorReturn(t, editor_view_isNativeReflectConstruct() ? Reflect.construct(o, e || [], editor_view_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function editor_view_possibleConstructorReturn(t, e) { if (e && ("object" == view_editor_view_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return editor_view_assertThisInitialized(t); }
function editor_view_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function editor_view_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (editor_view_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function editor_view_getPrototypeOf(t) { return editor_view_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, editor_view_getPrototypeOf(t); }
function editor_view_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && editor_view_setPrototypeOf(t, e); }
function editor_view_setPrototypeOf(t, e) { return editor_view_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, editor_view_setPrototypeOf(t, e); }






var view_editor_view_EditorView = /*#__PURE__*/function (_PureComponent) {
  function EditorView() {
    view_editor_view_classCallCheck(this, EditorView);
    return editor_view_callSuper(this, EditorView, arguments);
  }
  editor_view_inherits(EditorView, _PureComponent);
  return view_editor_view_createClass(EditorView, [{
    key: "render",
    value: function render() {
      var active = this.props.active;
      var editorView = this.props.editorView;
      var skeleton = editorView.innerSkeleton;
      if (!editorView.isInit) {
        var Loading = src["engineConfig"].get('loadingComponent', BuiltinLoading);
        return /*#__PURE__*/React.createElement(Loading, null);
      }
      return /*#__PURE__*/React.createElement(workbench_Workbench, {
        skeleton: skeleton,
        className: active ? 'active engine-editor-view' : 'engine-editor-view',
        topAreaItemClassName: "engine-actionitem"
      });
    }
  }]);
}(external_window_React_["PureComponent"]);
view_editor_view_EditorView = Object(tslib_es6["b" /* __decorate */])([src["observer"]], view_editor_view_EditorView);

// EXTERNAL MODULE: ../workspace/src/view/resource-view.less
var resource_view = __webpack_require__(124);

// CONCATENATED MODULE: ../workspace/src/view/resource-view.tsx
function resource_view_typeof(o) { "@babel/helpers - typeof"; return resource_view_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, resource_view_typeof(o); }
function resource_view_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function resource_view_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, resource_view_toPropertyKey(o.key), o); } }
function resource_view_createClass(e, r, t) { return r && resource_view_defineProperties(e.prototype, r), t && resource_view_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function resource_view_toPropertyKey(t) { var i = resource_view_toPrimitive(t, "string"); return "symbol" == resource_view_typeof(i) ? i : i + ""; }
function resource_view_toPrimitive(t, r) { if ("object" != resource_view_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != resource_view_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function resource_view_callSuper(t, o, e) { return o = resource_view_getPrototypeOf(o), resource_view_possibleConstructorReturn(t, resource_view_isNativeReflectConstruct() ? Reflect.construct(o, e || [], resource_view_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function resource_view_possibleConstructorReturn(t, e) { if (e && ("object" == resource_view_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return resource_view_assertThisInitialized(t); }
function resource_view_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function resource_view_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (resource_view_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function resource_view_getPrototypeOf(t) { return resource_view_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, resource_view_getPrototypeOf(t); }
function resource_view_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && resource_view_setPrototypeOf(t, e); }
function resource_view_setPrototypeOf(t, e) { return resource_view_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, resource_view_setPrototypeOf(t, e); }






var resource_view_ResourceView = /*#__PURE__*/function (_PureComponent) {
  function ResourceView() {
    resource_view_classCallCheck(this, ResourceView);
    return resource_view_callSuper(this, ResourceView, arguments);
  }
  resource_view_inherits(ResourceView, _PureComponent);
  return resource_view_createClass(ResourceView, [{
    key: "render",
    value: function render() {
      var skeleton = this.props.resource.skeleton;
      var editorViews = this.props.window.editorViews;
      return /*#__PURE__*/React.createElement("div", {
        className: "workspace-resource-view"
      }, /*#__PURE__*/React.createElement(top_area, {
        area: skeleton.topArea,
        itemClassName: "engine-actionitem"
      }), /*#__PURE__*/React.createElement("div", {
        className: "workspace-editor-body"
      }, Array.from(editorViews.values()).map(function (editorView) {
        return /*#__PURE__*/React.createElement(view_editor_view_EditorView, {
          key: editorView.name,
          active: editorView.active,
          editorView: editorView
        });
      })));
    }
  }]);
}(external_window_React_["PureComponent"]);
resource_view_ResourceView = Object(tslib_es6["b" /* __decorate */])([src["observer"]], resource_view_ResourceView);

// CONCATENATED MODULE: ../workspace/src/view/window-view.tsx
function window_view_typeof(o) { "@babel/helpers - typeof"; return window_view_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, window_view_typeof(o); }
function window_view_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function window_view_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, window_view_toPropertyKey(o.key), o); } }
function window_view_createClass(e, r, t) { return r && window_view_defineProperties(e.prototype, r), t && window_view_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function window_view_toPropertyKey(t) { var i = window_view_toPrimitive(t, "string"); return "symbol" == window_view_typeof(i) ? i : i + ""; }
function window_view_toPrimitive(t, r) { if ("object" != window_view_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != window_view_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function window_view_callSuper(t, o, e) { return o = window_view_getPrototypeOf(o), window_view_possibleConstructorReturn(t, window_view_isNativeReflectConstruct() ? Reflect.construct(o, e || [], window_view_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function window_view_possibleConstructorReturn(t, e) { if (e && ("object" == window_view_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return window_view_assertThisInitialized(t); }
function window_view_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function window_view_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (window_view_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function window_view_getPrototypeOf(t) { return window_view_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, window_view_getPrototypeOf(t); }
function window_view_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && window_view_setPrototypeOf(t, e); }
function window_view_setPrototypeOf(t, e) { return window_view_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, window_view_setPrototypeOf(t, e); }






var window_view_WindowView = /*#__PURE__*/function (_PureComponent) {
  function WindowView() {
    window_view_classCallCheck(this, WindowView);
    return window_view_callSuper(this, WindowView, arguments);
  }
  window_view_inherits(WindowView, _PureComponent);
  return window_view_createClass(WindowView, [{
    key: "render",
    value: function render() {
      var active = this.props.active;
      var _this$props$window = this.props.window,
        resource = _this$props$window.resource,
        initReady = _this$props$window.initReady,
        url = _this$props$window.url;
      if (!initReady) {
        var Loading = src["engineConfig"].get('loadingComponent', BuiltinLoading);
        return /*#__PURE__*/React.createElement("div", {
          className: "workspace-engine-main ".concat(active ? 'active' : '')
        }, /*#__PURE__*/React.createElement(Loading, null));
      }
      if (resource.type === 'webview' && url) {
        return /*#__PURE__*/React.createElement(webview_DesignerView, {
          url: url,
          viewName: resource.name
        });
      }
      return /*#__PURE__*/React.createElement("div", {
        className: "workspace-engine-main ".concat(active ? 'active' : '')
      }, /*#__PURE__*/React.createElement(resource_view_ResourceView, {
        resource: resource,
        window: this.props.window
      }));
    }
  }]);
}(external_window_React_["PureComponent"]);
window_view_WindowView = Object(tslib_es6["b" /* __decorate */])([src["observer"]], window_view_WindowView);

// CONCATENATED MODULE: ../workspace/src/skeleton-context.ts

var skeleton_context_SkeletonContext = /*#__PURE__*/Object(external_window_React_["createContext"])({});
// CONCATENATED MODULE: ../workspace/src/layouts/workbench.tsx
function layouts_workbench_typeof(o) { "@babel/helpers - typeof"; return layouts_workbench_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, layouts_workbench_typeof(o); }
function layouts_workbench_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function layouts_workbench_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, layouts_workbench_toPropertyKey(o.key), o); } }
function layouts_workbench_createClass(e, r, t) { return r && layouts_workbench_defineProperties(e.prototype, r), t && layouts_workbench_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function layouts_workbench_toPropertyKey(t) { var i = layouts_workbench_toPrimitive(t, "string"); return "symbol" == layouts_workbench_typeof(i) ? i : i + ""; }
function layouts_workbench_toPrimitive(t, r) { if ("object" != layouts_workbench_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != layouts_workbench_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function layouts_workbench_callSuper(t, o, e) { return o = layouts_workbench_getPrototypeOf(o), layouts_workbench_possibleConstructorReturn(t, layouts_workbench_isNativeReflectConstruct() ? Reflect.construct(o, e || [], layouts_workbench_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function layouts_workbench_possibleConstructorReturn(t, e) { if (e && ("object" == layouts_workbench_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return layouts_workbench_assertThisInitialized(t); }
function layouts_workbench_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function layouts_workbench_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (layouts_workbench_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function layouts_workbench_getPrototypeOf(t) { return layouts_workbench_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, layouts_workbench_getPrototypeOf(t); }
function layouts_workbench_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && layouts_workbench_setPrototypeOf(t, e); }
function layouts_workbench_setPrototypeOf(t, e) { return layouts_workbench_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, layouts_workbench_setPrototypeOf(t, e); }







var layouts_workbench_Workbench = /*#__PURE__*/function (_Component) {
  function Workbench(props) {
    var _this;
    layouts_workbench_classCallCheck(this, Workbench);
    _this = layouts_workbench_callSuper(this, Workbench, [props]);
    var _this$props = _this.props,
      config = _this$props.config,
      components = _this$props.components,
      workspace = _this$props.workspace;
    var skeleton = workspace.skeleton;
    skeleton.buildFromConfig(config, components);
    src["engineConfig"].onGot('theme', function (theme) {
      _this.setState({
        theme: theme
      });
    });
    src["engineConfig"].onGot('workspaceEmptyComponent', function (workspaceEmptyComponent) {
      _this.setState({
        workspaceEmptyComponent: workspaceEmptyComponent
      });
    });
    _this.state = {
      workspaceEmptyComponent: src["engineConfig"].get('workspaceEmptyComponent'),
      theme: src["engineConfig"].get('theme')
    };
    return _this;
  }
  layouts_workbench_inherits(Workbench, _Component);
  return layouts_workbench_createClass(Workbench, [{
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
        workspace = _this$props2.workspace,
        className = _this$props2.className,
        topAreaItemClassName = _this$props2.topAreaItemClassName;
      var skeleton = workspace.skeleton;
      var _this$state = this.state,
        WorkspaceEmptyComponent = _this$state.workspaceEmptyComponent,
        theme = _this$state.theme;
      return /*#__PURE__*/React.createElement("div", {
        className: classnames_default()('lc-workspace-workbench', className, theme)
      }, /*#__PURE__*/React.createElement(skeleton_context_SkeletonContext.Provider, {
        value: skeleton
      }, /*#__PURE__*/React.createElement(top_area, {
        className: "lc-workspace-top-area",
        area: skeleton.topArea,
        itemClassName: topAreaItemClassName
      }), /*#__PURE__*/React.createElement("div", {
        className: "lc-workspace-workbench-body"
      }, /*#__PURE__*/React.createElement(left_area, {
        className: "lc-workspace-left-area lc-left-area",
        area: skeleton.leftArea
      }), /*#__PURE__*/React.createElement(left_float_pane, {
        area: skeleton.leftFloatArea
      }), /*#__PURE__*/React.createElement(left_fixed_pane, {
        area: skeleton.leftFixedArea
      }), /*#__PURE__*/React.createElement("div", {
        className: "lc-workspace-workbench-center"
      }, /*#__PURE__*/React.createElement("div", {
        className: "lc-workspace-workbench-center-content"
      }, /*#__PURE__*/React.createElement(sub_top_area, {
        area: skeleton.subTopArea,
        itemClassName: topAreaItemClassName
      }), /*#__PURE__*/React.createElement("div", {
        className: "lc-workspace-workbench-window"
      }, workspace.windows.map(function (d) {
        var _workspace$window;
        return /*#__PURE__*/React.createElement(window_view_WindowView, {
          active: d.id === ((_workspace$window = workspace.window) === null || _workspace$window === void 0 ? void 0 : _workspace$window.id),
          window: d,
          key: d.id
        });
      }), !workspace.windows.length && WorkspaceEmptyComponent ? /*#__PURE__*/React.createElement(WorkspaceEmptyComponent, null) : null)), /*#__PURE__*/React.createElement(main_area, {
        area: skeleton.mainArea
      }), /*#__PURE__*/React.createElement(bottom_area, {
        area: skeleton.bottomArea
      }))), /*#__PURE__*/React.createElement(src["TipContainer"], null)));
    }
  }]);
}(external_window_React_["Component"]);
layouts_workbench_Workbench = Object(tslib_es6["b" /* __decorate */])([src["observer"], Object(tslib_es6["d" /* __metadata */])("design:paramtypes", [Object])], layouts_workbench_Workbench);

// CONCATENATED MODULE: ../workspace/src/index.ts




// CONCATENATED MODULE: ./src/modules/live-editing.ts


function getText(node, prop) {
  var p = node.getProp(prop, false);
  if (!p || p.isUnset()) {
    return null;
  }
  var v = p.getValue();
  if (Object(utils_src["J" /* isJSExpression */])(v)) {
    v = v.mock;
  }
  if (v == null) {
    return null;
  }
  if (p.type === 'literal') {
    return v;
  }
  return Symbol.for('not-literal');
}
function liveEditingRule(target) {
  // for vision components specific
  var node = target.node,
    event = target.event;
  var targetElement = event.target;
  if (!Array.from(targetElement.childNodes).every(function (item) {
    return item.nodeType === Node.TEXT_NODE;
  })) {
    return null;
  }
  var innerText = targetElement.innerText;
  var propTarget = ['title', 'label', 'text', 'content', 'children'].find(function (prop) {
    return equalText(getText(node, prop), innerText);
  });
  if (propTarget) {
    return {
      propElement: targetElement,
      propTarget: propTarget
    };
  }
  return null;
}
function equalText(v, innerText) {
  // TODO: enhance compare text logic
  if (typeof v !== 'string') {
    return false;
  }
  return v.trim() === innerText;
}
var liveEditingSaveHander = {
  condition: function condition(prop) {
    return prop.type === 'expression';
  },
  onSaveContent: function onSaveContent(content, prop) {
    var v = prop.getValue();
    var data = v;
    if (Object(utils_src["J" /* isJSExpression */])(v)) {
      data = v.mock;
    }
    data = content;
    if (Object(utils_src["J" /* isJSExpression */])(v)) {
      prop.setValue({
        type: 'JSExpression',
        value: v.value,
        mock: data
      });
    } else {
      prop.setValue(data);
    }
  }
};
// TODO:
// 非文本编辑
//  国际化数据，改变当前
//  JSExpression, 改变 mock 或 弹出绑定变量
LiveEditing.addLiveEditingSpecificRule(liveEditingRule);
LiveEditing.addLiveEditingSaveHandler(liveEditingSaveHander);
// CONCATENATED MODULE: ./src/modules/classes.ts


// CONCATENATED MODULE: ./src/modules/symbols.ts

/* harmony default export */ var symbols = ({
  projectSymbol: projectSymbol,
  documentSymbol: documentSymbol,
  nodeSymbol: nodeSymbol,
  nodeChildrenSymbol: nodeChildrenSymbol,
  skeletonSymbol: skeletonSymbol,
  editorSymbol: editorSymbol,
  designerSymbol: designerSymbol,
  settingPropEntrySymbol: settingFieldSymbol,
  settingTopEntrySymbol: settingTopEntrySymbol,
  designerCabinSymbol: designerCabinSymbol,
  editorCabinSymbol: editorCabinSymbol,
  skeletonCabinSymbol: skeletonCabinSymbol,
  propSymbol: propSymbol,
  simulatorHostSymbol: simulatorHostSymbol,
  skeletonItemSymbol: skeletonItemSymbol,
  simulatorRenderSymbol: simulatorRenderSymbol
});
// CONCATENATED MODULE: ./src/inner-plugins/component-meta-parser.ts
var componentMetaParser = function componentMetaParser(designer) {
  var fun = function fun(ctx) {
    return {
      init: function init() {
        var material = ctx.material;
        material.onChangeAssets(function () {
          var assets = material.getAssets();
          var _assets$components = assets.components,
            components = _assets$components === void 0 ? [] : _assets$components;
          designer.buildComponentMetasMap(components);
        });
      }
    };
  };
  fun.pluginName = '___component_meta_parser___';
  return fun;
};
// CONCATENATED MODULE: ./src/inner-plugins/setter-registry.ts
// 注册默认的 setters
var setterRegistry = function setterRegistry(ctx) {
  return {
    init: function init() {
      var _require;
      var config = ctx.config;
      if (config.get('disableDefaultSetters')) return;
      var builtinSetters = (_require = __webpack_require__(125)) === null || _require === void 0 ? void 0 : _require.setters;
      if (builtinSetters) {
        ctx.setters.registerSetter(builtinSetters);
      }
    }
  };
};
setterRegistry.pluginName = '___setter_registry___';
// EXTERNAL MODULE: ../plugin-designer/src/index.scss
var plugin_designer_src = __webpack_require__(126);

// CONCATENATED MODULE: ../plugin-designer/src/index.tsx
function src_typeof(o) { "@babel/helpers - typeof"; return src_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, src_typeof(o); }
function src_regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return src_regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i.return) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (src_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, src_regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, src_regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), src_regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", src_regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), src_regeneratorDefine2(u), src_regeneratorDefine2(u, o, "Generator"), src_regeneratorDefine2(u, n, function () { return this; }), src_regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (src_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function src_regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } src_regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { src_regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, src_regeneratorDefine2(e, r, n, t); }
function src_asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function src_asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { src_asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { src_asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function src_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function src_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, src_toPropertyKey(o.key), o); } }
function src_createClass(e, r, t) { return r && src_defineProperties(e.prototype, r), t && src_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function src_toPropertyKey(t) { var i = src_toPrimitive(t, "string"); return "symbol" == src_typeof(i) ? i : i + ""; }
function src_toPrimitive(t, r) { if ("object" != src_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != src_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function src_callSuper(t, o, e) { return o = src_getPrototypeOf(o), src_possibleConstructorReturn(t, src_isNativeReflectConstruct() ? Reflect.construct(o, e || [], src_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function src_possibleConstructorReturn(t, e) { if (e && ("object" == src_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return src_assertThisInitialized(t); }
function src_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function src_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (src_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function src_getPrototypeOf(t) { return src_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, src_getPrototypeOf(t); }
function src_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && src_setPrototypeOf(t, e); }
function src_setPrototypeOf(t, e) { return src_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, src_setPrototypeOf(t, e); }





var src_logger = Object(utils_src["t" /* getLogger */])({
  level: 'warn',
  bizName: 'plugin:plugin-designer'
});
var src_DesignerPlugin = /*#__PURE__*/function (_PureComponent) {
  function DesignerPlugin(props) {
    var _this;
    src_classCallCheck(this, DesignerPlugin);
    _this = src_callSuper(this, DesignerPlugin, [props]);
    _this.state = {
      componentMetadatas: null,
      library: null,
      extraEnvironment: null,
      renderEnv: 'default',
      device: 'default',
      locale: '',
      designMode: 'live',
      deviceClassName: '',
      simulatorUrl: null,
      requestHandlersMap: null
    };
    _this._mounted = true;
    _this.handleDesignerMount = function (designer) {
      var editor = _this.props.engineEditor;
      editor.set('designer', designer);
      editor.eventBus.emit('designer.ready', designer);
      editor.onGot('schema', function (schema) {
        designer.project.open(schema);
      });
    };
    _this.setupAssets();
    return _this;
  }
  src_inherits(DesignerPlugin, _PureComponent);
  return src_createClass(DesignerPlugin, [{
    key: "setupAssets",
    value: function () {
      var _setupAssets = src_asyncToGenerator(/*#__PURE__*/src_regenerator().m(function _callee() {
        var _this2 = this;
        var editor, assets, renderEnv, device, locale, designMode, deviceClassName, simulatorUrl, requestHandlersMap, components, packages, extraEnvironment, utils, state, _t;
        return src_regenerator().w(function (_context) {
          while (1) switch (_context.p = _context.n) {
            case 0:
              editor = this.props.engineEditor;
              _context.p = 1;
              _context.n = 2;
              return editor.onceGot('assets');
            case 2:
              assets = _context.v;
              renderEnv = src["engineConfig"].get('renderEnv') || editor.get('renderEnv');
              device = src["engineConfig"].get('device') || editor.get('device');
              locale = src["engineConfig"].get('locale') || editor.get('locale');
              designMode = src["engineConfig"].get('designMode') || editor.get('designMode');
              deviceClassName = src["engineConfig"].get('deviceClassName') || editor.get('deviceClassName');
              simulatorUrl = src["engineConfig"].get('simulatorUrl') || editor.get('simulatorUrl'); // @TODO setupAssets 里设置 requestHandlersMap 不太合适
              requestHandlersMap = src["engineConfig"].get('requestHandlersMap') || editor.get('requestHandlersMap');
              if (this._mounted) {
                _context.n = 3;
                break;
              }
              return _context.a(2);
            case 3:
              src["engineConfig"].onGot('locale', function (locale) {
                _this2.setState({
                  locale: locale
                });
              });
              src["engineConfig"].onGot('requestHandlersMap', function (requestHandlersMap) {
                _this2.setState({
                  requestHandlersMap: requestHandlersMap
                });
              });
              src["engineConfig"].onGot('device', function (device) {
                _this2.setState({
                  device: device
                });
              });
              components = assets.components, packages = assets.packages, extraEnvironment = assets.extraEnvironment, utils = assets.utils;
              state = {
                componentMetadatas: components || [],
                library: packages || [],
                utilsMetadata: utils || [],
                extraEnvironment: extraEnvironment,
                renderEnv: renderEnv,
                device: device,
                designMode: designMode,
                deviceClassName: deviceClassName,
                simulatorUrl: simulatorUrl,
                requestHandlersMap: requestHandlersMap,
                locale: locale
              };
              this.setState(state);
              _context.n = 5;
              break;
            case 4:
              _context.p = 4;
              _t = _context.v;
              src_logger.error(_t);
            case 5:
              return _context.a(2);
          }
        }, _callee, this, [[1, 4]]);
      }));
      function setupAssets() {
        return _setupAssets.apply(this, arguments);
      }
      return setupAssets;
    }()
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this._mounted = false;
    }
  }, {
    key: "render",
    value: function render() {
      var editor = this.props.engineEditor;
      var _this$state = this.state,
        componentMetadatas = _this$state.componentMetadatas,
        utilsMetadata = _this$state.utilsMetadata,
        library = _this$state.library,
        extraEnvironment = _this$state.extraEnvironment,
        renderEnv = _this$state.renderEnv,
        device = _this$state.device,
        designMode = _this$state.designMode,
        deviceClassName = _this$state.deviceClassName,
        simulatorUrl = _this$state.simulatorUrl,
        requestHandlersMap = _this$state.requestHandlersMap,
        locale = _this$state.locale;
      if (!library || !componentMetadatas) {
        // TODO: use a Loading
        return null;
      }
      return /*#__PURE__*/external_window_React_default.a.createElement(designer_view_DesignerView, {
        onMount: this.handleDesignerMount,
        className: "lowcode-plugin-designer",
        editor: editor,
        name: editor.viewName,
        designer: editor.get('designer'),
        componentMetadatas: componentMetadatas,
        simulatorProps: {
          library: library,
          utilsMetadata: utilsMetadata,
          extraEnvironment: extraEnvironment,
          renderEnv: renderEnv,
          device: device,
          locale: locale,
          designMode: designMode,
          deviceClassName: deviceClassName,
          simulatorUrl: simulatorUrl,
          requestHandlersMap: requestHandlersMap
        }
      });
    }
  }]);
}(external_window_React_["PureComponent"]);
src_DesignerPlugin.displayName = void 0;

// CONCATENATED MODULE: ./src/inner-plugins/default-panel-registry.tsx
function default_panel_registry_typeof(o) { "@babel/helpers - typeof"; return default_panel_registry_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, default_panel_registry_typeof(o); }
function default_panel_registry_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function default_panel_registry_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? default_panel_registry_ownKeys(Object(t), !0).forEach(function (r) { default_panel_registry_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : default_panel_registry_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function default_panel_registry_defineProperty(e, r, t) { return (r = default_panel_registry_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function default_panel_registry_toPropertyKey(t) { var i = default_panel_registry_toPrimitive(t, "string"); return "symbol" == default_panel_registry_typeof(i) ? i : i + ""; }
function default_panel_registry_toPrimitive(t, r) { if ("object" != default_panel_registry_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != default_panel_registry_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }


// 注册默认的面板
var default_panel_registry_defaultPanelRegistry = function defaultPanelRegistry(editor) {
  var fun = function fun(ctx) {
    return {
      init: function init() {
        var skeleton = ctx.skeleton,
          config = ctx.config;
        skeleton.add({
          area: 'mainArea',
          name: 'designer',
          type: 'Widget',
          content: /*#__PURE__*/React.createElement(src_DesignerPlugin, {
            engineConfig: config,
            engineEditor: editor
          })
        });
        if (!config.get('disableDefaultSettingPanel')) {
          skeleton.add({
            area: 'rightArea',
            name: 'settingsPane',
            type: 'Panel',
            content: /*#__PURE__*/React.createElement(settings_primary_pane_SettingsPrimaryPane, {
              engineEditor: editor
            }),
            props: {
              ignoreRoot: true
            },
            panelProps: default_panel_registry_objectSpread({}, config.get('defaultSettingPanelProps') || {})
          });
        }
      }
    };
  };
  fun.pluginName = '___default_panel___';
  return fun;
};
/* harmony default export */ var default_panel_registry = (default_panel_registry_defaultPanelRegistry);
// CONCATENATED MODULE: ./src/modules/shell-model-factory.ts
function shell_model_factory_typeof(o) { "@babel/helpers - typeof"; return shell_model_factory_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, shell_model_factory_typeof(o); }
function shell_model_factory_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function shell_model_factory_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, shell_model_factory_toPropertyKey(o.key), o); } }
function shell_model_factory_createClass(e, r, t) { return r && shell_model_factory_defineProperties(e.prototype, r), t && shell_model_factory_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function shell_model_factory_toPropertyKey(t) { var i = shell_model_factory_toPrimitive(t, "string"); return "symbol" == shell_model_factory_typeof(i) ? i : i + ""; }
function shell_model_factory_toPrimitive(t, r) { if ("object" != shell_model_factory_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != shell_model_factory_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

var shell_model_factory_ShellModelFactory = /*#__PURE__*/function () {
  function ShellModelFactory() {
    shell_model_factory_classCallCheck(this, ShellModelFactory);
  }
  return shell_model_factory_createClass(ShellModelFactory, [{
    key: "createNode",
    value: function createNode(node) {
      return model_node_Node.create(node);
    }
  }, {
    key: "createSettingField",
    value: function createSettingField(prop) {
      return model_setting_field_SettingField.create(prop);
    }
  }]);
}();
var shell_model_factory_shellModelFactory = new shell_model_factory_ShellModelFactory();
// CONCATENATED MODULE: ./src/inner-plugins/builtin-hotkey.ts
/* eslint-disable max-len */


function builtin_hotkey_insertChild(container, originalChild, at) {
  var child = originalChild;
  if (Object(utils_src["P" /* isNode */])(child) && child.isSlotNode) {
    child = child.exportSchema(types_src["i" /* IPublicEnumTransformStage */].Clone);
  }
  var node = null;
  if (Object(utils_src["P" /* isNode */])(child)) {
    var _container$children;
    node = child;
    (_container$children = container.children) === null || _container$children === void 0 ? void 0 : _container$children.insert(node, at);
  } else {
    var _container$document;
    node = ((_container$document = container.document) === null || _container$document === void 0 ? void 0 : _container$document.createNode(child)) || null;
    if (node) {
      var _container$children2;
      (_container$children2 = container.children) === null || _container$children2 === void 0 ? void 0 : _container$children2.insert(node, at);
    }
  }
  return node || null;
}
function builtin_hotkey_insertChildren(container, nodes, at) {
  var index = at;
  var node;
  var results = [];
  // eslint-disable-next-line no-cond-assign
  while (node = nodes.pop()) {
    node = builtin_hotkey_insertChild(container, node, index);
    results.push(node);
    index = node.index;
  }
  return results;
}
/**
 * 获得合适的插入位置
 */
function builtin_hotkey_getSuitableInsertion(pluginContext, insertNode) {
  var _material$getComponen, _refNode$componentMet, _target$componentMeta;
  var project = pluginContext.project,
    material = pluginContext.material;
  var activeDoc = project.currentDocument;
  if (!activeDoc) {
    return null;
  }
  if (Array.isArray(insertNode) && Object(utils_src["Q" /* isNodeSchema */])(insertNode[0]) && (_material$getComponen = material.getComponentMeta(insertNode[0].componentName)) !== null && _material$getComponen !== void 0 && _material$getComponen.isModal) {
    if (!activeDoc.root) {
      return null;
    }
    return {
      target: activeDoc.root
    };
  }
  var focusNode = activeDoc.focusNode;
  var nodes = activeDoc.selection.getNodes();
  var refNode = nodes.find(function (item) {
    return focusNode.contains(item);
  });
  var target;
  var index;
  if (!refNode || refNode === focusNode) {
    target = focusNode;
  } else if ((_refNode$componentMet = refNode.componentMeta) !== null && _refNode$componentMet !== void 0 && _refNode$componentMet.isContainer) {
    target = refNode;
  } else {
    // FIXME!!, parent maybe null
    target = refNode.parent;
    index = refNode.index + 1;
  }
  if (target && insertNode && !((_target$componentMeta = target.componentMeta) !== null && _target$componentMeta !== void 0 && _target$componentMeta.checkNestingDown(target, insertNode))) {
    return null;
  }
  return {
    target: target,
    index: index
  };
}
/* istanbul ignore next */
function getNextForSelect(next, head, parent) {
  if (next) {
    if (!head) {
      return next;
    }
    var ret;
    if (next.isContainerNode) {
      var children = next.children;
      if (children && !children.isEmptyNode) {
        ret = getNextForSelect(children.get(0));
        if (ret) {
          return ret;
        }
      }
    }
    ret = getNextForSelect(next.nextSibling);
    if (ret) {
      return ret;
    }
  }
  if (parent) {
    return getNextForSelect(parent.nextSibling, false, parent === null || parent === void 0 ? void 0 : parent.parent);
  }
  return null;
}
/* istanbul ignore next */
function getPrevForSelect(prev, head, parent) {
  if (prev) {
    var ret;
    if (!head && prev.isContainerNode) {
      var children = prev.children;
      var lastChild = children && !children.isEmptyNode ? children.get(children.size - 1) : null;
      ret = getPrevForSelect(lastChild);
      if (ret) {
        return ret;
      }
    }
    if (!head) {
      return prev;
    }
    ret = getPrevForSelect(prev.prevSibling);
    if (ret) {
      return ret;
    }
  }
  if (parent) {
    return parent;
  }
  return null;
}
function getSuitablePlaceForNode(targetNode, node, ref) {
  var _node$componentMeta;
  var document = targetNode.document;
  if (!document) {
    return null;
  }
  var dragNodeObject = {
    type: types_src["g" /* IPublicEnumDragObjectType */].Node,
    nodes: [node]
  };
  var focusNode = document === null || document === void 0 ? void 0 : document.focusNode;
  // 如果节点是模态框，插入到根节点下
  if (node !== null && node !== void 0 && (_node$componentMeta = node.componentMeta) !== null && _node$componentMeta !== void 0 && _node$componentMeta.isModal) {
    return {
      container: focusNode,
      ref: ref
    };
  }
  if (!ref && focusNode && targetNode.contains(focusNode)) {
    if (document.checkNesting(focusNode, dragNodeObject)) {
      return {
        container: focusNode
      };
    }
    return null;
  }
  if (targetNode.isRootNode && targetNode.children) {
    var dropElement = targetNode.children.filter(function (c) {
      if (!c.isContainerNode) {
        return false;
      }
      if (document.checkNesting(c, dragNodeObject)) {
        return true;
      }
      return false;
    })[0];
    if (dropElement) {
      return {
        container: dropElement,
        ref: ref
      };
    }
    if (document.checkNesting(targetNode, dragNodeObject)) {
      return {
        container: targetNode,
        ref: ref
      };
    }
    return null;
  }
  if (targetNode.isContainerNode) {
    if (document.checkNesting(targetNode, dragNodeObject)) {
      return {
        container: targetNode,
        ref: ref
      };
    }
  }
  if (targetNode.parent) {
    return getSuitablePlaceForNode(targetNode.parent, node, {
      index: targetNode.index
    });
  }
  return null;
}
// 注册默认的 setters
var builtin_hotkey_builtinHotkey = function builtinHotkey(ctx) {
  return {
    init: function init() {
      var hotkey = ctx.hotkey,
        project = ctx.project,
        logger = ctx.logger,
        canvas = ctx.canvas;
      var clipboard = canvas.clipboard;
      // hotkey binding
      hotkey.bind(['backspace', 'del'], function (e, action) {
        logger.info("action ".concat(action, " is triggered"));
        if (canvas.isInLiveEditing) {
          return;
        }
        // TODO: use focus-tracker
        var doc = project.currentDocument;
        if (Object(utils_src["H" /* isFormEvent */])(e) || !doc) {
          return;
        }
        e.preventDefault();
        var sel = doc.selection;
        var topItems = sel.getTopNodes();
        // TODO: check can remove
        topItems.forEach(function (node) {
          if (node !== null && node !== void 0 && node.canPerformAction('remove')) {
            node && doc.removeNode(node);
          }
        });
        sel.clear();
      });
      hotkey.bind('escape', function (e, action) {
        var _project$currentDocum;
        logger.info("action ".concat(action, " is triggered"));
        if (canvas.isInLiveEditing) {
          return;
        }
        var sel = (_project$currentDocum = project.currentDocument) === null || _project$currentDocum === void 0 ? void 0 : _project$currentDocum.selection;
        if (Object(utils_src["H" /* isFormEvent */])(e) || !sel) {
          return;
        }
        e.preventDefault();
        sel.clear();
        // currentFocus.esc();
      });
      // command + c copy  command + x cut
      hotkey.bind(['command+c', 'ctrl+c', 'command+x', 'ctrl+x'], function (e, action) {
        var _document$getSelectio, _document$getSelectio2;
        logger.info("action ".concat(action, " is triggered"));
        if (canvas.isInLiveEditing) {
          return;
        }
        var doc = project.currentDocument;
        if (Object(utils_src["H" /* isFormEvent */])(e) || !doc) {
          return;
        }
        var anchorValue = (_document$getSelectio = document.getSelection()) === null || _document$getSelectio === void 0 ? void 0 : (_document$getSelectio2 = _document$getSelectio.anchorNode) === null || _document$getSelectio2 === void 0 ? void 0 : _document$getSelectio2.nodeValue;
        if (anchorValue && typeof anchorValue === 'string') {
          return;
        }
        e.preventDefault();
        var selected = doc.selection.getTopNodes(true);
        selected = selected.filter(function (node) {
          return node === null || node === void 0 ? void 0 : node.canPerformAction('copy');
        });
        if (!selected || selected.length < 1) {
          return;
        }
        var componentsMap = {};
        var componentsTree = selected.map(function (item) {
          return item === null || item === void 0 ? void 0 : item.exportSchema(types_src["i" /* IPublicEnumTransformStage */].Clone);
        });
        // FIXME: clear node.id
        var data = {
          type: 'nodeSchema',
          componentsMap: componentsMap,
          componentsTree: componentsTree
        };
        clipboard.setData(data);
        var cutMode = action && action.indexOf('x') > 0;
        if (cutMode) {
          selected.forEach(function (node) {
            var parentNode = node === null || node === void 0 ? void 0 : node.parent;
            parentNode === null || parentNode === void 0 ? void 0 : parentNode.select();
            node === null || node === void 0 ? void 0 : node.remove();
          });
        }
      });
      // command + v paste
      hotkey.bind(['command+v', 'ctrl+v'], function (e, action) {
        logger.info("action ".concat(action, " is triggered"));
        if (canvas.isInLiveEditing) {
          return;
        }
        // TODO
        var doc = project === null || project === void 0 ? void 0 : project.currentDocument;
        if (Object(utils_src["H" /* isFormEvent */])(e) || !doc) {
          return;
        }
        /* istanbul ignore next */
        clipboard.waitPasteData(e, function (_ref) {
          var componentsTree = _ref.componentsTree;
          if (componentsTree) {
            var _ref2 = builtin_hotkey_getSuitableInsertion(ctx, componentsTree) || {},
              target = _ref2.target,
              index = _ref2.index;
            if (!target) {
              return;
            }
            var canAddComponentsTree = componentsTree.filter(function (node) {
              var dragNodeObject = {
                type: types_src["g" /* IPublicEnumDragObjectType */].Node,
                nodes: [node]
              };
              return doc.checkNesting(target, dragNodeObject);
            });
            if (canAddComponentsTree.length === 0) {
              return;
            }
            var nodes = builtin_hotkey_insertChildren(target, canAddComponentsTree, index);
            if (nodes) {
              doc.selection.selectAll(nodes.map(function (o) {
                return o.id;
              }));
              setTimeout(function () {
                var _canvas$activeTracker;
                return (_canvas$activeTracker = canvas.activeTracker) === null || _canvas$activeTracker === void 0 ? void 0 : _canvas$activeTracker.track(nodes[0]);
              }, 10);
            }
          }
        });
      });
      // command + z undo
      hotkey.bind(['command+z', 'ctrl+z'], function (e, action) {
        var _project$currentDocum2, _project$currentDocum3;
        logger.info("action ".concat(action, " is triggered"));
        if (canvas.isInLiveEditing) {
          return;
        }
        var history = (_project$currentDocum2 = project.currentDocument) === null || _project$currentDocum2 === void 0 ? void 0 : _project$currentDocum2.history;
        if (Object(utils_src["H" /* isFormEvent */])(e) || !history) {
          return;
        }
        e.preventDefault();
        var selection = (_project$currentDocum3 = project.currentDocument) === null || _project$currentDocum3 === void 0 ? void 0 : _project$currentDocum3.selection;
        var curSelected = (selection === null || selection === void 0 ? void 0 : selection.selected) && Array.from(selection === null || selection === void 0 ? void 0 : selection.selected);
        history.back();
        selection === null || selection === void 0 ? void 0 : selection.selectAll(curSelected);
      });
      // command + shift + z redo
      hotkey.bind(['command+y', 'ctrl+y', 'command+shift+z'], function (e, action) {
        var _project$currentDocum4, _project$currentDocum5;
        logger.info("action ".concat(action, " is triggered"));
        if (canvas.isInLiveEditing) {
          return;
        }
        var history = (_project$currentDocum4 = project.currentDocument) === null || _project$currentDocum4 === void 0 ? void 0 : _project$currentDocum4.history;
        if (Object(utils_src["H" /* isFormEvent */])(e) || !history) {
          return;
        }
        e.preventDefault();
        var selection = (_project$currentDocum5 = project.currentDocument) === null || _project$currentDocum5 === void 0 ? void 0 : _project$currentDocum5.selection;
        var curSelected = (selection === null || selection === void 0 ? void 0 : selection.selected) && Array.from(selection === null || selection === void 0 ? void 0 : selection.selected);
        history.forward();
        selection === null || selection === void 0 ? void 0 : selection.selectAll(curSelected);
      });
      // sibling selection
      hotkey.bind(['left', 'right'], function (e, action) {
        logger.info("action ".concat(action, " is triggered"));
        if (canvas.isInLiveEditing) {
          return;
        }
        var doc = project.currentDocument;
        if (Object(utils_src["H" /* isFormEvent */])(e) || !doc) {
          return;
        }
        e.preventDefault();
        var selected = doc.selection.getTopNodes(true);
        if (!selected || selected.length < 1) {
          return;
        }
        var firstNode = selected[0];
        var silbing = action === 'left' ? firstNode === null || firstNode === void 0 ? void 0 : firstNode.prevSibling : firstNode === null || firstNode === void 0 ? void 0 : firstNode.nextSibling;
        silbing === null || silbing === void 0 ? void 0 : silbing.select();
      });
      hotkey.bind(['up', 'down'], function (e, action) {
        logger.info("action ".concat(action, " is triggered"));
        if (canvas.isInLiveEditing) {
          return;
        }
        var doc = project.currentDocument;
        if (Object(utils_src["H" /* isFormEvent */])(e) || !doc) {
          return;
        }
        e.preventDefault();
        var selected = doc.selection.getTopNodes(true);
        if (!selected || selected.length < 1) {
          return;
        }
        var firstNode = selected[0];
        if (action === 'down') {
          var next = getNextForSelect(firstNode, true, firstNode === null || firstNode === void 0 ? void 0 : firstNode.parent);
          next === null || next === void 0 ? void 0 : next.select();
        } else if (action === 'up') {
          var prev = getPrevForSelect(firstNode, true, firstNode === null || firstNode === void 0 ? void 0 : firstNode.parent);
          prev === null || prev === void 0 ? void 0 : prev.select();
        }
      });
      hotkey.bind(['option+left', 'option+right'], function (e, action) {
        logger.info("action ".concat(action, " is triggered"));
        if (canvas.isInLiveEditing) {
          return;
        }
        var doc = project.currentDocument;
        if (Object(utils_src["H" /* isFormEvent */])(e) || !doc) {
          return;
        }
        e.preventDefault();
        var selected = doc.selection.getTopNodes(true);
        if (!selected || selected.length < 1) {
          return;
        }
        // TODO: 此处需要增加判断当前节点是否可被操作移动，原ve里是用 node.canOperating()来判断
        // TODO: 移动逻辑也需要重新梳理，对于移动目标位置的选择，是否可以移入，需要增加判断
        var firstNode = selected[0];
        var parent = firstNode === null || firstNode === void 0 ? void 0 : firstNode.parent;
        if (!parent) return;
        var isPrev = action && /(left)$/.test(action);
        var silbing = isPrev ? firstNode.prevSibling : firstNode.nextSibling;
        if (silbing) {
          if (isPrev) {
            parent.insertBefore(firstNode, silbing, true);
          } else {
            parent.insertAfter(firstNode, silbing, true);
          }
          firstNode === null || firstNode === void 0 ? void 0 : firstNode.select();
        }
      });
      hotkey.bind(['option+up'], function (e, action) {
        logger.info("action ".concat(action, " is triggered"));
        if (canvas.isInLiveEditing) {
          return;
        }
        var doc = project.currentDocument;
        if (Object(utils_src["H" /* isFormEvent */])(e) || !doc) {
          return;
        }
        e.preventDefault();
        var selected = doc.selection.getTopNodes(true);
        if (!selected || selected.length < 1) {
          return;
        }
        // TODO: 此处需要增加判断当前节点是否可被操作移动，原ve里是用 node.canOperating()来判断
        // TODO: 移动逻辑也需要重新梳理，对于移动目标位置的选择，是否可以移入，需要增加判断
        var firstNode = selected[0];
        var parent = firstNode === null || firstNode === void 0 ? void 0 : firstNode.parent;
        if (!parent) {
          return;
        }
        var silbing = firstNode.prevSibling;
        if (silbing) {
          if (silbing.isContainerNode) {
            var place = getSuitablePlaceForNode(silbing, firstNode, null);
            silbing.insertAfter(firstNode, place.ref, true);
          } else {
            parent.insertBefore(firstNode, silbing, true);
          }
          firstNode === null || firstNode === void 0 ? void 0 : firstNode.select();
        } else {
          var _place = getSuitablePlaceForNode(parent, firstNode, null); // upwards
          if (_place) {
            var container = _place.container.internalToShellNode();
            container.insertBefore(firstNode, _place.ref);
            firstNode === null || firstNode === void 0 ? void 0 : firstNode.select();
          }
        }
      });
      hotkey.bind(['option+down'], function (e, action) {
        logger.info("action ".concat(action, " is triggered"));
        if (canvas.isInLiveEditing) {
          return;
        }
        var doc = project.getCurrentDocument();
        if (Object(utils_src["H" /* isFormEvent */])(e) || !doc) {
          return;
        }
        e.preventDefault();
        var selected = doc.selection.getTopNodes(true);
        if (!selected || selected.length < 1) {
          return;
        }
        // TODO: 此处需要增加判断当前节点是否可被操作移动，原 ve 里是用 node.canOperating() 来判断
        // TODO: 移动逻辑也需要重新梳理，对于移动目标位置的选择，是否可以移入，需要增加判断
        var firstNode = selected[0];
        var parent = firstNode === null || firstNode === void 0 ? void 0 : firstNode.parent;
        if (!parent) {
          return;
        }
        var silbing = firstNode.nextSibling;
        if (silbing) {
          if (silbing.isContainerNode) {
            silbing.insertBefore(firstNode, undefined);
          } else {
            parent.insertAfter(firstNode, silbing, true);
          }
          firstNode === null || firstNode === void 0 ? void 0 : firstNode.select();
        } else {
          var place = getSuitablePlaceForNode(parent, firstNode, null); // upwards
          if (place) {
            var container = place.container.internalToShellNode();
            container.insertAfter(firstNode, place.ref, true);
            firstNode === null || firstNode === void 0 ? void 0 : firstNode.select();
          }
        }
      });
    }
  };
};
builtin_hotkey_builtinHotkey.pluginName = '___builtin_hotkey___';
// EXTERNAL MODULE: ./src/locale/en-US.json
var src_locale_en_US = __webpack_require__(41);

// EXTERNAL MODULE: ./src/locale/zh-CN.json
var src_locale_zh_CN = __webpack_require__(31);

// CONCATENATED MODULE: ./src/locale/index.ts



var locale_ref = (src["createIntl"] === null || src["createIntl"] === void 0 ? void 0 : Object(src["createIntl"])({
    'en-US': src_locale_en_US,
    'zh-CN': src_locale_zh_CN
  })) || {
    intl: function intl(id) {
      return src_locale_zh_CN[id];
    }
  },
  src_locale_intl_0 = locale_ref.intl,
  src_locale_getLocale_0 = locale_ref.getLocale;

// CONCATENATED MODULE: ./src/inner-plugins/default-context-menu.ts
function default_context_menu_regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return default_context_menu_regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i.return) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (default_context_menu_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, default_context_menu_regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, default_context_menu_regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), default_context_menu_regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", default_context_menu_regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), default_context_menu_regeneratorDefine2(u), default_context_menu_regeneratorDefine2(u, o, "Generator"), default_context_menu_regeneratorDefine2(u, n, function () { return this; }), default_context_menu_regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (default_context_menu_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function default_context_menu_regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } default_context_menu_regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { default_context_menu_regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, default_context_menu_regeneratorDefine2(e, r, n, t); }
function default_context_menu_asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function default_context_menu_asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { default_context_menu_asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { default_context_menu_asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }




function getNodesSchema(nodes) {
  var componentsTree = nodes.map(function (node) {
    return node === null || node === void 0 ? void 0 : node.exportSchema(types_src["i" /* IPublicEnumTransformStage */].Clone);
  });
  var data = {
    type: 'nodeSchema',
    componentsMap: {},
    componentsTree: componentsTree
  };
  return data;
}
function getClipboardText() {
  return _getClipboardText.apply(this, arguments);
}
function _getClipboardText() {
  _getClipboardText = default_context_menu_asyncToGenerator(/*#__PURE__*/default_context_menu_regenerator().m(function _callee3() {
    return default_context_menu_regenerator().w(function (_context3) {
      while (1) switch (_context3.n) {
        case 0:
          return _context3.a(2, new Promise(function (resolve, reject) {
            // 使用 Clipboard API 读取剪贴板内容
            navigator.clipboard.readText().then(function (text) {
              try {
                var data = JSON.parse(text);
                if (Object(utils_src["U" /* isProjectSchema */])(data)) {
                  resolve(data.componentsTree);
                } else {
                  external_Next_["Message"].error(src_locale_intl_0('NotValidNodeData'));
                  reject(new Error(src_locale_intl_0('NotValidNodeData')));
                }
              } catch (error) {
                external_Next_["Message"].error(src_locale_intl_0('NotValidNodeData'));
                reject(error);
              }
            }, function (err) {
              reject(err);
            });
          }));
      }
    }, _callee3);
  }));
  return _getClipboardText.apply(this, arguments);
}
var default_context_menu_defaultContextMenu = function defaultContextMenu(ctx) {
  var material = ctx.material,
    canvas = ctx.canvas,
    common = ctx.common;
  var clipboard = canvas.clipboard;
  var utilsIntl = common.utils.intl;
  return {
    init: function init() {
      material.addContextMenuOption({
        name: 'selectComponent',
        title: src_locale_intl_0('SelectComponents'),
        condition: function condition() {
          var nodes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
          return nodes.length === 1;
        },
        items: [{
          name: 'nodeTree',
          type: types_src["f" /* IPublicEnumContextMenuType */].NODE_TREE
        }]
      });
      material.addContextMenuOption({
        name: 'copyAndPaste',
        title: src_locale_intl_0('CopyAndPaste'),
        disabled: function disabled() {
          var nodes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
          return (nodes === null || nodes === void 0 ? void 0 : nodes.filter(function (node) {
            return !(node !== null && node !== void 0 && node.canPerformAction('copy'));
          }).length) > 0;
        },
        condition: function condition(nodes) {
          return (nodes === null || nodes === void 0 ? void 0 : nodes.length) === 1;
        },
        action: function action(nodes) {
          var node = nodes === null || nodes === void 0 ? void 0 : nodes[0];
          if (!node) {
            return;
          }
          var doc = node.document,
            parent = node.parent,
            index = node.index;
          var data = getNodesSchema(nodes);
          clipboard.setData(data);
          if (parent) {
            var newNode = doc === null || doc === void 0 ? void 0 : doc.insertNode(parent, node, (index !== null && index !== void 0 ? index : 0) + 1, true);
            newNode === null || newNode === void 0 ? void 0 : newNode.select();
          }
        }
      });
      material.addContextMenuOption({
        name: 'copy',
        title: src_locale_intl_0('Copy'),
        disabled: function disabled() {
          var nodes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
          return (nodes === null || nodes === void 0 ? void 0 : nodes.filter(function (node) {
            return !(node !== null && node !== void 0 && node.canPerformAction('copy'));
          }).length) > 0;
        },
        condition: function condition() {
          var nodes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
          return (nodes === null || nodes === void 0 ? void 0 : nodes.length) > 0;
        },
        action: function action(nodes) {
          if (!nodes || nodes.length < 1) {
            return;
          }
          var data = getNodesSchema(nodes);
          clipboard.setData(data);
        }
      });
      material.addContextMenuOption({
        name: 'pasteToBottom',
        title: src_locale_intl_0('PasteToTheBottom'),
        condition: function condition(nodes) {
          return (nodes === null || nodes === void 0 ? void 0 : nodes.length) === 1;
        },
        action: function action(nodes) {
          return default_context_menu_asyncToGenerator(/*#__PURE__*/default_context_menu_regenerator().m(function _callee() {
            var node, doc, parent, index, nodeSchema, canAddNodes, _nodes, _t;
            return default_context_menu_regenerator().w(function (_context) {
              while (1) switch (_context.p = _context.n) {
                case 0:
                  if (!(!nodes || nodes.length < 1)) {
                    _context.n = 1;
                    break;
                  }
                  return _context.a(2);
                case 1:
                  node = nodes[0];
                  doc = node.document, parent = node.parent, index = node.index;
                  _context.p = 2;
                  _context.n = 3;
                  return getClipboardText();
                case 3:
                  nodeSchema = _context.v;
                  if (!(nodeSchema.length === 0)) {
                    _context.n = 4;
                    break;
                  }
                  return _context.a(2);
                case 4:
                  if (!parent) {
                    _context.n = 6;
                    break;
                  }
                  canAddNodes = nodeSchema.filter(function (nodeSchema) {
                    var dragNodeObject = {
                      type: types_src["g" /* IPublicEnumDragObjectType */].NodeData,
                      data: nodeSchema
                    };
                    return doc === null || doc === void 0 ? void 0 : doc.checkNesting(parent, dragNodeObject);
                  });
                  if (!(canAddNodes.length === 0)) {
                    _context.n = 5;
                    break;
                  }
                  external_Next_["Message"].error("".concat(nodeSchema.map(function (d) {
                    return utilsIntl(d.title || d.componentName);
                  }).join(','), "\u7B49\u7EC4\u4EF6\u65E0\u6CD5\u653E\u7F6E\u5230").concat(utilsIntl(parent.title || parent.componentName), "\u5185"));
                  return _context.a(2);
                case 5:
                  _nodes = [];
                  canAddNodes.forEach(function (schema, schemaIndex) {
                    var node = doc === null || doc === void 0 ? void 0 : doc.insertNode(parent, schema, (index !== null && index !== void 0 ? index : 0) + 1 + schemaIndex, true);
                    node && _nodes.push(node);
                  });
                  doc === null || doc === void 0 ? void 0 : doc.selection.selectAll(_nodes.map(function (node) {
                    return node === null || node === void 0 ? void 0 : node.id;
                  }));
                case 6:
                  _context.n = 8;
                  break;
                case 7:
                  _context.p = 7;
                  _t = _context.v;
                  console.error(_t);
                case 8:
                  return _context.a(2);
              }
            }, _callee, null, [[2, 7]]);
          }))();
        }
      });
      material.addContextMenuOption({
        name: 'pasteToInner',
        title: src_locale_intl_0('PasteToTheInside'),
        condition: function condition(nodes) {
          return (nodes === null || nodes === void 0 ? void 0 : nodes.length) === 1;
        },
        disabled: function disabled() {
          var nodes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
          // 获取粘贴数据
          var node = nodes === null || nodes === void 0 ? void 0 : nodes[0];
          return !node.isContainerNode;
        },
        action: function action(nodes) {
          return default_context_menu_asyncToGenerator(/*#__PURE__*/default_context_menu_regenerator().m(function _callee2() {
            var node, doc, _node$children, nodeSchema, index, canAddNodes, _nodes2, _t2;
            return default_context_menu_regenerator().w(function (_context2) {
              while (1) switch (_context2.p = _context2.n) {
                case 0:
                  node = nodes === null || nodes === void 0 ? void 0 : nodes[0];
                  if (node) {
                    _context2.n = 1;
                    break;
                  }
                  return _context2.a(2);
                case 1:
                  doc = node.document;
                  _context2.p = 2;
                  _context2.n = 3;
                  return getClipboardText();
                case 3:
                  nodeSchema = _context2.v;
                  index = ((_node$children = node.children) === null || _node$children === void 0 ? void 0 : _node$children.size) || 0;
                  if (!(nodeSchema.length === 0)) {
                    _context2.n = 4;
                    break;
                  }
                  return _context2.a(2);
                case 4:
                  canAddNodes = nodeSchema.filter(function (nodeSchema) {
                    var dragNodeObject = {
                      type: types_src["g" /* IPublicEnumDragObjectType */].NodeData,
                      data: nodeSchema
                    };
                    return doc === null || doc === void 0 ? void 0 : doc.checkNesting(node, dragNodeObject);
                  });
                  if (!(canAddNodes.length === 0)) {
                    _context2.n = 5;
                    break;
                  }
                  external_Next_["Message"].error("".concat(nodeSchema.map(function (d) {
                    return utilsIntl(d.title || d.componentName);
                  }).join(','), "\u7B49\u7EC4\u4EF6\u65E0\u6CD5\u653E\u7F6E\u5230").concat(utilsIntl(node.title || node.componentName), "\u5185"));
                  return _context2.a(2);
                case 5:
                  _nodes2 = [];
                  nodeSchema.forEach(function (schema, schemaIndex) {
                    var newNode = doc === null || doc === void 0 ? void 0 : doc.insertNode(node, schema, (index !== null && index !== void 0 ? index : 0) + 1 + schemaIndex, true);
                    newNode && _nodes2.push(newNode);
                  });
                  doc === null || doc === void 0 ? void 0 : doc.selection.selectAll(_nodes2.map(function (node) {
                    return node === null || node === void 0 ? void 0 : node.id;
                  }));
                  _context2.n = 7;
                  break;
                case 6:
                  _context2.p = 6;
                  _t2 = _context2.v;
                  console.error(_t2);
                case 7:
                  return _context2.a(2);
              }
            }, _callee2, null, [[2, 6]]);
          }))();
        }
      });
      material.addContextMenuOption({
        name: 'delete',
        title: src_locale_intl_0('Delete'),
        disabled: function disabled() {
          var nodes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
          return (nodes === null || nodes === void 0 ? void 0 : nodes.filter(function (node) {
            return !(node !== null && node !== void 0 && node.canPerformAction('remove'));
          }).length) > 0;
        },
        condition: function condition() {
          var nodes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
          return nodes.length > 0;
        },
        action: function action(nodes) {
          nodes === null || nodes === void 0 ? void 0 : nodes.forEach(function (node) {
            node.remove();
          });
        }
      });
    }
  };
};
default_context_menu_defaultContextMenu.pluginName = '___default_context_menu___';
// CONCATENATED MODULE: ../plugin-command/src/node-command.ts

var sampleNodeSchema = {
  type: 'shape',
  value: [{
    name: 'id',
    propType: 'string'
  }, {
    name: 'componentName',
    propType: {
      type: 'string',
      isRequired: true
    }
  }, {
    name: 'props',
    propType: 'object'
  }, {
    name: 'condition',
    propType: 'any'
  }, {
    name: 'loop',
    propType: 'any'
  }, {
    name: 'loopArgs',
    propType: 'any'
  }, {
    name: 'children',
    propType: 'any'
  }]
};
var nodeSchemaPropType = {
  type: 'shape',
  value: [sampleNodeSchema.value[0], sampleNodeSchema.value[1], {
    name: 'props',
    propType: {
      type: 'objectOf',
      value: {
        type: 'oneOfType',
        // 不会强制校验，更多作为提示
        value: ['any', {
          type: 'shape',
          value: [{
            name: 'type',
            propType: {
              type: 'oneOf',
              value: ['JSExpression']
            }
          }, {
            name: 'value',
            propType: 'string'
          }]
        }, {
          type: 'shape',
          value: [{
            name: 'type',
            propType: {
              type: 'oneOf',
              value: ['JSFunction']
            }
          }, {
            name: 'value',
            propType: 'string'
          }]
        }, {
          type: 'shape',
          value: [{
            name: 'type',
            propType: {
              type: 'oneOf',
              value: ['JSSlot']
            }
          }, {
            name: 'value',
            propType: {
              type: 'oneOfType',
              value: [sampleNodeSchema, {
                type: 'arrayOf',
                value: sampleNodeSchema
              }]
            }
          }]
        }]
      }
    }
  }, {
    name: 'condition',
    propType: {
      type: 'oneOfType',
      value: ['bool', {
        type: 'shape',
        value: [{
          name: 'type',
          propType: {
            type: 'oneOf',
            value: ['JSExpression']
          }
        }, {
          name: 'value',
          propType: 'string'
        }]
      }]
    }
  }, {
    name: 'loop',
    propType: {
      type: 'oneOfType',
      value: ['array', {
        type: 'shape',
        value: [{
          name: 'type',
          propType: {
            type: 'oneOf',
            value: ['JSExpression']
          }
        }, {
          name: 'value',
          propType: 'string'
        }]
      }]
    }
  }, {
    name: 'loopArgs',
    propType: {
      type: 'oneOfType',
      value: [{
        type: 'arrayOf',
        value: {
          type: 'oneOfType',
          value: ['any', {
            type: 'shape',
            value: [{
              name: 'type',
              propType: {
                type: 'oneOf',
                value: ['JSExpression']
              }
            }, {
              name: 'value',
              propType: 'string'
            }]
          }]
        }
      }, {
        type: 'shape',
        value: [{
          name: 'type',
          propType: {
            type: 'oneOf',
            value: ['JSExpression']
          }
        }, {
          name: 'value',
          propType: 'string'
        }]
      }]
    }
  }, {
    name: 'children',
    propType: {
      type: 'arrayOf',
      value: sampleNodeSchema
    }
  }]
};
var node_command_nodeCommand = function nodeCommand(ctx) {
  var command = ctx.command,
    project = ctx.project;
  return {
    init: function init() {
      command.registerCommand({
        name: 'add',
        description: 'Add a node to the canvas.',
        handler: function handler(param) {
          var _project$currentDocum, _parentNode$children, _project$currentDocum2;
          var parentNodeId = param.parentNodeId,
            nodeSchema = param.nodeSchema,
            index = param.index;
          var project = ctx.project;
          var parentNode = (_project$currentDocum = project.currentDocument) === null || _project$currentDocum === void 0 ? void 0 : _project$currentDocum.getNodeById(parentNodeId);
          if (!parentNode) {
            throw new Error("Can not find node '".concat(parentNodeId, "'."));
          }
          if (!parentNode.isContainerNode) {
            throw new Error("Node '".concat(parentNodeId, "' is not a container node."));
          }
          if (!Object(utils_src["Q" /* isNodeSchema */])(nodeSchema)) {
            throw new Error('Invalid node.');
          }
          if (index < 0 || index > (((_parentNode$children = parentNode.children) === null || _parentNode$children === void 0 ? void 0 : _parentNode$children.size) || 0)) {
            throw new Error("Invalid index '".concat(index, "'."));
          }
          (_project$currentDocum2 = project.currentDocument) === null || _project$currentDocum2 === void 0 ? void 0 : _project$currentDocum2.insertNode(parentNode, nodeSchema, index);
        },
        parameters: [{
          name: 'parentNodeId',
          propType: 'string',
          description: 'The id of the parent node.'
        }, {
          name: 'nodeSchema',
          propType: nodeSchemaPropType,
          description: 'The node to be added.'
        }, {
          name: 'index',
          propType: 'number',
          description: 'The index of the node to be added.'
        }]
      });
      command.registerCommand({
        name: 'move',
        description: 'Move a node to another node.',
        handler: function handler(param) {
          var _project$currentDocum3, _project$currentDocum4, _targetNode$children, _project$currentDocum5, _project$currentDocum6;
          var nodeId = param.nodeId,
            targetNodeId = param.targetNodeId,
            _param$index = param.index,
            index = _param$index === void 0 ? 0 : _param$index;
          if (!nodeId) {
            throw new Error('Invalid node id.');
          }
          if (!targetNodeId) {
            throw new Error('Invalid target node id.');
          }
          var node = (_project$currentDocum3 = project.currentDocument) === null || _project$currentDocum3 === void 0 ? void 0 : _project$currentDocum3.getNodeById(nodeId);
          var targetNode = (_project$currentDocum4 = project.currentDocument) === null || _project$currentDocum4 === void 0 ? void 0 : _project$currentDocum4.getNodeById(targetNodeId);
          if (!node) {
            throw new Error("Can not find node '".concat(nodeId, "'."));
          }
          if (!targetNode) {
            throw new Error("Can not find node '".concat(targetNodeId, "'."));
          }
          if (!targetNode.isContainerNode) {
            throw new Error("Node '".concat(targetNodeId, "' is not a container node."));
          }
          if (index < 0 || index > (((_targetNode$children = targetNode.children) === null || _targetNode$children === void 0 ? void 0 : _targetNode$children.size) || 0)) {
            throw new Error("Invalid index '".concat(index, "'."));
          }
          (_project$currentDocum5 = project.currentDocument) === null || _project$currentDocum5 === void 0 ? void 0 : _project$currentDocum5.removeNode(node);
          (_project$currentDocum6 = project.currentDocument) === null || _project$currentDocum6 === void 0 ? void 0 : _project$currentDocum6.insertNode(targetNode, node, index);
        },
        parameters: [{
          name: 'nodeId',
          propType: {
            type: 'string',
            isRequired: true
          },
          description: 'The id of the node to be moved.'
        }, {
          name: 'targetNodeId',
          propType: {
            type: 'string',
            isRequired: true
          },
          description: 'The id of the target node.'
        }, {
          name: 'index',
          propType: 'number',
          description: 'The index of the node to be moved.'
        }]
      });
      command.registerCommand({
        name: 'remove',
        description: 'Remove a node from the canvas.',
        handler: function handler(param) {
          var _project$currentDocum7, _project$currentDocum8;
          var nodeId = param.nodeId;
          var node = (_project$currentDocum7 = project.currentDocument) === null || _project$currentDocum7 === void 0 ? void 0 : _project$currentDocum7.getNodeById(nodeId);
          if (!node) {
            throw new Error("Can not find node '".concat(nodeId, "'."));
          }
          (_project$currentDocum8 = project.currentDocument) === null || _project$currentDocum8 === void 0 ? void 0 : _project$currentDocum8.removeNode(node);
        },
        parameters: [{
          name: 'nodeId',
          propType: 'string',
          description: 'The id of the node to be removed.'
        }]
      });
      command.registerCommand({
        name: 'update',
        description: 'Update a node.',
        handler: function handler(param) {
          var _project$currentDocum9;
          var nodeId = param.nodeId,
            nodeSchema = param.nodeSchema;
          var node = (_project$currentDocum9 = project.currentDocument) === null || _project$currentDocum9 === void 0 ? void 0 : _project$currentDocum9.getNodeById(nodeId);
          if (!node) {
            throw new Error("Can not find node '".concat(nodeId, "'."));
          }
          if (!Object(utils_src["Q" /* isNodeSchema */])(nodeSchema)) {
            throw new Error('Invalid node.');
          }
          node.importSchema(nodeSchema);
        },
        parameters: [{
          name: 'nodeId',
          propType: 'string',
          description: 'The id of the node to be updated.'
        }, {
          name: 'nodeSchema',
          propType: nodeSchemaPropType,
          description: 'The node to be updated.'
        }]
      });
      command.registerCommand({
        name: 'updateProps',
        description: 'Update the properties of a node.',
        handler: function handler(param) {
          var _project$currentDocum0;
          var nodeId = param.nodeId,
            props = param.props;
          var node = (_project$currentDocum0 = project.currentDocument) === null || _project$currentDocum0 === void 0 ? void 0 : _project$currentDocum0.getNodeById(nodeId);
          if (!node) {
            throw new Error("Can not find node '".concat(nodeId, "'."));
          }
          Object.keys(props).forEach(function (key) {
            node.setPropValue(key, props[key]);
          });
        },
        parameters: [{
          name: 'nodeId',
          propType: 'string',
          description: 'The id of the node to be updated.'
        }, {
          name: 'props',
          propType: 'object',
          description: 'The properties to be updated.'
        }]
      });
      command.registerCommand({
        name: 'removeProps',
        description: 'Remove the properties of a node.',
        handler: function handler(param) {
          var _project$currentDocum1;
          var nodeId = param.nodeId,
            propNames = param.propNames;
          var node = (_project$currentDocum1 = project.currentDocument) === null || _project$currentDocum1 === void 0 ? void 0 : _project$currentDocum1.getNodeById(nodeId);
          if (!node) {
            throw new Error("Can not find node '".concat(nodeId, "'."));
          }
          propNames.forEach(function (key) {
            var _node$props, _node$props$getProp;
            (_node$props = node.props) === null || _node$props === void 0 ? void 0 : (_node$props$getProp = _node$props.getProp(key)) === null || _node$props$getProp === void 0 ? void 0 : _node$props$getProp.remove();
          });
        },
        parameters: [{
          name: 'nodeId',
          propType: 'string',
          description: 'The id of the node to be updated.'
        }, {
          name: 'propNames',
          propType: 'array',
          description: 'The properties to be removed.'
        }]
      });
    },
    destroy: function destroy() {
      command.unregisterCommand('node:add');
      command.unregisterCommand('node:move');
      command.unregisterCommand('node:remove');
      command.unregisterCommand('node:update');
      command.unregisterCommand('node:updateProps');
      command.unregisterCommand('node:removeProps');
    }
  };
};
node_command_nodeCommand.pluginName = '___node_command___';
node_command_nodeCommand.meta = {
  commandScope: 'node'
};
// CONCATENATED MODULE: ../plugin-command/src/history-command.ts
var historyCommand = function historyCommand(ctx) {
  var command = ctx.command,
    project = ctx.project;
  return {
    init: function init() {
      command.registerCommand({
        name: 'undo',
        description: 'Undo the last operation.',
        handler: function handler() {
          var _project$currentDocum, _project$currentDocum2;
          var state = ((_project$currentDocum = project.currentDocument) === null || _project$currentDocum === void 0 ? void 0 : _project$currentDocum.history.getState()) || 0;
          var enable = !!(state & 1);
          if (!enable) {
            throw new Error('Can not undo.');
          }
          (_project$currentDocum2 = project.currentDocument) === null || _project$currentDocum2 === void 0 ? void 0 : _project$currentDocum2.history.back();
        }
      });
      command.registerCommand({
        name: 'redo',
        description: 'Redo the last operation.',
        handler: function handler() {
          var _project$currentDocum3, _project$currentDocum4;
          var state = ((_project$currentDocum3 = project.currentDocument) === null || _project$currentDocum3 === void 0 ? void 0 : _project$currentDocum3.history.getState()) || 0;
          var enable = !!(state & 2);
          if (!enable) {
            throw new Error('Can not redo.');
          }
          (_project$currentDocum4 = project.currentDocument) === null || _project$currentDocum4 === void 0 ? void 0 : _project$currentDocum4.history.forward();
        }
      });
    },
    destroy: function destroy() {
      command.unregisterCommand('history:undo');
      command.unregisterCommand('history:redo');
    }
  };
};
historyCommand.pluginName = '___history_command___';
historyCommand.meta = {
  commandScope: 'history'
};
// CONCATENATED MODULE: ../plugin-command/src/index.ts
function plugin_command_src_regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return plugin_command_src_regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i.return) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (plugin_command_src_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, plugin_command_src_regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, plugin_command_src_regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), plugin_command_src_regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", plugin_command_src_regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), plugin_command_src_regeneratorDefine2(u), plugin_command_src_regeneratorDefine2(u, o, "Generator"), plugin_command_src_regeneratorDefine2(u, n, function () { return this; }), plugin_command_src_regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (plugin_command_src_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function plugin_command_src_regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } plugin_command_src_regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { plugin_command_src_regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, plugin_command_src_regeneratorDefine2(e, r, n, t); }
function plugin_command_src_asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function plugin_command_src_asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { plugin_command_src_asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { plugin_command_src_asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }


var src_CommandPlugin = function CommandPlugin(ctx) {
  var plugins = ctx.plugins;
  return {
    init: function init() {
      return plugin_command_src_asyncToGenerator(/*#__PURE__*/plugin_command_src_regenerator().m(function _callee() {
        return plugin_command_src_regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              _context.n = 1;
              return plugins.register(node_command_nodeCommand, {}, {
                autoInit: true
              });
            case 1:
              _context.n = 2;
              return plugins.register(historyCommand, {}, {
                autoInit: true
              });
            case 2:
              return _context.a(2);
          }
        }, _callee);
      }))();
    },
    destroy: function destroy() {
      plugins.delete(node_command_nodeCommand.pluginName);
      plugins.delete(historyCommand.pluginName);
    }
  };
};
src_CommandPlugin.pluginName = '___default_command___';
src_CommandPlugin.meta = {
  commandScope: 'common'
};
/* harmony default export */ var plugin_command_src = (src_CommandPlugin);
// CONCATENATED MODULE: ../plugin-outline-pane/src/icons/lock.tsx
function lock_extends() { return lock_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, lock_extends.apply(null, arguments); }

function lock_IconLock(props) {
  return /*#__PURE__*/React.createElement(utils_src["f" /* SVGIcon */], lock_extends({
    viewBox: "0 0 1024 1024"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M832 464h-68V240c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zM540 701v53c0 4.4-3.6 8-8 8h-40c-4.4 0-8-3.6-8-8v-53c-12.1-8.7-20-22.9-20-39 0-26.5 21.5-48 48-48s48 21.5 48 48c0 16.1-7.9 30.3-20 39z m152-237H332V240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v224z"
  }));
}
lock_IconLock.displayName = 'IconLock';
// CONCATENATED MODULE: ../plugin-outline-pane/src/icons/unlock.tsx
function icons_unlock_extends() { return icons_unlock_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, icons_unlock_extends.apply(null, arguments); }

function unlock_IconUnlock(props) {
  return /*#__PURE__*/React.createElement(utils_src["f" /* SVGIcon */], icons_unlock_extends({
    viewBox: "0 0 1024 1024"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M832 464H332V240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v68c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-68c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32z m-40 376H232V536h560v304z"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M484 701v53c0 4.4 3.6 8 8 8h40c4.4 0 8-3.6 8-8v-53c12.1-8.7 20-22.9 20-39 0-26.5-21.5-48-48-48s-48 21.5-48 48c0 16.1 7.9 30.3 20 39z"
  }));
}
unlock_IconUnlock.displayName = 'IconUnlock';
// CONCATENATED MODULE: ../plugin-outline-pane/src/icons/arrow-right.tsx
function arrow_right_extends() { return arrow_right_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, arrow_right_extends.apply(null, arguments); }

function IconArrowRight(props) {
  return /*#__PURE__*/React.createElement(utils_src["f" /* SVGIcon */], arrow_right_extends({
    viewBox: "0 0 1024 1024"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M512.002047 771.904425c-10.152221 0.518816-20.442588-2.800789-28.202319-10.598382L77.902254 315.937602c-14.548344-14.618952-14.548344-38.318724 0-52.933583 14.544251-14.614859 38.118156-14.614859 52.662407 0l381.437385 418.531212L893.432269 263.004019c14.544251-14.614859 38.125319-14.614859 52.662407 0 14.552437 14.614859 14.552437 38.314631 0 52.933583L540.205389 761.307066C532.451798 769.103636 522.158361 772.424264 512.002047 771.904425z"
  }));
}
IconArrowRight.displayName = 'IconArrowRight';
// CONCATENATED MODULE: ../plugin-outline-pane/src/icons/cond.tsx
function cond_extends() { return cond_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, cond_extends.apply(null, arguments); }

function IconCond(props) {
  return /*#__PURE__*/React.createElement(utils_src["f" /* SVGIcon */], cond_extends({
    viewBox: "0 0 1024 1024"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M479.552 276.544l296.896 2.752v75.712L960 249.024l-183.552-106.048v92.48h-271.36l-46.656-2.752-190.784 203.648 30.976 30.976 180.928-190.784z m296.896 484.928l-253.056-2.816-262.976-263.04H64v43.904h175.296l262.912 262.976 274.176 2.816v75.712L960 774.976l-183.616-105.984 0.064 92.48z"
  }));
}
IconCond.displayName = 'IconCond';
// CONCATENATED MODULE: ../plugin-outline-pane/src/icons/eye-close.tsx
function eye_close_extends() { return eye_close_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, eye_close_extends.apply(null, arguments); }

function IconEyeClose(props) {
  return /*#__PURE__*/React.createElement(utils_src["f" /* SVGIcon */], eye_close_extends({
    viewBox: "0 0 1024 1024"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M512.7 700.9c-102.1 0-184.9-82.8-184.9-184.9 0-28.6 6.5-55.6 18-79.7l-93.7-93.7C138.9 418.1 65.2 514 65.2 514s200.4 260.7 447.6 260.7c50.2 0 98.6-10.8 143.6-27.9l-63.9-63.9c-24.2 11.5-51.2 18-79.8 18z"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M960.3 514S759.9 253.3 512.7 253.3c-49.5 0-97.2 10.5-141.7 27.2L243.5 153.1l-45.3 45.3 262.3 262.2c-13.1 13.3-21.2 31.5-21.2 51.6 0 40.6 32.9 73.4 73.4 73.4 20.1 0 38.4-8.1 51.6-21.2l260.9 260.8 45.3-45.3-95.6-95.6C887.2 609.1 960.3 514 960.3 514z m-376.7-20.9c-6.8-25.2-26.6-45.1-51.9-51.9L437.5 347c23-10.3 48.5-16 75.3-16 102.1 0 184.9 82.8 184.9 184.9 0 26.8-5.7 52.2-15.9 75.2l-98.2-98z"
  }));
}
IconEyeClose.displayName = 'IconEyeClose';
// CONCATENATED MODULE: ../plugin-outline-pane/src/icons/eye.tsx
function eye_extends() { return eye_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, eye_extends.apply(null, arguments); }

function IconEye(props) {
  return /*#__PURE__*/React.createElement(utils_src["f" /* SVGIcon */], eye_extends({
    viewBox: "0 0 1024 1024"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M512 256c-163.8 0-291.4 97.6-448 256 134.8 135.4 248 256 448 256 199.8 0 346.8-152.8 448-253.2C856.4 397.2 709.6 256 512 256z m0 438.6c-98.8 0-179.2-82-179.2-182.6 0-100.8 80.4-182.6 179.2-182.6s179.2 82 179.2 182.6c0 100.8-80.4 182.6-179.2 182.6z"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M512 448c0-15.8 5.8-30.2 15.2-41.4-5-0.8-10-1.2-15.2-1.2-57.6 0-104.6 47.8-104.6 106.6s47 106.6 104.6 106.6 104.6-47.8 104.6-106.6c0-4.6-0.4-9.2-0.8-13.8-11 8.6-24.6 13.8-39.6 13.8-35.6 0-64.2-28.6-64.2-64z"
  }));
}
IconEye.displayName = 'IconEye';
// CONCATENATED MODULE: ../plugin-outline-pane/src/icons/filter.tsx
function filter_extends() { return filter_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, filter_extends.apply(null, arguments); }

function IconFilter(props) {
  return /*#__PURE__*/React.createElement(utils_src["f" /* SVGIcon */], filter_extends({
    viewBox: "0 0 1024 1024"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M911.457097 168.557714a35.986286 35.986286 0 0 1-8.009143 40.009143L621.73824 490.276571V914.285714c0 14.848-9.142857 28.013714-22.272 33.718857A42.349714 42.349714 0 0 1 585.166811 950.857143a34.084571 34.084571 0 0 1-25.709714-10.861714l-146.285714-146.285715A36.425143 36.425143 0 0 1 402.309669 768v-277.723429L120.599954 208.566857a35.986286 35.986286 0 0 1-8.009143-40.009143C118.295954 155.428571 131.461669 146.285714 146.309669 146.285714h731.428571c14.848 0 28.013714 9.142857 33.718857 22.272z",
    fill: "#666",
    "p-id": "2025"
  }));
}
IconFilter.displayName = 'IconFilter';
// CONCATENATED MODULE: ../plugin-outline-pane/src/icons/loop.tsx
function loop_extends() { return loop_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, loop_extends.apply(null, arguments); }

function IconLoop(props) {
  return /*#__PURE__*/React.createElement(utils_src["f" /* SVGIcon */], loop_extends({
    viewBox: "0 0 1024 1024"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M60.235294 542.117647c0 132.879059 103.062588 240.941176 229.677176 240.941176l0 60.235294c-159.864471 0-289.912471-135.107765-289.912471-301.176471s130.048-301.176471 289.912471-301.176471l254.735059 0-99.147294-99.147294 42.586353-42.586353 171.911529 171.851294-171.851294 171.911529-42.646588-42.646588 99.207529-99.147294-254.795294 0c-126.614588 0-229.677176 108.062118-229.677176 240.941176zM734.087529 240.941176l0 60.235294c126.614588 0 229.677176 108.062118 229.677176 240.941176s-103.062588 240.941176-229.677176 240.941176l-254.795294 0 99.147294-99.147294-42.586353-42.586353-171.851294 171.851294 171.911529 171.911529 42.586353-42.586353-99.207529-99.207529 254.735059 0c159.924706 0 289.972706-135.107765 289.972706-301.176471s-130.048-301.176471-289.912471-301.176471z"
  }));
}
IconLoop.displayName = 'IconLoop';
// CONCATENATED MODULE: ../plugin-outline-pane/src/icons/radio-active.tsx
function radio_active_extends() { return radio_active_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, radio_active_extends.apply(null, arguments); }

function IconRadioActive(props) {
  return /*#__PURE__*/React.createElement(utils_src["f" /* SVGIcon */], radio_active_extends({
    viewBox: "0 0 1024 1024"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M512 1024A512 512 0 1 1 512 0a512 512 0 0 1 0 1024z m0-256a256 256 0 1 0 0-512 256 256 0 0 0 0 512z"
  }));
}
IconRadioActive.displayName = 'IconRadioActive';
// CONCATENATED MODULE: ../plugin-outline-pane/src/icons/radio.tsx
function radio_extends() { return radio_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, radio_extends.apply(null, arguments); }

function IconRadio(props) {
  return /*#__PURE__*/React.createElement(utils_src["f" /* SVGIcon */], radio_extends({
    viewBox: "0 0 1024 1024"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M512 1024A512 512 0 1 1 512 0a512 512 0 0 1 0 1024z m0-64A448 448 0 1 0 512 64a448 448 0 0 0 0 896z"
  }));
}
IconRadio.displayName = 'IconRadio';
// CONCATENATED MODULE: ../plugin-outline-pane/src/icons/setting.tsx
function icons_setting_extends() { return icons_setting_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, icons_setting_extends.apply(null, arguments); }

function setting_IconSetting(props) {
  return /*#__PURE__*/React.createElement(utils_src["f" /* SVGIcon */], icons_setting_extends({
    viewBox: "0 0 1024 1024"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M965.824 405.952a180.48 180.48 0 0 1-117.12-85.376 174.464 174.464 0 0 1-16-142.08 22.208 22.208 0 0 0-7.04-23.552 480.576 480.576 0 0 0-153.6-89.216 23.104 23.104 0 0 0-24.32 5.76 182.208 182.208 0 0 1-135.68 57.92 182.208 182.208 0 0 1-133.12-56.64 23.104 23.104 0 0 0-26.88-7.04 478.656 478.656 0 0 0-153.6 89.856 22.208 22.208 0 0 0-7.04 23.552 174.464 174.464 0 0 1-16 141.44A180.48 180.48 0 0 1 58.24 405.952a22.4 22.4 0 0 0-17.28 17.792 455.08 455.08 0 0 0 0 176.512 22.4 22.4 0 0 0 17.28 17.792 180.48 180.48 0 0 1 117.12 84.736c25.408 42.944 31.232 94.592 16 142.08a22.208 22.208 0 0 0 7.04 23.552A480.576 480.576 0 0 0 352 957.632h7.68a23.04 23.04 0 0 0 16.64-7.04 184.128 184.128 0 0 1 266.944 0c6.592 8.96 18.752 11.968 28.8 7.04a479.36 479.36 0 0 0 156.16-88.576 22.208 22.208 0 0 0 7.04-23.552 174.464 174.464 0 0 1 13.44-142.72 180.48 180.48 0 0 1 117.12-84.736 22.4 22.4 0 0 0 17.28-17.792 452.613 452.613 0 0 0 0-176.512 23.04 23.04 0 0 0-17.28-17.792z m-42.88 169.408a218.752 218.752 0 0 0-128 98.112 211.904 211.904 0 0 0-21.76 156.736 415.936 415.936 0 0 1-112 63.68 217.472 217.472 0 0 0-149.12-63.68 221.312 221.312 0 0 0-149.12 63.68 414.592 414.592 0 0 1-112-63.68c12.8-53.12 4.288-109.12-23.68-156.096A218.752 218.752 0 0 0 101.12 575.36a386.176 386.176 0 0 1 0-127.36 218.752 218.752 0 0 0 128-98.112c27.2-47.552 34.944-103.68 21.76-156.8a415.296 415.296 0 0 1 112-63.68A221.44 221.44 0 0 0 512 187.392a218.24 218.24 0 0 0 149.12-57.984 413.952 413.952 0 0 1 112 63.744 211.904 211.904 0 0 0 23.04 156.096 218.752 218.752 0 0 0 128 98.112 386.65 386.65 0 0 1 0 127.36l-1.28 0.64z"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M512 320.576c-105.984 0-192 85.568-192 191.104a191.552 191.552 0 0 0 192 191.104c106.112 0 192.064-85.568 192.064-191.104a190.72 190.72 0 0 0-56.256-135.168 192.448 192.448 0 0 0-135.744-55.936z m0 318.528c-70.656 0-128-57.088-128-127.424 0-70.4 57.344-127.36 128-127.36 70.72 0 128 56.96 128 127.36 0 33.792-13.44 66.176-37.44 90.112a128.32 128.32 0 0 1-90.496 37.312z"
  }));
}
setting_IconSetting.displayName = 'IconSetting';
// CONCATENATED MODULE: ../plugin-outline-pane/src/icons/delete.tsx
function delete_extends() { return delete_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, delete_extends.apply(null, arguments); }

function IconDelete(props) {
  return /*#__PURE__*/React.createElement(utils_src["f" /* SVGIcon */], delete_extends({
    viewBox: "0 0 1024 1024"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M224 256v639.84A64 64 0 0 0 287.84 960h448.32A64 64 0 0 0 800 895.84V256h64a32 32 0 1 0 0-64H160a32 32 0 1 0 0 64h64zM384 96c0-17.664 14.496-32 31.904-32h192.192C625.696 64 640 78.208 640 96c0 17.664-14.496 32-31.904 32H415.904A31.872 31.872 0 0 1 384 96z m-96 191.744C288 270.208 302.4 256 320.224 256h383.552C721.6 256 736 270.56 736 287.744v576.512C736 881.792 721.6 896 703.776 896H320.224A32.224 32.224 0 0 1 288 864.256V287.744zM352 352c0-17.696 14.208-32.032 32-32.032 17.664 0 32 14.24 32 32v448c0 17.664-14.208 32-32 32-17.664 0-32-14.24-32-32V352z m128 0c0-17.696 14.208-32.032 32-32.032 17.664 0 32 14.24 32 32v448c0 17.664-14.208 32-32 32-17.664 0-32-14.24-32-32V352z m128 0c0-17.696 14.208-32.032 32-32.032 17.664 0 32 14.24 32 32v448c0 17.664-14.208 32-32 32-17.664 0-32-14.24-32-32V352z"
  }));
}
IconDelete.displayName = 'IconDelete';
// CONCATENATED MODULE: ../plugin-outline-pane/src/icons/index.ts












// CONCATENATED MODULE: ../plugin-outline-pane/src/views/tree-title.tsx
function tree_title_typeof(o) { "@babel/helpers - typeof"; return tree_title_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, tree_title_typeof(o); }
function tree_title_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function tree_title_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, tree_title_toPropertyKey(o.key), o); } }
function tree_title_createClass(e, r, t) { return r && tree_title_defineProperties(e.prototype, r), t && tree_title_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function tree_title_callSuper(t, o, e) { return o = tree_title_getPrototypeOf(o), tree_title_possibleConstructorReturn(t, tree_title_isNativeReflectConstruct() ? Reflect.construct(o, e || [], tree_title_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function tree_title_possibleConstructorReturn(t, e) { if (e && ("object" == tree_title_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return tree_title_assertThisInitialized(t); }
function tree_title_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function tree_title_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (tree_title_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function tree_title_getPrototypeOf(t) { return tree_title_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, tree_title_getPrototypeOf(t); }
function tree_title_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && tree_title_setPrototypeOf(t, e); }
function tree_title_setPrototypeOf(t, e) { return tree_title_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, tree_title_setPrototypeOf(t, e); }
function tree_title_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function tree_title_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? tree_title_ownKeys(Object(t), !0).forEach(function (r) { tree_title_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : tree_title_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function tree_title_defineProperty(e, r, t) { return (r = tree_title_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function tree_title_toPropertyKey(t) { var i = tree_title_toPrimitive(t, "string"); return "symbol" == tree_title_typeof(i) ? i : i + ""; }
function tree_title_toPrimitive(t, r) { if ("object" != tree_title_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != tree_title_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }




function emitOutlineEvent(event, type, treeNode, rest) {
  var _node$componentMeta, _node$componentMeta2;
  var node = treeNode === null || treeNode === void 0 ? void 0 : treeNode.node;
  var npm = node === null || node === void 0 ? void 0 : (_node$componentMeta = node.componentMeta) === null || _node$componentMeta === void 0 ? void 0 : _node$componentMeta.npm;
  var selected = [npm === null || npm === void 0 ? void 0 : npm.package, npm === null || npm === void 0 ? void 0 : npm.componentName].filter(function (item) {
    return !!item;
  }).join('-') || (node === null || node === void 0 ? void 0 : (_node$componentMeta2 = node.componentMeta) === null || _node$componentMeta2 === void 0 ? void 0 : _node$componentMeta2.componentName) || '';
  event.emit("outlinePane.".concat(type), tree_title_objectSpread({
    selected: selected
  }, rest));
}
var tree_title_TreeTitle = /*#__PURE__*/function (_PureComponent) {
  function TreeTitle() {
    var _this;
    tree_title_classCallCheck(this, TreeTitle);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = tree_title_callSuper(this, TreeTitle, [].concat(args));
    _this.state = {
      editing: false,
      title: '',
      filterWorking: false,
      keywords: '',
      matchSelf: false
    };
    _this.lastInput = void 0;
    _this.enableEdit = function (e) {
      e.preventDefault();
      _this.setState({
        editing: true
      });
    };
    _this.saveEdit = function (e) {
      var treeNode = _this.props.treeNode;
      var value = e.target.value || '';
      treeNode.setTitleLabel(value);
      emitOutlineEvent(_this.props.treeNode.pluginContext.event, 'rename', treeNode, {
        value: value
      });
      _this.cancelEdit();
    };
    _this.handleKeyUp = function (e) {
      if (e.keyCode === 13) {
        _this.saveEdit(e);
      }
      if (e.keyCode === 27) {
        _this.cancelEdit();
      }
    };
    _this.setCaret = function (input) {
      if (!input || _this.lastInput === input) {
        return;
      }
      input.focus();
      input.select();
      // 光标定位最后一个
      // input.selectionStart = input.selectionEnd;
    };
    _this.deleteClick = function () {
      var treeNode = _this.props.treeNode;
      var node = treeNode.node;
      treeNode.deleteNode(node);
    };
    return _this;
  }
  tree_title_inherits(TreeTitle, _PureComponent);
  return tree_title_createClass(TreeTitle, [{
    key: "cancelEdit",
    value: function cancelEdit() {
      this.setState({
        editing: false
      });
      this.lastInput = undefined;
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;
      var treeNode = this.props.treeNode;
      this.setState({
        editing: false,
        title: treeNode.titleLabel,
        condition: treeNode.condition,
        visible: !treeNode.hidden
      });
      treeNode.onTitleLabelChanged(function () {
        _this2.setState({
          title: treeNode.titleLabel
        });
      });
      treeNode.onConditionChanged(function () {
        _this2.setState({
          condition: treeNode.condition
        });
      });
      treeNode.onHiddenChanged(function (hidden) {
        _this2.setState({
          visible: !hidden
        });
      });
      treeNode.onFilterResultChanged(function () {
        var _treeNode$filterReult = treeNode.filterReult,
          newFilterWorking = _treeNode$filterReult.filterWorking,
          newKeywords = _treeNode$filterReult.keywords,
          newMatchSelf = _treeNode$filterReult.matchSelf;
        _this2.setState({
          filterWorking: newFilterWorking,
          keywords: newKeywords,
          matchSelf: newMatchSelf
        });
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;
      var _this$props = this.props,
        treeNode = _this$props.treeNode,
        isModal = _this$props.isModal;
      var pluginContext = treeNode.pluginContext;
      var _this$state = this.state,
        editing = _this$state.editing,
        filterWorking = _this$state.filterWorking,
        matchSelf = _this$state.matchSelf,
        keywords = _this$state.keywords;
      var isCNode = !treeNode.isRoot();
      var node = treeNode.node;
      var componentMeta = node.componentMeta;
      var availableActions = componentMeta ? componentMeta.availableActions.map(function (availableAction) {
        return availableAction.name;
      }) : [];
      var isNodeParent = node.isParentalNode;
      var isContainer = node.isContainerNode;
      var style;
      if (isCNode) {
        var depth = treeNode.depth;
        var indent = depth * 12;
        style = {
          paddingLeft: indent + (isModal ? 12 : 0),
          marginLeft: -indent
        };
      }
      var Extra = pluginContext.extraTitle;
      var intlNode = pluginContext.intlNode,
        common = pluginContext.common,
        config = pluginContext.config;
      var _common$editorCabin = common.editorCabin,
        Tip = _common$editorCabin.Tip,
        Title = _common$editorCabin.Title;
      var couldHide = availableActions.includes('hide');
      var couldLock = availableActions.includes('lock');
      var couldUnlock = availableActions.includes('unlock');
      var shouldShowHideBtn = isCNode && isNodeParent && !isModal && couldHide;
      var shouldShowLockBtn = config.get('enableCanvasLock', false) && isContainer && isCNode && isNodeParent && (couldLock && !node.isLocked || couldUnlock && node.isLocked);
      var shouldEditBtn = isCNode && isNodeParent;
      var shouldDeleteBtn = isCNode && isNodeParent && (node === null || node === void 0 ? void 0 : node.canPerformAction('remove'));
      return /*#__PURE__*/React.createElement("div", {
        className: classnames_default()('tree-node-title', {
          editing: editing
        }),
        style: style,
        "data-id": treeNode.nodeId,
        onClick: function onClick() {
          if (isModal) {
            if (_this3.state.visible) {
              var _node$document, _node$document$modalN;
              (_node$document = node.document) === null || _node$document === void 0 ? void 0 : (_node$document$modalN = _node$document.modalNodesManager) === null || _node$document$modalN === void 0 ? void 0 : _node$document$modalN.setInvisible(node);
            } else {
              var _node$document2, _node$document2$modal;
              (_node$document2 = node.document) === null || _node$document2 === void 0 ? void 0 : (_node$document2$modal = _node$document2.modalNodesManager) === null || _node$document2$modal === void 0 ? void 0 : _node$document2$modal.setVisible(node);
            }
            return;
          }
          if (node.conditionGroup) {
            node.setConditionalVisible();
          }
        }
      }, isModal && this.state.visible && /*#__PURE__*/React.createElement("div", {
        onClick: function onClick() {
          var _node$document3, _node$document3$modal;
          (_node$document3 = node.document) === null || _node$document3 === void 0 ? void 0 : (_node$document3$modal = _node$document3.modalNodesManager) === null || _node$document3$modal === void 0 ? void 0 : _node$document3$modal.setInvisible(node);
        }
      }, /*#__PURE__*/React.createElement(IconRadioActive, {
        className: "tree-node-modal-radio-active"
      })), isModal && !this.state.visible && /*#__PURE__*/React.createElement("div", {
        onClick: function onClick() {
          var _node$document4, _node$document4$modal;
          (_node$document4 = node.document) === null || _node$document4 === void 0 ? void 0 : (_node$document4$modal = _node$document4.modalNodesManager) === null || _node$document4$modal === void 0 ? void 0 : _node$document4$modal.setVisible(node);
        }
      }, /*#__PURE__*/React.createElement(IconRadio, {
        className: "tree-node-modal-radio"
      })), isCNode && /*#__PURE__*/React.createElement(tree_title_ExpandBtn, {
        expandable: this.props.expandable,
        expanded: this.props.expanded,
        treeNode: treeNode
      }), /*#__PURE__*/React.createElement("div", {
        className: "tree-node-icon"
      }, Object(utils_src["p" /* createIcon */])(treeNode.icon)), /*#__PURE__*/React.createElement("div", {
        className: "tree-node-title-label"
      }, editing ? /*#__PURE__*/React.createElement("input", {
        className: "tree-node-title-input",
        defaultValue: this.state.title,
        onBlur: this.saveEdit,
        ref: this.setCaret,
        onKeyUp: this.handleKeyUp
      }) : /*#__PURE__*/React.createElement(external_window_React_["Fragment"], null, /*#__PURE__*/React.createElement(Title, {
        title: this.state.title,
        match: filterWorking && matchSelf,
        keywords: keywords
      }), Extra && /*#__PURE__*/React.createElement(Extra, {
        node: treeNode === null || treeNode === void 0 ? void 0 : treeNode.node
      }), node.slotFor && /*#__PURE__*/React.createElement("a", {
        className: "tree-node-tag slot"
      }, /*#__PURE__*/React.createElement(Tip, null, intlNode('Slot for {prop}', {
        prop: node.slotFor.key
      }))), node.hasLoop() && /*#__PURE__*/React.createElement("a", {
        className: "tree-node-tag loop"
      }, /*#__PURE__*/React.createElement(IconLoop, null), /*#__PURE__*/React.createElement(Tip, null, intlNode('Loop'))), this.state.condition && /*#__PURE__*/React.createElement("a", {
        className: "tree-node-tag cond"
      }, /*#__PURE__*/React.createElement(IconCond, null), /*#__PURE__*/React.createElement(Tip, null, intlNode('Conditional'))))), shouldShowHideBtn && /*#__PURE__*/React.createElement(tree_title_HideBtn, {
        hidden: this.props.hidden,
        treeNode: treeNode
      }), shouldShowLockBtn && /*#__PURE__*/React.createElement(tree_title_LockBtn, {
        locked: this.props.locked,
        treeNode: treeNode
      }), shouldEditBtn && /*#__PURE__*/React.createElement(tree_title_RenameBtn, {
        treeNode: treeNode,
        onClick: this.enableEdit
      }), shouldDeleteBtn && /*#__PURE__*/React.createElement(tree_title_DeleteBtn, {
        treeNode: treeNode,
        onClick: this.deleteClick
      }));
    }
  }]);
}(external_window_React_["PureComponent"]);

var tree_title_DeleteBtn = /*#__PURE__*/function (_PureComponent2) {
  function DeleteBtn() {
    tree_title_classCallCheck(this, DeleteBtn);
    return tree_title_callSuper(this, DeleteBtn, arguments);
  }
  tree_title_inherits(DeleteBtn, _PureComponent2);
  return tree_title_createClass(DeleteBtn, [{
    key: "render",
    value: function render() {
      var _this$props$treeNode$ = this.props.treeNode.pluginContext,
        intl = _this$props$treeNode$.intl,
        common = _this$props$treeNode$.common;
      var Tip = common.editorCabin.Tip;
      return /*#__PURE__*/React.createElement("div", {
        className: "tree-node-delete-btn",
        onClick: this.props.onClick
      }, /*#__PURE__*/React.createElement(IconDelete, null), /*#__PURE__*/React.createElement(Tip, null, intl('Delete')));
    }
  }]);
}(external_window_React_["PureComponent"]);
var tree_title_RenameBtn = /*#__PURE__*/function (_PureComponent3) {
  function RenameBtn() {
    tree_title_classCallCheck(this, RenameBtn);
    return tree_title_callSuper(this, RenameBtn, arguments);
  }
  tree_title_inherits(RenameBtn, _PureComponent3);
  return tree_title_createClass(RenameBtn, [{
    key: "render",
    value: function render() {
      var _this$props$treeNode$2 = this.props.treeNode.pluginContext,
        intl = _this$props$treeNode$2.intl,
        common = _this$props$treeNode$2.common;
      var Tip = common.editorCabin.Tip;
      return /*#__PURE__*/React.createElement("div", {
        className: "tree-node-rename-btn",
        onClick: this.props.onClick
      }, /*#__PURE__*/React.createElement(setting_IconSetting, null), /*#__PURE__*/React.createElement(Tip, null, intl('Rename')));
    }
  }]);
}(external_window_React_["PureComponent"]);
var tree_title_LockBtn = /*#__PURE__*/function (_PureComponent4) {
  function LockBtn() {
    tree_title_classCallCheck(this, LockBtn);
    return tree_title_callSuper(this, LockBtn, arguments);
  }
  tree_title_inherits(LockBtn, _PureComponent4);
  return tree_title_createClass(LockBtn, [{
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
        treeNode = _this$props2.treeNode,
        locked = _this$props2.locked;
      var _this$props$treeNode$3 = this.props.treeNode.pluginContext,
        intl = _this$props$treeNode$3.intl,
        common = _this$props$treeNode$3.common;
      var Tip = common.editorCabin.Tip;
      return /*#__PURE__*/React.createElement("div", {
        className: "tree-node-lock-btn",
        onClick: function onClick(e) {
          e.stopPropagation();
          treeNode.setLocked(!locked);
        }
      }, locked ? /*#__PURE__*/React.createElement(unlock_IconUnlock, null) : /*#__PURE__*/React.createElement(lock_IconLock, null), /*#__PURE__*/React.createElement(Tip, null, locked ? intl('Unlock') : intl('Lock')));
    }
  }]);
}(external_window_React_["PureComponent"]);
var tree_title_HideBtn = /*#__PURE__*/function (_PureComponent5) {
  function HideBtn() {
    tree_title_classCallCheck(this, HideBtn);
    return tree_title_callSuper(this, HideBtn, arguments);
  }
  tree_title_inherits(HideBtn, _PureComponent5);
  return tree_title_createClass(HideBtn, [{
    key: "render",
    value: function render() {
      var _this$props3 = this.props,
        treeNode = _this$props3.treeNode,
        hidden = _this$props3.hidden;
      var _treeNode$pluginConte = treeNode.pluginContext,
        intl = _treeNode$pluginConte.intl,
        common = _treeNode$pluginConte.common;
      var Tip = common.editorCabin.Tip;
      return /*#__PURE__*/React.createElement("div", {
        className: "tree-node-hide-btn",
        onClick: function onClick(e) {
          e.stopPropagation();
          emitOutlineEvent(treeNode.pluginContext.event, hidden ? 'show' : 'hide', treeNode);
          treeNode.setHidden(!hidden);
        }
      }, hidden ? /*#__PURE__*/React.createElement(IconEye, null) : /*#__PURE__*/React.createElement(IconEyeClose, null), /*#__PURE__*/React.createElement(Tip, null, hidden ? intl('Show') : intl('Hide')));
    }
  }]);
}(external_window_React_["PureComponent"]);
var tree_title_ExpandBtn = /*#__PURE__*/function (_PureComponent6) {
  function ExpandBtn() {
    tree_title_classCallCheck(this, ExpandBtn);
    return tree_title_callSuper(this, ExpandBtn, arguments);
  }
  tree_title_inherits(ExpandBtn, _PureComponent6);
  return tree_title_createClass(ExpandBtn, [{
    key: "render",
    value: function render() {
      var _this$props4 = this.props,
        treeNode = _this$props4.treeNode,
        expanded = _this$props4.expanded,
        expandable = _this$props4.expandable;
      if (!expandable) {
        return /*#__PURE__*/React.createElement("i", {
          className: "tree-node-expand-placeholder"
        });
      }
      return /*#__PURE__*/React.createElement("div", {
        className: "tree-node-expand-btn",
        onClick: function onClick(e) {
          if (expanded) {
            e.stopPropagation();
          }
          emitOutlineEvent(treeNode.pluginContext.event, expanded ? 'collapse' : 'expand', treeNode);
          treeNode.setExpanded(!expanded);
        }
      }, /*#__PURE__*/React.createElement(IconArrowRight, {
        size: "small"
      }));
    }
  }]);
}(external_window_React_["PureComponent"]);
// CONCATENATED MODULE: ../plugin-outline-pane/src/views/tree-branches.tsx
function tree_branches_typeof(o) { "@babel/helpers - typeof"; return tree_branches_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, tree_branches_typeof(o); }
function tree_branches_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function tree_branches_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, tree_branches_toPropertyKey(o.key), o); } }
function tree_branches_createClass(e, r, t) { return r && tree_branches_defineProperties(e.prototype, r), t && tree_branches_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function tree_branches_toPropertyKey(t) { var i = tree_branches_toPrimitive(t, "string"); return "symbol" == tree_branches_typeof(i) ? i : i + ""; }
function tree_branches_toPrimitive(t, r) { if ("object" != tree_branches_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != tree_branches_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function tree_branches_callSuper(t, o, e) { return o = tree_branches_getPrototypeOf(o), tree_branches_possibleConstructorReturn(t, tree_branches_isNativeReflectConstruct() ? Reflect.construct(o, e || [], tree_branches_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function tree_branches_possibleConstructorReturn(t, e) { if (e && ("object" == tree_branches_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return tree_branches_assertThisInitialized(t); }
function tree_branches_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function tree_branches_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (tree_branches_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function tree_branches_getPrototypeOf(t) { return tree_branches_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, tree_branches_getPrototypeOf(t); }
function tree_branches_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && tree_branches_setPrototypeOf(t, e); }
function tree_branches_setPrototypeOf(t, e) { return tree_branches_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, tree_branches_setPrototypeOf(t, e); }



var TreeBranches = /*#__PURE__*/function (_PureComponent) {
  function TreeBranches(props) {
    var _this;
    tree_branches_classCallCheck(this, TreeBranches);
    _this = tree_branches_callSuper(this, TreeBranches, [props]);
    _this.state = {
      filterWorking: false,
      matchChild: false
    };
    _this.offExpandedChanged = void 0;
    var treeNode = _this.props.treeNode;
    var _treeNode$filterReult = treeNode.filterReult,
      filterWorking = _treeNode$filterReult.filterWorking,
      matchChild = _treeNode$filterReult.matchChild;
    _this.setState({
      filterWorking: filterWorking,
      matchChild: matchChild
    });
    return _this;
  }
  tree_branches_inherits(TreeBranches, _PureComponent);
  return tree_branches_createClass(TreeBranches, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;
      var treeNode = this.props.treeNode;
      treeNode.onFilterResultChanged(function () {
        var _treeNode$filterReult2 = treeNode.filterReult,
          newFilterWorking = _treeNode$filterReult2.filterWorking,
          newMatchChild = _treeNode$filterReult2.matchChild;
        _this2.setState({
          filterWorking: newFilterWorking,
          matchChild: newMatchChild
        });
      });
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.offExpandedChanged) {
        this.offExpandedChanged();
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
        treeNode = _this$props.treeNode,
        isModal = _this$props.isModal,
        expanded = _this$props.expanded;
      var _this$state = this.state,
        filterWorking = _this$state.filterWorking,
        matchChild = _this$state.matchChild;
      // 条件过滤生效时，如果命中了子节点，需要将该节点展开
      var expandInFilterResult = filterWorking && matchChild;
      if (!expandInFilterResult && !expanded) {
        return null;
      }
      return /*#__PURE__*/React.createElement("div", {
        className: "tree-node-branches"
      }, !isModal && /*#__PURE__*/React.createElement(tree_branches_TreeNodeSlots, {
        treeNode: treeNode
      }), /*#__PURE__*/React.createElement(tree_branches_TreeNodeChildren, {
        treeNode: treeNode,
        isModal: isModal || false,
        treeChildren: this.props.treeChildren
      }));
    }
  }]);
}(external_window_React_["PureComponent"]);

var tree_branches_TreeNodeChildren = /*#__PURE__*/function (_PureComponent2) {
  function TreeNodeChildren() {
    var _this3;
    tree_branches_classCallCheck(this, TreeNodeChildren);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this3 = tree_branches_callSuper(this, TreeNodeChildren, [].concat(args));
    _this3.state = {
      filterWorking: false,
      matchSelf: false,
      keywords: null,
      dropDetail: null
    };
    _this3.offLocationChanged = void 0;
    return _this3;
  }
  tree_branches_inherits(TreeNodeChildren, _PureComponent2);
  return tree_branches_createClass(TreeNodeChildren, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this4 = this,
        _project$currentDocum;
      var treeNode = this.props.treeNode;
      var project = treeNode.pluginContext.project;
      var _treeNode$filterReult3 = treeNode.filterReult,
        filterWorking = _treeNode$filterReult3.filterWorking,
        matchSelf = _treeNode$filterReult3.matchSelf,
        keywords = _treeNode$filterReult3.keywords;
      var dropDetail = treeNode.dropDetail;
      this.setState({
        filterWorking: filterWorking,
        matchSelf: matchSelf,
        keywords: keywords,
        dropDetail: dropDetail
      });
      treeNode.onFilterResultChanged(function () {
        var _treeNode$filterReult4 = treeNode.filterReult,
          newFilterWorking = _treeNode$filterReult4.filterWorking,
          newMatchChild = _treeNode$filterReult4.matchSelf,
          newKeywords = _treeNode$filterReult4.keywords;
        _this4.setState({
          filterWorking: newFilterWorking,
          matchSelf: newMatchChild,
          keywords: newKeywords
        });
      });
      this.offLocationChanged = (_project$currentDocum = project.currentDocument) === null || _project$currentDocum === void 0 ? void 0 : _project$currentDocum.onDropLocationChanged(function () {
        _this4.setState({
          dropDetail: treeNode.dropDetail
        });
      });
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.offLocationChanged && this.offLocationChanged();
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props$treeChild, _this$props$treeChild2;
      var isModal = this.props.isModal;
      var children = [];
      var groupContents = [];
      var currentGrp;
      var _this$state2 = this.state,
        filterWorking = _this$state2.filterWorking,
        matchSelf = _this$state2.matchSelf,
        keywords = _this$state2.keywords;
      var Title = this.props.treeNode.pluginContext.common.editorCabin.Title;
      var endGroup = function endGroup() {
        if (groupContents.length > 0) {
          var _currentGrp$firstNode;
          children.push(/*#__PURE__*/React.createElement("div", {
            key: currentGrp.id,
            className: "condition-group-container",
            "data-id": (_currentGrp$firstNode = currentGrp.firstNode) === null || _currentGrp$firstNode === void 0 ? void 0 : _currentGrp$firstNode.id
          }, /*#__PURE__*/React.createElement("div", {
            className: "condition-group-title"
          }, /*#__PURE__*/React.createElement(Title, {
            title: currentGrp.title,
            match: filterWorking && matchSelf,
            keywords: keywords
          })), groupContents));
          groupContents = [];
        }
      };
      var dropDetail = this.state.dropDetail;
      var dropIndex = dropDetail === null || dropDetail === void 0 ? void 0 : dropDetail.index;
      var insertion = /*#__PURE__*/React.createElement("div", {
        key: "insertion",
        className: classnames_default()('insertion', {
          invalid: (dropDetail === null || dropDetail === void 0 ? void 0 : dropDetail.valid) === false
        })
      });
      (_this$props$treeChild = this.props.treeChildren) === null || _this$props$treeChild === void 0 ? void 0 : _this$props$treeChild.forEach(function (child, index) {
        var _child$node$component;
        var childIsModal = ((_child$node$component = child.node.componentMeta) === null || _child$node$component === void 0 ? void 0 : _child$node$component.isModal) || false;
        if (isModal != childIsModal) {
          return;
        }
        var conditionGroup = child.node.conditionGroup;
        if (conditionGroup !== currentGrp) {
          endGroup();
        }
        if (conditionGroup) {
          currentGrp = conditionGroup;
          if (index === dropIndex) {
            if (groupContents.length > 0) {
              groupContents.push(insertion);
            } else {
              children.push(insertion);
            }
          }
          groupContents.push(/*#__PURE__*/React.createElement(tree_node_TreeNodeView, {
            key: child.nodeId,
            treeNode: child,
            isModal: isModal
          }));
        } else {
          if (index === dropIndex) {
            children.push(insertion);
          }
          children.push(/*#__PURE__*/React.createElement(tree_node_TreeNodeView, {
            key: child.nodeId,
            treeNode: child,
            isModal: isModal
          }));
        }
      });
      endGroup();
      var length = ((_this$props$treeChild2 = this.props.treeChildren) === null || _this$props$treeChild2 === void 0 ? void 0 : _this$props$treeChild2.length) || 0;
      if (dropIndex != null && dropIndex >= length) {
        children.push(insertion);
      }
      return /*#__PURE__*/React.createElement("div", {
        className: "tree-node-children"
      }, children);
    }
  }]);
}(external_window_React_["PureComponent"]);
var tree_branches_TreeNodeSlots = /*#__PURE__*/function (_PureComponent3) {
  function TreeNodeSlots() {
    tree_branches_classCallCheck(this, TreeNodeSlots);
    return tree_branches_callSuper(this, TreeNodeSlots, arguments);
  }
  tree_branches_inherits(TreeNodeSlots, _PureComponent3);
  return tree_branches_createClass(TreeNodeSlots, [{
    key: "render",
    value: function render() {
      var _treeNode$dropDetail, _treeNode$dropDetail$;
      var treeNode = this.props.treeNode;
      if (!treeNode.hasSlots()) {
        return null;
      }
      var Title = this.props.treeNode.pluginContext.common.editorCabin.Title;
      return /*#__PURE__*/React.createElement("div", {
        className: classnames_default()('tree-node-slots', {
          'insertion-at-slots': ((_treeNode$dropDetail = treeNode.dropDetail) === null || _treeNode$dropDetail === void 0 ? void 0 : (_treeNode$dropDetail$ = _treeNode$dropDetail.focus) === null || _treeNode$dropDetail$ === void 0 ? void 0 : _treeNode$dropDetail$.type) === 'slots'
        }),
        "data-id": treeNode.nodeId
      }, /*#__PURE__*/React.createElement("div", {
        className: "tree-node-slots-title"
      }, /*#__PURE__*/React.createElement(Title, {
        title: {
          type: 'i18n',
          intl: this.props.treeNode.pluginContext.intlNode('Slots')
        }
      })), treeNode.slots.map(function (tnode) {
        return /*#__PURE__*/React.createElement(tree_node_TreeNodeView, {
          key: tnode.nodeId,
          treeNode: tnode
        });
      }));
    }
  }]);
}(external_window_React_["PureComponent"]);
// CONCATENATED MODULE: ../plugin-outline-pane/src/views/tree-node.tsx
function tree_node_typeof(o) { "@babel/helpers - typeof"; return tree_node_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, tree_node_typeof(o); }
function tree_node_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function tree_node_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, tree_node_toPropertyKey(o.key), o); } }
function tree_node_createClass(e, r, t) { return r && tree_node_defineProperties(e.prototype, r), t && tree_node_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function tree_node_toPropertyKey(t) { var i = tree_node_toPrimitive(t, "string"); return "symbol" == tree_node_typeof(i) ? i : i + ""; }
function tree_node_toPrimitive(t, r) { if ("object" != tree_node_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != tree_node_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function tree_node_callSuper(t, o, e) { return o = tree_node_getPrototypeOf(o), tree_node_possibleConstructorReturn(t, tree_node_isNativeReflectConstruct() ? Reflect.construct(o, e || [], tree_node_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function tree_node_possibleConstructorReturn(t, e) { if (e && ("object" == tree_node_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return tree_node_assertThisInitialized(t); }
function tree_node_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function tree_node_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (tree_node_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function tree_node_getPrototypeOf(t) { return tree_node_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, tree_node_getPrototypeOf(t); }
function tree_node_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && tree_node_setPrototypeOf(t, e); }
function tree_node_setPrototypeOf(t, e) { return tree_node_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, tree_node_setPrototypeOf(t, e); }





var tree_node_ModalTreeNodeView = /*#__PURE__*/function (_PureComponent) {
  function ModalTreeNodeView(props) {
    var _project$currentDocum;
    var _this;
    tree_node_classCallCheck(this, ModalTreeNodeView);
    _this = tree_node_callSuper(this, ModalTreeNodeView, [props]);
    // 模态管理对象
    _this.modalNodesManager = void 0;
    _this.pluginContext = void 0;
    _this.pluginContext = props.treeNode.pluginContext;
    var project = _this.pluginContext.project;
    _this.modalNodesManager = (_project$currentDocum = project.currentDocument) === null || _project$currentDocum === void 0 ? void 0 : _project$currentDocum.modalNodesManager;
    _this.state = {
      treeChildren: _this.rootTreeNode.children
    };
    return _this;
  }
  tree_node_inherits(ModalTreeNodeView, _PureComponent);
  return tree_node_createClass(ModalTreeNodeView, [{
    key: "hideAllNodes",
    value: function hideAllNodes() {
      var _this$modalNodesManag;
      (_this$modalNodesManag = this.modalNodesManager) === null || _this$modalNodesManag === void 0 ? void 0 : _this$modalNodesManag.hideModalNodes();
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;
      var rootTreeNode = this.rootTreeNode;
      rootTreeNode.onExpandableChanged(function () {
        _this2.setState({
          treeChildren: rootTreeNode.children
        });
      });
    }
  }, {
    key: "rootTreeNode",
    get: function get() {
      var _project$currentDocum2;
      var treeNode = this.props.treeNode;
      // 当指定了新的根节点时，要从原始的根节点去获取模态节点
      var project = this.pluginContext.project;
      var rootNode = (_project$currentDocum2 = project.currentDocument) === null || _project$currentDocum2 === void 0 ? void 0 : _project$currentDocum2.root;
      var rootTreeNode = treeNode.tree.getTreeNode(rootNode);
      return rootTreeNode;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$modalNodesManag2;
      var rootTreeNode = this.rootTreeNode;
      var expanded = rootTreeNode.expanded;
      var hasVisibleModalNode = !!((_this$modalNodesManag2 = this.modalNodesManager) !== null && _this$modalNodesManag2 !== void 0 && _this$modalNodesManag2.getVisibleModalNode());
      return /*#__PURE__*/React.createElement("div", {
        className: "tree-node-modal"
      }, /*#__PURE__*/React.createElement("div", {
        className: "tree-node-modal-title"
      }, /*#__PURE__*/React.createElement("span", null, this.pluginContext.intlNode('Modal View')), /*#__PURE__*/React.createElement("div", {
        className: "tree-node-modal-title-visible-icon",
        onClick: this.hideAllNodes.bind(this)
      }, hasVisibleModalNode ? /*#__PURE__*/React.createElement(IconEyeClose, null) : null)), /*#__PURE__*/React.createElement("div", {
        className: "tree-pane-modal-content"
      }, /*#__PURE__*/React.createElement(TreeBranches, {
        treeNode: rootTreeNode,
        treeChildren: this.state.treeChildren,
        expanded: expanded,
        isModal: true
      })));
    }
  }]);
}(external_window_React_["PureComponent"]);
var tree_node_TreeNodeView = /*#__PURE__*/function (_PureComponent2) {
  function TreeNodeView(props) {
    var _treeNode$dropDetail;
    var _this3;
    tree_node_classCallCheck(this, TreeNodeView);
    _this3 = tree_node_callSuper(this, TreeNodeView, [props]);
    _this3.state = {
      expanded: false,
      selected: false,
      hidden: false,
      locked: false,
      detecting: false,
      isRoot: false,
      highlight: false,
      dropping: false,
      conditionFlow: false,
      expandable: false,
      treeChildren: [],
      filterWorking: false,
      matchChild: false,
      matchSelf: false
    };
    _this3.eventOffCallbacks = [];
    var _this3$props = _this3.props,
      treeNode = _this3$props.treeNode,
      isRootNode = _this3$props.isRootNode;
    _this3.state = {
      expanded: isRootNode ? true : treeNode.expanded,
      selected: treeNode.selected,
      hidden: treeNode.hidden,
      locked: treeNode.locked,
      detecting: treeNode.detecting,
      isRoot: treeNode.isRoot(),
      // 是否投放响应
      dropping: ((_treeNode$dropDetail = treeNode.dropDetail) === null || _treeNode$dropDetail === void 0 ? void 0 : _treeNode$dropDetail.index) != null,
      conditionFlow: treeNode.node.conditionGroup != null,
      highlight: treeNode.isFocusingNode(),
      expandable: treeNode.expandable,
      treeChildren: treeNode.children
    };
    return _this3;
  }
  tree_node_inherits(TreeNodeView, _PureComponent2);
  return tree_node_createClass(TreeNodeView, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this4 = this,
        _doc$selection,
        _doc$detecting;
      var treeNode = this.props.treeNode;
      var project = treeNode.pluginContext.project;
      var doc = project.currentDocument;
      treeNode.onExpandedChanged(function (expanded) {
        _this4.setState({
          expanded: expanded
        });
      });
      treeNode.onHiddenChanged(function (hidden) {
        _this4.setState({
          hidden: hidden
        });
      });
      treeNode.onLockedChanged(function (locked) {
        _this4.setState({
          locked: locked
        });
      });
      treeNode.onExpandableChanged(function (expandable) {
        _this4.setState({
          expandable: expandable,
          treeChildren: treeNode.children
        });
      });
      treeNode.onFilterResultChanged(function () {
        var _treeNode$filterReult = treeNode.filterReult,
          newFilterWorking = _treeNode$filterReult.filterWorking,
          newMatchChild = _treeNode$filterReult.matchChild,
          newMatchSelf = _treeNode$filterReult.matchSelf;
        _this4.setState({
          filterWorking: newFilterWorking,
          matchChild: newMatchChild,
          matchSelf: newMatchSelf
        });
      });
      this.eventOffCallbacks.push(doc === null || doc === void 0 ? void 0 : doc.onDropLocationChanged(function () {
        var _treeNode$dropDetail2;
        _this4.setState({
          dropping: ((_treeNode$dropDetail2 = treeNode.dropDetail) === null || _treeNode$dropDetail2 === void 0 ? void 0 : _treeNode$dropDetail2.index) != null
        });
      }));
      var offSelectionChange = doc === null || doc === void 0 ? void 0 : (_doc$selection = doc.selection) === null || _doc$selection === void 0 ? void 0 : _doc$selection.onSelectionChange(function () {
        _this4.setState({
          selected: treeNode.selected
        });
      });
      this.eventOffCallbacks.push(offSelectionChange);
      var offDetectingChange = doc === null || doc === void 0 ? void 0 : (_doc$detecting = doc.detecting) === null || _doc$detecting === void 0 ? void 0 : _doc$detecting.onDetectingChange(function () {
        _this4.setState({
          detecting: treeNode.detecting
        });
      });
      this.eventOffCallbacks.push(offDetectingChange);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var _this$eventOffCallbac;
      (_this$eventOffCallbac = this.eventOffCallbacks) === null || _this$eventOffCallbac === void 0 ? void 0 : _this$eventOffCallbac.forEach(function (offFun) {
        offFun && offFun();
      });
    }
  }, {
    key: "shouldShowModalTreeNode",
    value: function shouldShowModalTreeNode() {
      var _project$currentDocum3, _rootTreeNode$childre;
      var _this$props = this.props,
        treeNode = _this$props.treeNode,
        isRootNode = _this$props.isRootNode;
      if (!isRootNode) {
        // 只在 当前树 的根节点展示模态节点
        return false;
      }
      // 当指定了新的根节点时，要从原始的根节点去获取模态节点
      var project = treeNode.pluginContext.project;
      var rootNode = (_project$currentDocum3 = project.currentDocument) === null || _project$currentDocum3 === void 0 ? void 0 : _project$currentDocum3.root;
      var rootTreeNode = treeNode.tree.getTreeNode(rootNode);
      var modalNodes = (_rootTreeNode$childre = rootTreeNode.children) === null || _rootTreeNode$childre === void 0 ? void 0 : _rootTreeNode$childre.filter(function (item) {
        var _item$node$componentM;
        return (_item$node$componentM = item.node.componentMeta) === null || _item$node$componentM === void 0 ? void 0 : _item$node$componentM.isModal;
      });
      return !!(modalNodes && modalNodes.length > 0);
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
        treeNode = _this$props2.treeNode,
        isModal = _this$props2.isModal,
        isRootNode = _this$props2.isRootNode;
      var className = classnames_default()('tree-node', {
        // 是否展开
        expanded: this.state.expanded,
        // 是否选中的
        selected: this.state.selected,
        // 是否隐藏的
        hidden: this.state.hidden,
        // 是否锁定的
        locked: this.state.locked,
        // 是否悬停中
        detecting: this.state.detecting,
        // 是否投放响应
        dropping: this.state.dropping,
        'is-root': this.state.isRoot,
        'condition-flow': this.state.conditionFlow,
        highlight: this.state.highlight
      });
      var shouldShowModalTreeNode = this.shouldShowModalTreeNode();
      // filter 处理
      var _this$state = this.state,
        filterWorking = _this$state.filterWorking,
        matchChild = _this$state.matchChild,
        matchSelf = _this$state.matchSelf;
      if (!isRootNode && filterWorking && !matchChild && !matchSelf) {
        // 条件过滤生效时，如果未命中本节点或子节点，则不展示该节点
        // 根节点始终展示
        return null;
      }
      return /*#__PURE__*/React.createElement("div", {
        className: className,
        "data-id": treeNode.nodeId
      }, /*#__PURE__*/React.createElement(tree_title_TreeTitle, {
        treeNode: treeNode,
        isModal: isModal,
        expanded: this.state.expanded,
        hidden: this.state.hidden,
        locked: this.state.locked,
        expandable: this.state.expandable
      }), shouldShowModalTreeNode && /*#__PURE__*/React.createElement(tree_node_ModalTreeNodeView, {
        treeNode: treeNode
      }), /*#__PURE__*/React.createElement(TreeBranches, {
        treeNode: treeNode,
        isModal: false,
        expanded: this.state.expanded,
        treeChildren: this.state.treeChildren
      }));
    }
  }]);
}(external_window_React_["PureComponent"]);

// CONCATENATED MODULE: ../plugin-outline-pane/src/views/tree.tsx
function tree_typeof(o) { "@babel/helpers - typeof"; return tree_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, tree_typeof(o); }
function tree_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function tree_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, tree_toPropertyKey(o.key), o); } }
function tree_createClass(e, r, t) { return r && tree_defineProperties(e.prototype, r), t && tree_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function tree_toPropertyKey(t) { var i = tree_toPrimitive(t, "string"); return "symbol" == tree_typeof(i) ? i : i + ""; }
function tree_toPrimitive(t, r) { if ("object" != tree_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != tree_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function tree_callSuper(t, o, e) { return o = tree_getPrototypeOf(o), tree_possibleConstructorReturn(t, tree_isNativeReflectConstruct() ? Reflect.construct(o, e || [], tree_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function tree_possibleConstructorReturn(t, e) { if (e && ("object" == tree_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return tree_assertThisInitialized(t); }
function tree_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function tree_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (tree_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function tree_getPrototypeOf(t) { return tree_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, tree_getPrototypeOf(t); }
function tree_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && tree_setPrototypeOf(t, e); }
function tree_setPrototypeOf(t, e) { return tree_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, tree_setPrototypeOf(t, e); }




function getTreeNodeIdByEvent(e, stop) {
  var target = e.target;
  if (!target || !stop.contains(target)) {
    return null;
  }
  target = target.closest('[data-id]');
  if (!target || !stop.contains(target)) {
    return null;
  }
  return target.dataset.id || null;
}
var tree_TreeView = /*#__PURE__*/function (_PureComponent) {
  function TreeView() {
    var _this;
    tree_classCallCheck(this, TreeView);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = tree_callSuper(this, TreeView, [].concat(args));
    _this.shell = null;
    _this.ignoreUpSelected = false;
    _this.boostEvent = void 0;
    _this.state = {
      root: null
    };
    _this.onClick = function (e) {
      var _canvas$activeTracker;
      if (_this.ignoreUpSelected) {
        _this.boostEvent = undefined;
        return;
      }
      if (_this.boostEvent && Object(utils_src["Z" /* isShaken */])(_this.boostEvent, e.nativeEvent)) {
        _this.boostEvent = undefined;
        return;
      }
      _this.boostEvent = undefined;
      var treeNode = _this.getTreeNodeFromEvent(e);
      if (!treeNode) {
        return;
      }
      var node = treeNode.node;
      if (!Object(utils_src["i" /* canClickNode */])(node, e)) {
        return;
      }
      var _this$props$tree$plug = _this.props.tree.pluginContext,
        project = _this$props$tree$plug.project,
        event = _this$props$tree$plug.event,
        canvas = _this$props$tree$plug.canvas;
      var doc = project.currentDocument;
      var selection = doc === null || doc === void 0 ? void 0 : doc.selection;
      var focusNode = doc === null || doc === void 0 ? void 0 : doc.focusNode;
      var id = node.id;
      var isMulti = e.metaKey || e.ctrlKey || e.shiftKey;
      (_canvas$activeTracker = canvas.activeTracker) === null || _canvas$activeTracker === void 0 ? void 0 : _canvas$activeTracker.track(node);
      if (isMulti && focusNode && !node.contains(focusNode) && selection !== null && selection !== void 0 && selection.has(id)) {
        if (!Object(utils_src["H" /* isFormEvent */])(e.nativeEvent)) {
          selection.remove(id);
        }
      } else {
        var _selection$getNodes, _selectedNode$compone, _selectedNode$compone2;
        selection === null || selection === void 0 ? void 0 : selection.select(id);
        var selectedNode = selection === null || selection === void 0 ? void 0 : (_selection$getNodes = selection.getNodes()) === null || _selection$getNodes === void 0 ? void 0 : _selection$getNodes[0];
        var npm = selectedNode === null || selectedNode === void 0 ? void 0 : (_selectedNode$compone = selectedNode.componentMeta) === null || _selectedNode$compone === void 0 ? void 0 : _selectedNode$compone.npm;
        var selected = [npm === null || npm === void 0 ? void 0 : npm.package, npm === null || npm === void 0 ? void 0 : npm.componentName].filter(function (item) {
          return !!item;
        }).join('-') || (selectedNode === null || selectedNode === void 0 ? void 0 : (_selectedNode$compone2 = selectedNode.componentMeta) === null || _selectedNode$compone2 === void 0 ? void 0 : _selectedNode$compone2.componentName) || '';
        event.emit('outlinePane.select', {
          selected: selected
        });
      }
    };
    _this.onDoubleClick = function (e) {
      var _this$state$root;
      e.preventDefault();
      var treeNode = _this.getTreeNodeFromEvent(e);
      if ((treeNode === null || treeNode === void 0 ? void 0 : treeNode.nodeId) === ((_this$state$root = _this.state.root) === null || _this$state$root === void 0 ? void 0 : _this$state$root.nodeId)) {
        return;
      }
      if (!(treeNode !== null && treeNode !== void 0 && treeNode.expanded)) {
        _this.props.tree.expandAllDecendants(treeNode);
      } else {
        _this.props.tree.collapseAllDecendants(treeNode);
      }
    };
    _this.onMouseOver = function (e) {
      _this.hover(e);
    };
    _this.onMouseDown = function (e) {
      var _project$currentDocum, _project$currentDocum2;
      if (Object(utils_src["H" /* isFormEvent */])(e.nativeEvent)) {
        return;
      }
      var treeNode = _this.getTreeNodeFromEvent(e);
      if (!treeNode) {
        return;
      }
      var node = treeNode.node;
      if (!Object(utils_src["i" /* canClickNode */])(node, e)) {
        return;
      }
      var _this$props$tree$plug2 = _this.props.tree.pluginContext,
        project = _this$props$tree$plug2.project,
        canvas = _this$props$tree$plug2.canvas;
      var selection = (_project$currentDocum = project.currentDocument) === null || _project$currentDocum === void 0 ? void 0 : _project$currentDocum.selection;
      var focusNode = (_project$currentDocum2 = project.currentDocument) === null || _project$currentDocum2 === void 0 ? void 0 : _project$currentDocum2.focusNode;
      // TODO: shift selection
      var isMulti = e.metaKey || e.ctrlKey || e.shiftKey;
      var isLeftButton = e.button === 0;
      if (isLeftButton && focusNode && !node.contains(focusNode)) {
        var _canvas$dragon;
        var nodes = [node];
        _this.ignoreUpSelected = false;
        if (isMulti) {
          // multi select mode, directily add
          if (!(selection !== null && selection !== void 0 && selection.has(node.id))) {
            var _canvas$activeTracker2;
            (_canvas$activeTracker2 = canvas.activeTracker) === null || _canvas$activeTracker2 === void 0 ? void 0 : _canvas$activeTracker2.track(node);
            selection === null || selection === void 0 ? void 0 : selection.add(node.id);
            _this.ignoreUpSelected = true;
          }
          // todo: remove rootNodes id
          selection === null || selection === void 0 ? void 0 : selection.remove(focusNode.id);
          // 获得顶层 nodes
          if (selection) {
            nodes = selection.getTopNodes();
          }
        } else if (selection !== null && selection !== void 0 && selection.has(node.id)) {
          nodes = selection.getTopNodes();
        }
        _this.boostEvent = e.nativeEvent;
        (_canvas$dragon = canvas.dragon) === null || _canvas$dragon === void 0 ? void 0 : _canvas$dragon.boost({
          type: types_src["g" /* IPublicEnumDragObjectType */].Node,
          nodes: nodes
        }, _this.boostEvent);
      }
    };
    _this.onMouseLeave = function () {
      var pluginContext = _this.props.tree.pluginContext;
      var project = pluginContext.project;
      var doc = project.currentDocument;
      doc === null || doc === void 0 ? void 0 : doc.detecting.leave();
    };
    return _this;
  }
  tree_inherits(TreeView, _PureComponent);
  return tree_createClass(TreeView, [{
    key: "hover",
    value: function hover(e) {
      var _project$currentDocum3, _this$getTreeNodeFrom;
      var project = this.props.tree.pluginContext.project;
      var detecting = (_project$currentDocum3 = project.currentDocument) === null || _project$currentDocum3 === void 0 ? void 0 : _project$currentDocum3.detecting;
      if (detecting !== null && detecting !== void 0 && detecting.enable) {
        return;
      }
      var node = (_this$getTreeNodeFrom = this.getTreeNodeFromEvent(e)) === null || _this$getTreeNodeFrom === void 0 ? void 0 : _this$getTreeNodeFrom.node;
      (node === null || node === void 0 ? void 0 : node.id) && (detecting === null || detecting === void 0 ? void 0 : detecting.capture(node.id));
    }
  }, {
    key: "getTreeNodeFromEvent",
    value: function getTreeNodeFromEvent(e) {
      if (!this.shell) {
        return;
      }
      var id = getTreeNodeIdByEvent(e, this.shell);
      if (!id) {
        return;
      }
      var tree = this.props.tree;
      return tree.getTreeNodeById(id);
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;
      var tree = this.props.tree;
      var root = tree.root;
      var project = tree.pluginContext.project;
      this.setState({
        root: root
      });
      var doc = project.currentDocument;
      doc === null || doc === void 0 ? void 0 : doc.onFocusNodeChanged(function () {
        _this2.setState({
          root: tree.root
        });
      });
      doc === null || doc === void 0 ? void 0 : doc.onImportSchema(function () {
        _this2.setState({
          root: tree.root
        });
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this,
        _this$state$root2;
      if (!this.state.root) {
        return null;
      }
      return /*#__PURE__*/React.createElement("div", {
        className: "lc-outline-tree",
        ref: function ref(shell) {
          _this3.shell = shell;
        },
        onMouseDownCapture: this.onMouseDown,
        onMouseOver: this.onMouseOver,
        onClick: this.onClick,
        onDoubleClick: this.onDoubleClick,
        onMouseLeave: this.onMouseLeave
      }, /*#__PURE__*/React.createElement(tree_node_TreeNodeView, {
        key: (_this$state$root2 = this.state.root) === null || _this$state$root2 === void 0 ? void 0 : _this$state$root2.id,
        treeNode: this.state.root,
        isRootNode: true
      }));
    }
  }]);
}(external_window_React_["PureComponent"]);

// EXTERNAL MODULE: ../plugin-outline-pane/src/views/style.less
var views_style = __webpack_require__(53);

// CONCATENATED MODULE: ../plugin-outline-pane/src/views/filter-tree.ts
var FilterType = {
  CONDITION: 'CONDITION',
  LOOP: 'LOOP',
  LOCKED: 'LOCKED',
  HIDDEN: 'HIDDEN'
};
var FILTER_OPTIONS = [{
  value: FilterType.CONDITION,
  label: 'Conditional rendering'
}, {
  value: FilterType.LOOP,
  label: 'Loop rendering'
}, {
  value: FilterType.LOCKED,
  label: 'Locked'
}, {
  value: FilterType.HIDDEN,
  label: 'Hidden'
}];
var _matchTreeNode = function matchTreeNode(treeNode, keywords, filterOps) {
  // 无效节点
  if (!treeNode || !treeNode.node) {
    return false;
  }
  // 过滤条件为空，重置过滤结果
  if (!keywords && filterOps.length === 0) {
    treeNode.setFilterReult({
      filterWorking: false,
      matchChild: false,
      matchSelf: false,
      keywords: ''
    });
    (treeNode.children || []).concat(treeNode.slots || []).forEach(function (childNode) {
      _matchTreeNode(childNode, keywords, filterOps);
    });
    return false;
  }
  var node = treeNode.node;
  // 命中过滤选项
  var matchFilterOps = filterOps.length === 0 || !!filterOps.find(function (op) {
    switch (op) {
      case FilterType.CONDITION:
        return node.hasCondition();
      case FilterType.LOOP:
        return node.hasLoop();
      case FilterType.LOCKED:
        return treeNode.locked;
      case FilterType.HIDDEN:
        return treeNode.hidden;
      default:
        return false;
    }
  });
  // 命中节点名
  var matchKeywords = typeof treeNode.titleLabel === 'string' && treeNode.titleLabel.indexOf(keywords) > -1;
  // 同时命中才展示（根结点永远命中）
  var matchSelf = treeNode.isRoot() || matchFilterOps && matchKeywords;
  // 命中子节点
  var matchChild = !!(treeNode.children || []).concat(treeNode.slots || []).map(function (childNode) {
    return _matchTreeNode(childNode, keywords, filterOps);
  }).find(Boolean);
  // 如果命中了子节点，需要将该节点展开
  if (matchChild && treeNode.expandable) {
    treeNode.setExpanded(true);
  }
  treeNode.setFilterReult({
    filterWorking: true,
    matchChild: matchChild,
    matchSelf: matchSelf,
    keywords: keywords
  });
  return matchSelf || matchChild;
};

// CONCATENATED MODULE: ../plugin-outline-pane/src/views/filter.tsx
function filter_typeof(o) { "@babel/helpers - typeof"; return filter_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, filter_typeof(o); }
function filter_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function filter_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, filter_toPropertyKey(o.key), o); } }
function filter_createClass(e, r, t) { return r && filter_defineProperties(e.prototype, r), t && filter_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function filter_toPropertyKey(t) { var i = filter_toPrimitive(t, "string"); return "symbol" == filter_typeof(i) ? i : i + ""; }
function filter_toPrimitive(t, r) { if ("object" != filter_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != filter_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function filter_callSuper(t, o, e) { return o = filter_getPrototypeOf(o), filter_possibleConstructorReturn(t, filter_isNativeReflectConstruct() ? Reflect.construct(o, e || [], filter_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function filter_possibleConstructorReturn(t, e) { if (e && ("object" == filter_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return filter_assertThisInitialized(t); }
function filter_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function filter_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (filter_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function filter_getPrototypeOf(t) { return filter_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, filter_getPrototypeOf(t); }
function filter_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && filter_setPrototypeOf(t, e); }
function filter_setPrototypeOf(t, e) { return filter_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, filter_setPrototypeOf(t, e); }





var filter_Filter = /*#__PURE__*/function (_PureComponent) {
  function Filter() {
    var _this;
    filter_classCallCheck(this, Filter);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = filter_callSuper(this, Filter, [].concat(args));
    _this.state = {
      keywords: '',
      filterOps: []
    };
    _this.handleSearchChange = function (val) {
      _this.setState({
        keywords: val.trim()
      }, _this.filterTree);
    };
    _this.handleOptionChange = function (val) {
      _this.setState({
        filterOps: val
      }, _this.filterTree);
    };
    _this.handleCheckAll = function () {
      var filterOps = _this.state.filterOps;
      var _final = filterOps.length === FILTER_OPTIONS.length ? [] : FILTER_OPTIONS.map(function (op) {
        return op.value;
      });
      _this.handleOptionChange(_final);
    };
    return _this;
  }
  filter_inherits(Filter, _PureComponent);
  return filter_createClass(Filter, [{
    key: "filterTree",
    value: function filterTree() {
      var tree = this.props.tree;
      var _this$state = this.state,
        keywords = _this$state.keywords,
        filterOps = _this$state.filterOps;
      _matchTreeNode(tree.root, keywords, filterOps);
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;
      var _this$state2 = this.state,
        keywords = _this$state2.keywords,
        filterOps = _this$state2.filterOps;
      var indeterminate = filterOps.length > 0 && filterOps.length < FILTER_OPTIONS.length;
      var checkAll = filterOps.length === FILTER_OPTIONS.length;
      return /*#__PURE__*/external_window_React_default.a.createElement("div", {
        className: "lc-outline-filter"
      }, /*#__PURE__*/external_window_React_default.a.createElement(external_Next_["Search"], {
        hasClear: true,
        shape: "simple",
        placeholder: this.props.tree.pluginContext.intl('Filter Node'),
        className: "lc-outline-filter-search-input",
        value: keywords,
        onChange: this.handleSearchChange
      }), /*#__PURE__*/external_window_React_default.a.createElement(external_Next_["Balloon"], {
        v2: true,
        align: "br",
        closable: false,
        triggerType: "hover",
        trigger: /*#__PURE__*/external_window_React_default.a.createElement("div", {
          className: "lc-outline-filter-icon"
        }, /*#__PURE__*/external_window_React_default.a.createElement(IconFilter, null))
      }, /*#__PURE__*/external_window_React_default.a.createElement(external_Next_["Checkbox"], {
        checked: checkAll,
        indeterminate: indeterminate,
        onChange: this.handleCheckAll
      }, this.props.tree.pluginContext.intlNode('Check All')), /*#__PURE__*/external_window_React_default.a.createElement(external_Next_["Divider"], null), /*#__PURE__*/external_window_React_default.a.createElement(external_Next_["Checkbox"].Group, {
        value: filterOps,
        direction: "ver",
        onChange: this.handleOptionChange
      }, FILTER_OPTIONS.map(function (op) {
        return /*#__PURE__*/external_window_React_default.a.createElement(external_Next_["Checkbox"], {
          id: op.value,
          value: op.value,
          key: op.value
        }, _this2.props.tree.pluginContext.intlNode(op.label));
      }))));
    }
  }]);
}(external_window_React_["PureComponent"]);

// CONCATENATED MODULE: ../plugin-outline-pane/src/views/pane.tsx
function pane_typeof(o) { "@babel/helpers - typeof"; return pane_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, pane_typeof(o); }
function pane_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function pane_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, pane_toPropertyKey(o.key), o); } }
function pane_createClass(e, r, t) { return r && pane_defineProperties(e.prototype, r), t && pane_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function pane_toPropertyKey(t) { var i = pane_toPrimitive(t, "string"); return "symbol" == pane_typeof(i) ? i : i + ""; }
function pane_toPrimitive(t, r) { if ("object" != pane_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != pane_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function pane_callSuper(t, o, e) { return o = pane_getPrototypeOf(o), pane_possibleConstructorReturn(t, pane_isNativeReflectConstruct() ? Reflect.construct(o, e || [], pane_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function pane_possibleConstructorReturn(t, e) { if (e && ("object" == pane_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return pane_assertThisInitialized(t); }
function pane_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function pane_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (pane_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function pane_getPrototypeOf(t) { return pane_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, pane_getPrototypeOf(t); }
function pane_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && pane_setPrototypeOf(t, e); }
function pane_setPrototypeOf(t, e) { return pane_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, pane_setPrototypeOf(t, e); }





var pane_Pane = /*#__PURE__*/function (_PureComponent) {
  function Pane(props) {
    var _this$props$treeMaste, _this$props$treeMaste2, _this$props$treeMaste3, _this$props$treeMaste4, _this$props$treeMaste5, _this$props$treeMaste6;
    var _this;
    pane_classCallCheck(this, Pane);
    _this = pane_callSuper(this, Pane, [props]);
    _this.controller = void 0;
    _this.simulatorRendererReadyDispose = void 0;
    _this.changeDocumentDispose = void 0;
    _this.removeDocumentDispose = void 0;
    _this.changeTree = function () {
      _this.setState({
        tree: _this.props.treeMaster.currentTree
      });
    };
    var controller = props.controller,
      treeMaster = props.treeMaster;
    _this.controller = controller;
    _this.state = {
      tree: treeMaster.currentTree
    };
    _this.simulatorRendererReadyDispose = (_this$props$treeMaste = _this.props.treeMaster.pluginContext) === null || _this$props$treeMaste === void 0 ? void 0 : (_this$props$treeMaste2 = _this$props$treeMaste.project) === null || _this$props$treeMaste2 === void 0 ? void 0 : _this$props$treeMaste2.onSimulatorRendererReady(_this.changeTree);
    _this.changeDocumentDispose = (_this$props$treeMaste3 = _this.props.treeMaster.pluginContext) === null || _this$props$treeMaste3 === void 0 ? void 0 : (_this$props$treeMaste4 = _this$props$treeMaste3.project) === null || _this$props$treeMaste4 === void 0 ? void 0 : _this$props$treeMaste4.onChangeDocument(_this.changeTree);
    _this.removeDocumentDispose = (_this$props$treeMaste5 = _this.props.treeMaster.pluginContext) === null || _this$props$treeMaste5 === void 0 ? void 0 : (_this$props$treeMaste6 = _this$props$treeMaste5.project) === null || _this$props$treeMaste6 === void 0 ? void 0 : _this$props$treeMaste6.onRemoveDocument(_this.changeTree);
    return _this;
  }
  pane_inherits(Pane, _PureComponent);
  return pane_createClass(Pane, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var _this$simulatorRender, _this$changeDocumentD, _this$removeDocumentD;
      this.controller.purge();
      (_this$simulatorRender = this.simulatorRendererReadyDispose) === null || _this$simulatorRender === void 0 ? void 0 : _this$simulatorRender.call(this);
      (_this$changeDocumentD = this.changeDocumentDispose) === null || _this$changeDocumentD === void 0 ? void 0 : _this$changeDocumentD.call(this);
      (_this$removeDocumentD = this.removeDocumentDispose) === null || _this$removeDocumentD === void 0 ? void 0 : _this$removeDocumentD.call(this);
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;
      var tree = this.state.tree;
      if (!tree) {
        return /*#__PURE__*/external_window_React_default.a.createElement("div", {
          className: "lc-outline-pane"
        }, /*#__PURE__*/external_window_React_default.a.createElement("p", {
          className: "lc-outline-notice"
        }, /*#__PURE__*/external_window_React_default.a.createElement(external_Next_["Loading"], {
          style: {
            display: 'block',
            marginTop: '40px'
          },
          tip: this.props.treeMaster.pluginContext.intl('Initializing')
        })));
      }
      return /*#__PURE__*/external_window_React_default.a.createElement("div", {
        className: "lc-outline-pane"
      }, !this.props.hideFilter && /*#__PURE__*/external_window_React_default.a.createElement(filter_Filter, {
        tree: tree
      }), /*#__PURE__*/external_window_React_default.a.createElement("div", {
        ref: function ref(shell) {
          return _this2.controller.mount(shell);
        },
        className: "lc-outline-tree-container ".concat(this.props.hideFilter ? 'lc-hidden-outline-filter' : '')
      }, /*#__PURE__*/external_window_React_default.a.createElement(tree_TreeView, {
        key: tree.id,
        tree: tree
      })));
    }
  }]);
}(external_window_React_["PureComponent"]);
// CONCATENATED MODULE: ../plugin-outline-pane/src/icons/outline.tsx
function outline_extends() { return outline_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, outline_extends.apply(null, arguments); }

function IconOutline(props) {
  return /*#__PURE__*/React.createElement(utils_src["f" /* SVGIcon */], outline_extends({
    viewBox: "0 0 1024 1024"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M128 96h512a64 64 0 0 1 64 64v64a64 64 0 0 1-64 64H128a64 64 0 0 1-64-64V160a64 64 0 0 1 64-64z m32 64a32 32 0 1 0 0 64h448a32 32 0 0 0 0-64H160z m224 576h512a64 64 0 0 1 64 64v64a64 64 0 0 1-64 64H384a64 64 0 0 1-64-64v-64a64 64 0 0 1 64-64z m32 64a32 32 0 0 0 0 64h448a32 32 0 0 0 0-64H416z m-32-384h512a64 64 0 0 1 64 64v64a64 64 0 0 1-64 64H384a64 64 0 0 1-64-64v-64a64 64 0 0 1 64-64z m32 64a32 32 0 0 0 0 64h448a32 32 0 0 0 0-64H416z"
  }));
}
IconOutline.displayName = 'IconOutline';
// CONCATENATED MODULE: ../plugin-outline-pane/src/helper/consts.ts
var BackupPaneName = 'outline-backup-pane';
var MasterPaneName = 'outline-master-pane';
// EXTERNAL MODULE: /Users/bjhl/Documents/WorkProject/lowcode-engine/node_modules/events/events.js
var events = __webpack_require__(9);
var events_default = /*#__PURE__*/__webpack_require__.n(events);

// CONCATENATED MODULE: ../plugin-outline-pane/src/controllers/tree-node.ts
function controllers_tree_node_typeof(o) { "@babel/helpers - typeof"; return controllers_tree_node_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, controllers_tree_node_typeof(o); }
function controllers_tree_node_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function controllers_tree_node_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, controllers_tree_node_toPropertyKey(o.key), o); } }
function controllers_tree_node_createClass(e, r, t) { return r && controllers_tree_node_defineProperties(e.prototype, r), t && controllers_tree_node_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function controllers_tree_node_toPropertyKey(t) { var i = controllers_tree_node_toPrimitive(t, "string"); return "symbol" == controllers_tree_node_typeof(i) ? i : i + ""; }
function controllers_tree_node_toPrimitive(t, r) { if ("object" != controllers_tree_node_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != controllers_tree_node_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }


var EVENT_NAMES;
(function (EVENT_NAMES) {
  EVENT_NAMES["filterResultChanged"] = "filterResultChanged";
  EVENT_NAMES["expandedChanged"] = "expandedChanged";
  EVENT_NAMES["hiddenChanged"] = "hiddenChanged";
  EVENT_NAMES["lockedChanged"] = "lockedChanged";
  EVENT_NAMES["titleLabelChanged"] = "titleLabelChanged";
  EVENT_NAMES["expandableChanged"] = "expandableChanged";
  EVENT_NAMES["conditionChanged"] = "conditionChanged";
})(EVENT_NAMES || (EVENT_NAMES = {}));
var tree_node_TreeNode = /*#__PURE__*/function () {
  function TreeNode(tree, node) {
    controllers_tree_node_classCallCheck(this, TreeNode);
    this.pluginContext = void 0;
    this.event = new events_default.a();
    this._node = void 0;
    this.tree = void 0;
    this._filterResult = {
      filterWorking: false,
      matchChild: false,
      matchSelf: false,
      keywords: ''
    };
    /**
     * 默认为折叠状态
     * 在初始化根节点时，设置为展开状态
     */
    this._expanded = false;
    this.id = Object(utils_src["ib" /* uniqueId */])('treeNode');
    this.tree = tree;
    this.pluginContext = tree.pluginContext;
    this._node = node;
  }
  return controllers_tree_node_createClass(TreeNode, [{
    key: "nodeId",
    get: function get() {
      return this.node.id;
    }
    /**
     * 是否可以展开
     */
  }, {
    key: "expandable",
    get: function get() {
      var _this$dropDetail;
      if (this.locked) return false;
      return this.hasChildren() || this.hasSlots() || ((_this$dropDetail = this.dropDetail) === null || _this$dropDetail === void 0 ? void 0 : _this$dropDetail.index) != null;
    }
  }, {
    key: "expanded",
    get: function get() {
      return this.isRoot(true) || this.expandable && this._expanded;
    }
    /**
     * 插入"线"位置信息
     */
  }, {
    key: "dropDetail",
    get: function get() {
      var _this$pluginContext$p;
      var loc = (_this$pluginContext$p = this.pluginContext.project.getCurrentDocument()) === null || _this$pluginContext$p === void 0 ? void 0 : _this$pluginContext$p.dropLocation;
      return loc && this.isResponseDropping() && Object(utils_src["M" /* isLocationChildrenDetail */])(loc.detail) ? loc.detail : null;
    }
  }, {
    key: "depth",
    get: function get() {
      return this.node.zLevel;
    }
  }, {
    key: "detecting",
    get: function get() {
      var doc = this.pluginContext.project.currentDocument;
      return !!(doc !== null && doc !== void 0 && doc.isDetectingNode(this.node));
    }
  }, {
    key: "hidden",
    get: function get() {
      var cv = this.node.isConditionalVisible();
      if (cv == null) {
        return !this.node.visible;
      }
      return !cv;
    }
  }, {
    key: "locked",
    get: function get() {
      return this.node.isLocked;
    }
  }, {
    key: "selected",
    get: function get() {
      var _this$pluginContext$p2;
      // TODO: check is dragging
      var selection = (_this$pluginContext$p2 = this.pluginContext.project.getCurrentDocument()) === null || _this$pluginContext$p2 === void 0 ? void 0 : _this$pluginContext$p2.selection;
      if (!selection) {
        return false;
      }
      return selection === null || selection === void 0 ? void 0 : selection.has(this.node.id);
    }
  }, {
    key: "title",
    get: function get() {
      return this.node.title;
    }
  }, {
    key: "titleLabel",
    get: function get() {
      var title = this.title;
      if (!title) {
        return '';
      }
      if (title.label) {
        title = title.label;
      }
      if (typeof title === 'string') {
        return title;
      }
      if (Object(utils_src["I" /* isI18nData */])(title)) {
        var currentLocale = this.pluginContext.getLocale();
        var currentTitle = title[currentLocale];
        return currentTitle;
      }
      return this.node.componentName;
    }
  }, {
    key: "icon",
    get: function get() {
      var _this$node$componentM;
      return (_this$node$componentM = this.node.componentMeta) === null || _this$node$componentM === void 0 ? void 0 : _this$node$componentM.icon;
    }
  }, {
    key: "parent",
    get: function get() {
      var parent = this.node.parent;
      if (parent) {
        return this.tree.getTreeNode(parent);
      }
      return null;
    }
  }, {
    key: "slots",
    get: function get() {
      var _this = this;
      // todo: shallowEqual
      return this.node.slots.map(function (node) {
        return _this.tree.getTreeNode(node);
      });
    }
  }, {
    key: "condition",
    get: function get() {
      return this.node.hasCondition() && !this.node.conditionGroup;
    }
  }, {
    key: "children",
    get: function get() {
      var _this$node$children,
        _this2 = this;
      return ((_this$node$children = this.node.children) === null || _this$node$children === void 0 ? void 0 : _this$node$children.map(function (node) {
        return _this2.tree.getTreeNode(node);
      })) || null;
    }
  }, {
    key: "node",
    get: function get() {
      return this._node;
    }
  }, {
    key: "setLocked",
    value: function setLocked(flag) {
      this.node.lock(flag);
      this.event.emit(EVENT_NAMES.lockedChanged, flag);
    }
  }, {
    key: "deleteNode",
    value: function deleteNode(node) {
      node && node.remove();
    }
  }, {
    key: "onFilterResultChanged",
    value: function onFilterResultChanged(fn) {
      var _this3 = this;
      this.event.on(EVENT_NAMES.filterResultChanged, fn);
      return function () {
        _this3.event.off(EVENT_NAMES.filterResultChanged, fn);
      };
    }
  }, {
    key: "onExpandedChanged",
    value: function onExpandedChanged(fn) {
      var _this4 = this;
      this.event.on(EVENT_NAMES.expandedChanged, fn);
      return function () {
        _this4.event.off(EVENT_NAMES.expandedChanged, fn);
      };
    }
  }, {
    key: "onHiddenChanged",
    value: function onHiddenChanged(fn) {
      var _this5 = this;
      this.event.on(EVENT_NAMES.hiddenChanged, fn);
      return function () {
        _this5.event.off(EVENT_NAMES.hiddenChanged, fn);
      };
    }
  }, {
    key: "onLockedChanged",
    value: function onLockedChanged(fn) {
      var _this6 = this;
      this.event.on(EVENT_NAMES.lockedChanged, fn);
      return function () {
        _this6.event.off(EVENT_NAMES.lockedChanged, fn);
      };
    }
  }, {
    key: "onTitleLabelChanged",
    value: function onTitleLabelChanged(fn) {
      var _this7 = this;
      this.event.on(EVENT_NAMES.titleLabelChanged, fn);
      return function () {
        _this7.event.off(EVENT_NAMES.titleLabelChanged, fn);
      };
    }
  }, {
    key: "onConditionChanged",
    value: function onConditionChanged(fn) {
      var _this8 = this;
      this.event.on(EVENT_NAMES.conditionChanged, fn);
      return function () {
        _this8.event.off(EVENT_NAMES.conditionChanged, fn);
      };
    }
  }, {
    key: "onExpandableChanged",
    value: function onExpandableChanged(fn) {
      var _this9 = this;
      this.event.on(EVENT_NAMES.expandableChanged, fn);
      return function () {
        _this9.event.off(EVENT_NAMES.expandableChanged, fn);
      };
    }
    /**
     * 触发 onExpandableChanged 回调
     */
  }, {
    key: "notifyExpandableChanged",
    value: function notifyExpandableChanged() {
      this.event.emit(EVENT_NAMES.expandableChanged, this.expandable);
    }
  }, {
    key: "notifyTitleLabelChanged",
    value: function notifyTitleLabelChanged() {
      this.event.emit(EVENT_NAMES.titleLabelChanged, this.title);
    }
  }, {
    key: "notifyConditionChanged",
    value: function notifyConditionChanged() {
      this.event.emit(EVENT_NAMES.conditionChanged, this.condition);
    }
  }, {
    key: "setHidden",
    value: function setHidden(flag) {
      if (this.node.conditionGroup) {
        return;
      }
      if (this.node.visible !== !flag) {
        this.node.visible = !flag;
      }
      this.event.emit(EVENT_NAMES.hiddenChanged, flag);
    }
  }, {
    key: "isFocusingNode",
    value: function isFocusingNode() {
      var _this$pluginContext$p3, _loc$detail$focus, _loc$detail, _loc$detail$focus2;
      var loc = (_this$pluginContext$p3 = this.pluginContext.project.getCurrentDocument()) === null || _this$pluginContext$p3 === void 0 ? void 0 : _this$pluginContext$p3.dropLocation;
      if (!loc) {
        return false;
      }
      return Object(utils_src["M" /* isLocationChildrenDetail */])(loc.detail) && ((_loc$detail$focus = loc.detail.focus) === null || _loc$detail$focus === void 0 ? void 0 : _loc$detail$focus.type) === 'node' && ((_loc$detail = loc.detail) === null || _loc$detail === void 0 ? void 0 : (_loc$detail$focus2 = _loc$detail.focus) === null || _loc$detail$focus2 === void 0 ? void 0 : _loc$detail$focus2.node.id) === this.nodeId;
    }
  }, {
    key: "setExpanded",
    value: function setExpanded(value) {
      this._expanded = value;
      this.event.emit(EVENT_NAMES.expandedChanged, value);
    }
  }, {
    key: "isRoot",
    value: function isRoot() {
      var _this$pluginContext$p4;
      var includeOriginalRoot = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      var rootNode = (_this$pluginContext$p4 = this.pluginContext.project.getCurrentDocument()) === null || _this$pluginContext$p4 === void 0 ? void 0 : _this$pluginContext$p4.root;
      return this.tree.root === this || includeOriginalRoot && rootNode === this.node;
    }
    /**
     * 是否是响应投放区
     */
  }, {
    key: "isResponseDropping",
    value: function isResponseDropping() {
      var _this$pluginContext$p5, _loc$target;
      var loc = (_this$pluginContext$p5 = this.pluginContext.project.getCurrentDocument()) === null || _this$pluginContext$p5 === void 0 ? void 0 : _this$pluginContext$p5.dropLocation;
      if (!loc) {
        return false;
      }
      return ((_loc$target = loc.target) === null || _loc$target === void 0 ? void 0 : _loc$target.id) === this.nodeId;
    }
  }, {
    key: "setTitleLabel",
    value: function setTitleLabel(label) {
      var origLabel = this.titleLabel;
      if (label === origLabel) {
        return;
      }
      if (label === '') {
        var _this$node$getExtraPr;
        (_this$node$getExtraPr = this.node.getExtraProp('title', false)) === null || _this$node$getExtraPr === void 0 ? void 0 : _this$node$getExtraPr.remove();
      } else {
        var _this$node$getExtraPr2;
        (_this$node$getExtraPr2 = this.node.getExtraProp('title', true)) === null || _this$node$getExtraPr2 === void 0 ? void 0 : _this$node$getExtraPr2.setValue(label);
      }
      this.event.emit(EVENT_NAMES.titleLabelChanged, this);
    }
    /**
     * 是否是容器，允许子节点拖入
     */
  }, {
    key: "isContainer",
    value: function isContainer() {
      return this.node.isContainerNode;
    }
    /**
     * 判断是否有"插槽"
     */
  }, {
    key: "hasSlots",
    value: function hasSlots() {
      return this.node.hasSlots();
    }
  }, {
    key: "hasChildren",
    value: function hasChildren() {
      var _this$node$children2;
      return !!(this.isContainer() && (_this$node$children2 = this.node.children) !== null && _this$node$children2 !== void 0 && _this$node$children2.notEmptyNode);
    }
  }, {
    key: "select",
    value: function select(isMulti) {
      var _this$pluginContext$p6;
      var node = this.node;
      var selection = (_this$pluginContext$p6 = this.pluginContext.project.getCurrentDocument()) === null || _this$pluginContext$p6 === void 0 ? void 0 : _this$pluginContext$p6.selection;
      if (isMulti) {
        selection === null || selection === void 0 ? void 0 : selection.add(node.id);
      } else {
        selection === null || selection === void 0 ? void 0 : selection.select(node.id);
      }
    }
    /**
     * 展开节点，支持依次展开父节点
     */
  }, {
    key: "expand",
    value: function expand() {
      var tryExpandParents = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      // 这边不能直接使用 expanded，需要额外判断是否可以展开
      // 如果只使用 expanded，会漏掉不可以展开的情况，即在不可以展开的情况下，会触发展开
      if (this.expandable && !this._expanded) {
        this.setExpanded(true);
      }
      if (tryExpandParents) {
        this.expandParents();
      }
    }
  }, {
    key: "expandParents",
    value: function expandParents() {
      var p = this.node.parent;
      while (p) {
        this.tree.getTreeNode(p).setExpanded(true);
        p = p.parent;
      }
    }
  }, {
    key: "setNode",
    value: function setNode(node) {
      if (this._node !== node) {
        this._node = node;
      }
    }
  }, {
    key: "filterReult",
    get: function get() {
      return this._filterResult;
    }
  }, {
    key: "setFilterReult",
    value: function setFilterReult(val) {
      this._filterResult = val;
      this.event.emit(EVENT_NAMES.filterResultChanged);
    }
  }]);
}();

// CONCATENATED MODULE: ../plugin-outline-pane/src/controllers/tree.ts
function controllers_tree_typeof(o) { "@babel/helpers - typeof"; return controllers_tree_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, controllers_tree_typeof(o); }
function controllers_tree_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function controllers_tree_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, controllers_tree_toPropertyKey(o.key), o); } }
function controllers_tree_createClass(e, r, t) { return r && controllers_tree_defineProperties(e.prototype, r), t && controllers_tree_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function controllers_tree_toPropertyKey(t) { var i = controllers_tree_toPrimitive(t, "string"); return "symbol" == controllers_tree_typeof(i) ? i : i + ""; }
function controllers_tree_toPrimitive(t, r) { if ("object" != controllers_tree_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != controllers_tree_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

var tree_Tree = /*#__PURE__*/function () {
  function Tree(treeMaster) {
    var _this = this;
    controllers_tree_classCallCheck(this, Tree);
    this.treeNodesMap = new Map();
    this.id = void 0;
    this.pluginContext = void 0;
    this.treeMaster = void 0;
    this.treeMaster = treeMaster;
    this.pluginContext = treeMaster.pluginContext;
    var doc = this.pluginContext.project.currentDocument;
    this.id = doc === null || doc === void 0 ? void 0 : doc.id;
    doc === null || doc === void 0 ? void 0 : doc.onChangeNodeChildren(function (info) {
      var node = info.node;
      var treeNode = _this.getTreeNodeById(node.id);
      treeNode === null || treeNode === void 0 ? void 0 : treeNode.notifyExpandableChanged();
    });
    doc === null || doc === void 0 ? void 0 : doc.history.onChangeCursor(function () {
      var _this$root;
      (_this$root = _this.root) === null || _this$root === void 0 ? void 0 : _this$root.notifyExpandableChanged();
    });
    doc === null || doc === void 0 ? void 0 : doc.onChangeNodeProp(function (info) {
      var node = info.node,
        key = info.key;
      if (key === '___title___') {
        var treeNode = _this.getTreeNodeById(node.id);
        treeNode === null || treeNode === void 0 ? void 0 : treeNode.notifyTitleLabelChanged();
      } else if (key === '___condition___') {
        var _treeNode = _this.getTreeNodeById(node.id);
        _treeNode === null || _treeNode === void 0 ? void 0 : _treeNode.notifyConditionChanged();
      }
    });
    doc === null || doc === void 0 ? void 0 : doc.onChangeNodeVisible(function (node, visible) {
      var treeNode = _this.getTreeNodeById(node.id);
      treeNode === null || treeNode === void 0 ? void 0 : treeNode.setHidden(!visible);
    });
    doc === null || doc === void 0 ? void 0 : doc.onImportSchema(function () {
      _this.treeNodesMap = new Map();
    });
  }
  return controllers_tree_createClass(Tree, [{
    key: "root",
    get: function get() {
      var _this$pluginContext$p;
      if ((_this$pluginContext$p = this.pluginContext.project.currentDocument) !== null && _this$pluginContext$p !== void 0 && _this$pluginContext$p.focusNode) {
        return this.getTreeNode(this.pluginContext.project.currentDocument.focusNode);
      }
      return null;
    }
  }, {
    key: "setNodeSelected",
    value: function setNodeSelected(nodeId) {
      // 目标节点选中，其他节点展开
      var treeNode = this.treeNodesMap.get(nodeId);
      if (!treeNode) {
        return;
      }
      this.expandAllAncestors(treeNode);
    }
  }, {
    key: "getTreeNode",
    value: function getTreeNode(node) {
      if (this.treeNodesMap.has(node.id)) {
        var tnode = this.treeNodesMap.get(node.id);
        tnode.setNode(node);
        return tnode;
      }
      var treeNode = new tree_node_TreeNode(this, node);
      this.treeNodesMap.set(node.id, treeNode);
      return treeNode;
    }
  }, {
    key: "getTreeNodeById",
    value: function getTreeNodeById(id) {
      return this.treeNodesMap.get(id);
    }
  }, {
    key: "expandAllAncestors",
    value: function expandAllAncestors(treeNode) {
      if (!treeNode) {
        return;
      }
      if (treeNode.isRoot()) {
        return;
      }
      var ancestors = [];
      var currentNode = treeNode;
      while (!treeNode.isRoot()) {
        var _currentNode;
        currentNode = (_currentNode = currentNode) === null || _currentNode === void 0 ? void 0 : _currentNode.parent;
        if (currentNode) {
          ancestors.unshift(currentNode);
        } else {
          break;
        }
      }
      ancestors.forEach(function (ancestor) {
        ancestor.setExpanded(true);
      });
    }
  }, {
    key: "expandAllDecendants",
    value: function expandAllDecendants(treeNode) {
      var _this2 = this;
      if (!treeNode) {
        return;
      }
      treeNode.setExpanded(true);
      var children = treeNode && treeNode.children;
      if (children) {
        children.forEach(function (child) {
          _this2.expandAllDecendants(child);
        });
      }
    }
  }, {
    key: "collapseAllDecendants",
    value: function collapseAllDecendants(treeNode) {
      var _this3 = this;
      if (!treeNode) {
        return;
      }
      treeNode.setExpanded(false);
      var children = treeNode && treeNode.children;
      if (children) {
        children.forEach(function (child) {
          _this3.collapseAllDecendants(child);
        });
      }
    }
  }]);
}();
// EXTERNAL MODULE: ../plugin-outline-pane/src/locale/en-US.json
var plugin_outline_pane_src_locale_en_US = __webpack_require__(54);

// EXTERNAL MODULE: ../plugin-outline-pane/src/locale/zh-CN.json
var plugin_outline_pane_src_locale_zh_CN = __webpack_require__(55);

// CONCATENATED MODULE: ../plugin-outline-pane/src/locale/index.ts



// CONCATENATED MODULE: ../plugin-outline-pane/src/controllers/tree-master.ts
function tree_master_typeof(o) { "@babel/helpers - typeof"; return tree_master_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, tree_master_typeof(o); }
function tree_master_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function tree_master_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, tree_master_toPropertyKey(o.key), o); } }
function tree_master_createClass(e, r, t) { return r && tree_master_defineProperties(e.prototype, r), t && tree_master_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function tree_master_toPropertyKey(t) { var i = tree_master_toPrimitive(t, "string"); return "symbol" == tree_master_typeof(i) ? i : i + ""; }
function tree_master_toPrimitive(t, r) { if ("object" != tree_master_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != tree_master_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }





var tree_master_EVENT_NAMES;
(function (EVENT_NAMES) {
  EVENT_NAMES["pluginContextChanged"] = "pluginContextChanged";
})(tree_master_EVENT_NAMES || (tree_master_EVENT_NAMES = {}));
var tree_master_TreeMaster = /*#__PURE__*/function () {
  function TreeMaster(pluginContext, options) {
    var _this = this;
    tree_master_classCallCheck(this, TreeMaster);
    this.options = void 0;
    this.pluginContext = void 0;
    this.boards = new Set();
    this.treeMap = new Map();
    this.disposeEvents = [];
    this.event = new events_default.a();
    this.options = options;
    this.setPluginContext(pluginContext);
    var workspace = this.pluginContext.workspace;
    this.initEvent();
    if (pluginContext.registerLevel === types_src["h" /* IPublicEnumPluginRegisterLevel */].Workspace) {
      var _workspace$window;
      this.setPluginContext((_workspace$window = workspace.window) === null || _workspace$window === void 0 ? void 0 : _workspace$window.currentEditorView);
      var dispose;
      var windowViewTypeChangeEvent = function windowViewTypeChangeEvent() {
        var _workspace$window2;
        dispose = (_workspace$window2 = workspace.window) === null || _workspace$window2 === void 0 ? void 0 : _workspace$window2.onChangeViewType(function () {
          var _workspace$window3;
          _this.setPluginContext((_workspace$window3 = workspace.window) === null || _workspace$window3 === void 0 ? void 0 : _workspace$window3.currentEditorView);
        });
      };
      windowViewTypeChangeEvent();
      workspace.onChangeActiveWindow(function () {
        var _workspace$window4;
        _this.setPluginContext((_workspace$window4 = workspace.window) === null || _workspace$window4 === void 0 ? void 0 : _workspace$window4.currentEditorView);
        dispose && dispose();
        windowViewTypeChangeEvent();
      });
    }
  }
  return tree_master_createClass(TreeMaster, [{
    key: "setPluginContext",
    value: function setPluginContext(pluginContext) {
      if (!pluginContext) {
        return;
      }
      var _pluginContext$common = pluginContext.common.utils.createIntl({
          'en-US': plugin_outline_pane_src_locale_en_US,
          'zh-CN': plugin_outline_pane_src_locale_zh_CN
        }),
        intl = _pluginContext$common.intl,
        intlNode = _pluginContext$common.intlNode,
        getLocale = _pluginContext$common.getLocale;
      var _pluginContext = Object.assign(pluginContext, {
        intl: intl,
        intlNode: intlNode,
        getLocale: getLocale
      });
      _pluginContext.extraTitle = this.options && this.options['extraTitle'];
      this.pluginContext = _pluginContext;
      this.disposeEvent();
      this.initEvent();
      this.emitPluginContextChange();
    }
  }, {
    key: "disposeEvent",
    value: function disposeEvent() {
      this.disposeEvents.forEach(function (d) {
        d && d();
      });
    }
  }, {
    key: "initEvent",
    value: function initEvent() {
      var _this2 = this,
        _canvas$dragon,
        _canvas$activeTracker,
        _canvas$dragon2,
        _canvas$activeTracker2;
      var startTime;
      var _this$pluginContext = this.pluginContext,
        event = _this$pluginContext.event,
        project = _this$pluginContext.project,
        canvas = _this$pluginContext.canvas;
      var setExpandByActiveTracker = function setExpandByActiveTracker(target) {
        var node = target.node,
          detail = target.detail;
        var tree = _this2.currentTree;
        if (!tree /* || node.document !== tree.document */) {
          return;
        }
        var treeNode = tree.getTreeNode(node);
        if (detail && Object(utils_src["M" /* isLocationChildrenDetail */])(detail)) {
          treeNode.expand(true);
        } else {
          treeNode.expandParents();
        }
        _this2.boards.forEach(function (board) {
          board.scrollToNode(treeNode, detail);
        });
      };
      this.disposeEvents = [(_canvas$dragon = canvas.dragon) === null || _canvas$dragon === void 0 ? void 0 : _canvas$dragon.onDragstart(function () {
        startTime = Date.now() / 1000;
        // needs?
        _this2.toVision();
      }), (_canvas$activeTracker = canvas.activeTracker) === null || _canvas$activeTracker === void 0 ? void 0 : _canvas$activeTracker.onChange(setExpandByActiveTracker), (_canvas$dragon2 = canvas.dragon) === null || _canvas$dragon2 === void 0 ? void 0 : _canvas$dragon2.onDragend(function () {
        var _project$currentDocum, _project$currentDocum2;
        var endTime = Date.now() / 1000;
        var nodes = (_project$currentDocum = project.currentDocument) === null || _project$currentDocum === void 0 ? void 0 : (_project$currentDocum2 = _project$currentDocum.selection) === null || _project$currentDocum2 === void 0 ? void 0 : _project$currentDocum2.getNodes();
        event.emit('outlinePane.dragend', {
          selected: nodes === null || nodes === void 0 ? void 0 : nodes.map(function (n) {
            var _n$componentMeta, _n$componentMeta2;
            if (!n) {
              return;
            }
            var npm = n === null || n === void 0 ? void 0 : (_n$componentMeta = n.componentMeta) === null || _n$componentMeta === void 0 ? void 0 : _n$componentMeta.npm;
            return [npm === null || npm === void 0 ? void 0 : npm.package, npm === null || npm === void 0 ? void 0 : npm.componentName].filter(function (item) {
              return !!item;
            }).join('-') || (n === null || n === void 0 ? void 0 : (_n$componentMeta2 = n.componentMeta) === null || _n$componentMeta2 === void 0 ? void 0 : _n$componentMeta2.componentName);
          }).join('&'),
          time: (endTime - startTime).toFixed(2)
        });
      }), project.onRemoveDocument(function (data) {
        var id = data.id;
        _this2.treeMap.delete(id);
      })];
      if ((_canvas$activeTracker2 = canvas.activeTracker) !== null && _canvas$activeTracker2 !== void 0 && _canvas$activeTracker2.target) {
        var _canvas$activeTracker3;
        setExpandByActiveTracker((_canvas$activeTracker3 = canvas.activeTracker) === null || _canvas$activeTracker3 === void 0 ? void 0 : _canvas$activeTracker3.target);
      }
    }
  }, {
    key: "toVision",
    value: function toVision() {
      var tree = this.currentTree;
      if (tree) {
        var _this$pluginContext$p;
        var selection = (_this$pluginContext$p = this.pluginContext.project.getCurrentDocument()) === null || _this$pluginContext$p === void 0 ? void 0 : _this$pluginContext$p.selection;
        selection === null || selection === void 0 ? void 0 : selection.getTopNodes().forEach(function (node) {
          tree.getTreeNode(node).setExpanded(false);
        });
      }
    }
  }, {
    key: "addBoard",
    value: function addBoard(board) {
      this.boards.add(board);
    }
  }, {
    key: "removeBoard",
    value: function removeBoard(board) {
      this.boards.delete(board);
    }
  }, {
    key: "purge",
    value: function purge() {
      // todo others purge
    }
  }, {
    key: "onPluginContextChange",
    value: function onPluginContextChange(fn) {
      this.event.on(tree_master_EVENT_NAMES.pluginContextChanged, fn);
    }
  }, {
    key: "emitPluginContextChange",
    value: function emitPluginContextChange() {
      this.event.emit(tree_master_EVENT_NAMES.pluginContextChanged);
    }
  }, {
    key: "currentTree",
    get: function get() {
      var doc = this.pluginContext.project.getCurrentDocument();
      if (doc) {
        var id = doc.id;
        if (this.treeMap.has(id)) {
          return this.treeMap.get(id);
        }
        var tree = new tree_Tree(this);
        this.treeMap.set(id, tree);
        return tree;
      }
      return null;
    }
  }]);
}();
// CONCATENATED MODULE: ../plugin-outline-pane/src/helper/indent-track.ts
function indent_track_typeof(o) { "@babel/helpers - typeof"; return indent_track_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, indent_track_typeof(o); }
function indent_track_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function indent_track_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, indent_track_toPropertyKey(o.key), o); } }
function indent_track_createClass(e, r, t) { return r && indent_track_defineProperties(e.prototype, r), t && indent_track_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function indent_track_toPropertyKey(t) { var i = indent_track_toPrimitive(t, "string"); return "symbol" == indent_track_typeof(i) ? i : i + ""; }
function indent_track_toPrimitive(t, r) { if ("object" != indent_track_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != indent_track_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

var IndentSensitive = 15;
var indent_track_IndentTrack = /*#__PURE__*/function () {
  function IndentTrack() {
    indent_track_classCallCheck(this, IndentTrack);
    this.indentStart = null;
  }
  return indent_track_createClass(IndentTrack, [{
    key: "reset",
    value: function reset() {
      this.indentStart = null;
    }
    // eslint-disable-next-line max-len
  }, {
    key: "getIndentParent",
    value: function getIndentParent(lastLoc, loc) {
      if (lastLoc.target !== loc.target || !Object(utils_src["M" /* isLocationChildrenDetail */])(lastLoc.detail) || !Object(utils_src["M" /* isLocationChildrenDetail */])(loc.detail) || lastLoc.source !== loc.source || lastLoc.detail.index !== loc.detail.index || loc.detail.index == null) {
        this.indentStart = null;
        return null;
      }
      if (this.indentStart == null) {
        this.indentStart = lastLoc.event.globalX;
      }
      var delta = loc.event.globalX - this.indentStart;
      var indent = Math.floor(Math.abs(delta) / IndentSensitive);
      if (indent < 1) {
        return null;
      }
      this.indentStart = loc.event.globalX;
      var direction = delta < 0 ? 'left' : 'right';
      var parent = loc.target;
      var index = loc.detail.index;
      if (direction === 'left') {
        var _parent$children;
        if (!parent.parent || index < (((_parent$children = parent.children) === null || _parent$children === void 0 ? void 0 : _parent$children.size) || 0) || parent.isSlotNode) {
          return null;
        }
        return [parent.parent, parent.index + 1];
      } else {
        var _parent$children2;
        if (index === 0) {
          return null;
        }
        parent = (_parent$children2 = parent.children) === null || _parent$children2 === void 0 ? void 0 : _parent$children2.get(index - 1);
        if (parent && parent.isContainerNode) {
          var _parent$children3;
          return [parent, (_parent$children3 = parent.children) === null || _parent$children3 === void 0 ? void 0 : _parent$children3.size];
        }
      }
      return null;
    }
  }]);
}();
// CONCATENATED MODULE: ../plugin-outline-pane/src/helper/dwell-timer.ts
function dwell_timer_typeof(o) { "@babel/helpers - typeof"; return dwell_timer_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, dwell_timer_typeof(o); }
function dwell_timer_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function dwell_timer_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, dwell_timer_toPropertyKey(o.key), o); } }
function dwell_timer_createClass(e, r, t) { return r && dwell_timer_defineProperties(e.prototype, r), t && dwell_timer_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function dwell_timer_toPropertyKey(t) { var i = dwell_timer_toPrimitive(t, "string"); return "symbol" == dwell_timer_typeof(i) ? i : i + ""; }
function dwell_timer_toPrimitive(t, r) { if ("object" != dwell_timer_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != dwell_timer_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

/**
 * 停留检查计时器
 */
var dwell_timer_DwellTimer = /*#__PURE__*/function () {
  function DwellTimer(decide) {
    var timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;
    dwell_timer_classCallCheck(this, DwellTimer);
    this.timer = void 0;
    this.previous = void 0;
    this.event = void 0;
    this.decide = void 0;
    this.timeout = 500;
    this.decide = decide;
    this.timeout = timeout;
  }
  return dwell_timer_createClass(DwellTimer, [{
    key: "focus",
    value: function focus(node, event) {
      var _this = this;
      this.event = event;
      if (this.previous === node) {
        return;
      }
      this.reset();
      this.previous = node;
      this.timer = setTimeout(function () {
        _this.previous && _this.decide(_this.previous, _this.event);
        _this.reset();
      }, this.timeout);
    }
  }, {
    key: "tryFocus",
    value: function tryFocus(loc) {
      var _loc$detail$focus;
      if (!loc || !Object(utils_src["M" /* isLocationChildrenDetail */])(loc.detail)) {
        this.reset();
        return;
      }
      if (((_loc$detail$focus = loc.detail.focus) === null || _loc$detail$focus === void 0 ? void 0 : _loc$detail$focus.type) === 'node') {
        this.focus(loc.detail.focus.node, loc.event);
      } else {
        this.reset();
      }
    }
  }, {
    key: "reset",
    value: function reset() {
      if (this.timer) {
        clearTimeout(this.timer);
        this.timer = undefined;
      }
      this.previous = undefined;
    }
  }]);
}();

// CONCATENATED MODULE: ../plugin-outline-pane/src/controllers/pane-controller.ts
function pane_controller_typeof(o) { "@babel/helpers - typeof"; return pane_controller_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, pane_controller_typeof(o); }
function pane_controller_slicedToArray(r, e) { return pane_controller_arrayWithHoles(r) || pane_controller_iterableToArrayLimit(r, e) || pane_controller_unsupportedIterableToArray(r, e) || pane_controller_nonIterableRest(); }
function pane_controller_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function pane_controller_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return pane_controller_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? pane_controller_arrayLikeToArray(r, a) : void 0; } }
function pane_controller_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function pane_controller_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function pane_controller_arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function pane_controller_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function pane_controller_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, pane_controller_toPropertyKey(o.key), o); } }
function pane_controller_createClass(e, r, t) { return r && pane_controller_defineProperties(e.prototype, r), t && pane_controller_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function pane_controller_toPropertyKey(t) { var i = pane_controller_toPrimitive(t, "string"); return "symbol" == pane_controller_typeof(i) ? i : i + ""; }
function pane_controller_toPrimitive(t, r) { if ("object" != pane_controller_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != pane_controller_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/* eslint-disable max-len */





var pane_controller_PaneController = /*#__PURE__*/function () {
  function PaneController(at, treeMaster) {
    var _this = this;
    pane_controller_classCallCheck(this, PaneController);
    this.pluginContext = void 0;
    this.treeMaster = void 0;
    this.id = Object(utils_src["ib" /* uniqueId */])('outline');
    this.indentTrack = new indent_track_IndentTrack();
    this._sensorAvailable = false;
    this.dwell = new dwell_timer_DwellTimer(function (target, event) {
      var _this$pluginContext = _this.pluginContext,
        canvas = _this$pluginContext.canvas,
        project = _this$pluginContext.project;
      var document = project.getCurrentDocument();
      var index;
      var focus;
      var valid = true;
      if (target.hasSlots()) {
        index = null;
        focus = {
          type: 'slots'
        };
      } else {
        index = 0;
        valid = !!(document !== null && document !== void 0 && document.checkNesting(target, event.dragObject));
      }
      canvas.createLocation({
        target: target,
        source: _this.id,
        event: event,
        detail: {
          type: types_src["k" /* IPublicTypeLocationDetailType */].Children,
          index: index,
          focus: focus,
          valid: valid
        }
      });
    });
    /**
     * @see ITreeBoard
     */
    this.at = void 0;
    this.tryScrollAgain = null;
    this.sensing = false;
    this._scrollTarget = void 0;
    this.scroller = void 0;
    this._shell = null;
    this.pluginContext = treeMaster.pluginContext;
    this.treeMaster = treeMaster;
    this.at = at;
    var inited = false;
    var setup = function setup() {
      var _this$treeMaster, _canvas$dragon;
      if (inited) {
        return false;
      }
      inited = true;
      (_this$treeMaster = _this.treeMaster) === null || _this$treeMaster === void 0 ? void 0 : _this$treeMaster.addBoard(_this);
      var canvas = _this.pluginContext.canvas;
      (_canvas$dragon = canvas.dragon) === null || _canvas$dragon === void 0 ? void 0 : _canvas$dragon.addSensor(_this);
      _this.scroller = canvas.createScroller(_this);
    };
    setup();
  }
  /** -------------------- IPublicModelSensor begin -------------------- */
  /**
   * @see IPublicModelSensor
   */
  return pane_controller_createClass(PaneController, [{
    key: "sensorAvailable",
    get:
    /**
     * @see IPublicModelSensor
     */
    function get() {
      return this._sensorAvailable;
    }
  }, {
    key: "bounds",
    get:
    /**
     * @see IScrollable
     */
    function get() {
      if (!this._shell) {
        return null;
      }
      return this._shell.getBoundingClientRect();
    }
  }, {
    key: "scrollTarget",
    get:
    /**
     * @see IScrollable
     */
    function get() {
      return this._scrollTarget;
    }
  }, {
    key: "fixEvent",
    value: function fixEvent(e) {
      var _e$originalEvent$view;
      if (e.fixed) {
        return e;
      }
      var notMyEvent = ((_e$originalEvent$view = e.originalEvent.view) === null || _e$originalEvent$view === void 0 ? void 0 : _e$originalEvent$view.document) !== document;
      if (!e.target || notMyEvent) {
        e.target = document.elementFromPoint(e.canvasX, e.canvasY);
      }
      // documentModel : 目标文档
      e.documentModel = this.pluginContext.project.getCurrentDocument();
      // 事件已订正
      e.fixed = true;
      return e;
    }
    /**
     * @see IPublicModelSensor
     */
  }, {
    key: "locate",
    value: function locate(e) {
      var _this$scroller, _this$treeMaster2, _e$dragObject, _e$dragObject2;
      this.sensing = true;
      (_this$scroller = this.scroller) === null || _this$scroller === void 0 ? void 0 : _this$scroller.scrolling(e);
      var globalY = e.globalY,
        dragObject = e.dragObject;
      var nodes = dragObject === null || dragObject === void 0 ? void 0 : dragObject.nodes;
      var tree = (_this$treeMaster2 = this.treeMaster) === null || _this$treeMaster2 === void 0 ? void 0 : _this$treeMaster2.currentTree;
      if (!tree || !tree.root || !this._shell) {
        return null;
      }
      var operationalNodes = nodes === null || nodes === void 0 ? void 0 : nodes.filter(function (node) {
        var _node$componentMeta, _node$componentMeta$a;
        var onMoveHook = (_node$componentMeta = node.componentMeta) === null || _node$componentMeta === void 0 ? void 0 : (_node$componentMeta$a = _node$componentMeta.advanced.callbacks) === null || _node$componentMeta$a === void 0 ? void 0 : _node$componentMeta$a.onMoveHook;
        var canMove = onMoveHook && typeof onMoveHook === 'function' ? onMoveHook(node) : true;
        return canMove;
      });
      // 如果拖拽的是 Node 才需要后面的判断，拖拽 data 不需要
      if (Object(utils_src["E" /* isDragNodeObject */])(dragObject) && (!operationalNodes || operationalNodes.length === 0)) {
        return;
      }
      var _this$pluginContext2 = this.pluginContext,
        project = _this$pluginContext2.project,
        canvas = _this$pluginContext2.canvas;
      var document = project.getCurrentDocument();
      var pos = getPosFromEvent(e, this._shell);
      var irect = this.getInsertionRect();
      var originLoc = document === null || document === void 0 ? void 0 : document.dropLocation;
      var componentMeta = (_e$dragObject = e.dragObject) !== null && _e$dragObject !== void 0 && _e$dragObject.nodes ? e.dragObject.nodes[0].componentMeta : null;
      if (((_e$dragObject2 = e.dragObject) === null || _e$dragObject2 === void 0 ? void 0 : _e$dragObject2.type) === 'node' && componentMeta && componentMeta.isModal && document !== null && document !== void 0 && document.focusNode) {
        return canvas.createLocation({
          target: document === null || document === void 0 ? void 0 : document.focusNode,
          detail: {
            type: types_src["k" /* IPublicTypeLocationDetailType */].Children,
            index: 0,
            valid: true
          },
          source: this.id,
          event: e
        });
      }
      if (originLoc && (pos && pos === 'unchanged' || irect && globalY >= irect.top && globalY <= irect.bottom) && dragObject) {
        var _loc = originLoc.clone(e);
        var indented = this.indentTrack.getIndentParent(originLoc, _loc);
        if (indented) {
          var _indented = pane_controller_slicedToArray(indented, 2),
            parent = _indented[0],
            index = _indented[1];
          if (checkRecursion(parent, dragObject)) {
            if (tree.getTreeNode(parent).expanded) {
              this.dwell.reset();
              return canvas.createLocation({
                target: parent,
                source: this.id,
                event: e,
                detail: {
                  type: types_src["k" /* IPublicTypeLocationDetailType */].Children,
                  index: index,
                  valid: document === null || document === void 0 ? void 0 : document.checkNesting(parent, e.dragObject)
                }
              });
            }
            originLoc.detail.focus = {
              type: 'node',
              node: parent
            };
            // focus try expand go on
            this.dwell.focus(parent, e);
          } else {
            this.dwell.reset();
          }
          // FIXME: recreate new location
        } else if (originLoc.detail.near) {
          originLoc.detail.near = undefined;
          this.dwell.reset();
        }
        return;
      }
      this.indentTrack.reset();
      if (pos && pos !== 'unchanged') {
        var treeNode = tree.getTreeNodeById(pos.nodeId);
        if (treeNode) {
          var focusSlots = pos.focusSlots;
          var _treeNode = treeNode,
            node = _treeNode.node;
          if (Object(utils_src["E" /* isDragNodeObject */])(dragObject)) {
            var newNodes = operationalNodes;
            var i = newNodes === null || newNodes === void 0 ? void 0 : newNodes.length;
            var p = node;
            while (i-- > 0) {
              if (newNodes[i].contains(p)) {
                p = newNodes[i].parent;
              }
            }
            if (p !== node) {
              node = p || (document === null || document === void 0 ? void 0 : document.focusNode);
              treeNode = tree.getTreeNode(node);
              focusSlots = false;
            }
          }
          if (focusSlots) {
            this.dwell.reset();
            return canvas.createLocation({
              target: node,
              source: this.id,
              event: e,
              detail: {
                type: types_src["k" /* IPublicTypeLocationDetailType */].Children,
                index: null,
                valid: false,
                focus: {
                  type: 'slots'
                }
              }
            });
          }
          if (!treeNode.isRoot()) {
            var _loc2 = this.getNear(treeNode, e);
            this.dwell.tryFocus(_loc2);
            return _loc2;
          }
        }
      }
      var loc = this.drillLocate(tree.root, e);
      this.dwell.tryFocus(loc);
      return loc;
    }
    /**
     * @see IPublicModelSensor
     */
  }, {
    key: "isEnter",
    value: function isEnter(e) {
      if (!this._shell) {
        return false;
      }
      var rect = this._shell.getBoundingClientRect();
      return e.globalY >= rect.top && e.globalY <= rect.bottom && e.globalX >= rect.left && e.globalX <= rect.right;
    }
    /**
     * @see IPublicModelSensor
     */
  }, {
    key: "deactiveSensor",
    value: function deactiveSensor() {
      var _this$scroller2;
      this.sensing = false;
      (_this$scroller2 = this.scroller) === null || _this$scroller2 === void 0 ? void 0 : _this$scroller2.cancel();
      this.dwell.reset();
      this.indentTrack.reset();
    }
    /** -------------------- IPublicModelSensor end -------------------- */
    /** -------------------- ITreeBoard begin -------------------- */
    /**
     * @see ITreeBoard
     */
  }, {
    key: "scrollToNode",
    value: function scrollToNode(treeNode, detail) {
      var _this2 = this;
      var tryTimes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
      if (tryTimes < 1 && this.tryScrollAgain) {
        Object(ric_shim["cancelIdleCallback"])(this.tryScrollAgain);
        this.tryScrollAgain = null;
      }
      if (!this.bounds || !this.scroller || !this.scrollTarget) {
        // is a active sensor
        return;
      }
      var rect;
      if (detail && Object(utils_src["M" /* isLocationChildrenDetail */])(detail)) {
        rect = this.getInsertionRect();
      } else {
        rect = this.getTreeNodeRect(treeNode);
      }
      if (!rect) {
        if (tryTimes < 3) {
          this.tryScrollAgain = ric_shim_default()(function () {
            return _this2.scrollToNode(treeNode, detail, tryTimes + 1);
          });
        }
        return;
      }
      var _this$scrollTarget = this.scrollTarget,
        scrollHeight = _this$scrollTarget.scrollHeight,
        scrollTop = _this$scrollTarget.top;
      var _this$bounds = this.bounds,
        height = _this$bounds.height,
        top = _this$bounds.top,
        bottom = _this$bounds.bottom;
      if (rect.top < top || rect.bottom > bottom) {
        var opt = {};
        opt.top = Math.min(rect.top + rect.height / 2 + scrollTop - top - height / 2, scrollHeight - height);
        if (rect.height >= height) {
          opt.top = Math.min(scrollTop + rect.top - top, opt.top);
        }
        this.scroller.scrollTo(opt);
      }
      // make tail scroll be sure
      if (tryTimes < 4) {
        this.tryScrollAgain = ric_shim_default()(function () {
          return _this2.scrollToNode(treeNode, detail, 4);
        });
      }
    }
    /** -------------------- ITreeBoard end -------------------- */
  }, {
    key: "getNear",
    value: function getNear(treeNode, e, originalIndex, originalRect) {
      var _this$pluginContext3 = this.pluginContext,
        canvas = _this$pluginContext3.canvas,
        project = _this$pluginContext3.project;
      var document = project.getCurrentDocument();
      var globalY = e.globalY,
        dragObject = e.dragObject;
      if (!dragObject) {
        return null;
      }
      // TODO: check dragObject is anyData
      var node = treeNode.node,
        expanded = treeNode.expanded;
      var rect = originalRect;
      if (!rect) {
        rect = this.getTreeNodeRect(treeNode);
        if (!rect) {
          return null;
        }
      }
      var index = originalIndex;
      if (index == null) {
        index = node.index;
      }
      if (node.isSlotNode) {
        // 是个插槽根节点
        if (!treeNode.isContainer() && !treeNode.hasSlots()) {
          return canvas.createLocation({
            target: node.parent,
            source: this.id,
            event: e,
            detail: {
              type: types_src["k" /* IPublicTypeLocationDetailType */].Children,
              index: null,
              near: {
                node: node,
                pos: 'replace'
              },
              valid: true // TODO: future validation the slot limit
            }
          });
        }
        var loc1 = this.drillLocate(treeNode, e);
        if (loc1) {
          return loc1;
        }
        return canvas.createLocation({
          target: node.parent,
          source: this.id,
          event: e,
          detail: {
            type: types_src["k" /* IPublicTypeLocationDetailType */].Children,
            index: null,
            valid: false,
            focus: {
              type: 'slots'
            }
          }
        });
      }
      var focusNode;
      // focus
      if (!expanded && (treeNode.isContainer() || treeNode.hasSlots())) {
        focusNode = node;
      }
      // before
      var titleRect = this.getTreeTitleRect(treeNode) || rect;
      if (globalY < titleRect.top + titleRect.height / 2) {
        return canvas.createLocation({
          target: node.parent,
          source: this.id,
          event: e,
          detail: {
            type: types_src["k" /* IPublicTypeLocationDetailType */].Children,
            index: index,
            valid: document === null || document === void 0 ? void 0 : document.checkNesting(node.parent, dragObject),
            near: {
              node: node,
              pos: 'before'
            },
            focus: checkRecursion(focusNode, dragObject) ? {
              type: 'node',
              node: focusNode
            } : undefined
          }
        });
      }
      if (globalY > titleRect.bottom) {
        focusNode = undefined;
      }
      if (expanded) {
        // drill
        var loc = this.drillLocate(treeNode, e);
        if (loc) {
          return loc;
        }
      }
      // after
      return canvas.createLocation({
        target: node.parent,
        source: this.id,
        event: e,
        detail: {
          type: types_src["k" /* IPublicTypeLocationDetailType */].Children,
          index: (index || 0) + 1,
          valid: document === null || document === void 0 ? void 0 : document.checkNesting(node.parent, dragObject),
          near: {
            node: node,
            pos: 'after'
          },
          focus: checkRecursion(focusNode, dragObject) ? {
            type: 'node',
            node: focusNode
          } : undefined
        }
      });
    }
  }, {
    key: "drillLocate",
    value: function drillLocate(treeNode, e) {
      var _this$pluginContext4 = this.pluginContext,
        canvas = _this$pluginContext4.canvas,
        project = _this$pluginContext4.project;
      var document = project.getCurrentDocument();
      var dragObject = e.dragObject,
        globalY = e.globalY;
      if (!dragObject) {
        return null;
      }
      if (!checkRecursion(treeNode.node, dragObject)) {
        return null;
      }
      if (Object(utils_src["C" /* isDragAnyObject */])(dragObject)) {
        // TODO: future
        return null;
      }
      var container = treeNode.node;
      var detail = {
        type: types_src["k" /* IPublicTypeLocationDetailType */].Children
      };
      var locationData = {
        target: container,
        detail: detail,
        source: this.id,
        event: e
      };
      var isSlotContainer = treeNode.hasSlots();
      var isContainer = treeNode.isContainer();
      if (container.isSlotNode && !treeNode.expanded) {
        // 未展开，直接定位到内部第一个节点
        if (isSlotContainer) {
          detail.index = null;
          detail.focus = {
            type: 'slots'
          };
          detail.valid = false;
        } else {
          detail.index = 0;
          detail.valid = document === null || document === void 0 ? void 0 : document.checkNesting(container, dragObject);
        }
      }
      var items = null;
      var slotsRect;
      var focusSlots = false;
      // isSlotContainer
      if (isSlotContainer) {
        slotsRect = this.getTreeSlotsRect(treeNode);
        if (slotsRect) {
          if (globalY <= slotsRect.bottom) {
            focusSlots = true;
            items = treeNode.slots;
          } else if (!isContainer) {
            // 不在 slots 范围，又不是 container 的情况，高亮 slots 区
            detail.index = null;
            detail.focus = {
              type: 'slots'
            };
            detail.valid = false;
            return canvas.createLocation(locationData);
          }
        }
      }
      if (!items && isContainer) {
        items = treeNode.children;
      }
      if (!items) {
        return null;
      }
      var l = items.length;
      var index = 0;
      var before = l < 1;
      var current;
      var currentIndex = index;
      for (; index < l; index++) {
        current = items[index];
        currentIndex = index;
        var rect = this.getTreeNodeRect(current);
        if (!rect) {
          continue;
        }
        // rect
        if (globalY < rect.top) {
          before = true;
          break;
        }
        if (globalY > rect.bottom) {
          continue;
        }
        var loc = this.getNear(current, e, index, rect);
        if (loc) {
          return loc;
        }
      }
      if (focusSlots) {
        detail.focus = {
          type: 'slots'
        };
        detail.valid = false;
        detail.index = null;
      } else {
        if (current) {
          detail.index = before ? currentIndex : currentIndex + 1;
          detail.near = {
            node: current.node,
            pos: before ? 'before' : 'after'
          };
        } else {
          detail.index = l;
        }
        detail.valid = document === null || document === void 0 ? void 0 : document.checkNesting(container, dragObject);
      }
      return canvas.createLocation(locationData);
    }
  }, {
    key: "purge",
    value: function purge() {
      var _canvas$dragon2, _this$treeMaster3;
      var canvas = this.pluginContext.canvas;
      (_canvas$dragon2 = canvas.dragon) === null || _canvas$dragon2 === void 0 ? void 0 : _canvas$dragon2.removeSensor(this);
      (_this$treeMaster3 = this.treeMaster) === null || _this$treeMaster3 === void 0 ? void 0 : _this$treeMaster3.removeBoard(this);
    }
  }, {
    key: "mount",
    value: function mount(shell) {
      var _this3 = this;
      if (this._shell === shell) {
        return;
      }
      this._shell = shell;
      var _this$pluginContext5 = this.pluginContext,
        canvas = _this$pluginContext5.canvas,
        project = _this$pluginContext5.project;
      if (shell) {
        var _project$currentDocum, _this$treeMaster4;
        this._scrollTarget = canvas.createScrollTarget(shell);
        this._sensorAvailable = true;
        // check if there is current selection and scroll to it
        var selection = (_project$currentDocum = project.currentDocument) === null || _project$currentDocum === void 0 ? void 0 : _project$currentDocum.selection;
        var topNodes = selection === null || selection === void 0 ? void 0 : selection.getTopNodes(true);
        var tree = (_this$treeMaster4 = this.treeMaster) === null || _this$treeMaster4 === void 0 ? void 0 : _this$treeMaster4.currentTree;
        if (topNodes && topNodes[0] && tree) {
          var treeNode = tree.getTreeNodeById(topNodes[0].id);
          if (treeNode) {
            // at this moment, it is possible that pane is not ready yet, so
            // put ui related operations to the next loop
            setTimeout(function () {
              tree.setNodeSelected(treeNode.nodeId);
              _this3.scrollToNode(treeNode, null, 4);
            }, 0);
          }
        }
      } else {
        this._scrollTarget = undefined;
        this._sensorAvailable = false;
      }
    }
  }, {
    key: "getInsertionRect",
    value: function getInsertionRect() {
      var _this$_shell$querySel;
      if (!this._shell) {
        return undefined;
      }
      return (_this$_shell$querySel = this._shell.querySelector('.insertion')) === null || _this$_shell$querySel === void 0 ? void 0 : _this$_shell$querySel.getBoundingClientRect();
    }
  }, {
    key: "getTreeNodeRect",
    value: function getTreeNodeRect(treeNode) {
      var _this$_shell$querySel2;
      if (!this._shell) {
        return undefined;
      }
      return (_this$_shell$querySel2 = this._shell.querySelector(".tree-node[data-id=\"".concat(treeNode.nodeId, "\"]"))) === null || _this$_shell$querySel2 === void 0 ? void 0 : _this$_shell$querySel2.getBoundingClientRect();
    }
  }, {
    key: "getTreeTitleRect",
    value: function getTreeTitleRect(treeNode) {
      var _this$_shell$querySel3;
      if (!this._shell) {
        return undefined;
      }
      return (_this$_shell$querySel3 = this._shell.querySelector(".tree-node-title[data-id=\"".concat(treeNode.nodeId, "\"]"))) === null || _this$_shell$querySel3 === void 0 ? void 0 : _this$_shell$querySel3.getBoundingClientRect();
    }
  }, {
    key: "getTreeSlotsRect",
    value: function getTreeSlotsRect(treeNode) {
      var _this$_shell$querySel4;
      if (!this._shell) {
        return undefined;
      }
      return (_this$_shell$querySel4 = this._shell.querySelector(".tree-node-slots[data-id=\"".concat(treeNode.nodeId, "\"]"))) === null || _this$_shell$querySel4 === void 0 ? void 0 : _this$_shell$querySel4.getBoundingClientRect();
    }
  }]);
}();
function checkRecursion(parent, dragObject) {
  if (!parent) {
    return false;
  }
  if (Object(utils_src["E" /* isDragNodeObject */])(dragObject)) {
    var nodes = dragObject.nodes;
    if (nodes.some(function (node) {
      return node.contains(parent);
    })) {
      return false;
    }
  }
  return true;
}
function getPosFromEvent(_ref, stop) {
  var target = _ref.target;
  if (!target || !stop.contains(target)) {
    return null;
  }
  if (target.matches('.insertion')) {
    return 'unchanged';
  }
  var closest = target.closest('[data-id]');
  if (!closest || !stop.contains(closest)) {
    return null;
  }
  var nodeId = closest.dataset.id;
  return {
    focusSlots: closest.matches('.tree-node-slots'),
    nodeId: nodeId
  };
}
// CONCATENATED MODULE: ../plugin-outline-pane/src/index.tsx
function plugin_outline_pane_src_typeof(o) { "@babel/helpers - typeof"; return plugin_outline_pane_src_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, plugin_outline_pane_src_typeof(o); }
function plugin_outline_pane_src_regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return plugin_outline_pane_src_regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i.return) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (plugin_outline_pane_src_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, plugin_outline_pane_src_regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, plugin_outline_pane_src_regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), plugin_outline_pane_src_regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", plugin_outline_pane_src_regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), plugin_outline_pane_src_regeneratorDefine2(u), plugin_outline_pane_src_regeneratorDefine2(u, o, "Generator"), plugin_outline_pane_src_regeneratorDefine2(u, n, function () { return this; }), plugin_outline_pane_src_regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (plugin_outline_pane_src_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function plugin_outline_pane_src_regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } plugin_outline_pane_src_regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { plugin_outline_pane_src_regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, plugin_outline_pane_src_regeneratorDefine2(e, r, n, t); }
function src_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function src_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? src_ownKeys(Object(t), !0).forEach(function (r) { src_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : src_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function src_defineProperty(e, r, t) { return (r = plugin_outline_pane_src_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function plugin_outline_pane_src_toPropertyKey(t) { var i = plugin_outline_pane_src_toPrimitive(t, "string"); return "symbol" == plugin_outline_pane_src_typeof(i) ? i : i + ""; }
function plugin_outline_pane_src_toPrimitive(t, r) { if ("object" != plugin_outline_pane_src_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != plugin_outline_pane_src_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function plugin_outline_pane_src_asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function plugin_outline_pane_src_asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { plugin_outline_pane_src_asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { plugin_outline_pane_src_asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function src_extends() { return src_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, src_extends.apply(null, arguments); }
function src_slicedToArray(r, e) { return src_arrayWithHoles(r) || src_iterableToArrayLimit(r, e) || src_unsupportedIterableToArray(r, e) || src_nonIterableRest(); }
function src_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function src_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return src_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? src_arrayLikeToArray(r, a) : void 0; } }
function src_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function src_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function src_arrayWithHoles(r) { if (Array.isArray(r)) return r; }






function OutlinePaneContext(props) {
  var treeMaster = props.treeMaster || new tree_master_TreeMaster(props.pluginContext, props.options);
  var _useState = Object(external_window_React_["useState"])(function () {
      return new pane_controller_PaneController(props.paneName || MasterPaneName, treeMaster);
    }),
    _useState2 = src_slicedToArray(_useState, 2),
    masterPaneController = _useState2[0],
    setMasterPaneController = _useState2[1];
  Object(external_window_React_["useEffect"])(function () {
    return treeMaster.onPluginContextChange(function () {
      setMasterPaneController(new pane_controller_PaneController(props.paneName || MasterPaneName, treeMaster));
    });
  }, []);
  return /*#__PURE__*/React.createElement(pane_Pane, src_extends({
    treeMaster: treeMaster,
    controller: masterPaneController,
    key: masterPaneController.id,
    hideFilter: props.hideFilter
  }, props));
}
var src_OutlinePlugin = function OutlinePlugin(ctx, options) {
  var skeleton = ctx.skeleton,
    config = ctx.config,
    canvas = ctx.canvas,
    project = ctx.project;
  var isInFloatArea = true;
  var hasPreferenceForOutline = config.getPreference().contains('outline-pane-pinned-status-isFloat', 'skeleton');
  if (hasPreferenceForOutline) {
    isInFloatArea = config.getPreference().get('outline-pane-pinned-status-isFloat', 'skeleton');
  }
  var showingPanes = {
    masterPane: false,
    backupPane: false
  };
  var treeMaster = new tree_master_TreeMaster(ctx, options);
  return {
    init: function init() {
      return plugin_outline_pane_src_asyncToGenerator(/*#__PURE__*/plugin_outline_pane_src_regenerator().m(function _callee() {
        var _canvas$dragon2, _canvas$dragon3;
        var switchPanes;
        return plugin_outline_pane_src_regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              skeleton.add({
                area: 'leftArea',
                name: 'outlinePane',
                type: 'PanelDock',
                index: -1,
                content: {
                  name: MasterPaneName,
                  props: {
                    icon: IconOutline,
                    description: treeMaster.pluginContext.intlNode('Outline Tree')
                  },
                  content: OutlinePaneContext
                },
                panelProps: src_objectSpread({
                  area: isInFloatArea ? 'leftFloatArea' : 'leftFixedArea',
                  keepVisibleWhileDragging: true
                }, config.get('defaultOutlinePaneProps')),
                contentProps: {
                  treeTitleExtra: config.get('treeTitleExtra'),
                  treeMaster: treeMaster,
                  paneName: MasterPaneName
                }
              });
              skeleton.add({
                area: 'rightArea',
                name: BackupPaneName,
                type: 'Panel',
                props: {
                  hiddenWhenInit: true
                },
                content: OutlinePaneContext,
                contentProps: {
                  paneName: BackupPaneName,
                  treeMaster: treeMaster
                },
                index: 1
              });
              // 处理 master pane 和 backup pane 切换
              switchPanes = function switchPanes() {
                var _canvas$dragon;
                var isDragging = (_canvas$dragon = canvas.dragon) === null || _canvas$dragon === void 0 ? void 0 : _canvas$dragon.dragging;
                var hasVisibleTreeBoard = showingPanes.backupPane || showingPanes.masterPane;
                var shouldShowBackupPane = isDragging && !hasVisibleTreeBoard;
                if (shouldShowBackupPane) {
                  skeleton.showPanel(BackupPaneName);
                } else {
                  skeleton.hidePanel(BackupPaneName);
                }
              };
              (_canvas$dragon2 = canvas.dragon) === null || _canvas$dragon2 === void 0 ? void 0 : _canvas$dragon2.onDragstart(function () {
                switchPanes();
              });
              (_canvas$dragon3 = canvas.dragon) === null || _canvas$dragon3 === void 0 ? void 0 : _canvas$dragon3.onDragend(function () {
                switchPanes();
              });
              skeleton.onShowPanel(function (key) {
                if (key === MasterPaneName) {
                  showingPanes.masterPane = true;
                }
                if (key === BackupPaneName) {
                  showingPanes.backupPane = true;
                }
              });
              skeleton.onHidePanel(function (key) {
                if (key === MasterPaneName) {
                  showingPanes.masterPane = false;
                  switchPanes();
                }
                if (key === BackupPaneName) {
                  showingPanes.backupPane = false;
                }
              });
              project.onChangeDocument(function (document) {
                if (!document) {
                  return;
                }
                var selection = document.selection;
                selection === null || selection === void 0 ? void 0 : selection.onSelectionChange(function () {
                  var selectedNodes = selection === null || selection === void 0 ? void 0 : selection.getNodes();
                  if (!selectedNodes || selectedNodes.length === 0) {
                    return;
                  }
                  var tree = treeMaster.currentTree;
                  selectedNodes.forEach(function (node) {
                    var treeNode = tree === null || tree === void 0 ? void 0 : tree.getTreeNodeById(node.id);
                    tree === null || tree === void 0 ? void 0 : tree.expandAllAncestors(treeNode);
                  });
                });
              });
            case 1:
              return _context.a(2);
          }
        }, _callee);
      }))();
    }
  };
};
src_OutlinePlugin.meta = {
  eventPrefix: 'OutlinePlugin',
  preferenceDeclaration: {
    title: '大纲树插件配置',
    properties: [{
      key: 'extraTitle',
      type: 'object',
      description: '副标题'
    }]
  }
};
src_OutlinePlugin.pluginName = 'OutlinePlugin';
// CONCATENATED MODULE: ./src/modules/skeleton-types.ts

// CONCATENATED MODULE: ./src/modules/designer-types.ts

// CONCATENATED MODULE: ./src/modules/lowcode-types.ts

// CONCATENATED MODULE: ./src/engine-core.ts
function engine_core_regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return engine_core_regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i.return) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (engine_core_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, engine_core_regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, engine_core_regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), engine_core_regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", engine_core_regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), engine_core_regeneratorDefine2(u), engine_core_regeneratorDefine2(u, o, "Generator"), engine_core_regeneratorDefine2(u, n, function () { return this; }), engine_core_regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (engine_core_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function engine_core_regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } engine_core_regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { engine_core_regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, engine_core_regeneratorDefine2(e, r, n, t); }
function engine_core_asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function engine_core_asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { engine_core_asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { engine_core_asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
/* eslint-disable max-len */
/* eslint-disable no-param-reassign */























function engine_core_registryInnerPlugin(_x, _x2, _x3) {
  return _registryInnerPlugin.apply(this, arguments);
}
function _registryInnerPlugin() {
  _registryInnerPlugin = engine_core_asyncToGenerator(/*#__PURE__*/engine_core_regenerator().m(function _callee(designer, editor, plugins) {
    var componentMetaParserPlugin, defaultPanelRegistryPlugin;
    return engine_core_regenerator().w(function (_context) {
      while (1) switch (_context.n) {
        case 0:
          // 注册一批内置插件
          componentMetaParserPlugin = componentMetaParser(designer);
          defaultPanelRegistryPlugin = default_panel_registry_defaultPanelRegistry(editor);
          _context.n = 1;
          return plugins.register(src_OutlinePlugin, {}, {
            autoInit: true
          });
        case 1:
          _context.n = 2;
          return plugins.register(componentMetaParserPlugin);
        case 2:
          _context.n = 3;
          return plugins.register(setterRegistry, {});
        case 3:
          _context.n = 4;
          return plugins.register(defaultPanelRegistryPlugin);
        case 4:
          _context.n = 5;
          return plugins.register(builtin_hotkey_builtinHotkey);
        case 5:
          _context.n = 6;
          return plugins.register(register_defaults_registerDefaults, {}, {
            autoInit: true
          });
        case 6:
          _context.n = 7;
          return plugins.register(default_context_menu_defaultContextMenu);
        case 7:
          _context.n = 8;
          return plugins.register(src_CommandPlugin, {});
        case 8:
          return _context.a(2, function () {
            plugins.delete(src_OutlinePlugin.pluginName);
            plugins.delete(componentMetaParserPlugin.pluginName);
            plugins.delete(setterRegistry.pluginName);
            plugins.delete(defaultPanelRegistryPlugin.pluginName);
            plugins.delete(builtin_hotkey_builtinHotkey.pluginName);
            plugins.delete(register_defaults_registerDefaults.pluginName);
            plugins.delete(default_context_menu_defaultContextMenu.pluginName);
            plugins.delete(src_CommandPlugin.pluginName);
          });
      }
    }, _callee);
  }));
  return _registryInnerPlugin.apply(this, arguments);
}
var engine_core_innerWorkspace = new src_workspace_Workspace(engine_core_registryInnerPlugin, shell_model_factory_shellModelFactory);
var engine_core_workspace = new workspace_Workspace(engine_core_innerWorkspace);
var engine_core_editor = new src["Editor"]();
src["globalContext"].register(engine_core_editor, src["Editor"]);
src["globalContext"].register(engine_core_editor, 'editor');
src["globalContext"].register(engine_core_innerWorkspace, 'workspace');
var engineContext = {};
var engine_core_innerSkeleton = new src_skeleton_Skeleton(engine_core_editor);
engine_core_editor.set('skeleton', engine_core_innerSkeleton);
var engine_core_designer = new designer_Designer({
  editor: engine_core_editor,
  shellModelFactory: shell_model_factory_shellModelFactory
});
engine_core_editor.set('designer', engine_core_designer);
var engine_core_innerProject = engine_core_designer.project;
var engine_core_innerHotkey = new src["Hotkey"]();
var engine_core_hotkey = new hotkey_Hotkey(engine_core_innerHotkey);
var engine_core_project = new api_project_Project(engine_core_innerProject);
var engine_core_skeleton = new skeleton_Skeleton(engine_core_innerSkeleton, 'any', false);
var engine_core_innerSetters = new src["Setters"]();
var engine_core_setters = new setters_Setters(engine_core_innerSetters);
var engine_core_innerCommand = new src["Command"]();
var engine_core_command = new command_Command(engine_core_innerCommand, engineContext);
var engine_core_material = new material_Material(engine_core_editor);
var engine_core_commonUI = new commonUI_CommonUI(engine_core_editor);
engine_core_editor.set('project', engine_core_project);
engine_core_editor.set('setters', engine_core_setters);
engine_core_editor.set('material', engine_core_material);
engine_core_editor.set('innerHotkey', engine_core_innerHotkey);
var engine_core_config = new config_Config(src["engineConfig"]);
var engine_core_event = new event_Event(src["commonEvent"], {
  prefix: 'common'
});
var engine_core_logger = new logger_Logger({
  level: 'warn',
  bizName: 'common'
});
var engine_core_common = new common_Common(engine_core_editor, engine_core_innerSkeleton);
var engine_core_canvas = new canvas_Canvas(engine_core_editor);
var engine_core_plugins;
var engine_core_pluginContextApiAssembler = {
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  assembleApis: function assembleApis(context, pluginName, meta) {
    context.hotkey = engine_core_hotkey;
    context.project = engine_core_project;
    context.skeleton = new skeleton_Skeleton(engine_core_innerSkeleton, pluginName, false);
    context.setters = engine_core_setters;
    context.material = engine_core_material;
    var eventPrefix = (meta === null || meta === void 0 ? void 0 : meta.eventPrefix) || 'common';
    var commandScope = meta === null || meta === void 0 ? void 0 : meta.commandScope;
    context.event = new event_Event(src["commonEvent"], {
      prefix: eventPrefix
    });
    context.config = engine_core_config;
    context.common = engine_core_common;
    context.canvas = engine_core_canvas;
    context.plugins = engine_core_plugins;
    context.logger = new logger_Logger({
      level: 'warn',
      bizName: "plugin:".concat(pluginName)
    });
    context.workspace = engine_core_workspace;
    context.commonUI = engine_core_commonUI;
    context.command = new command_Command(engine_core_innerCommand, context, {
      commandScope: commandScope
    });
    context.registerLevel = types_src["h" /* IPublicEnumPluginRegisterLevel */].Default;
    context.isPluginRegisteredInWorkspace = false;
    engine_core_editor.set('pluginContext', context);
  }
};
var engine_core_innerPlugins = new plugin_manager_LowCodePluginManager(engine_core_pluginContextApiAssembler);
engine_core_plugins = new plugins_Plugins(engine_core_innerPlugins).toProxy();
engine_core_editor.set('innerPlugins', engine_core_innerPlugins);
engine_core_editor.set('plugins', engine_core_plugins);
engineContext.skeleton = engine_core_skeleton;
engineContext.plugins = engine_core_plugins;
engineContext.project = engine_core_project;
engineContext.setters = engine_core_setters;
engineContext.material = engine_core_material;
engineContext.event = engine_core_event;
engineContext.logger = engine_core_logger;
engineContext.hotkey = engine_core_hotkey;
engineContext.common = engine_core_common;
engineContext.workspace = engine_core_workspace;
engineContext.canvas = engine_core_canvas;
engineContext.commonUI = engine_core_commonUI;
engineContext.command = engine_core_command;

// declare this is open-source version
var isOpenSource = true;
var __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = {
  symbols: symbols,
  classes: classes_namespaceObject
};
src["engineConfig"].set('isOpenSource', isOpenSource);
// container which will host LowCodeEngine DOM
var engineContainer;
// @ts-ignore webpack Define variable
var version = "N/A";
src["engineConfig"].set('ENGINE_VERSION', version);
var pluginPromise = engine_core_registryInnerPlugin(engine_core_designer, engine_core_editor, engine_core_plugins);
function engine_core_init(_x4, _x5, _x6) {
  return src_engine_core_init.apply(this, arguments);
}
function src_engine_core_init() {
  src_engine_core_init = engine_core_asyncToGenerator(/*#__PURE__*/engine_core_regenerator().m(function _callee2(container, options, pluginPreference) {
    var engineOptions, Workbench, disposeFun;
    return engine_core_regenerator().w(function (_context2) {
      while (1) switch (_context2.n) {
        case 0:
          _context2.n = 1;
          return engine_core_destroy();
        case 1:
          engineOptions = null;
          if (Object(utils_src["R" /* isPlainObject */])(container)) {
            engineOptions = container;
            engineContainer = document.createElement('div');
            engineContainer.id = 'engine';
            document.body.appendChild(engineContainer);
          } else {
            engineOptions = options;
            engineContainer = container;
            if (!container) {
              engineContainer = document.createElement('div');
              engineContainer.id = 'engine';
              document.body.appendChild(engineContainer);
            }
          }
          src["engineConfig"].setEngineOptions(engineOptions);
          Workbench = engine_core_common.skeletonCabin.Workbench;
          if (!(options && options.enableWorkspaceMode)) {
            _context2.n = 4;
            break;
          }
          _context2.n = 2;
          return pluginPromise;
        case 2:
          disposeFun = _context2.v;
          disposeFun && disposeFun();
          Object(external_window_ReactDOM_["render"])(/*#__PURE__*/Object(external_window_React_["createElement"])(layouts_workbench_Workbench, {
            workspace: engine_core_innerWorkspace,
            // skeleton: workspace.skeleton,
            className: 'engine-main',
            topAreaItemClassName: 'engine-actionitem'
          }), engineContainer);
          engine_core_innerWorkspace.enableAutoOpenFirstWindow = src["engineConfig"].get('enableAutoOpenFirstWindow', true);
          engine_core_innerWorkspace.setActive(true);
          engine_core_innerWorkspace.initWindow();
          engine_core_innerHotkey.activate(false);
          _context2.n = 3;
          return engine_core_innerWorkspace.plugins.init(pluginPreference);
        case 3:
          return _context2.a(2);
        case 4:
          _context2.n = 5;
          return engine_core_plugins.init(pluginPreference);
        case 5:
          Object(external_window_ReactDOM_["render"])(/*#__PURE__*/Object(external_window_React_["createElement"])(Workbench, {
            skeleton: engine_core_innerSkeleton,
            className: 'engine-main',
            topAreaItemClassName: 'engine-actionitem'
          }), engineContainer);
        case 6:
          return _context2.a(2);
      }
    }, _callee2);
  }));
  return src_engine_core_init.apply(this, arguments);
}
function engine_core_destroy() {
  return _destroy.apply(this, arguments);
}
function _destroy() {
  _destroy = engine_core_asyncToGenerator(/*#__PURE__*/engine_core_regenerator().m(function _callee3() {
    var documents;
    return engine_core_regenerator().w(function (_context3) {
      while (1) switch (_context3.n) {
        case 0:
          // remove all documents
          documents = engine_core_project.documents;
          if (Array.isArray(documents) && documents.length > 0) {
            documents.forEach(function (doc) {
              return engine_core_project.removeDocument(doc);
            });
          }
          // TODO: delete plugins except for core plugins
          // unmount DOM container, this will trigger React componentWillUnmount lifeCycle,
          // so necessary cleanups will be done.
          engineContainer && Object(external_window_ReactDOM_["unmountComponentAtNode"])(engineContainer);
        case 1:
          return _context3.a(2);
      }
    }, _callee3);
  }));
  return _destroy.apply(this, arguments);
}
// CONCATENATED MODULE: ./src/index.ts


console.log("%c AliLowCodeEngine %c v".concat(version, " "), 'padding: 2px 1px; border-radius: 3px 0 0 3px; color: #fff; background: #606060; font-weight: bold;', 'padding: 2px 1px; border-radius: 0 3px 3px 0; color: #fff; background: #42c02e; font-weight: bold;');

/***/ })
/******/ ]);
});
//# sourceMappingURL=engine-core.js.map